                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ui
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _exe_command
                                     12 	.globl _write_char
                                     13 	.globl _write_number
                                     14 	.globl _write_string
                                     15 	.globl _get_button_action
                                     16 	.globl _power_pump
                                     17 	.globl _tick_fogger
                                     18 	.globl _set_dmx_address
                                     19 	.globl _get_dmx_address
                                     20 	.globl _set_runtime_data
                                     21 	.globl _get_runtime_data
                                     22 	.globl _save_load_settings
                                     23 	.globl _CPRL2
                                     24 	.globl _CT2
                                     25 	.globl _TR2
                                     26 	.globl _EXEN2
                                     27 	.globl _TCLK
                                     28 	.globl _RCLK
                                     29 	.globl _REN
                                     30 	.globl _SM2
                                     31 	.globl _SM1
                                     32 	.globl _SM0
                                     33 	.globl _RCK
                                     34 	.globl _SER
                                     35 	.globl _SCK
                                     36 	.globl _RI
                                     37 	.globl _ES
                                     38 	.globl _ET0
                                     39 	.globl _EA
                                     40 	.globl _P3_7
                                     41 	.globl _P3_6
                                     42 	.globl _P3_5
                                     43 	.globl _P3_4
                                     44 	.globl _P3_3
                                     45 	.globl _P3_2
                                     46 	.globl _P3_1
                                     47 	.globl _P3_0
                                     48 	.globl _P2_7
                                     49 	.globl _P2_6
                                     50 	.globl _P2_5
                                     51 	.globl _P2_4
                                     52 	.globl _P2_3
                                     53 	.globl _P2_2
                                     54 	.globl _P2_1
                                     55 	.globl _P2_0
                                     56 	.globl _P1_7
                                     57 	.globl _P1_6
                                     58 	.globl _P1_5
                                     59 	.globl _P1_4
                                     60 	.globl _P1_3
                                     61 	.globl _P1_2
                                     62 	.globl _P1_1
                                     63 	.globl _P1_0
                                     64 	.globl _P0_7
                                     65 	.globl _P0_6
                                     66 	.globl _P0_5
                                     67 	.globl _P0_4
                                     68 	.globl _P0_3
                                     69 	.globl _P0_2
                                     70 	.globl _P0_1
                                     71 	.globl _P0_0
                                     72 	.globl _IAP_ADRH
                                     73 	.globl _IAP_ADRL
                                     74 	.globl _IAPEN
                                     75 	.globl _TH0
                                     76 	.globl _TL0
                                     77 	.globl _CKCON
                                     78 	.globl _TMOD
                                     79 	.globl _TCON
                                     80 	.globl _PWMDATA17L
                                     81 	.globl _PWMDATA17H
                                     82 	.globl _PWMDATA14L
                                     83 	.globl _PWMDATA14H
                                     84 	.globl _PWMDATA11L
                                     85 	.globl _PWMDATA11H
                                     86 	.globl _PWM_EA2
                                     87 	.globl _PWM_EA1
                                     88 	.globl _SBUF
                                     89 	.globl _TL3
                                     90 	.globl _TH3
                                     91 	.globl _T2CON
                                     92 	.globl _RCAP2H
                                     93 	.globl _RCAP2L
                                     94 	.globl _SCON
                                     95 	.globl _P1_OPT
                                     96 	.globl _ADCVAL2
                                     97 	.globl _ADCVAL1
                                     98 	.globl _ADCSEL
                                     99 	.globl _EXIF
                                    100 	.globl _EIE
                                    101 	.globl _IE
                                    102 	.globl _P3
                                    103 	.globl _P2
                                    104 	.globl _P1
                                    105 	.globl _P0
                                    106 	.globl _PCLKSEL
                                    107 	.globl _CHIPCON
                                    108 	.globl _set_ui_state_PARM_2
                                    109 	.globl _tick_ui
                                    110 	.globl _idlePage
                                    111 	.globl _fogLevelPage
                                    112 	.globl _fogIntervalPage
                                    113 	.globl _fogDurationPage
                                    114 	.globl _macroPage
                                    115 	.globl _macroSpeedPage
                                    116 	.globl _colorPage
                                    117 	.globl _remotePage
                                    118 	.globl _saveLoadPage
                                    119 	.globl _dmxAddressPage
                                    120 	.globl _dmxChannelPage
                                    121 	.globl _set_ui_state
                                    122 	.globl _get_ui_state
                                    123 	.globl _getString
                                    124 ;--------------------------------------------------------
                                    125 ; special function registers
                                    126 ;--------------------------------------------------------
                                    127 	.area RSEG    (ABS,DATA)
      000000                        128 	.org 0x0000
                           0000BF   129 _CHIPCON	=	0x00bf
                           0000B7   130 _PCLKSEL	=	0x00b7
                           000080   131 _P0	=	0x0080
                           000090   132 _P1	=	0x0090
                           0000A0   133 _P2	=	0x00a0
                           0000B0   134 _P3	=	0x00b0
                           0000A8   135 _IE	=	0x00a8
                           0000E8   136 _EIE	=	0x00e8
                           000091   137 _EXIF	=	0x0091
                           0000DA   138 _ADCSEL	=	0x00da
                           0000DB   139 _ADCVAL1	=	0x00db
                           0000DC   140 _ADCVAL2	=	0x00dc
                           0000D9   141 _P1_OPT	=	0x00d9
                           000098   142 _SCON	=	0x0098
                           0000CA   143 _RCAP2L	=	0x00ca
                           0000CB   144 _RCAP2H	=	0x00cb
                           0000C8   145 _T2CON	=	0x00c8
                           00009B   146 _TH3	=	0x009b
                           00009A   147 _TL3	=	0x009a
                           000099   148 _SBUF	=	0x0099
                           0000D3   149 _PWM_EA1	=	0x00d3
                           0000D4   150 _PWM_EA2	=	0x00d4
                           0000BD   151 _PWMDATA11H	=	0x00bd
                           0000BE   152 _PWMDATA11L	=	0x00be
                           0000B5   153 _PWMDATA14H	=	0x00b5
                           0000B6   154 _PWMDATA14L	=	0x00b6
                           0000AD   155 _PWMDATA17H	=	0x00ad
                           0000AE   156 _PWMDATA17L	=	0x00ae
                           000088   157 _TCON	=	0x0088
                           000089   158 _TMOD	=	0x0089
                           00008E   159 _CKCON	=	0x008e
                           00008A   160 _TL0	=	0x008a
                           00008C   161 _TH0	=	0x008c
                           0000E4   162 _IAPEN	=	0x00e4
                           0000E5   163 _IAP_ADRL	=	0x00e5
                           0000E6   164 _IAP_ADRH	=	0x00e6
                                    165 ;--------------------------------------------------------
                                    166 ; special function bits
                                    167 ;--------------------------------------------------------
                                    168 	.area RSEG    (ABS,DATA)
      000000                        169 	.org 0x0000
                           000080   170 _P0_0	=	0x0080
                           000081   171 _P0_1	=	0x0081
                           000082   172 _P0_2	=	0x0082
                           000083   173 _P0_3	=	0x0083
                           000084   174 _P0_4	=	0x0084
                           000085   175 _P0_5	=	0x0085
                           000086   176 _P0_6	=	0x0086
                           000087   177 _P0_7	=	0x0087
                           000090   178 _P1_0	=	0x0090
                           000091   179 _P1_1	=	0x0091
                           000092   180 _P1_2	=	0x0092
                           000093   181 _P1_3	=	0x0093
                           000094   182 _P1_4	=	0x0094
                           000095   183 _P1_5	=	0x0095
                           000096   184 _P1_6	=	0x0096
                           000097   185 _P1_7	=	0x0097
                           0000A0   186 _P2_0	=	0x00a0
                           0000A1   187 _P2_1	=	0x00a1
                           0000A2   188 _P2_2	=	0x00a2
                           0000A3   189 _P2_3	=	0x00a3
                           0000A4   190 _P2_4	=	0x00a4
                           0000A5   191 _P2_5	=	0x00a5
                           0000A6   192 _P2_6	=	0x00a6
                           0000A7   193 _P2_7	=	0x00a7
                           0000B0   194 _P3_0	=	0x00b0
                           0000B1   195 _P3_1	=	0x00b1
                           0000B2   196 _P3_2	=	0x00b2
                           0000B3   197 _P3_3	=	0x00b3
                           0000B4   198 _P3_4	=	0x00b4
                           0000B5   199 _P3_5	=	0x00b5
                           0000B6   200 _P3_6	=	0x00b6
                           0000B7   201 _P3_7	=	0x00b7
                           0000AF   202 _EA	=	0x00af
                           0000A9   203 _ET0	=	0x00a9
                           0000AC   204 _ES	=	0x00ac
                           000098   205 _RI	=	0x0098
                           000093   206 _SCK	=	0x0093
                           000095   207 _SER	=	0x0095
                           000092   208 _RCK	=	0x0092
                           00009F   209 _SM0	=	0x009f
                           00009E   210 _SM1	=	0x009e
                           00009D   211 _SM2	=	0x009d
                           00009C   212 _REN	=	0x009c
                           0000CD   213 _RCLK	=	0x00cd
                           0000CC   214 _TCLK	=	0x00cc
                           0000CB   215 _EXEN2	=	0x00cb
                           0000CA   216 _TR2	=	0x00ca
                           0000C9   217 _CT2	=	0x00c9
                           0000C8   218 _CPRL2	=	0x00c8
                                    219 ;--------------------------------------------------------
                                    220 ; overlayable register banks
                                    221 ;--------------------------------------------------------
                                    222 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        223 	.ds 8
                                    224 ;--------------------------------------------------------
                                    225 ; internal ram data
                                    226 ;--------------------------------------------------------
                                    227 	.area DSEG    (DATA)
      000000                        228 _State:
      000000                        229 	.ds 1
      000001                        230 _Changed:
      000001                        231 	.ds 1
      000002                        232 _changed:
      000002                        233 	.ds 1
      000003                        234 _tick_ui_bursting_65536_37:
      000003                        235 	.ds 1
      000004                        236 _tick_ui_delay_65536_37:
      000004                        237 	.ds 4
      000008                        238 _idlePage_timer_65536_55:
      000008                        239 	.ds 1
      000009                        240 _idlePage_intervalOrDuration_65536_55:
      000009                        241 	.ds 1
      00000A                        242 _idlePage_empty_65536_55:
      00000A                        243 	.ds 1
      00000B                        244 _idlePage_tock_65536_55:
      00000B                        245 	.ds 1
      00000C                        246 _idlePage_iconChange_65536_55:
      00000C                        247 	.ds 1
      00000D                        248 _idlePage_playing_65536_55:
      00000D                        249 	.ds 1
      00000E                        250 _saveLoadPage_slot_65536_134:
      00000E                        251 	.ds 1
      00000F                        252 _set_ui_state_PARM_2:
      00000F                        253 	.ds 1
                                    254 ;--------------------------------------------------------
                                    255 ; overlayable items in internal ram 
                                    256 ;--------------------------------------------------------
                                    257 	.area	OSEG    (OVR,DATA)
                                    258 ;--------------------------------------------------------
                                    259 ; indirectly addressable internal ram data
                                    260 ;--------------------------------------------------------
                                    261 	.area ISEG    (DATA)
                                    262 ;--------------------------------------------------------
                                    263 ; absolute internal ram data
                                    264 ;--------------------------------------------------------
                                    265 	.area IABS    (ABS,DATA)
                                    266 	.area IABS    (ABS,DATA)
                                    267 ;--------------------------------------------------------
                                    268 ; bit data
                                    269 ;--------------------------------------------------------
                                    270 	.area BSEG    (BIT)
                                    271 ;--------------------------------------------------------
                                    272 ; paged external ram data
                                    273 ;--------------------------------------------------------
                                    274 	.area PSEG    (PAG,XDATA)
                                    275 ;--------------------------------------------------------
                                    276 ; external ram data
                                    277 ;--------------------------------------------------------
                                    278 	.area XSEG    (XDATA)
                                    279 ;--------------------------------------------------------
                                    280 ; absolute external ram data
                                    281 ;--------------------------------------------------------
                                    282 	.area XABS    (ABS,XDATA)
                                    283 ;--------------------------------------------------------
                                    284 ; external initialized ram data
                                    285 ;--------------------------------------------------------
                                    286 	.area XISEG   (XDATA)
                                    287 	.area HOME    (CODE)
                                    288 	.area GSINIT0 (CODE)
                                    289 	.area GSINIT1 (CODE)
                                    290 	.area GSINIT2 (CODE)
                                    291 	.area GSINIT3 (CODE)
                                    292 	.area GSINIT4 (CODE)
                                    293 	.area GSINIT5 (CODE)
                                    294 	.area GSINIT  (CODE)
                                    295 	.area GSFINAL (CODE)
                                    296 	.area CSEG    (CODE)
                                    297 ;--------------------------------------------------------
                                    298 ; global & static initialisations
                                    299 ;--------------------------------------------------------
                                    300 	.area HOME    (CODE)
                                    301 	.area GSINIT  (CODE)
                                    302 	.area GSFINAL (CODE)
                                    303 	.area GSINIT  (CODE)
                                    304 ;------------------------------------------------------------
                                    305 ;Allocation info for local variables in function 'tick_ui'
                                    306 ;------------------------------------------------------------
                                    307 ;bursting                  Allocated with name '_tick_ui_bursting_65536_37'
                                    308 ;action                    Allocated to registers r7 
                                    309 ;ss                        Allocated to registers 
                                    310 ;delay                     Allocated with name '_tick_ui_delay_65536_37'
                                    311 ;------------------------------------------------------------
                                    312 ;	../UI_Manager/ui.c:17: static uint8_t bursting = 0;
      000000 75*03 00         [24]  313 	mov	_tick_ui_bursting_65536_37,#0x00
                                    314 ;------------------------------------------------------------
                                    315 ;Allocation info for local variables in function 'idlePage'
                                    316 ;------------------------------------------------------------
                                    317 ;timer                     Allocated with name '_idlePage_timer_65536_55'
                                    318 ;intervalOrDuration        Allocated with name '_idlePage_intervalOrDuration_65536_55'
                                    319 ;empty                     Allocated with name '_idlePage_empty_65536_55'
                                    320 ;tock                      Allocated with name '_idlePage_tock_65536_55'
                                    321 ;iconChange                Allocated with name '_idlePage_iconChange_65536_55'
                                    322 ;playing                   Allocated with name '_idlePage_playing_65536_55'
                                    323 ;temp                      Allocated to registers r7 
                                    324 ;------------------------------------------------------------
                                    325 ;	../UI_Manager/ui.c:186: static uint8_t timer = 0;
      000003 75*08 00         [24]  326 	mov	_idlePage_timer_65536_55,#0x00
                                    327 ;	../UI_Manager/ui.c:188: static uint8_t empty = 0x00;
      000006 75*0A 00         [24]  328 	mov	_idlePage_empty_65536_55,#0x00
                                    329 ;	../UI_Manager/ui.c:189: static uint8_t tock = 0x00;
      000009 75*0B 00         [24]  330 	mov	_idlePage_tock_65536_55,#0x00
                                    331 ;	../UI_Manager/ui.c:190: static uint8_t iconChange = 0x00;
      00000C 75*0C 00         [24]  332 	mov	_idlePage_iconChange_65536_55,#0x00
                                    333 ;	../UI_Manager/ui.c:191: static uint8_t playing = PAUSE;
      00000F 75*0D 00         [24]  334 	mov	_idlePage_playing_65536_55,#0x00
                                    335 ;------------------------------------------------------------
                                    336 ;Allocation info for local variables in function 'saveLoadPage'
                                    337 ;------------------------------------------------------------
                                    338 ;slot                      Allocated with name '_saveLoadPage_slot_65536_134'
                                    339 ;action                    Allocated to registers r7 
                                    340 ;------------------------------------------------------------
                                    341 ;	../UI_Manager/ui.c:703: static uint8_t slot = 0;
      000012 75*0E 00         [24]  342 	mov	_saveLoadPage_slot_65536_134,#0x00
                                    343 ;	../UI_Manager/ui.c:12: static volatile uint8_t State = WELCOME_STATE;
      000015 75*00 45         [24]  344 	mov	_State,#0x45
                                    345 ;	../UI_Manager/ui.c:13: static volatile uint8_t Changed = CHANGE_SCREEN_X;
      000018 75*01 FF         [24]  346 	mov	_Changed,#0xff
                                    347 ;	../UI_Manager/ui.c:14: static volatile uint8_t changed = CHANGE_SCREEN_X;
      00001B 75*02 FF         [24]  348 	mov	_changed,#0xff
                                    349 ;--------------------------------------------------------
                                    350 ; Home
                                    351 ;--------------------------------------------------------
                                    352 	.area HOME    (CODE)
                                    353 	.area HOME    (CODE)
                                    354 ;--------------------------------------------------------
                                    355 ; code
                                    356 ;--------------------------------------------------------
                                    357 	.area CSEG    (CODE)
                                    358 ;------------------------------------------------------------
                                    359 ;Allocation info for local variables in function 'tick_ui'
                                    360 ;------------------------------------------------------------
                                    361 ;bursting                  Allocated with name '_tick_ui_bursting_65536_37'
                                    362 ;action                    Allocated to registers r7 
                                    363 ;ss                        Allocated to registers 
                                    364 ;delay                     Allocated with name '_tick_ui_delay_65536_37'
                                    365 ;------------------------------------------------------------
                                    366 ;	../UI_Manager/ui.c:16: void tick_ui(void){
                                    367 ;	-----------------------------------------
                                    368 ;	 function tick_ui
                                    369 ;	-----------------------------------------
      000000                        370 _tick_ui:
                           000007   371 	ar7 = 0x07
                           000006   372 	ar6 = 0x06
                           000005   373 	ar5 = 0x05
                           000004   374 	ar4 = 0x04
                           000003   375 	ar3 = 0x03
                           000002   376 	ar2 = 0x02
                           000001   377 	ar1 = 0x01
                           000000   378 	ar0 = 0x00
                                    379 ;	../UI_Manager/ui.c:18: uint8_t action = get_button_action();
      000000 12r00r00         [24]  380 	lcall	_get_button_action
      000003 AF 82            [24]  381 	mov	r7,dpl
                                    382 ;	../UI_Manager/ui.c:24: if(action == BUTTON_BURST || action == BUTTON_FUN_BURST){
      000005 E4               [12]  383 	clr	a
      000006 BF 05 01         [24]  384 	cjne	r7,#0x05,00387$
      000009 04               [12]  385 	inc	a
      00000A                        386 00387$:
      00000A FE               [12]  387 	mov	r6,a
      00000B 70 03            [24]  388 	jnz	00103$
      00000D BF 0B 21         [24]  389 	cjne	r7,#0x0b,00104$
      000010                        390 00103$:
                                    391 ;	../UI_Manager/ui.c:25: power_pump(action == (BUTTON_BURST) ? PUMP_OVERRIDE : PUMP_MASTER_OVERRIDE);
      000010 EE               [12]  392 	mov	a,r6
      000011 60 06            [24]  393 	jz	00166$
      000013 7D 02            [12]  394 	mov	r5,#0x02
      000015 7E 00            [12]  395 	mov	r6,#0x00
      000017 80 04            [24]  396 	sjmp	00167$
      000019                        397 00166$:
      000019 7D 03            [12]  398 	mov	r5,#0x03
      00001B 7E 00            [12]  399 	mov	r6,#0x00
      00001D                        400 00167$:
      00001D 8D 82            [24]  401 	mov	dpl,r5
      00001F C0 07            [24]  402 	push	ar7
      000021 12r00r00         [24]  403 	lcall	_power_pump
      000024 D0 07            [24]  404 	pop	ar7
                                    405 ;	../UI_Manager/ui.c:26: bursting |= BURSTING;
      000026 AD*03            [24]  406 	mov	r5,_tick_ui_bursting_65536_37
      000028 7E 00            [12]  407 	mov	r6,#0x00
      00002A 43 05 80         [24]  408 	orl	ar5,#0x80
      00002D 8D*03            [24]  409 	mov	_tick_ui_bursting_65536_37,r5
      00002F 80 12            [24]  410 	sjmp	00105$
      000031                        411 00104$:
                                    412 ;	../UI_Manager/ui.c:27: } else if(bursting & BURSTING){
      000031 E5*03            [12]  413 	mov	a,_tick_ui_bursting_65536_37
      000033 30 E7 0D         [24]  414 	jnb	acc.7,00105$
                                    415 ;	../UI_Manager/ui.c:28: power_pump(PUMP_OFF);
      000036 75 82 00         [24]  416 	mov	dpl,#0x00
      000039 C0 07            [24]  417 	push	ar7
      00003B 12r00r00         [24]  418 	lcall	_power_pump
      00003E D0 07            [24]  419 	pop	ar7
                                    420 ;	../UI_Manager/ui.c:29: bursting &= ~BURSTING;
      000040 53*03 7F         [24]  421 	anl	_tick_ui_bursting_65536_37,#0x7f
      000043                        422 00105$:
                                    423 ;	../UI_Manager/ui.c:33: if(action == BUTTON_MANUAL){
      000043 BF 07 34         [24]  424 	cjne	r7,#0x07,00108$
                                    425 ;	../UI_Manager/ui.c:34: set_runtime_data(OP_MODE_INDEX, VALUE, (get_runtime_data(OP_MODE_INDEX) == MODE_MANUAL) ? MODE_DMX : MODE_MANUAL);
      000046 75 82 10         [24]  426 	mov	dpl,#0x10
      000049 C0 07            [24]  427 	push	ar7
      00004B 12r00r00         [24]  428 	lcall	_get_runtime_data
      00004E AE 82            [24]  429 	mov	r6,dpl
      000050 D0 07            [24]  430 	pop	ar7
      000052 BE 80 06         [24]  431 	cjne	r6,#0x80,00168$
      000055 7D 00            [12]  432 	mov	r5,#0x00
      000057 7E 00            [12]  433 	mov	r6,#0x00
      000059 80 04            [24]  434 	sjmp	00169$
      00005B                        435 00168$:
      00005B 7D 80            [12]  436 	mov	r5,#0x80
      00005D 7E 00            [12]  437 	mov	r6,#0x00
      00005F                        438 00169$:
      00005F 8D*00            [24]  439 	mov	_set_runtime_data_PARM_3,r5
      000061 75*00 00         [24]  440 	mov	_set_runtime_data_PARM_2,#0x00
      000064 75 82 10         [24]  441 	mov	dpl,#0x10
      000067 C0 07            [24]  442 	push	ar7
      000069 12r00r00         [24]  443 	lcall	_set_runtime_data
                                    444 ;	../UI_Manager/ui.c:36: State = IDLE_STATE;
      00006C 75*00 00         [24]  445 	mov	_State,#0x00
                                    446 ;	../UI_Manager/ui.c:37: Changed = CHANGE_SCREEN_X;
      00006F 75*01 FF         [24]  447 	mov	_Changed,#0xff
                                    448 ;	../UI_Manager/ui.c:39: set_playing(RESET);
      000072 75*00 02         [24]  449 	mov	_Playing,#0x02
                                    450 ;	../UI_Manager/ui.c:41: tick_fogger();
      000075 12r00r00         [24]  451 	lcall	_tick_fogger
      000078 D0 07            [24]  452 	pop	ar7
      00007A                        453 00108$:
                                    454 ;	../UI_Manager/ui.c:46: if(action == BUTTON_TIMER){
      00007A BF 01 10         [24]  455 	cjne	r7,#0x01,00113$
                                    456 ;	../UI_Manager/ui.c:47: if(get_playing() == PLAY){
      00007D 74 01            [12]  457 	mov	a,#0x01
      00007F B5*00 05         [24]  458 	cjne	a,_Playing,00110$
                                    459 ;	../UI_Manager/ui.c:48: set_playing(RESET);
      000082 75*00 02         [24]  460 	mov	_Playing,#0x02
      000085 80 03            [24]  461 	sjmp	00111$
      000087                        462 00110$:
                                    463 ;	../UI_Manager/ui.c:50: set_playing(PLAY);
      000087 75*00 01         [24]  464 	mov	_Playing,#0x01
      00008A                        465 00111$:
                                    466 ;	../UI_Manager/ui.c:53: tick_fogger();
                                    467 ;	../UI_Manager/ui.c:55: return;
      00008A 02r00r00         [24]  468 	ljmp	_tick_fogger
      00008D                        469 00113$:
                                    470 ;	../UI_Manager/ui.c:59: if(action == BUTTON_FUN_MAN){
      00008D BF 08 02         [24]  471 	cjne	r7,#0x08,00402$
      000090 80 03            [24]  472 	sjmp	00403$
      000092                        473 00402$:
      000092 02r01r2B         [24]  474 	ljmp	00121$
      000095                        475 00403$:
                                    476 ;	../UI_Manager/ui.c:60: set_runtime_data(TANK_LIGHTS_INDEX, VALUE, ~get_runtime_data(TANK_LIGHTS_INDEX));
      000095 75 82 0F         [24]  477 	mov	dpl,#0x0f
      000098 12r00r00         [24]  478 	lcall	_get_runtime_data
      00009B E5 82            [12]  479 	mov	a,dpl
      00009D F4               [12]  480 	cpl	a
      00009E F5*00            [12]  481 	mov	_set_runtime_data_PARM_3,a
      0000A0 75*00 00         [24]  482 	mov	_set_runtime_data_PARM_2,#0x00
      0000A3 75 82 0F         [24]  483 	mov	dpl,#0x0f
      0000A6 12r00r00         [24]  484 	lcall	_set_runtime_data
                                    485 ;	../UI_Manager/ui.c:62: exe_command(CLEAR_DISPLAY);
      0000A9 90 80 00         [24]  486 	mov	dptr,#0x8000
      0000AC 12r00r00         [24]  487 	lcall	_exe_command
                                    488 ;	../UI_Manager/ui.c:63: if(get_runtime_data(TANK_LIGHTS_INDEX)){
      0000AF 75 82 0F         [24]  489 	mov	dpl,#0x0f
      0000B2 12r00r00         [24]  490 	lcall	_get_runtime_data
      0000B5 E5 82            [12]  491 	mov	a,dpl
      0000B7 60 17            [24]  492 	jz	00115$
                                    493 ;	../UI_Manager/ui.c:64: write_string("Tank Lights Off", 15, 0, LINE_0, NOT_SELECTED);
      0000B9 75*00 0F         [24]  494 	mov	_write_string_PARM_2,#0x0f
      0000BC 75*00 00         [24]  495 	mov	_write_string_PARM_3,#0x00
      0000BF 75*00 00         [24]  496 	mov	_write_string_PARM_4,#0x00
      0000C2 75*00 00         [24]  497 	mov	_write_string_PARM_5,#0x00
      0000C5 90r00r00         [24]  498 	mov	dptr,#___str_0
      0000C8 75 F0 80         [24]  499 	mov	b,#0x80
      0000CB 12r00r00         [24]  500 	lcall	_write_string
      0000CE 80 15            [24]  501 	sjmp	00116$
      0000D0                        502 00115$:
                                    503 ;	../UI_Manager/ui.c:66: write_string("Tank Lights On", 15, 0, LINE_0, NOT_SELECTED);
      0000D0 75*00 0F         [24]  504 	mov	_write_string_PARM_2,#0x0f
      0000D3 75*00 00         [24]  505 	mov	_write_string_PARM_3,#0x00
      0000D6 75*00 00         [24]  506 	mov	_write_string_PARM_4,#0x00
      0000D9 75*00 00         [24]  507 	mov	_write_string_PARM_5,#0x00
      0000DC 90r00r10         [24]  508 	mov	dptr,#___str_1
      0000DF 75 F0 80         [24]  509 	mov	b,#0x80
      0000E2 12r00r00         [24]  510 	lcall	_write_string
      0000E5                        511 00116$:
                                    512 ;	../UI_Manager/ui.c:69: write_string("Fun+Man to Undo", 15, 0, LINE_1, NOT_SELECTED);
      0000E5 75*00 0F         [24]  513 	mov	_write_string_PARM_2,#0x0f
      0000E8 75*00 00         [24]  514 	mov	_write_string_PARM_3,#0x00
      0000EB 75*00 01         [24]  515 	mov	_write_string_PARM_4,#0x01
      0000EE 75*00 00         [24]  516 	mov	_write_string_PARM_5,#0x00
      0000F1 90r00r1F         [24]  517 	mov	dptr,#___str_2
      0000F4 75 F0 80         [24]  518 	mov	b,#0x80
      0000F7 12r00r00         [24]  519 	lcall	_write_string
                                    520 ;	../UI_Manager/ui.c:73: while(delay--){ ;; }
      0000FA 75*04 B5         [24]  521 	mov	_tick_ui_delay_65536_37,#0xb5
      0000FD 75*05 D8         [24]  522 	mov	(_tick_ui_delay_65536_37 + 1),#0xd8
      000100 75*06 07         [24]  523 	mov	(_tick_ui_delay_65536_37 + 2),#0x07
      000103 75*07 00         [24]  524 	mov	(_tick_ui_delay_65536_37 + 3),#0x00
      000106                        525 00117$:
      000106 A8*04            [24]  526 	mov	r0,_tick_ui_delay_65536_37
      000108 A9*05            [24]  527 	mov	r1,(_tick_ui_delay_65536_37 + 1)
      00010A AA*06            [24]  528 	mov	r2,(_tick_ui_delay_65536_37 + 2)
      00010C AE*07            [24]  529 	mov	r6,(_tick_ui_delay_65536_37 + 3)
      00010E 15*04            [12]  530 	dec	_tick_ui_delay_65536_37
      000110 74 FF            [12]  531 	mov	a,#0xff
      000112 B5*04 0C         [24]  532 	cjne	a,_tick_ui_delay_65536_37,00405$
      000115 15*05            [12]  533 	dec	(_tick_ui_delay_65536_37 + 1)
      000117 B5*05 07         [24]  534 	cjne	a,(_tick_ui_delay_65536_37 + 1),00405$
      00011A 15*06            [12]  535 	dec	(_tick_ui_delay_65536_37 + 2)
      00011C B5*06 02         [24]  536 	cjne	a,(_tick_ui_delay_65536_37 + 2),00405$
      00011F 15*07            [12]  537 	dec	(_tick_ui_delay_65536_37 + 3)
      000121                        538 00405$:
      000121 E8               [12]  539 	mov	a,r0
      000122 49               [12]  540 	orl	a,r1
      000123 4A               [12]  541 	orl	a,r2
      000124 4E               [12]  542 	orl	a,r6
      000125 70 DF            [24]  543 	jnz	00117$
                                    544 ;	../UI_Manager/ui.c:75: Changed = CHANGE_SCREEN_X;
      000127 75*01 FF         [24]  545 	mov	_Changed,#0xff
                                    546 ;	../UI_Manager/ui.c:77: return;
      00012A 22               [24]  547 	ret
      00012B                        548 00121$:
                                    549 ;	../UI_Manager/ui.c:81: if(action == BUTTON_MAN_BURST){
      00012B BF 09 02         [24]  550 	cjne	r7,#0x09,00407$
      00012E 80 03            [24]  551 	sjmp	00408$
      000130                        552 00407$:
      000130 02r01rDB         [24]  553 	ljmp	00126$
      000133                        554 00408$:
                                    555 ;	../UI_Manager/ui.c:83: ss = bursting & ~BURSTING;
      000133 74 7F            [12]  556 	mov	a,#0x7f
      000135 55*03            [12]  557 	anl	a,_tick_ui_bursting_65536_37
      000137 FE               [12]  558 	mov	r6,a
                                    559 ;	../UI_Manager/ui.c:85: exe_command(CLEAR_DISPLAY);
      000138 90 80 00         [24]  560 	mov	dptr,#0x8000
      00013B C0 06            [24]  561 	push	ar6
      00013D 12r00r00         [24]  562 	lcall	_exe_command
      000140 D0 06            [24]  563 	pop	ar6
                                    564 ;	../UI_Manager/ui.c:87: write_string(getString(SECRET_STRING_OFFSET + (ss % 3)*2), LINE_LENGTH, 0, LINE_0, NOT_SELECTED);
      000142 8E 04            [24]  565 	mov	ar4,r6
      000144 7D 00            [12]  566 	mov	r5,#0x00
      000146 75*00 03         [24]  567 	mov	__modsint_PARM_2,#0x03
                                    568 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      000149 8D*01            [24]  569 	mov	(__modsint_PARM_2 + 1),r5
      00014B 8C 82            [24]  570 	mov	dpl,r4
      00014D 8D 83            [24]  571 	mov	dph,r5
      00014F C0 06            [24]  572 	push	ar6
      000151 12r00r00         [24]  573 	lcall	__modsint
      000154 E5 82            [12]  574 	mov	a,dpl
      000156 FC               [12]  575 	mov	r4,a
      000157 2C               [12]  576 	add	a,r4
      000158 FC               [12]  577 	mov	r4,a
      000159 24 28            [12]  578 	add	a,#0x28
      00015B F5 82            [12]  579 	mov	dpl,a
      00015D C0 04            [24]  580 	push	ar4
      00015F 12r0Fr2E         [24]  581 	lcall	_getString
      000162 AA 82            [24]  582 	mov	r2,dpl
      000164 AB 83            [24]  583 	mov	r3,dph
      000166 AD F0            [24]  584 	mov	r5,b
      000168 75*00 10         [24]  585 	mov	_write_string_PARM_2,#0x10
      00016B 75*00 00         [24]  586 	mov	_write_string_PARM_3,#0x00
      00016E 75*00 00         [24]  587 	mov	_write_string_PARM_4,#0x00
      000171 75*00 00         [24]  588 	mov	_write_string_PARM_5,#0x00
      000174 8A 82            [24]  589 	mov	dpl,r2
      000176 8B 83            [24]  590 	mov	dph,r3
      000178 8D F0            [24]  591 	mov	b,r5
      00017A 12r00r00         [24]  592 	lcall	_write_string
      00017D D0 04            [24]  593 	pop	ar4
                                    594 ;	../UI_Manager/ui.c:88: write_string(getString(SECRET_STRING_OFFSET + (ss % 3)*2 + 1), LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      00017F 74 29            [12]  595 	mov	a,#0x29
      000181 2C               [12]  596 	add	a,r4
      000182 F5 82            [12]  597 	mov	dpl,a
      000184 12r0Fr2E         [24]  598 	lcall	_getString
      000187 AB 82            [24]  599 	mov	r3,dpl
      000189 AC 83            [24]  600 	mov	r4,dph
      00018B AD F0            [24]  601 	mov	r5,b
      00018D 75*00 10         [24]  602 	mov	_write_string_PARM_2,#0x10
      000190 75*00 00         [24]  603 	mov	_write_string_PARM_3,#0x00
      000193 75*00 01         [24]  604 	mov	_write_string_PARM_4,#0x01
      000196 75*00 00         [24]  605 	mov	_write_string_PARM_5,#0x00
      000199 8B 82            [24]  606 	mov	dpl,r3
      00019B 8C 83            [24]  607 	mov	dph,r4
      00019D 8D F0            [24]  608 	mov	b,r5
      00019F 12r00r00         [24]  609 	lcall	_write_string
      0001A2 D0 06            [24]  610 	pop	ar6
                                    611 ;	../UI_Manager/ui.c:90: ss++;
      0001A4 EE               [12]  612 	mov	a,r6
      0001A5 04               [12]  613 	inc	a
                                    614 ;	../UI_Manager/ui.c:92: bursting |= (ss & ~BURSTING);
      0001A6 54 7F            [12]  615 	anl	a,#0x7f
      0001A8 42*03            [12]  616 	orl	_tick_ui_bursting_65536_37,a
                                    617 ;	../UI_Manager/ui.c:96: while(delay--){ ;; }
      0001AA 75*04 DD         [24]  618 	mov	_tick_ui_delay_65536_37,#0xdd
      0001AD 75*05 8A         [24]  619 	mov	(_tick_ui_delay_65536_37 + 1),#0x8a
      0001B0 75*06 14         [24]  620 	mov	(_tick_ui_delay_65536_37 + 2),#0x14
      0001B3 75*07 00         [24]  621 	mov	(_tick_ui_delay_65536_37 + 3),#0x00
      0001B6                        622 00122$:
      0001B6 A8*04            [24]  623 	mov	r0,_tick_ui_delay_65536_37
      0001B8 A9*05            [24]  624 	mov	r1,(_tick_ui_delay_65536_37 + 1)
      0001BA AA*06            [24]  625 	mov	r2,(_tick_ui_delay_65536_37 + 2)
      0001BC AE*07            [24]  626 	mov	r6,(_tick_ui_delay_65536_37 + 3)
      0001BE 15*04            [12]  627 	dec	_tick_ui_delay_65536_37
      0001C0 74 FF            [12]  628 	mov	a,#0xff
      0001C2 B5*04 0C         [24]  629 	cjne	a,_tick_ui_delay_65536_37,00409$
      0001C5 15*05            [12]  630 	dec	(_tick_ui_delay_65536_37 + 1)
      0001C7 B5*05 07         [24]  631 	cjne	a,(_tick_ui_delay_65536_37 + 1),00409$
      0001CA 15*06            [12]  632 	dec	(_tick_ui_delay_65536_37 + 2)
      0001CC B5*06 02         [24]  633 	cjne	a,(_tick_ui_delay_65536_37 + 2),00409$
      0001CF 15*07            [12]  634 	dec	(_tick_ui_delay_65536_37 + 3)
      0001D1                        635 00409$:
      0001D1 E8               [12]  636 	mov	a,r0
      0001D2 49               [12]  637 	orl	a,r1
      0001D3 4A               [12]  638 	orl	a,r2
      0001D4 4E               [12]  639 	orl	a,r6
      0001D5 70 DF            [24]  640 	jnz	00122$
                                    641 ;	../UI_Manager/ui.c:98: Changed = CHANGE_SCREEN_X;
      0001D7 75*01 FF         [24]  642 	mov	_Changed,#0xff
                                    643 ;	../UI_Manager/ui.c:100: return;
      0001DA 22               [24]  644 	ret
      0001DB                        645 00126$:
                                    646 ;	../UI_Manager/ui.c:104: if(action == BUTTON_FUN_TIME){
      0001DB BF 04 06         [24]  647 	cjne	r7,#0x04,00128$
                                    648 ;	../UI_Manager/ui.c:105: State = IDLE_STATE;
      0001DE 75*00 00         [24]  649 	mov	_State,#0x00
                                    650 ;	../UI_Manager/ui.c:106: Changed = CHANGE_SCREEN_X;
      0001E1 75*01 FF         [24]  651 	mov	_Changed,#0xff
      0001E4                        652 00128$:
                                    653 ;	../UI_Manager/ui.c:111: if(Changed || 
      0001E4 E5*01            [12]  654 	mov	a,_Changed
      0001E6 70 2D            [24]  655 	jnz	00153$
                                    656 ;	../UI_Manager/ui.c:112: action == BUTTON_UP ||
      0001E8 BF 03 02         [24]  657 	cjne	r7,#0x03,00414$
      0001EB 80 28            [24]  658 	sjmp	00153$
      0001ED                        659 00414$:
                                    660 ;	../UI_Manager/ui.c:113: action == BUTTON_UP_HOLD||
      0001ED BF 1E 02         [24]  661 	cjne	r7,#0x1e,00415$
      0001F0 80 23            [24]  662 	sjmp	00153$
      0001F2                        663 00415$:
                                    664 ;	../UI_Manager/ui.c:114: action == BUTTON_UP_BURST ||
      0001F2 BF 1F 02         [24]  665 	cjne	r7,#0x1f,00416$
      0001F5 80 1E            [24]  666 	sjmp	00153$
      0001F7                        667 00416$:
                                    668 ;	../UI_Manager/ui.c:115: action == BUTTON_DOWN ||
      0001F7 BF 0A 02         [24]  669 	cjne	r7,#0x0a,00417$
      0001FA 80 19            [24]  670 	sjmp	00153$
      0001FC                        671 00417$:
                                    672 ;	../UI_Manager/ui.c:116: action == BUTTON_DOWN_HOLD ||
      0001FC BF 64 02         [24]  673 	cjne	r7,#0x64,00418$
      0001FF 80 14            [24]  674 	sjmp	00153$
      000201                        675 00418$:
                                    676 ;	../UI_Manager/ui.c:117: action == BUTTON_DOWN_BURST ||
      000201 BF 65 02         [24]  677 	cjne	r7,#0x65,00419$
      000204 80 0F            [24]  678 	sjmp	00153$
      000206                        679 00419$:
                                    680 ;	../UI_Manager/ui.c:118: action == BUTTON_FUN_UP ||
      000206 BF 0C 02         [24]  681 	cjne	r7,#0x0c,00420$
      000209 80 0A            [24]  682 	sjmp	00153$
      00020B                        683 00420$:
                                    684 ;	../UI_Manager/ui.c:119: action == BUTTON_FUNCTION ||
      00020B BF 02 02         [24]  685 	cjne	r7,#0x02,00421$
      00020E 80 05            [24]  686 	sjmp	00153$
      000210                        687 00421$:
                                    688 ;	../UI_Manager/ui.c:120: State == IDLE_STATE){
      000210 E5*00            [12]  689 	mov	a,_State
      000212 60 01            [24]  690 	jz	00422$
      000214 22               [24]  691 	ret
      000215                        692 00422$:
      000215                        693 00153$:
                                    694 ;	../UI_Manager/ui.c:122: switch (State)
      000215 AE*00            [24]  695 	mov	r6,_State
      000217 BE 01 03         [24]  696 	cjne	r6,#0x01,00423$
      00021A 02r02rA9         [24]  697 	ljmp	00130$
      00021D                        698 00423$:
      00021D BE 02 03         [24]  699 	cjne	r6,#0x02,00424$
      000220 02r02rB3         [24]  700 	ljmp	00132$
      000223                        701 00424$:
      000223 BE 03 03         [24]  702 	cjne	r6,#0x03,00425$
      000226 02r02rAE         [24]  703 	ljmp	00131$
      000229                        704 00425$:
      000229 BE 04 03         [24]  705 	cjne	r6,#0x04,00426$
      00022C 02r02rB8         [24]  706 	ljmp	00133$
      00022F                        707 00426$:
      00022F BE 05 03         [24]  708 	cjne	r6,#0x05,00427$
      000232 02r02rBD         [24]  709 	ljmp	00134$
      000235                        710 00427$:
      000235 BE 06 03         [24]  711 	cjne	r6,#0x06,00428$
      000238 02r02rC2         [24]  712 	ljmp	00138$
      00023B                        713 00428$:
      00023B BE 07 03         [24]  714 	cjne	r6,#0x07,00429$
      00023E 02r02rC2         [24]  715 	ljmp	00138$
      000241                        716 00429$:
      000241 BE 08 03         [24]  717 	cjne	r6,#0x08,00430$
      000244 02r02rC2         [24]  718 	ljmp	00138$
      000247                        719 00430$:
      000247 BE 09 02         [24]  720 	cjne	r6,#0x09,00431$
      00024A 80 76            [24]  721 	sjmp	00138$
      00024C                        722 00431$:
      00024C BE 0A 02         [24]  723 	cjne	r6,#0x0a,00432$
      00024F 80 76            [24]  724 	sjmp	00141$
      000251                        725 00432$:
      000251 BE 0B 02         [24]  726 	cjne	r6,#0x0b,00433$
      000254 80 71            [24]  727 	sjmp	00141$
      000256                        728 00433$:
      000256 BE 0C 02         [24]  729 	cjne	r6,#0x0c,00434$
      000259 80 6C            [24]  730 	sjmp	00141$
      00025B                        731 00434$:
      00025B BE 0D 02         [24]  732 	cjne	r6,#0x0d,00435$
      00025E 80 6C            [24]  733 	sjmp	00143$
      000260                        734 00435$:
      000260 BE 0E 02         [24]  735 	cjne	r6,#0x0e,00436$
      000263 80 67            [24]  736 	sjmp	00143$
      000265                        737 00436$:
      000265 BE 14 02         [24]  738 	cjne	r6,#0x14,00437$
      000268 80 67            [24]  739 	sjmp	00144$
      00026A                        740 00437$:
      00026A BE 15 02         [24]  741 	cjne	r6,#0x15,00438$
      00026D 80 67            [24]  742 	sjmp	00145$
      00026F                        743 00438$:
      00026F BE 45 69         [24]  744 	cjne	r6,#0x45,00146$
                                    745 ;	../UI_Manager/ui.c:127: exe_command(CLEAR_DISPLAY);
      000272 90 80 00         [24]  746 	mov	dptr,#0x8000
      000275 12r00r00         [24]  747 	lcall	_exe_command
                                    748 ;	../UI_Manager/ui.c:128: write_string("AtmosFEAR 221B", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      000278 75*00 10         [24]  749 	mov	_write_string_PARM_2,#0x10
      00027B 75*00 01         [24]  750 	mov	_write_string_PARM_3,#0x01
      00027E 75*00 00         [24]  751 	mov	_write_string_PARM_4,#0x00
      000281 75*00 00         [24]  752 	mov	_write_string_PARM_5,#0x00
      000284 90r00r2F         [24]  753 	mov	dptr,#___str_3
      000287 75 F0 80         [24]  754 	mov	b,#0x80
      00028A 12r00r00         [24]  755 	lcall	_write_string
                                    756 ;	../UI_Manager/ui.c:129: write_string("By Blizzard Pro", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      00028D 75*00 10         [24]  757 	mov	_write_string_PARM_2,#0x10
      000290 75*00 00         [24]  758 	mov	_write_string_PARM_3,#0x00
      000293 75*00 01         [24]  759 	mov	_write_string_PARM_4,#0x01
      000296 75*00 00         [24]  760 	mov	_write_string_PARM_5,#0x00
      000299 90r00r3E         [24]  761 	mov	dptr,#___str_4
      00029C 75 F0 80         [24]  762 	mov	b,#0x80
      00029F 12r00r00         [24]  763 	lcall	_write_string
                                    764 ;	../UI_Manager/ui.c:131: Changed = CHANGE_SCREEN_X;
      0002A2 75*01 FF         [24]  765 	mov	_Changed,#0xff
                                    766 ;	../UI_Manager/ui.c:132: State = IDLE_STATE;
      0002A5 75*00 00         [24]  767 	mov	_State,#0x00
                                    768 ;	../UI_Manager/ui.c:134: break;
                                    769 ;	../UI_Manager/ui.c:135: case MANUAL_FOG_POWER_STATE:
      0002A8 22               [24]  770 	ret
      0002A9                        771 00130$:
                                    772 ;	../UI_Manager/ui.c:136: fogLevelPage(action);
      0002A9 8F 82            [24]  773 	mov	dpl,r7
                                    774 ;	../UI_Manager/ui.c:137: break;
                                    775 ;	../UI_Manager/ui.c:138: case MANUAL_FOG_INTERVAL_STATE:
      0002AB 02r05rBA         [24]  776 	ljmp	_fogLevelPage
      0002AE                        777 00131$:
                                    778 ;	../UI_Manager/ui.c:139: fogIntervalPage(action);
      0002AE 8F 82            [24]  779 	mov	dpl,r7
                                    780 ;	../UI_Manager/ui.c:140: break;
                                    781 ;	../UI_Manager/ui.c:141: case MANUAL_FOG_DURATION_STATE:
      0002B0 02r07r06         [24]  782 	ljmp	_fogIntervalPage
      0002B3                        783 00132$:
                                    784 ;	../UI_Manager/ui.c:142: fogDurationPage(action);
      0002B3 8F 82            [24]  785 	mov	dpl,r7
                                    786 ;	../UI_Manager/ui.c:143: break;
                                    787 ;	../UI_Manager/ui.c:144: case MANUAL_COLOR_MACRO_STATE:
      0002B5 02r07rBB         [24]  788 	ljmp	_fogDurationPage
      0002B8                        789 00133$:
                                    790 ;	../UI_Manager/ui.c:145: macroPage(action);
      0002B8 8F 82            [24]  791 	mov	dpl,r7
                                    792 ;	../UI_Manager/ui.c:146: break;
                                    793 ;	../UI_Manager/ui.c:147: case MANUAL_MACRO_SPEED_STATE:
      0002BA 02r08r70         [24]  794 	ljmp	_macroPage
      0002BD                        795 00134$:
                                    796 ;	../UI_Manager/ui.c:148: macroSpeedPage(action);
      0002BD 8F 82            [24]  797 	mov	dpl,r7
                                    798 ;	../UI_Manager/ui.c:149: break;
                                    799 ;	../UI_Manager/ui.c:153: case MANUAL_STROBE_STATE:
      0002BF 02r09r22         [24]  800 	ljmp	_macroSpeedPage
      0002C2                        801 00138$:
                                    802 ;	../UI_Manager/ui.c:154: colorPage(action);
      0002C2 8F 82            [24]  803 	mov	dpl,r7
                                    804 ;	../UI_Manager/ui.c:155: break;
                                    805 ;	../UI_Manager/ui.c:158: case MANUAL_REMOTE_ACTION_6_STATE:
      0002C4 02r09rFF         [24]  806 	ljmp	_colorPage
      0002C7                        807 00141$:
                                    808 ;	../UI_Manager/ui.c:159: remotePage(action);
      0002C7 8F 82            [24]  809 	mov	dpl,r7
                                    810 ;	../UI_Manager/ui.c:160: break;
                                    811 ;	../UI_Manager/ui.c:162: case MANUAL_SAVE_SETTINGS_STATE:
      0002C9 02r0Br25         [24]  812 	ljmp	_remotePage
      0002CC                        813 00143$:
                                    814 ;	../UI_Manager/ui.c:163: saveLoadPage(action);
      0002CC 8F 82            [24]  815 	mov	dpl,r7
                                    816 ;	../UI_Manager/ui.c:164: break;
                                    817 ;	../UI_Manager/ui.c:165: case DMX_ADDRESS_STATE:
      0002CE 02r0Cr49         [24]  818 	ljmp	_saveLoadPage
      0002D1                        819 00144$:
                                    820 ;	../UI_Manager/ui.c:166: dmxAddressPage(action);
      0002D1 8F 82            [24]  821 	mov	dpl,r7
                                    822 ;	../UI_Manager/ui.c:167: break;
                                    823 ;	../UI_Manager/ui.c:168: case DMX_CHANNEL_MODE_STATE:
      0002D3 02r0Dr66         [24]  824 	ljmp	_dmxAddressPage
      0002D6                        825 00145$:
                                    826 ;	../UI_Manager/ui.c:169: dmxChannelPage(action);
      0002D6 8F 82            [24]  827 	mov	dpl,r7
                                    828 ;	../UI_Manager/ui.c:170: break;
                                    829 ;	../UI_Manager/ui.c:171: default: //IDLE state
      0002D8 02r0DrEA         [24]  830 	ljmp	_dmxChannelPage
      0002DB                        831 00146$:
                                    832 ;	../UI_Manager/ui.c:172: idlePage();
      0002DB C0 07            [24]  833 	push	ar7
      0002DD 12r02rFB         [24]  834 	lcall	_idlePage
      0002E0 D0 07            [24]  835 	pop	ar7
                                    836 ;	../UI_Manager/ui.c:174: if(action == BUTTON_FUNCTION){
      0002E2 BF 02 09         [24]  837 	cjne	r7,#0x02,00150$
                                    838 ;	../UI_Manager/ui.c:175: set_ui_state(INC, NULL);
      0002E5 75*0F 00         [24]  839 	mov	_set_ui_state_PARM_2,#0x00
      0002E8 75 82 01         [24]  840 	mov	dpl,#0x01
      0002EB 02r0Er8C         [24]  841 	ljmp	_set_ui_state
      0002EE                        842 00150$:
                                    843 ;	../UI_Manager/ui.c:176: } else if(action == BUTTON_FUN_UP){
      0002EE BF 0C 09         [24]  844 	cjne	r7,#0x0c,00164$
                                    845 ;	../UI_Manager/ui.c:177: set_ui_state(DEC, NULL);
      0002F1 75*0F 00         [24]  846 	mov	_set_ui_state_PARM_2,#0x00
      0002F4 75 82 02         [24]  847 	mov	dpl,#0x02
                                    848 ;	../UI_Manager/ui.c:180: }
                                    849 ;	../UI_Manager/ui.c:183: }
      0002F7 02r0Er8C         [24]  850 	ljmp	_set_ui_state
      0002FA                        851 00164$:
      0002FA 22               [24]  852 	ret
                                    853 ;------------------------------------------------------------
                                    854 ;Allocation info for local variables in function 'idlePage'
                                    855 ;------------------------------------------------------------
                                    856 ;timer                     Allocated with name '_idlePage_timer_65536_55'
                                    857 ;intervalOrDuration        Allocated with name '_idlePage_intervalOrDuration_65536_55'
                                    858 ;empty                     Allocated with name '_idlePage_empty_65536_55'
                                    859 ;tock                      Allocated with name '_idlePage_tock_65536_55'
                                    860 ;iconChange                Allocated with name '_idlePage_iconChange_65536_55'
                                    861 ;playing                   Allocated with name '_idlePage_playing_65536_55'
                                    862 ;temp                      Allocated to registers r7 
                                    863 ;------------------------------------------------------------
                                    864 ;	../UI_Manager/ui.c:185: void idlePage(){
                                    865 ;	-----------------------------------------
                                    866 ;	 function idlePage
                                    867 ;	-----------------------------------------
      0002FB                        868 _idlePage:
                                    869 ;	../UI_Manager/ui.c:194: if(Changed){
      0002FB E5*01            [12]  870 	mov	a,_Changed
      0002FD 70 03            [24]  871 	jnz	00314$
      0002FF 02r03rE2         [24]  872 	ljmp	00116$
      000302                        873 00314$:
                                    874 ;	../UI_Manager/ui.c:195: exe_command(CLEAR_DISPLAY);
      000302 90 80 00         [24]  875 	mov	dptr,#0x8000
      000305 12r00r00         [24]  876 	lcall	_exe_command
                                    877 ;	../UI_Manager/ui.c:196: Changed = 0x00;
      000308 75*01 00         [24]  878 	mov	_Changed,#0x00
                                    879 ;	../UI_Manager/ui.c:197: changed = 0xFF;
      00030B 75*02 FF         [24]  880 	mov	_changed,#0xff
                                    881 ;	../UI_Manager/ui.c:198: timer = 0xFF;
      00030E 75*08 FF         [24]  882 	mov	_idlePage_timer_65536_55,#0xff
                                    883 ;	../UI_Manager/ui.c:199: intervalOrDuration = 0x55; //guaranteed to not be interval or duration
      000311 75*09 55         [24]  884 	mov	_idlePage_intervalOrDuration_65536_55,#0x55
                                    885 ;	../UI_Manager/ui.c:202: if(get_fog_fluid_level() == TANK_EMPTY && get_heated()){
      000314 E5*00            [12]  886 	mov	a,_Fluid_Level
      000316 70 33            [24]  887 	jnz	00102$
      000318 E5*00            [12]  888 	mov	a,_Heat_Flag
      00031A 30 E7 2E         [24]  889 	jnb	acc.7,00102$
                                    890 ;	../UI_Manager/ui.c:204: write_string("PC Load Letter", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      00031D 75*00 10         [24]  891 	mov	_write_string_PARM_2,#0x10
      000320 75*00 01         [24]  892 	mov	_write_string_PARM_3,#0x01
      000323 75*00 00         [24]  893 	mov	_write_string_PARM_4,#0x00
      000326 75*00 00         [24]  894 	mov	_write_string_PARM_5,#0x00
      000329 90r00r4E         [24]  895 	mov	dptr,#___str_5
      00032C 75 F0 80         [24]  896 	mov	b,#0x80
      00032F 12r00r00         [24]  897 	lcall	_write_string
                                    898 ;	../UI_Manager/ui.c:205: write_string("Burst to Refill", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      000332 75*00 10         [24]  899 	mov	_write_string_PARM_2,#0x10
      000335 75*00 00         [24]  900 	mov	_write_string_PARM_3,#0x00
      000338 75*00 01         [24]  901 	mov	_write_string_PARM_4,#0x01
      00033B 75*00 00         [24]  902 	mov	_write_string_PARM_5,#0x00
      00033E 90r00r5D         [24]  903 	mov	dptr,#___str_6
      000341 75 F0 80         [24]  904 	mov	b,#0x80
      000344 12r00r00         [24]  905 	lcall	_write_string
                                    906 ;	../UI_Manager/ui.c:207: empty = 0xFF;
      000347 75*0A FF         [24]  907 	mov	_idlePage_empty_65536_55,#0xff
                                    908 ;	../UI_Manager/ui.c:209: return;
      00034A 22               [24]  909 	ret
      00034B                        910 00102$:
                                    911 ;	../UI_Manager/ui.c:212: if(empty){
      00034B E5*0A            [12]  912 	mov	a,_idlePage_empty_65536_55
      00034D 60 0C            [24]  913 	jz	00107$
                                    914 ;	../UI_Manager/ui.c:213: if(get_fog_fluid_level() == TANK_FULL){
      00034F 74 01            [12]  915 	mov	a,#0x01
      000351 B5*00 06         [24]  916 	cjne	a,_Fluid_Level,00105$
                                    917 ;	../UI_Manager/ui.c:214: empty = 0x00;
      000354 75*0A 00         [24]  918 	mov	_idlePage_empty_65536_55,#0x00
                                    919 ;	../UI_Manager/ui.c:215: Changed = CHANGE_SCREEN_X;
      000357 75*01 FF         [24]  920 	mov	_Changed,#0xff
      00035A                        921 00105$:
                                    922 ;	../UI_Manager/ui.c:218: return;
      00035A 22               [24]  923 	ret
      00035B                        924 00107$:
                                    925 ;	../UI_Manager/ui.c:221: if(get_runtime_data(OP_MODE_INDEX)){ /* Manual Mode */
      00035B 75 82 10         [24]  926 	mov	dpl,#0x10
      00035E 12r00r00         [24]  927 	lcall	_get_runtime_data
      000361 E5 82            [12]  928 	mov	a,dpl
      000363 60 17            [24]  929 	jz	00113$
                                    930 ;	../UI_Manager/ui.c:222: write_string("Manual Mode", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      000365 75*00 10         [24]  931 	mov	_write_string_PARM_2,#0x10
      000368 75*00 01         [24]  932 	mov	_write_string_PARM_3,#0x01
      00036B 75*00 00         [24]  933 	mov	_write_string_PARM_4,#0x00
      00036E 75*00 00         [24]  934 	mov	_write_string_PARM_5,#0x00
      000371 90r00r6D         [24]  935 	mov	dptr,#___str_7
      000374 75 F0 80         [24]  936 	mov	b,#0x80
      000377 12r00r00         [24]  937 	lcall	_write_string
      00037A 80 66            [24]  938 	sjmp	00116$
      00037C                        939 00113$:
                                    940 ;	../UI_Manager/ui.c:225: write_number(get_dmx_address(), 4, LINE_1, NOT_SELECTED);
      00037C 12r00r00         [24]  941 	lcall	_get_dmx_address
      00037F 75*00 04         [24]  942 	mov	_write_number_PARM_2,#0x04
      000382 75*00 01         [24]  943 	mov	_write_number_PARM_3,#0x01
      000385 75*00 00         [24]  944 	mov	_write_number_PARM_4,#0x00
      000388 12r00r00         [24]  945 	lcall	_write_number
                                    946 ;	../UI_Manager/ui.c:226: switch (get_runtime_data(MODE_INDEX))
      00038B 75 82 0E         [24]  947 	mov	dpl,#0x0e
      00038E 12r00r00         [24]  948 	lcall	_get_runtime_data
      000391 AF 82            [24]  949 	mov	r7,dpl
      000393 BF 01 02         [24]  950 	cjne	r7,#0x01,00321$
      000396 80 05            [24]  951 	sjmp	00108$
      000398                        952 00321$:
                                    953 ;	../UI_Manager/ui.c:228: case OPTION_DMX_MODE_3:
      000398 BF 02 0A         [24]  954 	cjne	r7,#0x02,00110$
      00039B 80 04            [24]  955 	sjmp	00109$
      00039D                        956 00108$:
                                    957 ;	../UI_Manager/ui.c:229: temp = 3;
      00039D 7F 03            [12]  958 	mov	r7,#0x03
                                    959 ;	../UI_Manager/ui.c:230: break;
                                    960 ;	../UI_Manager/ui.c:231: case OPTION_DMX_MODE_1: 
      00039F 80 06            [24]  961 	sjmp	00111$
      0003A1                        962 00109$:
                                    963 ;	../UI_Manager/ui.c:232: temp = 1;
      0003A1 7F 01            [12]  964 	mov	r7,#0x01
                                    965 ;	../UI_Manager/ui.c:233: break;
                                    966 ;	../UI_Manager/ui.c:234: default:
      0003A3 80 02            [24]  967 	sjmp	00111$
      0003A5                        968 00110$:
                                    969 ;	../UI_Manager/ui.c:235: temp = 10;
      0003A5 7F 0A            [12]  970 	mov	r7,#0x0a
                                    971 ;	../UI_Manager/ui.c:237: }
      0003A7                        972 00111$:
                                    973 ;	../UI_Manager/ui.c:238: write_number(temp, 12, LINE_1, NOT_SELECTED);
      0003A7 7E 00            [12]  974 	mov	r6,#0x00
      0003A9 75*00 0C         [24]  975 	mov	_write_number_PARM_2,#0x0c
      0003AC 75*00 01         [24]  976 	mov	_write_number_PARM_3,#0x01
                                    977 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      0003AF 8E*00            [24]  978 	mov	_write_number_PARM_4,r6
      0003B1 8F 82            [24]  979 	mov	dpl,r7
      0003B3 8E 83            [24]  980 	mov	dph,r6
      0003B5 12r00r00         [24]  981 	lcall	_write_number
                                    982 ;	../UI_Manager/ui.c:240: write_string("Addr", sizeof("Addr") - 1, 0, LINE_1, NOT_SELECTED);
      0003B8 75*00 04         [24]  983 	mov	_write_string_PARM_2,#0x04
      0003BB 75*00 00         [24]  984 	mov	_write_string_PARM_3,#0x00
      0003BE 75*00 01         [24]  985 	mov	_write_string_PARM_4,#0x01
      0003C1 75*00 00         [24]  986 	mov	_write_string_PARM_5,#0x00
      0003C4 90r00r79         [24]  987 	mov	dptr,#___str_8
      0003C7 75 F0 80         [24]  988 	mov	b,#0x80
      0003CA 12r00r00         [24]  989 	lcall	_write_string
                                    990 ;	../UI_Manager/ui.c:241: write_string("Mode", sizeof("Mode") - 1, 9, LINE_1, NOT_SELECTED);
      0003CD 75*00 04         [24]  991 	mov	_write_string_PARM_2,#0x04
      0003D0 75*00 09         [24]  992 	mov	_write_string_PARM_3,#0x09
      0003D3 75*00 01         [24]  993 	mov	_write_string_PARM_4,#0x01
      0003D6 75*00 00         [24]  994 	mov	_write_string_PARM_5,#0x00
      0003D9 90r00r7E         [24]  995 	mov	dptr,#___str_9
      0003DC 75 F0 80         [24]  996 	mov	b,#0x80
      0003DF 12r00r00         [24]  997 	lcall	_write_string
      0003E2                        998 00116$:
                                    999 ;	../UI_Manager/ui.c:249: tock++;
      0003E2 05*0B            [12] 1000 	inc	_idlePage_tock_65536_55
                                   1001 ;	../UI_Manager/ui.c:250: if(get_playing() == PLAY){
      0003E4 74 01            [12] 1002 	mov	a,#0x01
      0003E6 B5*00 55         [24] 1003 	cjne	a,_Playing,00134$
                                   1004 ;	../UI_Manager/ui.c:251: if(playing == PAUSE){
      0003E9 E5*0D            [12] 1005 	mov	a,_idlePage_playing_65536_55
                                   1006 ;	../UI_Manager/ui.c:252: iconChange |= PLAY_CHANGE;
      0003EB 70 08            [24] 1007 	jnz	00118$
      0003ED AE*0C            [24] 1008 	mov	r6,_idlePage_iconChange_65536_55
      0003EF FF               [12] 1009 	mov	r7,a
      0003F0 43 06 20         [24] 1010 	orl	ar6,#0x20
      0003F3 8E*0C            [24] 1011 	mov	_idlePage_iconChange_65536_55,r6
      0003F5                       1012 00118$:
                                   1013 ;	../UI_Manager/ui.c:255: if(get_interval_or_duration() == INTERVAL){
      0003F5 E5*00            [12] 1014 	mov	a,_Interval_Or_Duration
      0003F7 70 16            [24] 1015 	jnz	00127$
                                   1016 ;	../UI_Manager/ui.c:257: if(iconChange & PLAY_CHANGE){
      0003F9 E5*0C            [12] 1017 	mov	a,_idlePage_iconChange_65536_55
      0003FB 30 E5 35         [24] 1018 	jnb	acc.5,00128$
                                   1019 ;	../UI_Manager/ui.c:258: write_char(CHAR_PLAY, PLAY_ICON_INDEX, LINE_0);
      0003FE 75*00 0E         [24] 1020 	mov	_write_char_PARM_2,#0x0e
      000401 75*00 00         [24] 1021 	mov	_write_char_PARM_3,#0x00
      000404 75 82 80         [24] 1022 	mov	dpl,#0x80
      000407 12r00r00         [24] 1023 	lcall	_write_char
                                   1024 ;	../UI_Manager/ui.c:259: iconChange &= ~PLAY_CHANGE;
      00040A 53*0C DF         [24] 1025 	anl	_idlePage_iconChange_65536_55,#0xdf
      00040D 80 24            [24] 1026 	sjmp	00128$
      00040F                       1027 00127$:
                                   1028 ;	../UI_Manager/ui.c:263: if(tock == 0x80 + 55){ //blink if fogging
      00040F 74 B7            [12] 1029 	mov	a,#0xb7
      000411 B5*0B 0E         [24] 1030 	cjne	a,_idlePage_tock_65536_55,00124$
                                   1031 ;	../UI_Manager/ui.c:264: write_char(CHAR_PLAY, PLAY_ICON_INDEX, LINE_0);
      000414 75*00 0E         [24] 1032 	mov	_write_char_PARM_2,#0x0e
      000417 75*00 00         [24] 1033 	mov	_write_char_PARM_3,#0x00
      00041A 75 82 80         [24] 1034 	mov	dpl,#0x80
      00041D 12r00r00         [24] 1035 	lcall	_write_char
      000420 80 11            [24] 1036 	sjmp	00128$
      000422                       1037 00124$:
                                   1038 ;	../UI_Manager/ui.c:265: } else if(tock == 0x08 + 55){
      000422 74 3F            [12] 1039 	mov	a,#0x3f
      000424 B5*0B 0C         [24] 1040 	cjne	a,_idlePage_tock_65536_55,00128$
                                   1041 ;	../UI_Manager/ui.c:266: write_char(CHAR_NULL, PLAY_ICON_INDEX, LINE_0);
      000427 75*00 0E         [24] 1042 	mov	_write_char_PARM_2,#0x0e
      00042A 75*00 00         [24] 1043 	mov	_write_char_PARM_3,#0x00
      00042D 75 82 04         [24] 1044 	mov	dpl,#0x04
      000430 12r00r00         [24] 1045 	lcall	_write_char
      000433                       1046 00128$:
                                   1047 ;	../UI_Manager/ui.c:269: iconChange |= PAUSE_CHANGE;
      000433 AE*0C            [24] 1048 	mov	r6,_idlePage_iconChange_65536_55
      000435 7F 00            [12] 1049 	mov	r7,#0x00
      000437 43 06 10         [24] 1050 	orl	ar6,#0x10
      00043A 8E*0C            [24] 1051 	mov	_idlePage_iconChange_65536_55,r6
      00043C 80 2E            [24] 1052 	sjmp	00135$
      00043E                       1053 00134$:
                                   1054 ;	../UI_Manager/ui.c:271: if(playing == PLAY){
      00043E 74 01            [12] 1055 	mov	a,#0x01
      000440 B5*0D 09         [24] 1056 	cjne	a,_idlePage_playing_65536_55,00130$
                                   1057 ;	../UI_Manager/ui.c:272: iconChange |= PAUSE_CHANGE;
      000443 AE*0C            [24] 1058 	mov	r6,_idlePage_iconChange_65536_55
      000445 7F 00            [12] 1059 	mov	r7,#0x00
      000447 43 06 10         [24] 1060 	orl	ar6,#0x10
      00044A 8E*0C            [24] 1061 	mov	_idlePage_iconChange_65536_55,r6
      00044C                       1062 00130$:
                                   1063 ;	../UI_Manager/ui.c:275: if(iconChange & PAUSE_CHANGE){
      00044C E5*0C            [12] 1064 	mov	a,_idlePage_iconChange_65536_55
      00044E 30 E4 18         [24] 1065 	jnb	acc.4,00132$
                                   1066 ;	../UI_Manager/ui.c:276: write_char(CHAR_NULL, PLAY_ICON_INDEX, LINE_0);
      000451 75*00 0E         [24] 1067 	mov	_write_char_PARM_2,#0x0e
      000454 75*00 00         [24] 1068 	mov	_write_char_PARM_3,#0x00
      000457 75 82 04         [24] 1069 	mov	dpl,#0x04
      00045A 12r00r00         [24] 1070 	lcall	_write_char
                                   1071 ;	../UI_Manager/ui.c:277: iconChange |= PLAY_CHANGE;
      00045D AE*0C            [24] 1072 	mov	r6,_idlePage_iconChange_65536_55
      00045F 7F 00            [12] 1073 	mov	r7,#0x00
      000461 43 06 20         [24] 1074 	orl	ar6,#0x20
      000464 8E*0C            [24] 1075 	mov	_idlePage_iconChange_65536_55,r6
                                   1076 ;	../UI_Manager/ui.c:278: iconChange &= ~PAUSE_CHANGE;
      000466 53*0C EF         [24] 1077 	anl	_idlePage_iconChange_65536_55,#0xef
      000469                       1078 00132$:
                                   1079 ;	../UI_Manager/ui.c:281: playing = PAUSE;
      000469 75*0D 00         [24] 1080 	mov	_idlePage_playing_65536_55,#0x00
      00046C                       1081 00135$:
                                   1082 ;	../UI_Manager/ui.c:284: if(get_heated()){
      00046C E5*00            [12] 1083 	mov	a,_Heat_Flag
      00046E 30 E7 16         [24] 1084 	jnb	acc.7,00144$
                                   1085 ;	../UI_Manager/ui.c:285: if(iconChange & HEATED_CHANGE){
      000471 E5*0C            [12] 1086 	mov	a,_idlePage_iconChange_65536_55
      000473 30 E0 49         [24] 1087 	jnb	acc.0,00145$
                                   1088 ;	../UI_Manager/ui.c:286: write_char(CHAR_HEATED, HEAT_ICON_INDEX, LINE_0);
      000476 75*00 0F         [24] 1089 	mov	_write_char_PARM_2,#0x0f
      000479 75*00 00         [24] 1090 	mov	_write_char_PARM_3,#0x00
      00047C 75 82 60         [24] 1091 	mov	dpl,#0x60
      00047F 12r00r00         [24] 1092 	lcall	_write_char
                                   1093 ;	../UI_Manager/ui.c:287: iconChange &= ~HEATED_CHANGE;
      000482 53*0C FE         [24] 1094 	anl	_idlePage_iconChange_65536_55,#0xfe
      000485 80 38            [24] 1095 	sjmp	00145$
      000487                       1096 00144$:
                                   1097 ;	../UI_Manager/ui.c:290: if(!(tock)){
      000487 E5*0B            [12] 1098 	mov	a,_idlePage_tock_65536_55
      000489 70 2B            [24] 1099 	jnz	00142$
                                   1100 ;	../UI_Manager/ui.c:291: if(iconChange & HEATING_CHANGE){
      00048B E5*0C            [12] 1101 	mov	a,_idlePage_iconChange_65536_55
      00048D 30 E1 11         [24] 1102 	jnb	acc.1,00139$
                                   1103 ;	../UI_Manager/ui.c:292: write_char(CHAR_NULL, HEAT_ICON_INDEX, LINE_0);
      000490 75*00 0F         [24] 1104 	mov	_write_char_PARM_2,#0x0f
      000493 75*00 00         [24] 1105 	mov	_write_char_PARM_3,#0x00
      000496 75 82 04         [24] 1106 	mov	dpl,#0x04
      000499 12r00r00         [24] 1107 	lcall	_write_char
                                   1108 ;	../UI_Manager/ui.c:293: iconChange &= ~HEATING_CHANGE;
      00049C 53*0C FD         [24] 1109 	anl	_idlePage_iconChange_65536_55,#0xfd
      00049F 80 15            [24] 1110 	sjmp	00142$
      0004A1                       1111 00139$:
                                   1112 ;	../UI_Manager/ui.c:295: write_char(CHAR_HEATING, HEAT_ICON_INDEX, LINE_0);
      0004A1 75*00 0F         [24] 1113 	mov	_write_char_PARM_2,#0x0f
      0004A4 75*00 00         [24] 1114 	mov	_write_char_PARM_3,#0x00
      0004A7 75 82 A0         [24] 1115 	mov	dpl,#0xa0
      0004AA 12r00r00         [24] 1116 	lcall	_write_char
                                   1117 ;	../UI_Manager/ui.c:296: iconChange |= HEATING_CHANGE;
      0004AD AE*0C            [24] 1118 	mov	r6,_idlePage_iconChange_65536_55
      0004AF 7F 00            [12] 1119 	mov	r7,#0x00
      0004B1 43 06 02         [24] 1120 	orl	ar6,#0x02
      0004B4 8E*0C            [24] 1121 	mov	_idlePage_iconChange_65536_55,r6
      0004B6                       1122 00142$:
                                   1123 ;	../UI_Manager/ui.c:299: iconChange |= HEATED_CHANGE;
      0004B6 AE*0C            [24] 1124 	mov	r6,_idlePage_iconChange_65536_55
      0004B8 7F 00            [12] 1125 	mov	r7,#0x00
      0004BA 43 06 01         [24] 1126 	orl	ar6,#0x01
      0004BD 8E*0C            [24] 1127 	mov	_idlePage_iconChange_65536_55,r6
      0004BF                       1128 00145$:
                                   1129 ;	../UI_Manager/ui.c:304: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      0004BF 75 82 10         [24] 1130 	mov	dpl,#0x10
      0004C2 12r00r00         [24] 1131 	lcall	_get_runtime_data
      0004C5 E5 82            [12] 1132 	mov	a,dpl
      0004C7 60 03            [24] 1133 	jz	00339$
      0004C9 02r05r5A         [24] 1134 	ljmp	00163$
      0004CC                       1135 00339$:
                                   1136 ;	../UI_Manager/ui.c:307: if(has_dmx()){
      0004CC E5*00            [12] 1137 	mov	a,_Has_DMX
      0004CE 60 28            [24] 1138 	jz	00151$
                                   1139 ;	../UI_Manager/ui.c:308: if(changed & DMX_OK_CHANGE){
      0004D0 E5*02            [12] 1140 	mov	a,_changed
      0004D2 30 E7 49         [24] 1141 	jnb	acc.7,00152$
                                   1142 ;	../UI_Manager/ui.c:309: write_string("DMX Ok", sizeof("DMX Ok") - 1, 1, LINE_0, NOT_SELECTED);
      0004D5 75*00 06         [24] 1143 	mov	_write_string_PARM_2,#0x06
      0004D8 75*00 01         [24] 1144 	mov	_write_string_PARM_3,#0x01
      0004DB 75*00 00         [24] 1145 	mov	_write_string_PARM_4,#0x00
      0004DE 75*00 00         [24] 1146 	mov	_write_string_PARM_5,#0x00
      0004E1 90r00r83         [24] 1147 	mov	dptr,#___str_10
      0004E4 75 F0 80         [24] 1148 	mov	b,#0x80
      0004E7 12r00r00         [24] 1149 	lcall	_write_string
                                   1150 ;	../UI_Manager/ui.c:310: changed |= NO_DMX_CHANGE;
      0004EA AE*02            [24] 1151 	mov	r6,_changed
      0004EC 7F 00            [12] 1152 	mov	r7,#0x00
      0004EE 43 06 40         [24] 1153 	orl	ar6,#0x40
      0004F1 8E*02            [24] 1154 	mov	_changed,r6
                                   1155 ;	../UI_Manager/ui.c:311: changed &= ~DMX_OK_CHANGE;
      0004F3 53*02 7F         [24] 1156 	anl	_changed,#0x7f
      0004F6 80 26            [24] 1157 	sjmp	00152$
      0004F8                       1158 00151$:
                                   1159 ;	../UI_Manager/ui.c:314: if(changed & NO_DMX_CHANGE){
      0004F8 E5*02            [12] 1160 	mov	a,_changed
      0004FA 30 E6 21         [24] 1161 	jnb	acc.6,00152$
                                   1162 ;	../UI_Manager/ui.c:315: write_string("No DMX", sizeof("No DMX") - 1, 1, LINE_0, NOT_SELECTED);
      0004FD 75*00 06         [24] 1163 	mov	_write_string_PARM_2,#0x06
      000500 75*00 01         [24] 1164 	mov	_write_string_PARM_3,#0x01
      000503 75*00 00         [24] 1165 	mov	_write_string_PARM_4,#0x00
      000506 75*00 00         [24] 1166 	mov	_write_string_PARM_5,#0x00
      000509 90r00r8A         [24] 1167 	mov	dptr,#___str_11
      00050C 75 F0 80         [24] 1168 	mov	b,#0x80
      00050F 12r00r00         [24] 1169 	lcall	_write_string
                                   1170 ;	../UI_Manager/ui.c:316: changed |= DMX_OK_CHANGE;
      000512 AE*02            [24] 1171 	mov	r6,_changed
      000514 7F 00            [12] 1172 	mov	r7,#0x00
      000516 43 06 80         [24] 1173 	orl	ar6,#0x80
      000519 8E*02            [24] 1174 	mov	_changed,r6
                                   1175 ;	../UI_Manager/ui.c:317: changed &= ~NO_DMX_CHANGE;
      00051B 53*02 BF         [24] 1176 	anl	_changed,#0xbf
      00051E                       1177 00152$:
                                   1178 ;	../UI_Manager/ui.c:321: temp = get_timer();
                                   1179 ;	../UI_Manager/ui.c:324: if(timer != temp){
      00051E E5*00            [12] 1180 	mov	a,_Timer
      000520 FF               [12] 1181 	mov	r7,a
      000521 B5*08 01         [24] 1182 	cjne	a,_idlePage_timer_65536_55,00343$
      000524 22               [24] 1183 	ret
      000525                       1184 00343$:
                                   1185 ;	../UI_Manager/ui.c:326: write_number(temp, 7, LINE_0, NOT_SELECTED);
      000525 8F 05            [24] 1186 	mov	ar5,r7
      000527 7E 00            [12] 1187 	mov	r6,#0x00
      000529 75*00 07         [24] 1188 	mov	_write_number_PARM_2,#0x07
                                   1189 ;	1-genFromRTrack replaced	mov	_write_number_PARM_3,#0x00
      00052C 8E*00            [24] 1190 	mov	_write_number_PARM_3,r6
                                   1191 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      00052E 8E*00            [24] 1192 	mov	_write_number_PARM_4,r6
      000530 8D 82            [24] 1193 	mov	dpl,r5
      000532 8E 83            [24] 1194 	mov	dph,r6
      000534 C0 07            [24] 1195 	push	ar7
      000536 12r00r00         [24] 1196 	lcall	_write_number
      000539 D0 07            [24] 1197 	pop	ar7
                                   1198 ;	../UI_Manager/ui.c:327: write_char((get_interval_or_duration() == INTERVAL) ? CHAR_I : CHAR_D, 11, LINE_0);
      00053B E5*00            [12] 1199 	mov	a,_Interval_Or_Duration
      00053D 70 05            [24] 1200 	jnz	00167$
      00053F 7D 92            [12] 1201 	mov	r5,#0x92
      000541 FE               [12] 1202 	mov	r6,a
      000542 80 04            [24] 1203 	sjmp	00168$
      000544                       1204 00167$:
      000544 7D 22            [12] 1205 	mov	r5,#0x22
      000546 7E 00            [12] 1206 	mov	r6,#0x00
      000548                       1207 00168$:
      000548 8D 82            [24] 1208 	mov	dpl,r5
      00054A 75*00 0B         [24] 1209 	mov	_write_char_PARM_2,#0x0b
      00054D 75*00 00         [24] 1210 	mov	_write_char_PARM_3,#0x00
      000550 C0 07            [24] 1211 	push	ar7
      000552 12r00r00         [24] 1212 	lcall	_write_char
      000555 D0 07            [24] 1213 	pop	ar7
                                   1214 ;	../UI_Manager/ui.c:329: timer = temp;
      000557 8F*08            [24] 1215 	mov	_idlePage_timer_65536_55,r7
      000559 22               [24] 1216 	ret
      00055A                       1217 00163$:
                                   1218 ;	../UI_Manager/ui.c:334: temp = get_interval_or_duration();
                                   1219 ;	../UI_Manager/ui.c:336: if(intervalOrDuration != temp){
      00055A E5*00            [12] 1220 	mov	a,_Interval_Or_Duration
      00055C FF               [12] 1221 	mov	r7,a
      00055D B5*09 02         [24] 1222 	cjne	a,_idlePage_intervalOrDuration_65536_55,00345$
      000560 80 37            [24] 1223 	sjmp	00159$
      000562                       1224 00345$:
                                   1225 ;	../UI_Manager/ui.c:337: if(temp == INTERVAL){
      000562 EF               [12] 1226 	mov	a,r7
                                   1227 ;	../UI_Manager/ui.c:338: write_string("Interval", sizeof("Interval"), 0, LINE_1, NOT_SELECTED);
      000563 70 19            [24] 1228 	jnz	00156$
      000565 75*00 09         [24] 1229 	mov	_write_string_PARM_2,#0x09
      000568 F5*00            [12] 1230 	mov	_write_string_PARM_3,a
      00056A 75*00 01         [24] 1231 	mov	_write_string_PARM_4,#0x01
      00056D F5*00            [12] 1232 	mov	_write_string_PARM_5,a
      00056F 90r00r91         [24] 1233 	mov	dptr,#___str_12
      000572 75 F0 80         [24] 1234 	mov	b,#0x80
      000575 C0 07            [24] 1235 	push	ar7
      000577 12r00r00         [24] 1236 	lcall	_write_string
      00057A D0 07            [24] 1237 	pop	ar7
      00057C 80 19            [24] 1238 	sjmp	00157$
      00057E                       1239 00156$:
                                   1240 ;	../UI_Manager/ui.c:340: write_string("Duration", sizeof("Duration"), 0, LINE_1, NOT_SELECTED);
      00057E 75*00 09         [24] 1241 	mov	_write_string_PARM_2,#0x09
      000581 75*00 00         [24] 1242 	mov	_write_string_PARM_3,#0x00
      000584 75*00 01         [24] 1243 	mov	_write_string_PARM_4,#0x01
      000587 75*00 00         [24] 1244 	mov	_write_string_PARM_5,#0x00
      00058A 90r00r9A         [24] 1245 	mov	dptr,#___str_13
      00058D 75 F0 80         [24] 1246 	mov	b,#0x80
      000590 C0 07            [24] 1247 	push	ar7
      000592 12r00r00         [24] 1248 	lcall	_write_string
      000595 D0 07            [24] 1249 	pop	ar7
      000597                       1250 00157$:
                                   1251 ;	../UI_Manager/ui.c:343: intervalOrDuration = temp;
      000597 8F*09            [24] 1252 	mov	_idlePage_intervalOrDuration_65536_55,r7
      000599                       1253 00159$:
                                   1254 ;	../UI_Manager/ui.c:346: temp = get_timer();
                                   1255 ;	../UI_Manager/ui.c:348: if(timer != temp){
      000599 E5*00            [12] 1256 	mov	a,_Timer
      00059B FF               [12] 1257 	mov	r7,a
      00059C B5*08 01         [24] 1258 	cjne	a,_idlePage_timer_65536_55,00347$
      00059F 22               [24] 1259 	ret
      0005A0                       1260 00347$:
                                   1261 ;	../UI_Manager/ui.c:350: write_number(temp, NUMBER_END_INDEX, LINE_1, NOT_SELECTED);
      0005A0 8F 05            [24] 1262 	mov	ar5,r7
      0005A2 7E 00            [12] 1263 	mov	r6,#0x00
      0005A4 75*00 0C         [24] 1264 	mov	_write_number_PARM_2,#0x0c
      0005A7 75*00 01         [24] 1265 	mov	_write_number_PARM_3,#0x01
                                   1266 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      0005AA 8E*00            [24] 1267 	mov	_write_number_PARM_4,r6
      0005AC 8D 82            [24] 1268 	mov	dpl,r5
      0005AE 8E 83            [24] 1269 	mov	dph,r6
      0005B0 C0 07            [24] 1270 	push	ar7
      0005B2 12r00r00         [24] 1271 	lcall	_write_number
      0005B5 D0 07            [24] 1272 	pop	ar7
                                   1273 ;	../UI_Manager/ui.c:352: timer = temp;
      0005B7 8F*08            [24] 1274 	mov	_idlePage_timer_65536_55,r7
                                   1275 ;	../UI_Manager/ui.c:356: }
      0005B9 22               [24] 1276 	ret
                                   1277 ;------------------------------------------------------------
                                   1278 ;Allocation info for local variables in function 'fogLevelPage'
                                   1279 ;------------------------------------------------------------
                                   1280 ;action                    Allocated to registers r7 
                                   1281 ;------------------------------------------------------------
                                   1282 ;	../UI_Manager/ui.c:358: void fogLevelPage(uint8_t action){
                                   1283 ;	-----------------------------------------
                                   1284 ;	 function fogLevelPage
                                   1285 ;	-----------------------------------------
      0005BA                       1286 _fogLevelPage:
      0005BA AF 82            [24] 1287 	mov	r7,dpl
                                   1288 ;	../UI_Manager/ui.c:360: if(Changed){
      0005BC E5*01            [12] 1289 	mov	a,_Changed
      0005BE 60 25            [24] 1290 	jz	00102$
                                   1291 ;	../UI_Manager/ui.c:361: Changed = 0x00;
      0005C0 75*01 00         [24] 1292 	mov	_Changed,#0x00
                                   1293 ;	../UI_Manager/ui.c:362: changed = 0xFF;
      0005C3 75*02 FF         [24] 1294 	mov	_changed,#0xff
                                   1295 ;	../UI_Manager/ui.c:364: exe_command(CLEAR_DISPLAY);
      0005C6 90 80 00         [24] 1296 	mov	dptr,#0x8000
      0005C9 C0 07            [24] 1297 	push	ar7
      0005CB 12r00r00         [24] 1298 	lcall	_exe_command
                                   1299 ;	../UI_Manager/ui.c:366: write_string("Fog Level", sizeof("Fog Level"), 3, LINE_0, NOT_SELECTED);
      0005CE 75*00 0A         [24] 1300 	mov	_write_string_PARM_2,#0x0a
      0005D1 75*00 03         [24] 1301 	mov	_write_string_PARM_3,#0x03
      0005D4 75*00 00         [24] 1302 	mov	_write_string_PARM_4,#0x00
      0005D7 75*00 00         [24] 1303 	mov	_write_string_PARM_5,#0x00
      0005DA 90r00rA3         [24] 1304 	mov	dptr,#___str_14
      0005DD 75 F0 80         [24] 1305 	mov	b,#0x80
      0005E0 12r00r00         [24] 1306 	lcall	_write_string
      0005E3 D0 07            [24] 1307 	pop	ar7
      0005E5                       1308 00102$:
                                   1309 ;	../UI_Manager/ui.c:370: if(changed){
      0005E5 E5*02            [12] 1310 	mov	a,_changed
      0005E7 70 03            [24] 1311 	jnz	00149$
      0005E9 02r06rBF         [24] 1312 	ljmp	00108$
      0005EC                       1313 00149$:
                                   1314 ;	../UI_Manager/ui.c:371: changed = 0x00;
      0005EC 75*02 00         [24] 1315 	mov	_changed,#0x00
                                   1316 ;	../UI_Manager/ui.c:373: switch (get_runtime_data(FOG_POWER_INDEX))
      0005EF 75 82 00         [24] 1317 	mov	dpl,#0x00
      0005F2 C0 07            [24] 1318 	push	ar7
      0005F4 12r00r00         [24] 1319 	lcall	_get_runtime_data
      0005F7 AE 82            [24] 1320 	mov	r6,dpl
      0005F9 D0 07            [24] 1321 	pop	ar7
      0005FB BE 02 02         [24] 1322 	cjne	r6,#0x02,00150$
      0005FE 80 37            [24] 1323 	sjmp	00104$
      000600                       1324 00150$:
      000600 BE 04 73         [24] 1325 	cjne	r6,#0x04,00105$
                                   1326 ;	../UI_Manager/ui.c:376: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_LOW), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000603 75 82 02         [24] 1327 	mov	dpl,#0x02
      000606 C0 07            [24] 1328 	push	ar7
      000608 12r0Fr2E         [24] 1329 	lcall	_getString
      00060B AC 82            [24] 1330 	mov	r4,dpl
      00060D AD 83            [24] 1331 	mov	r5,dph
      00060F AE F0            [24] 1332 	mov	r6,b
      000611 75*00 10         [24] 1333 	mov	_write_string_PARM_2,#0x10
      000614 75*00 03         [24] 1334 	mov	_write_string_PARM_3,#0x03
      000617 75*00 01         [24] 1335 	mov	_write_string_PARM_4,#0x01
      00061A 75*00 00         [24] 1336 	mov	_write_string_PARM_5,#0x00
      00061D 8C 82            [24] 1337 	mov	dpl,r4
      00061F 8D 83            [24] 1338 	mov	dph,r5
      000621 8E F0            [24] 1339 	mov	b,r6
      000623 12r00r00         [24] 1340 	lcall	_write_string
                                   1341 ;	../UI_Manager/ui.c:377: write_char(CHAR_LVL_1, 12, LINE_1);
      000626 75*00 0C         [24] 1342 	mov	_write_char_PARM_2,#0x0c
      000629 75*00 01         [24] 1343 	mov	_write_char_PARM_3,#0x01
      00062C 75 82 40         [24] 1344 	mov	dpl,#0x40
      00062F 12r00r00         [24] 1345 	lcall	_write_char
      000632 D0 07            [24] 1346 	pop	ar7
                                   1347 ;	../UI_Manager/ui.c:378: break;
      000634 02r06rBF         [24] 1348 	ljmp	00108$
                                   1349 ;	../UI_Manager/ui.c:379: case FOG_MED:
      000637                       1350 00104$:
                                   1351 ;	../UI_Manager/ui.c:380: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_MEDIUM), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000637 75 82 01         [24] 1352 	mov	dpl,#0x01
      00063A C0 07            [24] 1353 	push	ar7
      00063C 12r0Fr2E         [24] 1354 	lcall	_getString
      00063F AC 82            [24] 1355 	mov	r4,dpl
      000641 AD 83            [24] 1356 	mov	r5,dph
      000643 AE F0            [24] 1357 	mov	r6,b
      000645 75*00 10         [24] 1358 	mov	_write_string_PARM_2,#0x10
      000648 75*00 03         [24] 1359 	mov	_write_string_PARM_3,#0x03
      00064B 75*00 01         [24] 1360 	mov	_write_string_PARM_4,#0x01
      00064E 75*00 00         [24] 1361 	mov	_write_string_PARM_5,#0x00
      000651 8C 82            [24] 1362 	mov	dpl,r4
      000653 8D 83            [24] 1363 	mov	dph,r5
      000655 8E F0            [24] 1364 	mov	b,r6
      000657 12r00r00         [24] 1365 	lcall	_write_string
                                   1366 ;	../UI_Manager/ui.c:381: write_char(CHAR_LVL_1, 12, LINE_1);
      00065A 75*00 0C         [24] 1367 	mov	_write_char_PARM_2,#0x0c
      00065D 75*00 01         [24] 1368 	mov	_write_char_PARM_3,#0x01
      000660 75 82 40         [24] 1369 	mov	dpl,#0x40
      000663 12r00r00         [24] 1370 	lcall	_write_char
                                   1371 ;	../UI_Manager/ui.c:382: write_char(CHAR_LVL_2, 13, LINE_1);
      000666 75*00 0D         [24] 1372 	mov	_write_char_PARM_2,#0x0d
      000669 75*00 01         [24] 1373 	mov	_write_char_PARM_3,#0x01
      00066C 75 82 C0         [24] 1374 	mov	dpl,#0xc0
      00066F 12r00r00         [24] 1375 	lcall	_write_char
      000672 D0 07            [24] 1376 	pop	ar7
                                   1377 ;	../UI_Manager/ui.c:383: break;
                                   1378 ;	../UI_Manager/ui.c:384: default:
      000674 80 49            [24] 1379 	sjmp	00108$
      000676                       1380 00105$:
                                   1381 ;	../UI_Manager/ui.c:385: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_HIGH), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000676 75 82 00         [24] 1382 	mov	dpl,#0x00
      000679 C0 07            [24] 1383 	push	ar7
      00067B 12r0Fr2E         [24] 1384 	lcall	_getString
      00067E AC 82            [24] 1385 	mov	r4,dpl
      000680 AD 83            [24] 1386 	mov	r5,dph
      000682 AE F0            [24] 1387 	mov	r6,b
      000684 75*00 10         [24] 1388 	mov	_write_string_PARM_2,#0x10
      000687 75*00 03         [24] 1389 	mov	_write_string_PARM_3,#0x03
      00068A 75*00 01         [24] 1390 	mov	_write_string_PARM_4,#0x01
      00068D 75*00 00         [24] 1391 	mov	_write_string_PARM_5,#0x00
      000690 8C 82            [24] 1392 	mov	dpl,r4
      000692 8D 83            [24] 1393 	mov	dph,r5
      000694 8E F0            [24] 1394 	mov	b,r6
      000696 12r00r00         [24] 1395 	lcall	_write_string
                                   1396 ;	../UI_Manager/ui.c:386: write_char(CHAR_LVL_1, 12, LINE_1);
      000699 75*00 0C         [24] 1397 	mov	_write_char_PARM_2,#0x0c
      00069C 75*00 01         [24] 1398 	mov	_write_char_PARM_3,#0x01
      00069F 75 82 40         [24] 1399 	mov	dpl,#0x40
      0006A2 12r00r00         [24] 1400 	lcall	_write_char
                                   1401 ;	../UI_Manager/ui.c:387: write_char(CHAR_LVL_2, 13, LINE_1);
      0006A5 75*00 0D         [24] 1402 	mov	_write_char_PARM_2,#0x0d
      0006A8 75*00 01         [24] 1403 	mov	_write_char_PARM_3,#0x01
      0006AB 75 82 C0         [24] 1404 	mov	dpl,#0xc0
      0006AE 12r00r00         [24] 1405 	lcall	_write_char
                                   1406 ;	../UI_Manager/ui.c:388: write_char(CHAR_LVL_3, 14, LINE_1);
      0006B1 75*00 0E         [24] 1407 	mov	_write_char_PARM_2,#0x0e
      0006B4 75*00 01         [24] 1408 	mov	_write_char_PARM_3,#0x01
      0006B7 75 82 20         [24] 1409 	mov	dpl,#0x20
      0006BA 12r00r00         [24] 1410 	lcall	_write_char
      0006BD D0 07            [24] 1411 	pop	ar7
                                   1412 ;	../UI_Manager/ui.c:390: }
      0006BF                       1413 00108$:
                                   1414 ;	../UI_Manager/ui.c:394: switch (action)
      0006BF BF 02 02         [24] 1415 	cjne	r7,#0x02,00153$
      0006C2 80 2F            [24] 1416 	sjmp	00111$
      0006C4                       1417 00153$:
      0006C4 BF 03 02         [24] 1418 	cjne	r7,#0x03,00154$
      0006C7 80 0A            [24] 1419 	sjmp	00109$
      0006C9                       1420 00154$:
      0006C9 BF 0A 02         [24] 1421 	cjne	r7,#0x0a,00155$
      0006CC 80 15            [24] 1422 	sjmp	00110$
      0006CE                       1423 00155$:
                                   1424 ;	../UI_Manager/ui.c:396: case BUTTON_UP:
      0006CE BF 0C 34         [24] 1425 	cjne	r7,#0x0c,00114$
      0006D1 80 29            [24] 1426 	sjmp	00112$
      0006D3                       1427 00109$:
                                   1428 ;	../UI_Manager/ui.c:397: set_runtime_data(FOG_POWER_INDEX, INC, NULL);
      0006D3 75*00 01         [24] 1429 	mov	_set_runtime_data_PARM_2,#0x01
      0006D6 75*00 00         [24] 1430 	mov	_set_runtime_data_PARM_3,#0x00
      0006D9 75 82 00         [24] 1431 	mov	dpl,#0x00
      0006DC 12r00r00         [24] 1432 	lcall	_set_runtime_data
                                   1433 ;	../UI_Manager/ui.c:398: changed = 0xFF;
      0006DF 75*02 FF         [24] 1434 	mov	_changed,#0xff
                                   1435 ;	../UI_Manager/ui.c:399: break;
                                   1436 ;	../UI_Manager/ui.c:400: case BUTTON_DOWN:
      0006E2 22               [24] 1437 	ret
      0006E3                       1438 00110$:
                                   1439 ;	../UI_Manager/ui.c:401: set_runtime_data(FOG_POWER_INDEX, DEC, NULL);
      0006E3 75*00 02         [24] 1440 	mov	_set_runtime_data_PARM_2,#0x02
      0006E6 75*00 00         [24] 1441 	mov	_set_runtime_data_PARM_3,#0x00
      0006E9 75 82 00         [24] 1442 	mov	dpl,#0x00
      0006EC 12r00r00         [24] 1443 	lcall	_set_runtime_data
                                   1444 ;	../UI_Manager/ui.c:402: changed = 0xFF;  
      0006EF 75*02 FF         [24] 1445 	mov	_changed,#0xff
                                   1446 ;	../UI_Manager/ui.c:403: break;
                                   1447 ;	../UI_Manager/ui.c:404: case BUTTON_FUNCTION:
      0006F2 22               [24] 1448 	ret
      0006F3                       1449 00111$:
                                   1450 ;	../UI_Manager/ui.c:405: set_ui_state(INC, NULL);
      0006F3 75*0F 00         [24] 1451 	mov	_set_ui_state_PARM_2,#0x00
      0006F6 75 82 01         [24] 1452 	mov	dpl,#0x01
                                   1453 ;	../UI_Manager/ui.c:406: break;
                                   1454 ;	../UI_Manager/ui.c:407: case BUTTON_FUN_UP:
      0006F9 02r0Er8C         [24] 1455 	ljmp	_set_ui_state
      0006FC                       1456 00112$:
                                   1457 ;	../UI_Manager/ui.c:408: set_ui_state(DEC, NULL);
      0006FC 75*0F 00         [24] 1458 	mov	_set_ui_state_PARM_2,#0x00
      0006FF 75 82 02         [24] 1459 	mov	dpl,#0x02
                                   1460 ;	../UI_Manager/ui.c:410: }
                                   1461 ;	../UI_Manager/ui.c:411: }
      000702 02r0Er8C         [24] 1462 	ljmp	_set_ui_state
      000705                       1463 00114$:
      000705 22               [24] 1464 	ret
                                   1465 ;------------------------------------------------------------
                                   1466 ;Allocation info for local variables in function 'fogIntervalPage'
                                   1467 ;------------------------------------------------------------
                                   1468 ;action                    Allocated to registers r7 
                                   1469 ;------------------------------------------------------------
                                   1470 ;	../UI_Manager/ui.c:413: void fogIntervalPage(uint8_t action){
                                   1471 ;	-----------------------------------------
                                   1472 ;	 function fogIntervalPage
                                   1473 ;	-----------------------------------------
      000706                       1474 _fogIntervalPage:
      000706 AF 82            [24] 1475 	mov	r7,dpl
                                   1476 ;	../UI_Manager/ui.c:415: if(Changed){
      000708 E5*01            [12] 1477 	mov	a,_Changed
      00070A 60 3A            [24] 1478 	jz	00102$
                                   1479 ;	../UI_Manager/ui.c:416: Changed = 0x00;
      00070C 75*01 00         [24] 1480 	mov	_Changed,#0x00
                                   1481 ;	../UI_Manager/ui.c:417: changed = 0xFF;
      00070F 75*02 FF         [24] 1482 	mov	_changed,#0xff
                                   1483 ;	../UI_Manager/ui.c:419: exe_command(CLEAR_DISPLAY);
      000712 90 80 00         [24] 1484 	mov	dptr,#0x8000
      000715 C0 07            [24] 1485 	push	ar7
      000717 12r00r00         [24] 1486 	lcall	_exe_command
                                   1487 ;	../UI_Manager/ui.c:421: write_string("Fog Interval", sizeof("Fog Interval"), 2, LINE_0, NOT_SELECTED);
      00071A 75*00 0D         [24] 1488 	mov	_write_string_PARM_2,#0x0d
      00071D 75*00 02         [24] 1489 	mov	_write_string_PARM_3,#0x02
      000720 75*00 00         [24] 1490 	mov	_write_string_PARM_4,#0x00
      000723 75*00 00         [24] 1491 	mov	_write_string_PARM_5,#0x00
      000726 90r00rAD         [24] 1492 	mov	dptr,#___str_15
      000729 75 F0 80         [24] 1493 	mov	b,#0x80
      00072C 12r00r00         [24] 1494 	lcall	_write_string
                                   1495 ;	../UI_Manager/ui.c:422: write_string("Seconds", sizeof("Seconds"), 8, LINE_1, NOT_SELECTED);
      00072F 75*00 08         [24] 1496 	mov	_write_string_PARM_2,#0x08
      000732 75*00 08         [24] 1497 	mov	_write_string_PARM_3,#0x08
      000735 75*00 01         [24] 1498 	mov	_write_string_PARM_4,#0x01
      000738 75*00 00         [24] 1499 	mov	_write_string_PARM_5,#0x00
      00073B 90r00rBA         [24] 1500 	mov	dptr,#___str_16
      00073E 75 F0 80         [24] 1501 	mov	b,#0x80
      000741 12r00r00         [24] 1502 	lcall	_write_string
      000744 D0 07            [24] 1503 	pop	ar7
      000746                       1504 00102$:
                                   1505 ;	../UI_Manager/ui.c:426: if(changed){
      000746 E5*02            [12] 1506 	mov	a,_changed
      000748 60 20            [24] 1507 	jz	00104$
                                   1508 ;	../UI_Manager/ui.c:427: changed = 0x00;
      00074A 75*02 00         [24] 1509 	mov	_changed,#0x00
                                   1510 ;	../UI_Manager/ui.c:429: write_number(get_runtime_data(FOG_INTERVAL_INDEX), 4, LINE_1, NOT_SELECTED);
      00074D 75 82 02         [24] 1511 	mov	dpl,#0x02
      000750 C0 07            [24] 1512 	push	ar7
      000752 12r00r00         [24] 1513 	lcall	_get_runtime_data
      000755 AE 82            [24] 1514 	mov	r6,dpl
      000757 7D 00            [12] 1515 	mov	r5,#0x00
      000759 75*00 04         [24] 1516 	mov	_write_number_PARM_2,#0x04
      00075C 75*00 01         [24] 1517 	mov	_write_number_PARM_3,#0x01
                                   1518 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      00075F 8D*00            [24] 1519 	mov	_write_number_PARM_4,r5
      000761 8E 82            [24] 1520 	mov	dpl,r6
      000763 8D 83            [24] 1521 	mov	dph,r5
      000765 12r00r00         [24] 1522 	lcall	_write_number
      000768 D0 07            [24] 1523 	pop	ar7
      00076A                       1524 00104$:
                                   1525 ;	../UI_Manager/ui.c:433: switch (action)
      00076A BF 02 02         [24] 1526 	cjne	r7,#0x02,00148$
      00076D 80 39            [24] 1527 	sjmp	00109$
      00076F                       1528 00148$:
      00076F BF 03 02         [24] 1529 	cjne	r7,#0x03,00149$
      000772 80 14            [24] 1530 	sjmp	00106$
      000774                       1531 00149$:
      000774 BF 0A 02         [24] 1532 	cjne	r7,#0x0a,00150$
      000777 80 1F            [24] 1533 	sjmp	00108$
      000779                       1534 00150$:
      000779 BF 0C 02         [24] 1535 	cjne	r7,#0x0c,00151$
      00077C 80 33            [24] 1536 	sjmp	00110$
      00077E                       1537 00151$:
      00077E BF 1F 02         [24] 1538 	cjne	r7,#0x1f,00152$
      000781 80 05            [24] 1539 	sjmp	00106$
      000783                       1540 00152$:
                                   1541 ;	../UI_Manager/ui.c:436: case BUTTON_UP:
      000783 BF 65 34         [24] 1542 	cjne	r7,#0x65,00112$
      000786 80 10            [24] 1543 	sjmp	00108$
      000788                       1544 00106$:
                                   1545 ;	../UI_Manager/ui.c:437: set_runtime_data(FOG_INTERVAL_INDEX, INC, NULL);
      000788 75*00 01         [24] 1546 	mov	_set_runtime_data_PARM_2,#0x01
      00078B 75*00 00         [24] 1547 	mov	_set_runtime_data_PARM_3,#0x00
      00078E 75 82 02         [24] 1548 	mov	dpl,#0x02
      000791 12r00r00         [24] 1549 	lcall	_set_runtime_data
                                   1550 ;	../UI_Manager/ui.c:438: changed = 0xFF;
      000794 75*02 FF         [24] 1551 	mov	_changed,#0xff
                                   1552 ;	../UI_Manager/ui.c:439: break;
                                   1553 ;	../UI_Manager/ui.c:441: case BUTTON_DOWN:
      000797 22               [24] 1554 	ret
      000798                       1555 00108$:
                                   1556 ;	../UI_Manager/ui.c:442: set_runtime_data(FOG_INTERVAL_INDEX, DEC, NULL);
      000798 75*00 02         [24] 1557 	mov	_set_runtime_data_PARM_2,#0x02
      00079B 75*00 00         [24] 1558 	mov	_set_runtime_data_PARM_3,#0x00
      00079E 75 82 02         [24] 1559 	mov	dpl,#0x02
      0007A1 12r00r00         [24] 1560 	lcall	_set_runtime_data
                                   1561 ;	../UI_Manager/ui.c:443: changed = 0xFF;  
      0007A4 75*02 FF         [24] 1562 	mov	_changed,#0xff
                                   1563 ;	../UI_Manager/ui.c:444: break;
                                   1564 ;	../UI_Manager/ui.c:445: case BUTTON_FUNCTION:
      0007A7 22               [24] 1565 	ret
      0007A8                       1566 00109$:
                                   1567 ;	../UI_Manager/ui.c:446: set_ui_state(INC, NULL);
      0007A8 75*0F 00         [24] 1568 	mov	_set_ui_state_PARM_2,#0x00
      0007AB 75 82 01         [24] 1569 	mov	dpl,#0x01
                                   1570 ;	../UI_Manager/ui.c:447: break;
                                   1571 ;	../UI_Manager/ui.c:448: case BUTTON_FUN_UP:
      0007AE 02r0Er8C         [24] 1572 	ljmp	_set_ui_state
      0007B1                       1573 00110$:
                                   1574 ;	../UI_Manager/ui.c:449: set_ui_state(DEC, NULL);
      0007B1 75*0F 00         [24] 1575 	mov	_set_ui_state_PARM_2,#0x00
      0007B4 75 82 02         [24] 1576 	mov	dpl,#0x02
                                   1577 ;	../UI_Manager/ui.c:451: }
                                   1578 ;	../UI_Manager/ui.c:452: }
      0007B7 02r0Er8C         [24] 1579 	ljmp	_set_ui_state
      0007BA                       1580 00112$:
      0007BA 22               [24] 1581 	ret
                                   1582 ;------------------------------------------------------------
                                   1583 ;Allocation info for local variables in function 'fogDurationPage'
                                   1584 ;------------------------------------------------------------
                                   1585 ;action                    Allocated to registers r7 
                                   1586 ;------------------------------------------------------------
                                   1587 ;	../UI_Manager/ui.c:454: void fogDurationPage(uint8_t action){
                                   1588 ;	-----------------------------------------
                                   1589 ;	 function fogDurationPage
                                   1590 ;	-----------------------------------------
      0007BB                       1591 _fogDurationPage:
      0007BB AF 82            [24] 1592 	mov	r7,dpl
                                   1593 ;	../UI_Manager/ui.c:456: if(Changed){
      0007BD E5*01            [12] 1594 	mov	a,_Changed
      0007BF 60 3A            [24] 1595 	jz	00102$
                                   1596 ;	../UI_Manager/ui.c:457: Changed = 0x00;
      0007C1 75*01 00         [24] 1597 	mov	_Changed,#0x00
                                   1598 ;	../UI_Manager/ui.c:458: changed = 0xFF;
      0007C4 75*02 FF         [24] 1599 	mov	_changed,#0xff
                                   1600 ;	../UI_Manager/ui.c:460: exe_command(CLEAR_DISPLAY);
      0007C7 90 80 00         [24] 1601 	mov	dptr,#0x8000
      0007CA C0 07            [24] 1602 	push	ar7
      0007CC 12r00r00         [24] 1603 	lcall	_exe_command
                                   1604 ;	../UI_Manager/ui.c:462: write_string("Fog Duration", sizeof("Fog Duration"), 2, LINE_0, NOT_SELECTED);
      0007CF 75*00 0D         [24] 1605 	mov	_write_string_PARM_2,#0x0d
      0007D2 75*00 02         [24] 1606 	mov	_write_string_PARM_3,#0x02
      0007D5 75*00 00         [24] 1607 	mov	_write_string_PARM_4,#0x00
      0007D8 75*00 00         [24] 1608 	mov	_write_string_PARM_5,#0x00
      0007DB 90r00rC2         [24] 1609 	mov	dptr,#___str_17
      0007DE 75 F0 80         [24] 1610 	mov	b,#0x80
      0007E1 12r00r00         [24] 1611 	lcall	_write_string
                                   1612 ;	../UI_Manager/ui.c:463: write_string("Seconds", sizeof("Seconds"), 8, LINE_1, NOT_SELECTED);
      0007E4 75*00 08         [24] 1613 	mov	_write_string_PARM_2,#0x08
      0007E7 75*00 08         [24] 1614 	mov	_write_string_PARM_3,#0x08
      0007EA 75*00 01         [24] 1615 	mov	_write_string_PARM_4,#0x01
      0007ED 75*00 00         [24] 1616 	mov	_write_string_PARM_5,#0x00
      0007F0 90r00rBA         [24] 1617 	mov	dptr,#___str_16
      0007F3 75 F0 80         [24] 1618 	mov	b,#0x80
      0007F6 12r00r00         [24] 1619 	lcall	_write_string
      0007F9 D0 07            [24] 1620 	pop	ar7
      0007FB                       1621 00102$:
                                   1622 ;	../UI_Manager/ui.c:467: if(changed){
      0007FB E5*02            [12] 1623 	mov	a,_changed
      0007FD 60 20            [24] 1624 	jz	00104$
                                   1625 ;	../UI_Manager/ui.c:468: changed = 0x00;
      0007FF 75*02 00         [24] 1626 	mov	_changed,#0x00
                                   1627 ;	../UI_Manager/ui.c:470: write_number(get_runtime_data(FOG_DURATION_INDEX), 4, LINE_1, NOT_SELECTED);
      000802 75 82 01         [24] 1628 	mov	dpl,#0x01
      000805 C0 07            [24] 1629 	push	ar7
      000807 12r00r00         [24] 1630 	lcall	_get_runtime_data
      00080A AE 82            [24] 1631 	mov	r6,dpl
      00080C 7D 00            [12] 1632 	mov	r5,#0x00
      00080E 75*00 04         [24] 1633 	mov	_write_number_PARM_2,#0x04
      000811 75*00 01         [24] 1634 	mov	_write_number_PARM_3,#0x01
                                   1635 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000814 8D*00            [24] 1636 	mov	_write_number_PARM_4,r5
      000816 8E 82            [24] 1637 	mov	dpl,r6
      000818 8D 83            [24] 1638 	mov	dph,r5
      00081A 12r00r00         [24] 1639 	lcall	_write_number
      00081D D0 07            [24] 1640 	pop	ar7
      00081F                       1641 00104$:
                                   1642 ;	../UI_Manager/ui.c:474: switch (action)
      00081F BF 02 02         [24] 1643 	cjne	r7,#0x02,00148$
      000822 80 39            [24] 1644 	sjmp	00109$
      000824                       1645 00148$:
      000824 BF 03 02         [24] 1646 	cjne	r7,#0x03,00149$
      000827 80 14            [24] 1647 	sjmp	00106$
      000829                       1648 00149$:
      000829 BF 0A 02         [24] 1649 	cjne	r7,#0x0a,00150$
      00082C 80 1F            [24] 1650 	sjmp	00108$
      00082E                       1651 00150$:
      00082E BF 0C 02         [24] 1652 	cjne	r7,#0x0c,00151$
      000831 80 33            [24] 1653 	sjmp	00110$
      000833                       1654 00151$:
      000833 BF 1F 02         [24] 1655 	cjne	r7,#0x1f,00152$
      000836 80 05            [24] 1656 	sjmp	00106$
      000838                       1657 00152$:
                                   1658 ;	../UI_Manager/ui.c:477: case BUTTON_UP:
      000838 BF 65 34         [24] 1659 	cjne	r7,#0x65,00112$
      00083B 80 10            [24] 1660 	sjmp	00108$
      00083D                       1661 00106$:
                                   1662 ;	../UI_Manager/ui.c:478: set_runtime_data(FOG_DURATION_INDEX, INC, NULL);
      00083D 75*00 01         [24] 1663 	mov	_set_runtime_data_PARM_2,#0x01
      000840 75*00 00         [24] 1664 	mov	_set_runtime_data_PARM_3,#0x00
      000843 75 82 01         [24] 1665 	mov	dpl,#0x01
      000846 12r00r00         [24] 1666 	lcall	_set_runtime_data
                                   1667 ;	../UI_Manager/ui.c:479: changed = 0xFF;
      000849 75*02 FF         [24] 1668 	mov	_changed,#0xff
                                   1669 ;	../UI_Manager/ui.c:480: break;
                                   1670 ;	../UI_Manager/ui.c:482: case BUTTON_DOWN:
      00084C 22               [24] 1671 	ret
      00084D                       1672 00108$:
                                   1673 ;	../UI_Manager/ui.c:483: set_runtime_data(FOG_DURATION_INDEX, DEC, NULL);
      00084D 75*00 02         [24] 1674 	mov	_set_runtime_data_PARM_2,#0x02
      000850 75*00 00         [24] 1675 	mov	_set_runtime_data_PARM_3,#0x00
      000853 75 82 01         [24] 1676 	mov	dpl,#0x01
      000856 12r00r00         [24] 1677 	lcall	_set_runtime_data
                                   1678 ;	../UI_Manager/ui.c:484: changed = 0xFF;  
      000859 75*02 FF         [24] 1679 	mov	_changed,#0xff
                                   1680 ;	../UI_Manager/ui.c:485: break;
                                   1681 ;	../UI_Manager/ui.c:486: case BUTTON_FUNCTION:
      00085C 22               [24] 1682 	ret
      00085D                       1683 00109$:
                                   1684 ;	../UI_Manager/ui.c:487: set_ui_state(INC, NULL);
      00085D 75*0F 00         [24] 1685 	mov	_set_ui_state_PARM_2,#0x00
      000860 75 82 01         [24] 1686 	mov	dpl,#0x01
                                   1687 ;	../UI_Manager/ui.c:488: break;
                                   1688 ;	../UI_Manager/ui.c:489: case BUTTON_FUN_UP:
      000863 02r0Er8C         [24] 1689 	ljmp	_set_ui_state
      000866                       1690 00110$:
                                   1691 ;	../UI_Manager/ui.c:490: set_ui_state(DEC, NULL);
      000866 75*0F 00         [24] 1692 	mov	_set_ui_state_PARM_2,#0x00
      000869 75 82 02         [24] 1693 	mov	dpl,#0x02
                                   1694 ;	../UI_Manager/ui.c:492: }
                                   1695 ;	../UI_Manager/ui.c:493: }
      00086C 02r0Er8C         [24] 1696 	ljmp	_set_ui_state
      00086F                       1697 00112$:
      00086F 22               [24] 1698 	ret
                                   1699 ;------------------------------------------------------------
                                   1700 ;Allocation info for local variables in function 'macroPage'
                                   1701 ;------------------------------------------------------------
                                   1702 ;action                    Allocated to registers r7 
                                   1703 ;------------------------------------------------------------
                                   1704 ;	../UI_Manager/ui.c:495: void macroPage(uint8_t action){
                                   1705 ;	-----------------------------------------
                                   1706 ;	 function macroPage
                                   1707 ;	-----------------------------------------
      000870                       1708 _macroPage:
      000870 AF 82            [24] 1709 	mov	r7,dpl
                                   1710 ;	../UI_Manager/ui.c:497: if(Changed){
      000872 E5*01            [12] 1711 	mov	a,_Changed
      000874 60 25            [24] 1712 	jz	00102$
                                   1713 ;	../UI_Manager/ui.c:498: Changed = 0x00;
      000876 75*01 00         [24] 1714 	mov	_Changed,#0x00
                                   1715 ;	../UI_Manager/ui.c:499: changed = 0xFF;
      000879 75*02 FF         [24] 1716 	mov	_changed,#0xff
                                   1717 ;	../UI_Manager/ui.c:501: exe_command(CLEAR_DISPLAY);
      00087C 90 80 00         [24] 1718 	mov	dptr,#0x8000
      00087F C0 07            [24] 1719 	push	ar7
      000881 12r00r00         [24] 1720 	lcall	_exe_command
                                   1721 ;	../UI_Manager/ui.c:503: write_string("Macros", sizeof("Macros"), 6, LINE_0, NOT_SELECTED);
      000884 75*00 07         [24] 1722 	mov	_write_string_PARM_2,#0x07
      000887 75*00 06         [24] 1723 	mov	_write_string_PARM_3,#0x06
      00088A 75*00 00         [24] 1724 	mov	_write_string_PARM_4,#0x00
      00088D 75*00 00         [24] 1725 	mov	_write_string_PARM_5,#0x00
      000890 90r00rCF         [24] 1726 	mov	dptr,#___str_18
      000893 75 F0 80         [24] 1727 	mov	b,#0x80
      000896 12r00r00         [24] 1728 	lcall	_write_string
      000899 D0 07            [24] 1729 	pop	ar7
      00089B                       1730 00102$:
                                   1731 ;	../UI_Manager/ui.c:507: if(changed){
      00089B E5*02            [12] 1732 	mov	a,_changed
      00089D 60 32            [24] 1733 	jz	00104$
                                   1734 ;	../UI_Manager/ui.c:508: changed = 0x00;
      00089F 75*02 00         [24] 1735 	mov	_changed,#0x00
                                   1736 ;	../UI_Manager/ui.c:510: write_string(getString(get_runtime_data(MACRO_INDEX) + MACRO_STRING_OFFSET), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      0008A2 75 82 03         [24] 1737 	mov	dpl,#0x03
      0008A5 C0 07            [24] 1738 	push	ar7
      0008A7 12r00r00         [24] 1739 	lcall	_get_runtime_data
      0008AA AE 82            [24] 1740 	mov	r6,dpl
      0008AC 74 14            [12] 1741 	mov	a,#0x14
      0008AE 2E               [12] 1742 	add	a,r6
      0008AF F5 82            [12] 1743 	mov	dpl,a
      0008B1 12r0Fr2E         [24] 1744 	lcall	_getString
      0008B4 AC 82            [24] 1745 	mov	r4,dpl
      0008B6 AD 83            [24] 1746 	mov	r5,dph
      0008B8 AE F0            [24] 1747 	mov	r6,b
      0008BA 75*00 10         [24] 1748 	mov	_write_string_PARM_2,#0x10
      0008BD 75*00 03         [24] 1749 	mov	_write_string_PARM_3,#0x03
      0008C0 75*00 01         [24] 1750 	mov	_write_string_PARM_4,#0x01
      0008C3 75*00 00         [24] 1751 	mov	_write_string_PARM_5,#0x00
      0008C6 8C 82            [24] 1752 	mov	dpl,r4
      0008C8 8D 83            [24] 1753 	mov	dph,r5
      0008CA 8E F0            [24] 1754 	mov	b,r6
      0008CC 12r00r00         [24] 1755 	lcall	_write_string
      0008CF D0 07            [24] 1756 	pop	ar7
      0008D1                       1757 00104$:
                                   1758 ;	../UI_Manager/ui.c:514: switch (action)
      0008D1 BF 02 02         [24] 1759 	cjne	r7,#0x02,00148$
      0008D4 80 39            [24] 1760 	sjmp	00109$
      0008D6                       1761 00148$:
      0008D6 BF 03 02         [24] 1762 	cjne	r7,#0x03,00149$
      0008D9 80 14            [24] 1763 	sjmp	00106$
      0008DB                       1764 00149$:
      0008DB BF 0A 02         [24] 1765 	cjne	r7,#0x0a,00150$
      0008DE 80 1F            [24] 1766 	sjmp	00108$
      0008E0                       1767 00150$:
      0008E0 BF 0C 02         [24] 1768 	cjne	r7,#0x0c,00151$
      0008E3 80 33            [24] 1769 	sjmp	00110$
      0008E5                       1770 00151$:
      0008E5 BF 1F 02         [24] 1771 	cjne	r7,#0x1f,00152$
      0008E8 80 05            [24] 1772 	sjmp	00106$
      0008EA                       1773 00152$:
                                   1774 ;	../UI_Manager/ui.c:517: case BUTTON_UP:
      0008EA BF 65 34         [24] 1775 	cjne	r7,#0x65,00112$
      0008ED 80 10            [24] 1776 	sjmp	00108$
      0008EF                       1777 00106$:
                                   1778 ;	../UI_Manager/ui.c:518: set_runtime_data(MACRO_INDEX, INC, NULL);
      0008EF 75*00 01         [24] 1779 	mov	_set_runtime_data_PARM_2,#0x01
      0008F2 75*00 00         [24] 1780 	mov	_set_runtime_data_PARM_3,#0x00
      0008F5 75 82 03         [24] 1781 	mov	dpl,#0x03
      0008F8 12r00r00         [24] 1782 	lcall	_set_runtime_data
                                   1783 ;	../UI_Manager/ui.c:519: changed = 0xFF;
      0008FB 75*02 FF         [24] 1784 	mov	_changed,#0xff
                                   1785 ;	../UI_Manager/ui.c:520: break;
                                   1786 ;	../UI_Manager/ui.c:522: case BUTTON_DOWN:
      0008FE 22               [24] 1787 	ret
      0008FF                       1788 00108$:
                                   1789 ;	../UI_Manager/ui.c:523: set_runtime_data(MACRO_INDEX, DEC, NULL);
      0008FF 75*00 02         [24] 1790 	mov	_set_runtime_data_PARM_2,#0x02
      000902 75*00 00         [24] 1791 	mov	_set_runtime_data_PARM_3,#0x00
      000905 75 82 03         [24] 1792 	mov	dpl,#0x03
      000908 12r00r00         [24] 1793 	lcall	_set_runtime_data
                                   1794 ;	../UI_Manager/ui.c:524: changed = 0xFF;  
      00090B 75*02 FF         [24] 1795 	mov	_changed,#0xff
                                   1796 ;	../UI_Manager/ui.c:525: break;
                                   1797 ;	../UI_Manager/ui.c:526: case BUTTON_FUNCTION:
      00090E 22               [24] 1798 	ret
      00090F                       1799 00109$:
                                   1800 ;	../UI_Manager/ui.c:527: set_ui_state(INC, NULL);
      00090F 75*0F 00         [24] 1801 	mov	_set_ui_state_PARM_2,#0x00
      000912 75 82 01         [24] 1802 	mov	dpl,#0x01
                                   1803 ;	../UI_Manager/ui.c:528: break;
                                   1804 ;	../UI_Manager/ui.c:529: case BUTTON_FUN_UP:
      000915 02r0Er8C         [24] 1805 	ljmp	_set_ui_state
      000918                       1806 00110$:
                                   1807 ;	../UI_Manager/ui.c:530: set_ui_state(DEC, NULL);
      000918 75*0F 00         [24] 1808 	mov	_set_ui_state_PARM_2,#0x00
      00091B 75 82 02         [24] 1809 	mov	dpl,#0x02
                                   1810 ;	../UI_Manager/ui.c:532: }
                                   1811 ;	../UI_Manager/ui.c:533: }
      00091E 02r0Er8C         [24] 1812 	ljmp	_set_ui_state
      000921                       1813 00112$:
      000921 22               [24] 1814 	ret
                                   1815 ;------------------------------------------------------------
                                   1816 ;Allocation info for local variables in function 'macroSpeedPage'
                                   1817 ;------------------------------------------------------------
                                   1818 ;action                    Allocated to registers r7 
                                   1819 ;------------------------------------------------------------
                                   1820 ;	../UI_Manager/ui.c:535: void macroSpeedPage(uint8_t action){
                                   1821 ;	-----------------------------------------
                                   1822 ;	 function macroSpeedPage
                                   1823 ;	-----------------------------------------
      000922                       1824 _macroSpeedPage:
      000922 AF 82            [24] 1825 	mov	r7,dpl
                                   1826 ;	../UI_Manager/ui.c:537: if(Changed){
      000924 E5*01            [12] 1827 	mov	a,_Changed
      000926 60 25            [24] 1828 	jz	00102$
                                   1829 ;	../UI_Manager/ui.c:538: Changed = 0x00;
      000928 75*01 00         [24] 1830 	mov	_Changed,#0x00
                                   1831 ;	../UI_Manager/ui.c:539: changed = 0xFF;
      00092B 75*02 FF         [24] 1832 	mov	_changed,#0xff
                                   1833 ;	../UI_Manager/ui.c:541: exe_command(CLEAR_DISPLAY);
      00092E 90 80 00         [24] 1834 	mov	dptr,#0x8000
      000931 C0 07            [24] 1835 	push	ar7
      000933 12r00r00         [24] 1836 	lcall	_exe_command
                                   1837 ;	../UI_Manager/ui.c:543: write_string("Macro Speed", sizeof("Macro Speed"), 3, LINE_0, NOT_SELECTED);
      000936 75*00 0C         [24] 1838 	mov	_write_string_PARM_2,#0x0c
      000939 75*00 03         [24] 1839 	mov	_write_string_PARM_3,#0x03
      00093C 75*00 00         [24] 1840 	mov	_write_string_PARM_4,#0x00
      00093F 75*00 00         [24] 1841 	mov	_write_string_PARM_5,#0x00
      000942 90r00rD6         [24] 1842 	mov	dptr,#___str_19
      000945 75 F0 80         [24] 1843 	mov	b,#0x80
      000948 12r00r00         [24] 1844 	lcall	_write_string
      00094B D0 07            [24] 1845 	pop	ar7
      00094D                       1846 00102$:
                                   1847 ;	../UI_Manager/ui.c:547: if(changed){
      00094D E5*02            [12] 1848 	mov	a,_changed
      00094F 60 5D            [24] 1849 	jz	00107$
                                   1850 ;	../UI_Manager/ui.c:548: changed = 0x00;
      000951 75*02 00         [24] 1851 	mov	_changed,#0x00
                                   1852 ;	../UI_Manager/ui.c:550: if(get_runtime_data(MACRO_SPEED_INDEX) == 0){
      000954 75 82 04         [24] 1853 	mov	dpl,#0x04
      000957 C0 07            [24] 1854 	push	ar7
      000959 12r00r00         [24] 1855 	lcall	_get_runtime_data
      00095C E5 82            [12] 1856 	mov	a,dpl
      00095E D0 07            [24] 1857 	pop	ar7
                                   1858 ;	../UI_Manager/ui.c:551: write_string("Off", LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000960 70 1A            [24] 1859 	jnz	00104$
      000962 75*00 10         [24] 1860 	mov	_write_string_PARM_2,#0x10
      000965 75*00 03         [24] 1861 	mov	_write_string_PARM_3,#0x03
      000968 75*00 01         [24] 1862 	mov	_write_string_PARM_4,#0x01
      00096B F5*00            [12] 1863 	mov	_write_string_PARM_5,a
      00096D 90r00rE2         [24] 1864 	mov	dptr,#___str_20
      000970 75 F0 80         [24] 1865 	mov	b,#0x80
      000973 C0 07            [24] 1866 	push	ar7
      000975 12r00r00         [24] 1867 	lcall	_write_string
      000978 D0 07            [24] 1868 	pop	ar7
      00097A 80 32            [24] 1869 	sjmp	00107$
      00097C                       1870 00104$:
                                   1871 ;	../UI_Manager/ui.c:553: write_string("", LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      00097C 75*00 10         [24] 1872 	mov	_write_string_PARM_2,#0x10
      00097F 75*00 03         [24] 1873 	mov	_write_string_PARM_3,#0x03
      000982 75*00 01         [24] 1874 	mov	_write_string_PARM_4,#0x01
      000985 75*00 00         [24] 1875 	mov	_write_string_PARM_5,#0x00
      000988 90r00rE6         [24] 1876 	mov	dptr,#___str_21
      00098B 75 F0 80         [24] 1877 	mov	b,#0x80
      00098E C0 07            [24] 1878 	push	ar7
      000990 12r00r00         [24] 1879 	lcall	_write_string
                                   1880 ;	../UI_Manager/ui.c:554: write_number(get_runtime_data(MACRO_SPEED_INDEX), 6, LINE_1, NOT_SELECTED);
      000993 75 82 04         [24] 1881 	mov	dpl,#0x04
      000996 12r00r00         [24] 1882 	lcall	_get_runtime_data
      000999 AE 82            [24] 1883 	mov	r6,dpl
      00099B 7D 00            [12] 1884 	mov	r5,#0x00
      00099D 75*00 06         [24] 1885 	mov	_write_number_PARM_2,#0x06
      0009A0 75*00 01         [24] 1886 	mov	_write_number_PARM_3,#0x01
                                   1887 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      0009A3 8D*00            [24] 1888 	mov	_write_number_PARM_4,r5
      0009A5 8E 82            [24] 1889 	mov	dpl,r6
      0009A7 8D 83            [24] 1890 	mov	dph,r5
      0009A9 12r00r00         [24] 1891 	lcall	_write_number
      0009AC D0 07            [24] 1892 	pop	ar7
      0009AE                       1893 00107$:
                                   1894 ;	../UI_Manager/ui.c:558: switch (action)
      0009AE BF 02 02         [24] 1895 	cjne	r7,#0x02,00156$
      0009B1 80 39            [24] 1896 	sjmp	00112$
      0009B3                       1897 00156$:
      0009B3 BF 03 02         [24] 1898 	cjne	r7,#0x03,00157$
      0009B6 80 14            [24] 1899 	sjmp	00109$
      0009B8                       1900 00157$:
      0009B8 BF 0A 02         [24] 1901 	cjne	r7,#0x0a,00158$
      0009BB 80 1F            [24] 1902 	sjmp	00111$
      0009BD                       1903 00158$:
      0009BD BF 0C 02         [24] 1904 	cjne	r7,#0x0c,00159$
      0009C0 80 33            [24] 1905 	sjmp	00113$
      0009C2                       1906 00159$:
      0009C2 BF 1F 02         [24] 1907 	cjne	r7,#0x1f,00160$
      0009C5 80 05            [24] 1908 	sjmp	00109$
      0009C7                       1909 00160$:
                                   1910 ;	../UI_Manager/ui.c:561: case BUTTON_UP:
      0009C7 BF 65 34         [24] 1911 	cjne	r7,#0x65,00115$
      0009CA 80 10            [24] 1912 	sjmp	00111$
      0009CC                       1913 00109$:
                                   1914 ;	../UI_Manager/ui.c:562: set_runtime_data(MACRO_SPEED_INDEX, INC, NULL);
      0009CC 75*00 01         [24] 1915 	mov	_set_runtime_data_PARM_2,#0x01
      0009CF 75*00 00         [24] 1916 	mov	_set_runtime_data_PARM_3,#0x00
      0009D2 75 82 04         [24] 1917 	mov	dpl,#0x04
      0009D5 12r00r00         [24] 1918 	lcall	_set_runtime_data
                                   1919 ;	../UI_Manager/ui.c:563: changed = 0xFF;
      0009D8 75*02 FF         [24] 1920 	mov	_changed,#0xff
                                   1921 ;	../UI_Manager/ui.c:564: break;
                                   1922 ;	../UI_Manager/ui.c:566: case BUTTON_DOWN:
      0009DB 22               [24] 1923 	ret
      0009DC                       1924 00111$:
                                   1925 ;	../UI_Manager/ui.c:567: set_runtime_data(MACRO_SPEED_INDEX, DEC, NULL);
      0009DC 75*00 02         [24] 1926 	mov	_set_runtime_data_PARM_2,#0x02
      0009DF 75*00 00         [24] 1927 	mov	_set_runtime_data_PARM_3,#0x00
      0009E2 75 82 04         [24] 1928 	mov	dpl,#0x04
      0009E5 12r00r00         [24] 1929 	lcall	_set_runtime_data
                                   1930 ;	../UI_Manager/ui.c:568: changed = 0xFF;  
      0009E8 75*02 FF         [24] 1931 	mov	_changed,#0xff
                                   1932 ;	../UI_Manager/ui.c:569: break;
                                   1933 ;	../UI_Manager/ui.c:570: case BUTTON_FUNCTION:
      0009EB 22               [24] 1934 	ret
      0009EC                       1935 00112$:
                                   1936 ;	../UI_Manager/ui.c:571: set_ui_state(INC, NULL);
      0009EC 75*0F 00         [24] 1937 	mov	_set_ui_state_PARM_2,#0x00
      0009EF 75 82 01         [24] 1938 	mov	dpl,#0x01
                                   1939 ;	../UI_Manager/ui.c:572: break;
                                   1940 ;	../UI_Manager/ui.c:573: case BUTTON_FUN_UP:
      0009F2 02r0Er8C         [24] 1941 	ljmp	_set_ui_state
      0009F5                       1942 00113$:
                                   1943 ;	../UI_Manager/ui.c:574: set_ui_state(DEC, NULL);
      0009F5 75*0F 00         [24] 1944 	mov	_set_ui_state_PARM_2,#0x00
      0009F8 75 82 02         [24] 1945 	mov	dpl,#0x02
                                   1946 ;	../UI_Manager/ui.c:576: }
                                   1947 ;	../UI_Manager/ui.c:577: }
      0009FB 02r0Er8C         [24] 1948 	ljmp	_set_ui_state
      0009FE                       1949 00115$:
      0009FE 22               [24] 1950 	ret
                                   1951 ;------------------------------------------------------------
                                   1952 ;Allocation info for local variables in function 'colorPage'
                                   1953 ;------------------------------------------------------------
                                   1954 ;action                    Allocated to registers r7 
                                   1955 ;index                     Allocated to registers r6 
                                   1956 ;------------------------------------------------------------
                                   1957 ;	../UI_Manager/ui.c:579: void colorPage(uint8_t action){
                                   1958 ;	-----------------------------------------
                                   1959 ;	 function colorPage
                                   1960 ;	-----------------------------------------
      0009FF                       1961 _colorPage:
      0009FF AF 82            [24] 1962 	mov	r7,dpl
                                   1963 ;	../UI_Manager/ui.c:580: uint8_t index = 0;
      000A01 7E 00            [12] 1964 	mov	r6,#0x00
                                   1965 ;	../UI_Manager/ui.c:582: switch (State)
      000A03 AD*00            [24] 1966 	mov	r5,_State
      000A05 BD 06 02         [24] 1967 	cjne	r5,#0x06,00174$
      000A08 80 0F            [24] 1968 	sjmp	00101$
      000A0A                       1969 00174$:
      000A0A BD 07 02         [24] 1970 	cjne	r5,#0x07,00175$
      000A0D 80 12            [24] 1971 	sjmp	00103$
      000A0F                       1972 00175$:
      000A0F BD 08 02         [24] 1973 	cjne	r5,#0x08,00176$
      000A12 80 09            [24] 1974 	sjmp	00102$
      000A14                       1975 00176$:
                                   1976 ;	../UI_Manager/ui.c:584: case MANUAL_RED_STATE:
      000A14 BD 09 10         [24] 1977 	cjne	r5,#0x09,00105$
      000A17 80 0C            [24] 1978 	sjmp	00104$
      000A19                       1979 00101$:
                                   1980 ;	../UI_Manager/ui.c:585: index = RED_INDEX;
      000A19 7E 05            [12] 1981 	mov	r6,#0x05
                                   1982 ;	../UI_Manager/ui.c:586: break;
                                   1983 ;	../UI_Manager/ui.c:587: case MANUAL_GREEN_STATE:
      000A1B 80 0A            [24] 1984 	sjmp	00105$
      000A1D                       1985 00102$:
                                   1986 ;	../UI_Manager/ui.c:588: index = GREEN_INDEX;
      000A1D 7E 06            [12] 1987 	mov	r6,#0x06
                                   1988 ;	../UI_Manager/ui.c:589: break;
                                   1989 ;	../UI_Manager/ui.c:590: case MANUAL_BLUE_STATE:
      000A1F 80 06            [24] 1990 	sjmp	00105$
      000A21                       1991 00103$:
                                   1992 ;	../UI_Manager/ui.c:591: index = BLUE_INDEX;
      000A21 7E 07            [12] 1993 	mov	r6,#0x07
                                   1994 ;	../UI_Manager/ui.c:592: break;
                                   1995 ;	../UI_Manager/ui.c:593: case MANUAL_STROBE_STATE:
      000A23 80 02            [24] 1996 	sjmp	00105$
      000A25                       1997 00104$:
                                   1998 ;	../UI_Manager/ui.c:594: index = STROBE_INDEX;
      000A25 7E 08            [12] 1999 	mov	r6,#0x08
                                   2000 ;	../UI_Manager/ui.c:596: }
      000A27                       2001 00105$:
                                   2002 ;	../UI_Manager/ui.c:598: if(Changed){
      000A27 E5*01            [12] 2003 	mov	a,_Changed
      000A29 60 39            [24] 2004 	jz	00107$
                                   2005 ;	../UI_Manager/ui.c:599: Changed = 0x00;
      000A2B 75*01 00         [24] 2006 	mov	_Changed,#0x00
                                   2007 ;	../UI_Manager/ui.c:600: changed = 0xFF;
      000A2E 75*02 FF         [24] 2008 	mov	_changed,#0xff
                                   2009 ;	../UI_Manager/ui.c:602: exe_command(CLEAR_DISPLAY);
      000A31 90 80 00         [24] 2010 	mov	dptr,#0x8000
      000A34 C0 07            [24] 2011 	push	ar7
      000A36 C0 06            [24] 2012 	push	ar6
      000A38 12r00r00         [24] 2013 	lcall	_exe_command
                                   2014 ;	../UI_Manager/ui.c:604: write_string(getString(COLOR_STRING_OFFSET + State), LINE_LENGTH, 3, LINE_0, NOT_SELECTED);
      000A3B AD*00            [24] 2015 	mov	r5,_State
      000A3D 74 C8            [12] 2016 	mov	a,#0xc8
      000A3F 2D               [12] 2017 	add	a,r5
      000A40 F5 82            [12] 2018 	mov	dpl,a
      000A42 12r0Fr2E         [24] 2019 	lcall	_getString
      000A45 AB 82            [24] 2020 	mov	r3,dpl
      000A47 AC 83            [24] 2021 	mov	r4,dph
      000A49 AD F0            [24] 2022 	mov	r5,b
      000A4B 75*00 10         [24] 2023 	mov	_write_string_PARM_2,#0x10
      000A4E 75*00 03         [24] 2024 	mov	_write_string_PARM_3,#0x03
      000A51 75*00 00         [24] 2025 	mov	_write_string_PARM_4,#0x00
      000A54 75*00 00         [24] 2026 	mov	_write_string_PARM_5,#0x00
      000A57 8B 82            [24] 2027 	mov	dpl,r3
      000A59 8C 83            [24] 2028 	mov	dph,r4
      000A5B 8D F0            [24] 2029 	mov	b,r5
      000A5D 12r00r00         [24] 2030 	lcall	_write_string
      000A60 D0 06            [24] 2031 	pop	ar6
      000A62 D0 07            [24] 2032 	pop	ar7
      000A64                       2033 00107$:
                                   2034 ;	../UI_Manager/ui.c:608: if(changed){
      000A64 E5*02            [12] 2035 	mov	a,_changed
      000A66 60 6E            [24] 2036 	jz	00112$
                                   2037 ;	../UI_Manager/ui.c:609: changed = 0x00;
      000A68 75*02 00         [24] 2038 	mov	_changed,#0x00
                                   2039 ;	../UI_Manager/ui.c:611: if(get_runtime_data(get_runtime_data(index)) == 0){
      000A6B 8E 82            [24] 2040 	mov	dpl,r6
      000A6D C0 07            [24] 2041 	push	ar7
      000A6F C0 06            [24] 2042 	push	ar6
      000A71 12r00r00         [24] 2043 	lcall	_get_runtime_data
      000A74 12r00r00         [24] 2044 	lcall	_get_runtime_data
      000A77 E5 82            [12] 2045 	mov	a,dpl
      000A79 D0 06            [24] 2046 	pop	ar6
      000A7B D0 07            [24] 2047 	pop	ar7
                                   2048 ;	../UI_Manager/ui.c:612: write_string("Off", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000A7D 70 1E            [24] 2049 	jnz	00109$
      000A7F 75*00 10         [24] 2050 	mov	_write_string_PARM_2,#0x10
      000A82 75*00 06         [24] 2051 	mov	_write_string_PARM_3,#0x06
      000A85 75*00 01         [24] 2052 	mov	_write_string_PARM_4,#0x01
      000A88 F5*00            [12] 2053 	mov	_write_string_PARM_5,a
      000A8A 90r00rE2         [24] 2054 	mov	dptr,#___str_20
      000A8D 75 F0 80         [24] 2055 	mov	b,#0x80
      000A90 C0 07            [24] 2056 	push	ar7
      000A92 C0 06            [24] 2057 	push	ar6
      000A94 12r00r00         [24] 2058 	lcall	_write_string
      000A97 D0 06            [24] 2059 	pop	ar6
      000A99 D0 07            [24] 2060 	pop	ar7
      000A9B 80 39            [24] 2061 	sjmp	00112$
      000A9D                       2062 00109$:
                                   2063 ;	../UI_Manager/ui.c:614: write_string("", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      000A9D 75*00 10         [24] 2064 	mov	_write_string_PARM_2,#0x10
      000AA0 75*00 00         [24] 2065 	mov	_write_string_PARM_3,#0x00
      000AA3 75*00 01         [24] 2066 	mov	_write_string_PARM_4,#0x01
      000AA6 75*00 00         [24] 2067 	mov	_write_string_PARM_5,#0x00
      000AA9 90r00rE6         [24] 2068 	mov	dptr,#___str_21
      000AAC 75 F0 80         [24] 2069 	mov	b,#0x80
      000AAF C0 07            [24] 2070 	push	ar7
      000AB1 C0 06            [24] 2071 	push	ar6
      000AB3 12r00r00         [24] 2072 	lcall	_write_string
      000AB6 D0 06            [24] 2073 	pop	ar6
                                   2074 ;	../UI_Manager/ui.c:615: write_number(get_runtime_data(index), 6, LINE_1, NOT_SELECTED);
      000AB8 8E 82            [24] 2075 	mov	dpl,r6
      000ABA C0 06            [24] 2076 	push	ar6
      000ABC 12r00r00         [24] 2077 	lcall	_get_runtime_data
      000ABF AD 82            [24] 2078 	mov	r5,dpl
      000AC1 7C 00            [12] 2079 	mov	r4,#0x00
      000AC3 75*00 06         [24] 2080 	mov	_write_number_PARM_2,#0x06
      000AC6 75*00 01         [24] 2081 	mov	_write_number_PARM_3,#0x01
                                   2082 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000AC9 8C*00            [24] 2083 	mov	_write_number_PARM_4,r4
      000ACB 8D 82            [24] 2084 	mov	dpl,r5
      000ACD 8C 83            [24] 2085 	mov	dph,r4
      000ACF 12r00r00         [24] 2086 	lcall	_write_number
      000AD2 D0 06            [24] 2087 	pop	ar6
      000AD4 D0 07            [24] 2088 	pop	ar7
      000AD6                       2089 00112$:
                                   2090 ;	../UI_Manager/ui.c:619: switch (action)
      000AD6 BF 02 02         [24] 2091 	cjne	r7,#0x02,00181$
      000AD9 80 37            [24] 2092 	sjmp	00117$
      000ADB                       2093 00181$:
      000ADB BF 03 02         [24] 2094 	cjne	r7,#0x03,00182$
      000ADE 80 14            [24] 2095 	sjmp	00114$
      000AE0                       2096 00182$:
      000AE0 BF 0A 02         [24] 2097 	cjne	r7,#0x0a,00183$
      000AE3 80 1E            [24] 2098 	sjmp	00116$
      000AE5                       2099 00183$:
      000AE5 BF 0C 02         [24] 2100 	cjne	r7,#0x0c,00184$
      000AE8 80 31            [24] 2101 	sjmp	00118$
      000AEA                       2102 00184$:
      000AEA BF 1F 02         [24] 2103 	cjne	r7,#0x1f,00185$
      000AED 80 05            [24] 2104 	sjmp	00114$
      000AEF                       2105 00185$:
                                   2106 ;	../UI_Manager/ui.c:622: case BUTTON_UP:
      000AEF BF 65 32         [24] 2107 	cjne	r7,#0x65,00120$
      000AF2 80 0F            [24] 2108 	sjmp	00116$
      000AF4                       2109 00114$:
                                   2110 ;	../UI_Manager/ui.c:623: set_runtime_data(index, INC, NULL);
      000AF4 75*00 01         [24] 2111 	mov	_set_runtime_data_PARM_2,#0x01
      000AF7 75*00 00         [24] 2112 	mov	_set_runtime_data_PARM_3,#0x00
      000AFA 8E 82            [24] 2113 	mov	dpl,r6
      000AFC 12r00r00         [24] 2114 	lcall	_set_runtime_data
                                   2115 ;	../UI_Manager/ui.c:624: changed = 0xFF;
      000AFF 75*02 FF         [24] 2116 	mov	_changed,#0xff
                                   2117 ;	../UI_Manager/ui.c:625: break;
                                   2118 ;	../UI_Manager/ui.c:627: case BUTTON_DOWN:
      000B02 22               [24] 2119 	ret
      000B03                       2120 00116$:
                                   2121 ;	../UI_Manager/ui.c:628: set_runtime_data(index, DEC, NULL);
      000B03 75*00 02         [24] 2122 	mov	_set_runtime_data_PARM_2,#0x02
      000B06 75*00 00         [24] 2123 	mov	_set_runtime_data_PARM_3,#0x00
      000B09 8E 82            [24] 2124 	mov	dpl,r6
      000B0B 12r00r00         [24] 2125 	lcall	_set_runtime_data
                                   2126 ;	../UI_Manager/ui.c:629: changed = 0xFF;  
      000B0E 75*02 FF         [24] 2127 	mov	_changed,#0xff
                                   2128 ;	../UI_Manager/ui.c:630: break;
                                   2129 ;	../UI_Manager/ui.c:631: case BUTTON_FUNCTION:
      000B11 22               [24] 2130 	ret
      000B12                       2131 00117$:
                                   2132 ;	../UI_Manager/ui.c:632: set_ui_state(INC, NULL);
      000B12 75*0F 00         [24] 2133 	mov	_set_ui_state_PARM_2,#0x00
      000B15 75 82 01         [24] 2134 	mov	dpl,#0x01
                                   2135 ;	../UI_Manager/ui.c:633: break;
                                   2136 ;	../UI_Manager/ui.c:634: case BUTTON_FUN_UP:
      000B18 02r0Er8C         [24] 2137 	ljmp	_set_ui_state
      000B1B                       2138 00118$:
                                   2139 ;	../UI_Manager/ui.c:635: set_ui_state(DEC, NULL);
      000B1B 75*0F 00         [24] 2140 	mov	_set_ui_state_PARM_2,#0x00
      000B1E 75 82 02         [24] 2141 	mov	dpl,#0x02
                                   2142 ;	../UI_Manager/ui.c:637: }
                                   2143 ;	../UI_Manager/ui.c:638: }
      000B21 02r0Er8C         [24] 2144 	ljmp	_set_ui_state
      000B24                       2145 00120$:
      000B24 22               [24] 2146 	ret
                                   2147 ;------------------------------------------------------------
                                   2148 ;Allocation info for local variables in function 'remotePage'
                                   2149 ;------------------------------------------------------------
                                   2150 ;action                    Allocated to registers r7 
                                   2151 ;remoteNumber              Allocated to registers r6 
                                   2152 ;index                     Allocated to registers r5 
                                   2153 ;------------------------------------------------------------
                                   2154 ;	../UI_Manager/ui.c:640: void remotePage(uint8_t action){
                                   2155 ;	-----------------------------------------
                                   2156 ;	 function remotePage
                                   2157 ;	-----------------------------------------
      000B25                       2158 _remotePage:
      000B25 AF 82            [24] 2159 	mov	r7,dpl
                                   2160 ;	../UI_Manager/ui.c:641: uint8_t remoteNumber = MANUAL_REMOTE_ACTION_6_STATE - State + 4;
      000B27 AE*00            [24] 2161 	mov	r6,_State
      000B29 74 10            [12] 2162 	mov	a,#0x10
      000B2B C3               [12] 2163 	clr	c
      000B2C 9E               [12] 2164 	subb	a,r6
      000B2D FE               [12] 2165 	mov	r6,a
                                   2166 ;	../UI_Manager/ui.c:642: uint8_t index = 0;
      000B2E 7D 00            [12] 2167 	mov	r5,#0x00
                                   2168 ;	../UI_Manager/ui.c:644: switch (State)
      000B30 AC*00            [24] 2169 	mov	r4,_State
      000B32 BC 0A 02         [24] 2170 	cjne	r4,#0x0a,00168$
      000B35 80 0A            [24] 2171 	sjmp	00101$
      000B37                       2172 00168$:
      000B37 BC 0B 02         [24] 2173 	cjne	r4,#0x0b,00169$
      000B3A 80 09            [24] 2174 	sjmp	00102$
      000B3C                       2175 00169$:
                                   2176 ;	../UI_Manager/ui.c:646: case MANUAL_REMOTE_ACTION_4_STATE:
      000B3C BC 0C 0C         [24] 2177 	cjne	r4,#0x0c,00104$
      000B3F 80 08            [24] 2178 	sjmp	00103$
      000B41                       2179 00101$:
                                   2180 ;	../UI_Manager/ui.c:647: index = R4_INDEX;
      000B41 7D 09            [12] 2181 	mov	r5,#0x09
                                   2182 ;	../UI_Manager/ui.c:648: break;
                                   2183 ;	../UI_Manager/ui.c:649: case MANUAL_REMOTE_ACTION_5_STATE:
      000B43 80 06            [24] 2184 	sjmp	00104$
      000B45                       2185 00102$:
                                   2186 ;	../UI_Manager/ui.c:650: index = R5_INDEX;
      000B45 7D 0A            [12] 2187 	mov	r5,#0x0a
                                   2188 ;	../UI_Manager/ui.c:651: break;
                                   2189 ;	../UI_Manager/ui.c:652: case MANUAL_REMOTE_ACTION_6_STATE:
      000B47 80 02            [24] 2190 	sjmp	00104$
      000B49                       2191 00103$:
                                   2192 ;	../UI_Manager/ui.c:653: index = R6_INDEX;
      000B49 7D 0B            [12] 2193 	mov	r5,#0x0b
                                   2194 ;	../UI_Manager/ui.c:655: }
      000B4B                       2195 00104$:
                                   2196 ;	../UI_Manager/ui.c:657: if(Changed){
      000B4B E5*01            [12] 2197 	mov	a,_Changed
      000B4D 60 7C            [24] 2198 	jz	00110$
                                   2199 ;	../UI_Manager/ui.c:658: Changed = 0x00;
      000B4F 75*01 00         [24] 2200 	mov	_Changed,#0x00
                                   2201 ;	../UI_Manager/ui.c:659: changed = 0xFF;
      000B52 75*02 FF         [24] 2202 	mov	_changed,#0xff
                                   2203 ;	../UI_Manager/ui.c:661: exe_command(CLEAR_DISPLAY);
      000B55 90 80 00         [24] 2204 	mov	dptr,#0x8000
      000B58 C0 07            [24] 2205 	push	ar7
      000B5A C0 06            [24] 2206 	push	ar6
      000B5C C0 05            [24] 2207 	push	ar5
      000B5E 12r00r00         [24] 2208 	lcall	_exe_command
                                   2209 ;	../UI_Manager/ui.c:663: write_string("Remote X Action", sizeof("Remote X Action"), 1, LINE_0, NOT_SELECTED);
      000B61 75*00 10         [24] 2210 	mov	_write_string_PARM_2,#0x10
      000B64 75*00 01         [24] 2211 	mov	_write_string_PARM_3,#0x01
      000B67 75*00 00         [24] 2212 	mov	_write_string_PARM_4,#0x00
      000B6A 75*00 00         [24] 2213 	mov	_write_string_PARM_5,#0x00
      000B6D 90r00rE7         [24] 2214 	mov	dptr,#___str_22
      000B70 75 F0 80         [24] 2215 	mov	b,#0x80
      000B73 12r00r00         [24] 2216 	lcall	_write_string
      000B76 D0 05            [24] 2217 	pop	ar5
      000B78 D0 06            [24] 2218 	pop	ar6
      000B7A D0 07            [24] 2219 	pop	ar7
                                   2220 ;	../UI_Manager/ui.c:664: switch (remoteNumber)
      000B7C BE 04 02         [24] 2221 	cjne	r6,#0x04,00172$
      000B7F 80 0A            [24] 2222 	sjmp	00105$
      000B81                       2223 00172$:
      000B81 BE 05 02         [24] 2224 	cjne	r6,#0x05,00173$
      000B84 80 1B            [24] 2225 	sjmp	00106$
      000B86                       2226 00173$:
                                   2227 ;	../UI_Manager/ui.c:666: case 4:
      000B86 BE 06 42         [24] 2228 	cjne	r6,#0x06,00110$
      000B89 80 2C            [24] 2229 	sjmp	00107$
      000B8B                       2230 00105$:
                                   2231 ;	../UI_Manager/ui.c:667: write_char(CHAR_4, 8, LINE_0);
      000B8B 75*00 08         [24] 2232 	mov	_write_char_PARM_2,#0x08
      000B8E 75*00 00         [24] 2233 	mov	_write_char_PARM_3,#0x00
      000B91 75 82 2C         [24] 2234 	mov	dpl,#0x2c
      000B94 C0 07            [24] 2235 	push	ar7
      000B96 C0 05            [24] 2236 	push	ar5
      000B98 12r00r00         [24] 2237 	lcall	_write_char
      000B9B D0 05            [24] 2238 	pop	ar5
      000B9D D0 07            [24] 2239 	pop	ar7
                                   2240 ;	../UI_Manager/ui.c:668: break;
                                   2241 ;	../UI_Manager/ui.c:669: case 5:
      000B9F 80 2A            [24] 2242 	sjmp	00110$
      000BA1                       2243 00106$:
                                   2244 ;	../UI_Manager/ui.c:670: write_char(CHAR_5, 8, LINE_0);
      000BA1 75*00 08         [24] 2245 	mov	_write_char_PARM_2,#0x08
      000BA4 75*00 00         [24] 2246 	mov	_write_char_PARM_3,#0x00
      000BA7 75 82 AC         [24] 2247 	mov	dpl,#0xac
      000BAA C0 07            [24] 2248 	push	ar7
      000BAC C0 05            [24] 2249 	push	ar5
      000BAE 12r00r00         [24] 2250 	lcall	_write_char
      000BB1 D0 05            [24] 2251 	pop	ar5
      000BB3 D0 07            [24] 2252 	pop	ar7
                                   2253 ;	../UI_Manager/ui.c:671: break;
                                   2254 ;	../UI_Manager/ui.c:672: case 6:
      000BB5 80 14            [24] 2255 	sjmp	00110$
      000BB7                       2256 00107$:
                                   2257 ;	../UI_Manager/ui.c:673: write_char(CHAR_6, 8, LINE_0);
      000BB7 75*00 08         [24] 2258 	mov	_write_char_PARM_2,#0x08
      000BBA 75*00 00         [24] 2259 	mov	_write_char_PARM_3,#0x00
      000BBD 75 82 6C         [24] 2260 	mov	dpl,#0x6c
      000BC0 C0 07            [24] 2261 	push	ar7
      000BC2 C0 05            [24] 2262 	push	ar5
      000BC4 12r00r00         [24] 2263 	lcall	_write_char
      000BC7 D0 05            [24] 2264 	pop	ar5
      000BC9 D0 07            [24] 2265 	pop	ar7
                                   2266 ;	../UI_Manager/ui.c:675: }
      000BCB                       2267 00110$:
                                   2268 ;	../UI_Manager/ui.c:678: if(changed){
      000BCB E5*02            [12] 2269 	mov	a,_changed
      000BCD 60 35            [24] 2270 	jz	00112$
                                   2271 ;	../UI_Manager/ui.c:679: changed = 0x00;
      000BCF 75*02 00         [24] 2272 	mov	_changed,#0x00
                                   2273 ;	../UI_Manager/ui.c:680: write_string(getString(get_runtime_data(index) + WIRELESS_ACTION_STRING_OFFSET), LINE_LENGTH, 4, LINE_1, NOT_SELECTED);  
      000BD2 8D 82            [24] 2274 	mov	dpl,r5
      000BD4 C0 07            [24] 2275 	push	ar7
      000BD6 C0 05            [24] 2276 	push	ar5
      000BD8 12r00r00         [24] 2277 	lcall	_get_runtime_data
      000BDB AE 82            [24] 2278 	mov	r6,dpl
      000BDD 74 3C            [12] 2279 	mov	a,#0x3c
      000BDF 2E               [12] 2280 	add	a,r6
      000BE0 F5 82            [12] 2281 	mov	dpl,a
      000BE2 12r0Fr2E         [24] 2282 	lcall	_getString
      000BE5 AB 82            [24] 2283 	mov	r3,dpl
      000BE7 AC 83            [24] 2284 	mov	r4,dph
      000BE9 AE F0            [24] 2285 	mov	r6,b
      000BEB 75*00 10         [24] 2286 	mov	_write_string_PARM_2,#0x10
      000BEE 75*00 04         [24] 2287 	mov	_write_string_PARM_3,#0x04
      000BF1 75*00 01         [24] 2288 	mov	_write_string_PARM_4,#0x01
      000BF4 75*00 00         [24] 2289 	mov	_write_string_PARM_5,#0x00
      000BF7 8B 82            [24] 2290 	mov	dpl,r3
      000BF9 8C 83            [24] 2291 	mov	dph,r4
      000BFB 8E F0            [24] 2292 	mov	b,r6
      000BFD 12r00r00         [24] 2293 	lcall	_write_string
      000C00 D0 05            [24] 2294 	pop	ar5
      000C02 D0 07            [24] 2295 	pop	ar7
      000C04                       2296 00112$:
                                   2297 ;	../UI_Manager/ui.c:683: switch (action)
      000C04 BF 02 02         [24] 2298 	cjne	r7,#0x02,00176$
      000C07 80 2D            [24] 2299 	sjmp	00115$
      000C09                       2300 00176$:
      000C09 BF 03 02         [24] 2301 	cjne	r7,#0x03,00177$
      000C0C 80 0A            [24] 2302 	sjmp	00113$
      000C0E                       2303 00177$:
      000C0E BF 0A 02         [24] 2304 	cjne	r7,#0x0a,00178$
      000C11 80 14            [24] 2305 	sjmp	00114$
      000C13                       2306 00178$:
                                   2307 ;	../UI_Manager/ui.c:685: case BUTTON_UP:
      000C13 BF 0C 32         [24] 2308 	cjne	r7,#0x0c,00118$
      000C16 80 27            [24] 2309 	sjmp	00116$
      000C18                       2310 00113$:
                                   2311 ;	../UI_Manager/ui.c:686: set_runtime_data(index, INC, NULL);
      000C18 75*00 01         [24] 2312 	mov	_set_runtime_data_PARM_2,#0x01
      000C1B 75*00 00         [24] 2313 	mov	_set_runtime_data_PARM_3,#0x00
      000C1E 8D 82            [24] 2314 	mov	dpl,r5
      000C20 12r00r00         [24] 2315 	lcall	_set_runtime_data
                                   2316 ;	../UI_Manager/ui.c:687: changed = 0xFF;
      000C23 75*02 FF         [24] 2317 	mov	_changed,#0xff
                                   2318 ;	../UI_Manager/ui.c:688: break;
                                   2319 ;	../UI_Manager/ui.c:689: case BUTTON_DOWN:
      000C26 22               [24] 2320 	ret
      000C27                       2321 00114$:
                                   2322 ;	../UI_Manager/ui.c:690: set_runtime_data(index, DEC, NULL);
      000C27 75*00 02         [24] 2323 	mov	_set_runtime_data_PARM_2,#0x02
      000C2A 75*00 00         [24] 2324 	mov	_set_runtime_data_PARM_3,#0x00
      000C2D 8D 82            [24] 2325 	mov	dpl,r5
      000C2F 12r00r00         [24] 2326 	lcall	_set_runtime_data
                                   2327 ;	../UI_Manager/ui.c:691: changed = 0xFF;  
      000C32 75*02 FF         [24] 2328 	mov	_changed,#0xff
                                   2329 ;	../UI_Manager/ui.c:692: break;
                                   2330 ;	../UI_Manager/ui.c:693: case BUTTON_FUNCTION:
      000C35 22               [24] 2331 	ret
      000C36                       2332 00115$:
                                   2333 ;	../UI_Manager/ui.c:694: set_ui_state(INC, NULL);
      000C36 75*0F 00         [24] 2334 	mov	_set_ui_state_PARM_2,#0x00
      000C39 75 82 01         [24] 2335 	mov	dpl,#0x01
                                   2336 ;	../UI_Manager/ui.c:695: break;
                                   2337 ;	../UI_Manager/ui.c:696: case BUTTON_FUN_UP:
      000C3C 02r0Er8C         [24] 2338 	ljmp	_set_ui_state
      000C3F                       2339 00116$:
                                   2340 ;	../UI_Manager/ui.c:697: set_ui_state(DEC, NULL);
      000C3F 75*0F 00         [24] 2341 	mov	_set_ui_state_PARM_2,#0x00
      000C42 75 82 02         [24] 2342 	mov	dpl,#0x02
                                   2343 ;	../UI_Manager/ui.c:699: }
                                   2344 ;	../UI_Manager/ui.c:700: }
      000C45 02r0Er8C         [24] 2345 	ljmp	_set_ui_state
      000C48                       2346 00118$:
      000C48 22               [24] 2347 	ret
                                   2348 ;------------------------------------------------------------
                                   2349 ;Allocation info for local variables in function 'saveLoadPage'
                                   2350 ;------------------------------------------------------------
                                   2351 ;slot                      Allocated with name '_saveLoadPage_slot_65536_134'
                                   2352 ;action                    Allocated to registers r7 
                                   2353 ;------------------------------------------------------------
                                   2354 ;	../UI_Manager/ui.c:702: void saveLoadPage(uint8_t action){
                                   2355 ;	-----------------------------------------
                                   2356 ;	 function saveLoadPage
                                   2357 ;	-----------------------------------------
      000C49                       2358 _saveLoadPage:
      000C49 AF 82            [24] 2359 	mov	r7,dpl
                                   2360 ;	../UI_Manager/ui.c:705: if(Changed){
      000C4B E5*01            [12] 2361 	mov	a,_Changed
      000C4D 60 49            [24] 2362 	jz	00105$
                                   2363 ;	../UI_Manager/ui.c:706: Changed = 0x00;
      000C4F 75*01 00         [24] 2364 	mov	_Changed,#0x00
                                   2365 ;	../UI_Manager/ui.c:707: changed = 0xFF;
      000C52 75*02 FF         [24] 2366 	mov	_changed,#0xff
                                   2367 ;	../UI_Manager/ui.c:709: exe_command(CLEAR_DISPLAY);
      000C55 90 80 00         [24] 2368 	mov	dptr,#0x8000
      000C58 C0 07            [24] 2369 	push	ar7
      000C5A 12r00r00         [24] 2370 	lcall	_exe_command
      000C5D D0 07            [24] 2371 	pop	ar7
                                   2372 ;	../UI_Manager/ui.c:711: if(State == MANUAL_SAVE_SETTINGS_STATE){
      000C5F 74 0D            [12] 2373 	mov	a,#0x0d
      000C61 B5*00 1B         [24] 2374 	cjne	a,_State,00102$
                                   2375 ;	../UI_Manager/ui.c:712: write_string("Save Settings", sizeof("Save Settings"), 2, LINE_0, NOT_SELECTED);
      000C64 75*00 0E         [24] 2376 	mov	_write_string_PARM_2,#0x0e
      000C67 75*00 02         [24] 2377 	mov	_write_string_PARM_3,#0x02
      000C6A 75*00 00         [24] 2378 	mov	_write_string_PARM_4,#0x00
      000C6D 75*00 00         [24] 2379 	mov	_write_string_PARM_5,#0x00
      000C70 90r00rF7         [24] 2380 	mov	dptr,#___str_23
      000C73 75 F0 80         [24] 2381 	mov	b,#0x80
      000C76 C0 07            [24] 2382 	push	ar7
      000C78 12r00r00         [24] 2383 	lcall	_write_string
      000C7B D0 07            [24] 2384 	pop	ar7
      000C7D 80 19            [24] 2385 	sjmp	00105$
      000C7F                       2386 00102$:
                                   2387 ;	../UI_Manager/ui.c:714: write_string("Load Settings", sizeof("Load Settings"), 2, LINE_0, NOT_SELECTED);
      000C7F 75*00 0E         [24] 2388 	mov	_write_string_PARM_2,#0x0e
      000C82 75*00 02         [24] 2389 	mov	_write_string_PARM_3,#0x02
      000C85 75*00 00         [24] 2390 	mov	_write_string_PARM_4,#0x00
      000C88 75*00 00         [24] 2391 	mov	_write_string_PARM_5,#0x00
      000C8B 90r01r05         [24] 2392 	mov	dptr,#___str_24
      000C8E 75 F0 80         [24] 2393 	mov	b,#0x80
      000C91 C0 07            [24] 2394 	push	ar7
      000C93 12r00r00         [24] 2395 	lcall	_write_string
      000C96 D0 07            [24] 2396 	pop	ar7
      000C98                       2397 00105$:
                                   2398 ;	../UI_Manager/ui.c:719: if(changed){
      000C98 E5*02            [12] 2399 	mov	a,_changed
      000C9A 60 2E            [24] 2400 	jz	00107$
                                   2401 ;	../UI_Manager/ui.c:720: changed = 0x00;
      000C9C 75*02 00         [24] 2402 	mov	_changed,#0x00
                                   2403 ;	../UI_Manager/ui.c:721: write_string(getString(slot % (SLOT_COUNT - 1)), LINE_LENGTH, 6, LINE_1, NOT_SELECTED);  
      000C9F 75 F0 03         [24] 2404 	mov	b,#0x03
      000CA2 E5*0E            [12] 2405 	mov	a,_saveLoadPage_slot_65536_134
      000CA4 84               [48] 2406 	div	ab
      000CA5 85 F0 82         [24] 2407 	mov	dpl,b
      000CA8 C0 07            [24] 2408 	push	ar7
      000CAA 12r0Fr2E         [24] 2409 	lcall	_getString
      000CAD AC 82            [24] 2410 	mov	r4,dpl
      000CAF AD 83            [24] 2411 	mov	r5,dph
      000CB1 AE F0            [24] 2412 	mov	r6,b
      000CB3 75*00 10         [24] 2413 	mov	_write_string_PARM_2,#0x10
      000CB6 75*00 06         [24] 2414 	mov	_write_string_PARM_3,#0x06
      000CB9 75*00 01         [24] 2415 	mov	_write_string_PARM_4,#0x01
      000CBC 75*00 00         [24] 2416 	mov	_write_string_PARM_5,#0x00
      000CBF 8C 82            [24] 2417 	mov	dpl,r4
      000CC1 8D 83            [24] 2418 	mov	dph,r5
      000CC3 8E F0            [24] 2419 	mov	b,r6
      000CC5 12r00r00         [24] 2420 	lcall	_write_string
      000CC8 D0 07            [24] 2421 	pop	ar7
      000CCA                       2422 00107$:
                                   2423 ;	../UI_Manager/ui.c:724: switch (action)
      000CCA BF 02 03         [24] 2424 	cjne	r7,#0x02,00165$
      000CCD 02r0Dr54         [24] 2425 	ljmp	00114$
      000CD0                       2426 00165$:
      000CD0 BF 03 02         [24] 2427 	cjne	r7,#0x03,00166$
      000CD3 80 73            [24] 2428 	sjmp	00112$
      000CD5                       2429 00166$:
      000CD5 BF 0A 02         [24] 2430 	cjne	r7,#0x0a,00167$
      000CD8 80 74            [24] 2431 	sjmp	00113$
      000CDA                       2432 00167$:
      000CDA BF 0C 03         [24] 2433 	cjne	r7,#0x0c,00168$
      000CDD 02r0Dr5D         [24] 2434 	ljmp	00115$
      000CE0                       2435 00168$:
      000CE0 BF 1E 02         [24] 2436 	cjne	r7,#0x1e,00169$
      000CE3 80 01            [24] 2437 	sjmp	00170$
      000CE5                       2438 00169$:
      000CE5 22               [24] 2439 	ret
      000CE6                       2440 00170$:
                                   2441 ;	../UI_Manager/ui.c:727: save_load_settings(slot % (SLOT_COUNT - 1), (State == MANUAL_SAVE_SETTINGS_STATE) ? SAVE : LOAD);
      000CE6 75 F0 03         [24] 2442 	mov	b,#0x03
      000CE9 E5*0E            [12] 2443 	mov	a,_saveLoadPage_slot_65536_134
      000CEB 84               [48] 2444 	div	ab
      000CEC AF F0            [24] 2445 	mov	r7,b
      000CEE 74 0D            [12] 2446 	mov	a,#0x0d
      000CF0 B5*00 06         [24] 2447 	cjne	a,_State,00119$
      000CF3 7D 01            [12] 2448 	mov	r5,#0x01
      000CF5 7E 00            [12] 2449 	mov	r6,#0x00
      000CF7 80 04            [24] 2450 	sjmp	00120$
      000CF9                       2451 00119$:
      000CF9 7D 00            [12] 2452 	mov	r5,#0x00
      000CFB 7E 00            [12] 2453 	mov	r6,#0x00
      000CFD                       2454 00120$:
      000CFD 8D*00            [24] 2455 	mov	_save_load_settings_PARM_2,r5
      000CFF 8F 82            [24] 2456 	mov	dpl,r7
      000D01 12r00r00         [24] 2457 	lcall	_save_load_settings
                                   2458 ;	../UI_Manager/ui.c:728: write_string("", LINE_LENGTH, 0, LINE_1, NOT_SELECTED); 
      000D04 75*00 10         [24] 2459 	mov	_write_string_PARM_2,#0x10
      000D07 75*00 00         [24] 2460 	mov	_write_string_PARM_3,#0x00
      000D0A 75*00 01         [24] 2461 	mov	_write_string_PARM_4,#0x01
      000D0D 75*00 00         [24] 2462 	mov	_write_string_PARM_5,#0x00
      000D10 90r00rE6         [24] 2463 	mov	dptr,#___str_21
      000D13 75 F0 80         [24] 2464 	mov	b,#0x80
      000D16 12r00r00         [24] 2465 	lcall	_write_string
                                   2466 ;	../UI_Manager/ui.c:730: if(State == MANUAL_SAVE_SETTINGS_STATE){
      000D19 74 0D            [12] 2467 	mov	a,#0x0d
      000D1B B5*00 15         [24] 2468 	cjne	a,_State,00110$
                                   2469 ;	../UI_Manager/ui.c:731: write_string("Saved!", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000D1E 75*00 10         [24] 2470 	mov	_write_string_PARM_2,#0x10
      000D21 75*00 06         [24] 2471 	mov	_write_string_PARM_3,#0x06
      000D24 75*00 01         [24] 2472 	mov	_write_string_PARM_4,#0x01
      000D27 75*00 00         [24] 2473 	mov	_write_string_PARM_5,#0x00
      000D2A 90r01r13         [24] 2474 	mov	dptr,#___str_25
      000D2D 75 F0 80         [24] 2475 	mov	b,#0x80
      000D30 02r00r00         [24] 2476 	ljmp	_write_string
      000D33                       2477 00110$:
                                   2478 ;	../UI_Manager/ui.c:733: write_string("Loaded!", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000D33 75*00 10         [24] 2479 	mov	_write_string_PARM_2,#0x10
      000D36 75*00 06         [24] 2480 	mov	_write_string_PARM_3,#0x06
      000D39 75*00 01         [24] 2481 	mov	_write_string_PARM_4,#0x01
      000D3C 75*00 00         [24] 2482 	mov	_write_string_PARM_5,#0x00
      000D3F 90r01r1A         [24] 2483 	mov	dptr,#___str_26
      000D42 75 F0 80         [24] 2484 	mov	b,#0x80
                                   2485 ;	../UI_Manager/ui.c:735: break;
                                   2486 ;	../UI_Manager/ui.c:736: case BUTTON_UP:
      000D45 02r00r00         [24] 2487 	ljmp	_write_string
      000D48                       2488 00112$:
                                   2489 ;	../UI_Manager/ui.c:737: slot++;
      000D48 05*0E            [12] 2490 	inc	_saveLoadPage_slot_65536_134
                                   2491 ;	../UI_Manager/ui.c:738: changed = 0xFF;
      000D4A 75*02 FF         [24] 2492 	mov	_changed,#0xff
                                   2493 ;	../UI_Manager/ui.c:739: break;
                                   2494 ;	../UI_Manager/ui.c:740: case BUTTON_DOWN:
      000D4D 22               [24] 2495 	ret
      000D4E                       2496 00113$:
                                   2497 ;	../UI_Manager/ui.c:741: slot--;
      000D4E 15*0E            [12] 2498 	dec	_saveLoadPage_slot_65536_134
                                   2499 ;	../UI_Manager/ui.c:742: changed = 0xFF;  
      000D50 75*02 FF         [24] 2500 	mov	_changed,#0xff
                                   2501 ;	../UI_Manager/ui.c:743: break;
                                   2502 ;	../UI_Manager/ui.c:744: case BUTTON_FUNCTION:
      000D53 22               [24] 2503 	ret
      000D54                       2504 00114$:
                                   2505 ;	../UI_Manager/ui.c:745: set_ui_state(INC, NULL);
      000D54 75*0F 00         [24] 2506 	mov	_set_ui_state_PARM_2,#0x00
      000D57 75 82 01         [24] 2507 	mov	dpl,#0x01
                                   2508 ;	../UI_Manager/ui.c:746: break;
                                   2509 ;	../UI_Manager/ui.c:747: case BUTTON_FUN_UP:
      000D5A 02r0Er8C         [24] 2510 	ljmp	_set_ui_state
      000D5D                       2511 00115$:
                                   2512 ;	../UI_Manager/ui.c:748: set_ui_state(DEC, NULL);
      000D5D 75*0F 00         [24] 2513 	mov	_set_ui_state_PARM_2,#0x00
      000D60 75 82 02         [24] 2514 	mov	dpl,#0x02
                                   2515 ;	../UI_Manager/ui.c:750: }
                                   2516 ;	../UI_Manager/ui.c:751: }
      000D63 02r0Er8C         [24] 2517 	ljmp	_set_ui_state
                                   2518 ;------------------------------------------------------------
                                   2519 ;Allocation info for local variables in function 'dmxAddressPage'
                                   2520 ;------------------------------------------------------------
                                   2521 ;action                    Allocated to registers r7 
                                   2522 ;------------------------------------------------------------
                                   2523 ;	../UI_Manager/ui.c:753: void dmxAddressPage(uint8_t action){
                                   2524 ;	-----------------------------------------
                                   2525 ;	 function dmxAddressPage
                                   2526 ;	-----------------------------------------
      000D66                       2527 _dmxAddressPage:
      000D66 AF 82            [24] 2528 	mov	r7,dpl
                                   2529 ;	../UI_Manager/ui.c:755: switch (action)
      000D68 BF 02 02         [24] 2530 	cjne	r7,#0x02,00146$
      000D6B 80 2F            [24] 2531 	sjmp	00105$
      000D6D                       2532 00146$:
      000D6D BF 03 02         [24] 2533 	cjne	r7,#0x03,00147$
      000D70 80 14            [24] 2534 	sjmp	00102$
      000D72                       2535 00147$:
      000D72 BF 0A 02         [24] 2536 	cjne	r7,#0x0a,00148$
      000D75 80 1A            [24] 2537 	sjmp	00104$
      000D77                       2538 00148$:
      000D77 BF 0C 02         [24] 2539 	cjne	r7,#0x0c,00149$
      000D7A 80 29            [24] 2540 	sjmp	00106$
      000D7C                       2541 00149$:
      000D7C BF 1F 02         [24] 2542 	cjne	r7,#0x1f,00150$
      000D7F 80 05            [24] 2543 	sjmp	00102$
      000D81                       2544 00150$:
                                   2545 ;	../UI_Manager/ui.c:758: case BUTTON_UP:
      000D81 BF 65 2A         [24] 2546 	cjne	r7,#0x65,00107$
      000D84 80 0B            [24] 2547 	sjmp	00104$
      000D86                       2548 00102$:
                                   2549 ;	../UI_Manager/ui.c:759: set_dmx_address(INC);
      000D86 75 82 01         [24] 2550 	mov	dpl,#0x01
      000D89 12r00r00         [24] 2551 	lcall	_set_dmx_address
                                   2552 ;	../UI_Manager/ui.c:760: changed = 0xFF;
      000D8C 75*02 FF         [24] 2553 	mov	_changed,#0xff
                                   2554 ;	../UI_Manager/ui.c:761: break;
                                   2555 ;	../UI_Manager/ui.c:763: case BUTTON_DOWN:
      000D8F 80 1D            [24] 2556 	sjmp	00107$
      000D91                       2557 00104$:
                                   2558 ;	../UI_Manager/ui.c:764: set_dmx_address(DEC);
      000D91 75 82 02         [24] 2559 	mov	dpl,#0x02
      000D94 12r00r00         [24] 2560 	lcall	_set_dmx_address
                                   2561 ;	../UI_Manager/ui.c:765: changed = 0xFF;  
      000D97 75*02 FF         [24] 2562 	mov	_changed,#0xff
                                   2563 ;	../UI_Manager/ui.c:766: break;
                                   2564 ;	../UI_Manager/ui.c:767: case BUTTON_FUNCTION:
      000D9A 80 12            [24] 2565 	sjmp	00107$
      000D9C                       2566 00105$:
                                   2567 ;	../UI_Manager/ui.c:768: set_ui_state(INC, NULL);
      000D9C 75*0F 00         [24] 2568 	mov	_set_ui_state_PARM_2,#0x00
      000D9F 75 82 01         [24] 2569 	mov	dpl,#0x01
                                   2570 ;	../UI_Manager/ui.c:769: return;
                                   2571 ;	../UI_Manager/ui.c:770: case BUTTON_FUN_UP:
      000DA2 02r0Er8C         [24] 2572 	ljmp	_set_ui_state
      000DA5                       2573 00106$:
                                   2574 ;	../UI_Manager/ui.c:771: set_ui_state(DEC, NULL);
      000DA5 75*0F 00         [24] 2575 	mov	_set_ui_state_PARM_2,#0x00
      000DA8 75 82 02         [24] 2576 	mov	dpl,#0x02
                                   2577 ;	../UI_Manager/ui.c:772: return;
                                   2578 ;	../UI_Manager/ui.c:773: }
      000DAB 02r0Er8C         [24] 2579 	ljmp	_set_ui_state
      000DAE                       2580 00107$:
                                   2581 ;	../UI_Manager/ui.c:775: if(Changed){
      000DAE E5*01            [12] 2582 	mov	a,_Changed
      000DB0 60 21            [24] 2583 	jz	00109$
                                   2584 ;	../UI_Manager/ui.c:776: Changed = 0x00;
      000DB2 75*01 00         [24] 2585 	mov	_Changed,#0x00
                                   2586 ;	../UI_Manager/ui.c:777: changed = 0xFF;
      000DB5 75*02 FF         [24] 2587 	mov	_changed,#0xff
                                   2588 ;	../UI_Manager/ui.c:779: exe_command(CLEAR_DISPLAY);
      000DB8 90 80 00         [24] 2589 	mov	dptr,#0x8000
      000DBB 12r00r00         [24] 2590 	lcall	_exe_command
                                   2591 ;	../UI_Manager/ui.c:781: write_string("DMX Address", sizeof("DMX Address"), 2, LINE_0, NOT_SELECTED);
      000DBE 75*00 0C         [24] 2592 	mov	_write_string_PARM_2,#0x0c
      000DC1 75*00 02         [24] 2593 	mov	_write_string_PARM_3,#0x02
      000DC4 75*00 00         [24] 2594 	mov	_write_string_PARM_4,#0x00
      000DC7 75*00 00         [24] 2595 	mov	_write_string_PARM_5,#0x00
      000DCA 90r01r22         [24] 2596 	mov	dptr,#___str_27
      000DCD 75 F0 80         [24] 2597 	mov	b,#0x80
      000DD0 12r00r00         [24] 2598 	lcall	_write_string
      000DD3                       2599 00109$:
                                   2600 ;	../UI_Manager/ui.c:784: if(changed){
      000DD3 E5*02            [12] 2601 	mov	a,_changed
      000DD5 60 12            [24] 2602 	jz	00112$
                                   2603 ;	../UI_Manager/ui.c:785: changed = 0x00;
      000DD7 75*02 00         [24] 2604 	mov	_changed,#0x00
                                   2605 ;	../UI_Manager/ui.c:787: write_number(get_dmx_address(), 4, LINE_1, NOT_SELECTED);
      000DDA 12r00r00         [24] 2606 	lcall	_get_dmx_address
      000DDD 75*00 04         [24] 2607 	mov	_write_number_PARM_2,#0x04
      000DE0 75*00 01         [24] 2608 	mov	_write_number_PARM_3,#0x01
      000DE3 75*00 00         [24] 2609 	mov	_write_number_PARM_4,#0x00
                                   2610 ;	../UI_Manager/ui.c:790: }
      000DE6 02r00r00         [24] 2611 	ljmp	_write_number
      000DE9                       2612 00112$:
      000DE9 22               [24] 2613 	ret
                                   2614 ;------------------------------------------------------------
                                   2615 ;Allocation info for local variables in function 'dmxChannelPage'
                                   2616 ;------------------------------------------------------------
                                   2617 ;action                    Allocated to registers r7 
                                   2618 ;------------------------------------------------------------
                                   2619 ;	../UI_Manager/ui.c:792: void dmxChannelPage(uint8_t action){
                                   2620 ;	-----------------------------------------
                                   2621 ;	 function dmxChannelPage
                                   2622 ;	-----------------------------------------
      000DEA                       2623 _dmxChannelPage:
      000DEA AF 82            [24] 2624 	mov	r7,dpl
                                   2625 ;	../UI_Manager/ui.c:794: switch (action)
      000DEC BF 02 02         [24] 2626 	cjne	r7,#0x02,00136$
      000DEF 80 31            [24] 2627 	sjmp	00103$
      000DF1                       2628 00136$:
      000DF1 BF 03 02         [24] 2629 	cjne	r7,#0x03,00137$
      000DF4 80 0A            [24] 2630 	sjmp	00101$
      000DF6                       2631 00137$:
      000DF6 BF 0A 02         [24] 2632 	cjne	r7,#0x0a,00138$
      000DF9 80 16            [24] 2633 	sjmp	00102$
      000DFB                       2634 00138$:
                                   2635 ;	../UI_Manager/ui.c:796: case BUTTON_UP:
      000DFB BF 0C 36         [24] 2636 	cjne	r7,#0x0c,00105$
      000DFE 80 2B            [24] 2637 	sjmp	00104$
      000E00                       2638 00101$:
                                   2639 ;	../UI_Manager/ui.c:797: set_runtime_data(MODE_INDEX, INC, NULL);
      000E00 75*00 01         [24] 2640 	mov	_set_runtime_data_PARM_2,#0x01
      000E03 75*00 00         [24] 2641 	mov	_set_runtime_data_PARM_3,#0x00
      000E06 75 82 0E         [24] 2642 	mov	dpl,#0x0e
      000E09 12r00r00         [24] 2643 	lcall	_set_runtime_data
                                   2644 ;	../UI_Manager/ui.c:798: changed = 0xFF;
      000E0C 75*02 FF         [24] 2645 	mov	_changed,#0xff
                                   2646 ;	../UI_Manager/ui.c:799: break;
                                   2647 ;	../UI_Manager/ui.c:800: case BUTTON_DOWN:
      000E0F 80 23            [24] 2648 	sjmp	00105$
      000E11                       2649 00102$:
                                   2650 ;	../UI_Manager/ui.c:801: set_runtime_data(MODE_INDEX, DEC, NULL);
      000E11 75*00 02         [24] 2651 	mov	_set_runtime_data_PARM_2,#0x02
      000E14 75*00 00         [24] 2652 	mov	_set_runtime_data_PARM_3,#0x00
      000E17 75 82 0E         [24] 2653 	mov	dpl,#0x0e
      000E1A 12r00r00         [24] 2654 	lcall	_set_runtime_data
                                   2655 ;	../UI_Manager/ui.c:802: changed = 0xFF;  
      000E1D 75*02 FF         [24] 2656 	mov	_changed,#0xff
                                   2657 ;	../UI_Manager/ui.c:803: break;
                                   2658 ;	../UI_Manager/ui.c:804: case BUTTON_FUNCTION:
      000E20 80 12            [24] 2659 	sjmp	00105$
      000E22                       2660 00103$:
                                   2661 ;	../UI_Manager/ui.c:805: set_ui_state(INC, NULL);
      000E22 75*0F 00         [24] 2662 	mov	_set_ui_state_PARM_2,#0x00
      000E25 75 82 01         [24] 2663 	mov	dpl,#0x01
                                   2664 ;	../UI_Manager/ui.c:806: return;
                                   2665 ;	../UI_Manager/ui.c:807: case BUTTON_FUN_UP:
      000E28 02r0Er8C         [24] 2666 	ljmp	_set_ui_state
      000E2B                       2667 00104$:
                                   2668 ;	../UI_Manager/ui.c:808: set_ui_state(DEC, NULL);
      000E2B 75*0F 00         [24] 2669 	mov	_set_ui_state_PARM_2,#0x00
      000E2E 75 82 02         [24] 2670 	mov	dpl,#0x02
                                   2671 ;	../UI_Manager/ui.c:809: return;
                                   2672 ;	../UI_Manager/ui.c:810: }
      000E31 02r0Er8C         [24] 2673 	ljmp	_set_ui_state
      000E34                       2674 00105$:
                                   2675 ;	../UI_Manager/ui.c:812: if(Changed){
      000E34 E5*01            [12] 2676 	mov	a,_Changed
      000E36 60 21            [24] 2677 	jz	00107$
                                   2678 ;	../UI_Manager/ui.c:813: Changed = 0x00;
      000E38 75*01 00         [24] 2679 	mov	_Changed,#0x00
                                   2680 ;	../UI_Manager/ui.c:814: changed = 0xFF;
      000E3B 75*02 FF         [24] 2681 	mov	_changed,#0xff
                                   2682 ;	../UI_Manager/ui.c:816: exe_command(CLEAR_DISPLAY);
      000E3E 90 80 00         [24] 2683 	mov	dptr,#0x8000
      000E41 12r00r00         [24] 2684 	lcall	_exe_command
                                   2685 ;	../UI_Manager/ui.c:818: write_string("DMX Channel Mode", sizeof("DMX Channel Mode"), 0, LINE_0, NOT_SELECTED);
      000E44 75*00 11         [24] 2686 	mov	_write_string_PARM_2,#0x11
      000E47 75*00 00         [24] 2687 	mov	_write_string_PARM_3,#0x00
      000E4A 75*00 00         [24] 2688 	mov	_write_string_PARM_4,#0x00
      000E4D 75*00 00         [24] 2689 	mov	_write_string_PARM_5,#0x00
      000E50 90r01r2E         [24] 2690 	mov	dptr,#___str_28
      000E53 75 F0 80         [24] 2691 	mov	b,#0x80
      000E56 12r00r00         [24] 2692 	lcall	_write_string
      000E59                       2693 00107$:
                                   2694 ;	../UI_Manager/ui.c:821: if(changed){
      000E59 E5*02            [12] 2695 	mov	a,_changed
      000E5B 60 2E            [24] 2696 	jz	00110$
                                   2697 ;	../UI_Manager/ui.c:822: changed = 0x00;
      000E5D 75*02 00         [24] 2698 	mov	_changed,#0x00
                                   2699 ;	../UI_Manager/ui.c:824: write_string(getString(get_runtime_data(MODE_INDEX) + DMX_STRING_OFFSET), LINE_LENGTH, 1, LINE_1, NOT_SELECTED);
      000E60 75 82 0E         [24] 2700 	mov	dpl,#0x0e
      000E63 12r00r00         [24] 2701 	lcall	_get_runtime_data
      000E66 AF 82            [24] 2702 	mov	r7,dpl
      000E68 74 64            [12] 2703 	mov	a,#0x64
      000E6A 2F               [12] 2704 	add	a,r7
      000E6B F5 82            [12] 2705 	mov	dpl,a
      000E6D 12r0Fr2E         [24] 2706 	lcall	_getString
      000E70 AD 82            [24] 2707 	mov	r5,dpl
      000E72 AE 83            [24] 2708 	mov	r6,dph
      000E74 AF F0            [24] 2709 	mov	r7,b
      000E76 75*00 10         [24] 2710 	mov	_write_string_PARM_2,#0x10
      000E79 75*00 01         [24] 2711 	mov	_write_string_PARM_3,#0x01
      000E7C 75*00 01         [24] 2712 	mov	_write_string_PARM_4,#0x01
      000E7F 75*00 00         [24] 2713 	mov	_write_string_PARM_5,#0x00
      000E82 8D 82            [24] 2714 	mov	dpl,r5
      000E84 8E 83            [24] 2715 	mov	dph,r6
      000E86 8F F0            [24] 2716 	mov	b,r7
                                   2717 ;	../UI_Manager/ui.c:827: }
      000E88 02r00r00         [24] 2718 	ljmp	_write_string
      000E8B                       2719 00110$:
      000E8B 22               [24] 2720 	ret
                                   2721 ;------------------------------------------------------------
                                   2722 ;Allocation info for local variables in function 'set_ui_state'
                                   2723 ;------------------------------------------------------------
                                   2724 ;state                     Allocated with name '_set_ui_state_PARM_2'
                                   2725 ;inc                       Allocated to registers r7 
                                   2726 ;------------------------------------------------------------
                                   2727 ;	../UI_Manager/ui.c:829: void set_ui_state(uint8_t inc, uint8_t state){
                                   2728 ;	-----------------------------------------
                                   2729 ;	 function set_ui_state
                                   2730 ;	-----------------------------------------
      000E8C                       2731 _set_ui_state:
      000E8C AF 82            [24] 2732 	mov	r7,dpl
                                   2733 ;	../UI_Manager/ui.c:830: Changed = CHANGE_SCREEN_X;
      000E8E 75*01 FF         [24] 2734 	mov	_Changed,#0xff
                                   2735 ;	../UI_Manager/ui.c:832: switch (inc)
      000E91 BF 01 02         [24] 2736 	cjne	r7,#0x01,00193$
      000E94 80 08            [24] 2737 	sjmp	00101$
      000E96                       2738 00193$:
      000E96 BF 02 02         [24] 2739 	cjne	r7,#0x02,00194$
      000E99 80 3D            [24] 2740 	sjmp	00115$
      000E9B                       2741 00194$:
      000E9B 02r0Fr11         [24] 2742 	ljmp	00129$
                                   2743 ;	../UI_Manager/ui.c:834: case INC:
      000E9E                       2744 00101$:
                                   2745 ;	../UI_Manager/ui.c:835: state = State;
      000E9E 85*00*0F         [24] 2746 	mov	_set_ui_state_PARM_2,_State
                                   2747 ;	../UI_Manager/ui.c:836: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      000EA1 75 82 10         [24] 2748 	mov	dpl,#0x10
      000EA4 12r00r00         [24] 2749 	lcall	_get_runtime_data
      000EA7 E5 82            [12] 2750 	mov	a,dpl
      000EA9 70 17            [24] 2751 	jnz	00113$
                                   2752 ;	../UI_Manager/ui.c:837: if(state == IDLE_STATE){
      000EAB E5*0F            [12] 2753 	mov	a,_set_ui_state_PARM_2
      000EAD 70 06            [24] 2754 	jnz	00105$
                                   2755 ;	../UI_Manager/ui.c:838: state = DMX_STATE_LOW;
      000EAF 75*0F 14         [24] 2756 	mov	_set_ui_state_PARM_2,#0x14
      000EB2 02r0Fr26         [24] 2757 	ljmp	00134$
      000EB5                       2758 00105$:
                                   2759 ;	../UI_Manager/ui.c:839: } else if(++state > DMX_STATE_HIGH){
      000EB5 05*0F            [12] 2760 	inc	_set_ui_state_PARM_2
      000EB7 E5*0F            [12] 2761 	mov	a,_set_ui_state_PARM_2
      000EB9 24 EA            [12] 2762 	add	a,#0xff - 0x15
      000EBB 50 69            [24] 2763 	jnc	00134$
                                   2764 ;	../UI_Manager/ui.c:840: state = IDLE_STATE;
      000EBD 75*0F 00         [24] 2765 	mov	_set_ui_state_PARM_2,#0x00
      000EC0 80 64            [24] 2766 	sjmp	00134$
      000EC2                       2767 00113$:
                                   2768 ;	../UI_Manager/ui.c:843: if(state == IDLE_STATE){
      000EC2 E5*0F            [12] 2769 	mov	a,_set_ui_state_PARM_2
      000EC4 70 05            [24] 2770 	jnz	00110$
                                   2771 ;	../UI_Manager/ui.c:844: state = IDLE_STATE + 1; 
      000EC6 75*0F 01         [24] 2772 	mov	_set_ui_state_PARM_2,#0x01
      000EC9 80 5B            [24] 2773 	sjmp	00134$
      000ECB                       2774 00110$:
                                   2775 ;	../UI_Manager/ui.c:845: } else if(++state > MANUAL_STATE_HIGH){
      000ECB 05*0F            [12] 2776 	inc	_set_ui_state_PARM_2
      000ECD E5*0F            [12] 2777 	mov	a,_set_ui_state_PARM_2
      000ECF 24 F1            [12] 2778 	add	a,#0xff - 0x0e
      000ED1 50 53            [24] 2779 	jnc	00134$
                                   2780 ;	../UI_Manager/ui.c:846: State = IDLE_STATE;
      000ED3 75*00 00         [24] 2781 	mov	_State,#0x00
                                   2782 ;	../UI_Manager/ui.c:849: break;
                                   2783 ;	../UI_Manager/ui.c:850: case DEC:
      000ED6 80 4E            [24] 2784 	sjmp	00134$
      000ED8                       2785 00115$:
                                   2786 ;	../UI_Manager/ui.c:851: state = State;
      000ED8 85*00*0F         [24] 2787 	mov	_set_ui_state_PARM_2,_State
                                   2788 ;	../UI_Manager/ui.c:852: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      000EDB 75 82 10         [24] 2789 	mov	dpl,#0x10
      000EDE 12r00r00         [24] 2790 	lcall	_get_runtime_data
      000EE1 E5 82            [12] 2791 	mov	a,dpl
      000EE3 70 16            [24] 2792 	jnz	00127$
                                   2793 ;	../UI_Manager/ui.c:853: if(state == IDLE_STATE){
      000EE5 E5*0F            [12] 2794 	mov	a,_set_ui_state_PARM_2
      000EE7 70 05            [24] 2795 	jnz	00119$
                                   2796 ;	../UI_Manager/ui.c:854: state = DMX_STATE_HIGH;
      000EE9 75*0F 15         [24] 2797 	mov	_set_ui_state_PARM_2,#0x15
      000EEC 80 38            [24] 2798 	sjmp	00134$
      000EEE                       2799 00119$:
                                   2800 ;	../UI_Manager/ui.c:855: } else if(--State < DMX_STATE_LOW){
      000EEE 15*00            [12] 2801 	dec	_State
      000EF0 74 EC            [12] 2802 	mov	a,#0x100 - 0x14
      000EF2 25*00            [12] 2803 	add	a,_State
      000EF4 40 30            [24] 2804 	jc	00134$
                                   2805 ;	../UI_Manager/ui.c:856: State = IDLE_STATE;
      000EF6 75*00 00         [24] 2806 	mov	_State,#0x00
      000EF9 80 2B            [24] 2807 	sjmp	00134$
      000EFB                       2808 00127$:
                                   2809 ;	../UI_Manager/ui.c:859: if(state == IDLE_STATE){
      000EFB E5*0F            [12] 2810 	mov	a,_set_ui_state_PARM_2
      000EFD 70 05            [24] 2811 	jnz	00124$
                                   2812 ;	../UI_Manager/ui.c:860: state = MANUAL_STATE_HIGH; 
      000EFF 75*0F 0E         [24] 2813 	mov	_set_ui_state_PARM_2,#0x0e
      000F02 80 22            [24] 2814 	sjmp	00134$
      000F04                       2815 00124$:
                                   2816 ;	../UI_Manager/ui.c:861: } else if(--State < DMX_STATE_HIGH){
      000F04 15*00            [12] 2817 	dec	_State
      000F06 74 EB            [12] 2818 	mov	a,#0x100 - 0x15
      000F08 25*00            [12] 2819 	add	a,_State
      000F0A 40 1A            [24] 2820 	jc	00134$
                                   2821 ;	../UI_Manager/ui.c:862: State = IDLE_STATE;
      000F0C 75*00 00         [24] 2822 	mov	_State,#0x00
                                   2823 ;	../UI_Manager/ui.c:865: break;
                                   2824 ;	../UI_Manager/ui.c:866: default: 
      000F0F 80 15            [24] 2825 	sjmp	00134$
      000F11                       2826 00129$:
                                   2827 ;	../UI_Manager/ui.c:867: if(state <= MANUAL_STATE_HIGH || (state >= DMX_STATE_LOW && state <= DMX_STATE_HIGH)){
      000F11 E5*0F            [12] 2828 	mov	a,_set_ui_state_PARM_2
      000F13 24 F1            [12] 2829 	add	a,#0xff - 0x0e
      000F15 50 0C            [24] 2830 	jnc	00130$
      000F17 74 EC            [12] 2831 	mov	a,#0x100 - 0x14
      000F19 25*0F            [12] 2832 	add	a,_set_ui_state_PARM_2
      000F1B 50 09            [24] 2833 	jnc	00134$
      000F1D E5*0F            [12] 2834 	mov	a,_set_ui_state_PARM_2
      000F1F 24 EA            [12] 2835 	add	a,#0xff - 0x15
      000F21 40 03            [24] 2836 	jc	00134$
      000F23                       2837 00130$:
                                   2838 ;	../UI_Manager/ui.c:868: state = IDLE_STATE;
      000F23 75*0F 00         [24] 2839 	mov	_set_ui_state_PARM_2,#0x00
                                   2840 ;	../UI_Manager/ui.c:871: }
      000F26                       2841 00134$:
                                   2842 ;	../UI_Manager/ui.c:873: State = state;
      000F26 85*0F*00         [24] 2843 	mov	_State,_set_ui_state_PARM_2
                                   2844 ;	../UI_Manager/ui.c:874: }
      000F29 22               [24] 2845 	ret
                                   2846 ;------------------------------------------------------------
                                   2847 ;Allocation info for local variables in function 'get_ui_state'
                                   2848 ;------------------------------------------------------------
                                   2849 ;	../UI_Manager/ui.c:876: uint8_t get_ui_state(){
                                   2850 ;	-----------------------------------------
                                   2851 ;	 function get_ui_state
                                   2852 ;	-----------------------------------------
      000F2A                       2853 _get_ui_state:
                                   2854 ;	../UI_Manager/ui.c:877: return State;
      000F2A 85*00 82         [24] 2855 	mov	dpl,_State
                                   2856 ;	../UI_Manager/ui.c:878: }
      000F2D 22               [24] 2857 	ret
                                   2858 ;------------------------------------------------------------
                                   2859 ;Allocation info for local variables in function 'getString'
                                   2860 ;------------------------------------------------------------
                                   2861 ;index                     Allocated to registers r7 
                                   2862 ;------------------------------------------------------------
                                   2863 ;	../UI_Manager/ui.c:880: char* getString(uint8_t index){
                                   2864 ;	-----------------------------------------
                                   2865 ;	 function getString
                                   2866 ;	-----------------------------------------
      000F2E                       2867 _getString:
      000F2E AF 82            [24] 2868 	mov	r7,dpl
                                   2869 ;	../UI_Manager/ui.c:881: switch (index)
      000F30 8F 06            [24] 2870 	mov	ar6,r7
      000F32 BE 00 03         [24] 2871 	cjne	r6,#0x00,00299$
      000F35 02r10r2D         [24] 2872 	ljmp	00103$
      000F38                       2873 00299$:
      000F38 BE 01 03         [24] 2874 	cjne	r6,#0x01,00300$
      000F3B 02r10r26         [24] 2875 	ljmp	00102$
      000F3E                       2876 00300$:
      000F3E BF 02 03         [24] 2877 	cjne	r7,#0x02,00301$
      000F41 02r10r1F         [24] 2878 	ljmp	00101$
      000F44                       2879 00301$:
      000F44 BF 14 03         [24] 2880 	cjne	r7,#0x14,00302$
      000F47 02r10r34         [24] 2881 	ljmp	00104$
      000F4A                       2882 00302$:
      000F4A BF 15 03         [24] 2883 	cjne	r7,#0x15,00303$
      000F4D 02r10r3B         [24] 2884 	ljmp	00105$
      000F50                       2885 00303$:
      000F50 BF 16 03         [24] 2886 	cjne	r7,#0x16,00304$
      000F53 02r10r42         [24] 2887 	ljmp	00106$
      000F56                       2888 00304$:
      000F56 BF 17 03         [24] 2889 	cjne	r7,#0x17,00305$
      000F59 02r10r49         [24] 2890 	ljmp	00107$
      000F5C                       2891 00305$:
      000F5C BF 18 03         [24] 2892 	cjne	r7,#0x18,00306$
      000F5F 02r10r57         [24] 2893 	ljmp	00109$
      000F62                       2894 00306$:
      000F62 BF 19 03         [24] 2895 	cjne	r7,#0x19,00307$
      000F65 02r10r5E         [24] 2896 	ljmp	00110$
      000F68                       2897 00307$:
      000F68 BF 1A 03         [24] 2898 	cjne	r7,#0x1a,00308$
      000F6B 02r10r50         [24] 2899 	ljmp	00108$
      000F6E                       2900 00308$:
      000F6E BF 28 03         [24] 2901 	cjne	r7,#0x28,00309$
      000F71 02r11r06         [24] 2902 	ljmp	00134$
      000F74                       2903 00309$:
      000F74 BF 29 03         [24] 2904 	cjne	r7,#0x29,00310$
      000F77 02r11r0D         [24] 2905 	ljmp	00135$
      000F7A                       2906 00310$:
      000F7A BF 2A 03         [24] 2907 	cjne	r7,#0x2a,00311$
      000F7D 02r11r14         [24] 2908 	ljmp	00136$
      000F80                       2909 00311$:
      000F80 BF 2B 03         [24] 2910 	cjne	r7,#0x2b,00312$
      000F83 02r11r1B         [24] 2911 	ljmp	00137$
      000F86                       2912 00312$:
      000F86 BF 2C 03         [24] 2913 	cjne	r7,#0x2c,00313$
      000F89 02r11r22         [24] 2914 	ljmp	00138$
      000F8C                       2915 00313$:
      000F8C BF 2D 03         [24] 2916 	cjne	r7,#0x2d,00314$
      000F8F 02r11r29         [24] 2917 	ljmp	00139$
      000F92                       2918 00314$:
      000F92 BF 3C 03         [24] 2919 	cjne	r7,#0x3c,00315$
      000F95 02r10r81         [24] 2920 	ljmp	00115$
      000F98                       2921 00315$:
      000F98 BF 3D 03         [24] 2922 	cjne	r7,#0x3d,00316$
      000F9B 02r10r88         [24] 2923 	ljmp	00116$
      000F9E                       2924 00316$:
      000F9E BF 3E 03         [24] 2925 	cjne	r7,#0x3e,00317$
      000FA1 02r10r8F         [24] 2926 	ljmp	00117$
      000FA4                       2927 00317$:
      000FA4 BF 3F 03         [24] 2928 	cjne	r7,#0x3f,00318$
      000FA7 02r10r96         [24] 2929 	ljmp	00118$
      000FAA                       2930 00318$:
      000FAA BF 40 03         [24] 2931 	cjne	r7,#0x40,00319$
      000FAD 02r10r9D         [24] 2932 	ljmp	00119$
      000FB0                       2933 00319$:
      000FB0 BF 41 03         [24] 2934 	cjne	r7,#0x41,00320$
      000FB3 02r10rA4         [24] 2935 	ljmp	00120$
      000FB6                       2936 00320$:
      000FB6 BF 42 03         [24] 2937 	cjne	r7,#0x42,00321$
      000FB9 02r10rAB         [24] 2938 	ljmp	00121$
      000FBC                       2939 00321$:
      000FBC BF 43 03         [24] 2940 	cjne	r7,#0x43,00322$
      000FBF 02r10rB2         [24] 2941 	ljmp	00122$
      000FC2                       2942 00322$:
      000FC2 BF 44 03         [24] 2943 	cjne	r7,#0x44,00323$
      000FC5 02r10rB9         [24] 2944 	ljmp	00123$
      000FC8                       2945 00323$:
      000FC8 BF 45 03         [24] 2946 	cjne	r7,#0x45,00324$
      000FCB 02r10rC0         [24] 2947 	ljmp	00124$
      000FCE                       2948 00324$:
      000FCE BF 46 03         [24] 2949 	cjne	r7,#0x46,00325$
      000FD1 02r10rC7         [24] 2950 	ljmp	00125$
      000FD4                       2951 00325$:
      000FD4 BF 47 03         [24] 2952 	cjne	r7,#0x47,00326$
      000FD7 02r10rCE         [24] 2953 	ljmp	00126$
      000FDA                       2954 00326$:
      000FDA BF 48 03         [24] 2955 	cjne	r7,#0x48,00327$
      000FDD 02r10rD5         [24] 2956 	ljmp	00127$
      000FE0                       2957 00327$:
      000FE0 BF 50 03         [24] 2958 	cjne	r7,#0x50,00328$
      000FE3 02r10rDC         [24] 2959 	ljmp	00128$
      000FE6                       2960 00328$:
      000FE6 BF 51 03         [24] 2961 	cjne	r7,#0x51,00329$
      000FE9 02r10rE3         [24] 2962 	ljmp	00129$
      000FEC                       2963 00329$:
      000FEC BF 52 03         [24] 2964 	cjne	r7,#0x52,00330$
      000FEF 02r10rEA         [24] 2965 	ljmp	00130$
      000FF2                       2966 00330$:
      000FF2 BF 64 03         [24] 2967 	cjne	r7,#0x64,00331$
      000FF5 02r10rF1         [24] 2968 	ljmp	00131$
      000FF8                       2969 00331$:
      000FF8 BF 65 03         [24] 2970 	cjne	r7,#0x65,00332$
      000FFB 02r10rF8         [24] 2971 	ljmp	00132$
      000FFE                       2972 00332$:
      000FFE BF 66 03         [24] 2973 	cjne	r7,#0x66,00333$
      001001 02r10rFF         [24] 2974 	ljmp	00133$
      001004                       2975 00333$:
      001004 BF CE 03         [24] 2976 	cjne	r7,#0xce,00334$
      001007 02r10r65         [24] 2977 	ljmp	00111$
      00100A                       2978 00334$:
      00100A BF CF 03         [24] 2979 	cjne	r7,#0xcf,00335$
      00100D 02r10r73         [24] 2980 	ljmp	00113$
      001010                       2981 00335$:
      001010 BF D0 03         [24] 2982 	cjne	r7,#0xd0,00336$
      001013 02r10r6C         [24] 2983 	ljmp	00112$
      001016                       2984 00336$:
      001016 BF D1 03         [24] 2985 	cjne	r7,#0xd1,00337$
      001019 02r10r7A         [24] 2986 	ljmp	00114$
      00101C                       2987 00337$:
      00101C 02r11r30         [24] 2988 	ljmp	00140$
                                   2989 ;	../UI_Manager/ui.c:883: case POWER_STRING_OFFSET + OPTION_FOG_LOW:
      00101F                       2990 00101$:
                                   2991 ;	../UI_Manager/ui.c:884: return "Wimpy";
      00101F 90r01r3F         [24] 2992 	mov	dptr,#___str_29
      001022 75 F0 80         [24] 2993 	mov	b,#0x80
      001025 22               [24] 2994 	ret
                                   2995 ;	../UI_Manager/ui.c:885: case POWER_STRING_OFFSET + OPTION_FOG_MEDIUM:
      001026                       2996 00102$:
                                   2997 ;	../UI_Manager/ui.c:886: return "Mild";
      001026 90r01r45         [24] 2998 	mov	dptr,#___str_30
      001029 75 F0 80         [24] 2999 	mov	b,#0x80
      00102C 22               [24] 3000 	ret
                                   3001 ;	../UI_Manager/ui.c:887: case POWER_STRING_OFFSET + OPTION_FOG_HIGH:
      00102D                       3002 00103$:
                                   3003 ;	../UI_Manager/ui.c:888: return "Blazin";
      00102D 90r01r4A         [24] 3004 	mov	dptr,#___str_31
      001030 75 F0 80         [24] 3005 	mov	b,#0x80
      001033 22               [24] 3006 	ret
                                   3007 ;	../UI_Manager/ui.c:890: case MACRO_STRING_OFFSET + OPTION_MACRO_NONE:
      001034                       3008 00104$:
                                   3009 ;	../UI_Manager/ui.c:891: return "Off";
      001034 90r00rE2         [24] 3010 	mov	dptr,#___str_20
      001037 75 F0 80         [24] 3011 	mov	b,#0x80
      00103A 22               [24] 3012 	ret
                                   3013 ;	../UI_Manager/ui.c:892: case MACRO_STRING_OFFSET + OPTION_MACRO_RAINBOW_DMX:
      00103B                       3014 00105$:
                                   3015 ;	../UI_Manager/ui.c:893: return "Rainbow";
      00103B 90r01r51         [24] 3016 	mov	dptr,#___str_32
      00103E 75 F0 80         [24] 3017 	mov	b,#0x80
      001041 22               [24] 3018 	ret
                                   3019 ;	../UI_Manager/ui.c:894: case MACRO_STRING_OFFSET + OPTION_MACRO_FIRE_DMX:
      001042                       3020 00106$:
                                   3021 ;	../UI_Manager/ui.c:895: return "Fire";
      001042 90r01r59         [24] 3022 	mov	dptr,#___str_33
      001045 75 F0 80         [24] 3023 	mov	b,#0x80
      001048 22               [24] 3024 	ret
                                   3025 ;	../UI_Manager/ui.c:896: case MACRO_STRING_OFFSET + OPTION_MACRO_WATER_DMX:
      001049                       3026 00107$:
                                   3027 ;	../UI_Manager/ui.c:897: return "Water";
      001049 90r01r5E         [24] 3028 	mov	dptr,#___str_34
      00104C 75 F0 80         [24] 3029 	mov	b,#0x80
      00104F 22               [24] 3030 	ret
                                   3031 ;	../UI_Manager/ui.c:898: case MACRO_STRING_OFFSET + OPTION_MACRO_STORM_DMX:
      001050                       3032 00108$:
                                   3033 ;	../UI_Manager/ui.c:899: return "Storm";
      001050 90r01r64         [24] 3034 	mov	dptr,#___str_35
      001053 75 F0 80         [24] 3035 	mov	b,#0x80
      001056 22               [24] 3036 	ret
                                   3037 ;	../UI_Manager/ui.c:900: case MACRO_STRING_OFFSET + OPTION_MACRO_ACID_DMX:
      001057                       3038 00109$:
                                   3039 ;	../UI_Manager/ui.c:901: return "Acid";
      001057 90r01r6A         [24] 3040 	mov	dptr,#___str_36
      00105A 75 F0 80         [24] 3041 	mov	b,#0x80
      00105D 22               [24] 3042 	ret
                                   3043 ;	../UI_Manager/ui.c:902: case MACRO_STRING_OFFSET + OPTION_MACRO_ETHER_DMX:
      00105E                       3044 00110$:
                                   3045 ;	../UI_Manager/ui.c:903: return "Ether";
      00105E 90r01r6F         [24] 3046 	mov	dptr,#___str_37
      001061 75 F0 80         [24] 3047 	mov	b,#0x80
      001064 22               [24] 3048 	ret
                                   3049 ;	../UI_Manager/ui.c:905: case COLOR_STRING_OFFSET + MANUAL_RED_STATE:
      001065                       3050 00111$:
                                   3051 ;	../UI_Manager/ui.c:906: return "Red Level";
      001065 90r01r75         [24] 3052 	mov	dptr,#___str_38
      001068 75 F0 80         [24] 3053 	mov	b,#0x80
      00106B 22               [24] 3054 	ret
                                   3055 ;	../UI_Manager/ui.c:907: case COLOR_STRING_OFFSET + MANUAL_GREEN_STATE:
      00106C                       3056 00112$:
                                   3057 ;	../UI_Manager/ui.c:908: return "Green Level";
      00106C 90r01r7F         [24] 3058 	mov	dptr,#___str_39
      00106F 75 F0 80         [24] 3059 	mov	b,#0x80
      001072 22               [24] 3060 	ret
                                   3061 ;	../UI_Manager/ui.c:909: case COLOR_STRING_OFFSET + MANUAL_BLUE_STATE:
      001073                       3062 00113$:
                                   3063 ;	../UI_Manager/ui.c:910: return "Blue Level";
      001073 90r01r8B         [24] 3064 	mov	dptr,#___str_40
      001076 75 F0 80         [24] 3065 	mov	b,#0x80
      001079 22               [24] 3066 	ret
                                   3067 ;	../UI_Manager/ui.c:911: case COLOR_STRING_OFFSET + MANUAL_STROBE_STATE:
      00107A                       3068 00114$:
                                   3069 ;	../UI_Manager/ui.c:912: return "Strobe Level";
      00107A 90r01r96         [24] 3070 	mov	dptr,#___str_41
      00107D 75 F0 80         [24] 3071 	mov	b,#0x80
      001080 22               [24] 3072 	ret
                                   3073 ;	../UI_Manager/ui.c:914: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACITON_NONE:
      001081                       3074 00115$:
                                   3075 ;	../UI_Manager/ui.c:915: return "No Action";
      001081 90r01rA3         [24] 3076 	mov	dptr,#___str_42
      001084 75 F0 80         [24] 3077 	mov	b,#0x80
      001087 22               [24] 3078 	ret
                                   3079 ;	../UI_Manager/ui.c:916: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_CHOOSE_MACRO:
      001088                       3080 00116$:
                                   3081 ;	../UI_Manager/ui.c:917: return "Choose Macro";
      001088 90r01rAD         [24] 3082 	mov	dptr,#___str_43
      00108B 75 F0 80         [24] 3083 	mov	b,#0x80
      00108E 22               [24] 3084 	ret
                                   3085 ;	../UI_Manager/ui.c:918: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_RED:
      00108F                       3086 00117$:
                                   3087 ;	../UI_Manager/ui.c:919: return "Red";
      00108F 90r01rBA         [24] 3088 	mov	dptr,#___str_44
      001092 75 F0 80         [24] 3089 	mov	b,#0x80
      001095 22               [24] 3090 	ret
                                   3091 ;	../UI_Manager/ui.c:920: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_YELLOW:
      001096                       3092 00118$:
                                   3093 ;	../UI_Manager/ui.c:921: return "Yellow";
      001096 90r01rBE         [24] 3094 	mov	dptr,#___str_45
      001099 75 F0 80         [24] 3095 	mov	b,#0x80
      00109C 22               [24] 3096 	ret
                                   3097 ;	../UI_Manager/ui.c:922: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_GREEN:
      00109D                       3098 00119$:
                                   3099 ;	../UI_Manager/ui.c:923: return "Green";
      00109D 90r01rC5         [24] 3100 	mov	dptr,#___str_46
      0010A0 75 F0 80         [24] 3101 	mov	b,#0x80
      0010A3 22               [24] 3102 	ret
                                   3103 ;	../UI_Manager/ui.c:924: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_CYAN:
      0010A4                       3104 00120$:
                                   3105 ;	../UI_Manager/ui.c:925: return "Cyan";
      0010A4 90r01rCB         [24] 3106 	mov	dptr,#___str_47
      0010A7 75 F0 80         [24] 3107 	mov	b,#0x80
      0010AA 22               [24] 3108 	ret
                                   3109 ;	../UI_Manager/ui.c:926: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_BLUE:
      0010AB                       3110 00121$:
                                   3111 ;	../UI_Manager/ui.c:927: return "Blue";
      0010AB 90r01rD0         [24] 3112 	mov	dptr,#___str_48
      0010AE 75 F0 80         [24] 3113 	mov	b,#0x80
      0010B1 22               [24] 3114 	ret
                                   3115 ;	../UI_Manager/ui.c:928: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_MAGENTA:
      0010B2                       3116 00122$:
                                   3117 ;	../UI_Manager/ui.c:929: return "Magenta";
      0010B2 90r01rD5         [24] 3118 	mov	dptr,#___str_49
      0010B5 75 F0 80         [24] 3119 	mov	b,#0x80
      0010B8 22               [24] 3120 	ret
                                   3121 ;	../UI_Manager/ui.c:930: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_SLOW:
      0010B9                       3122 00123$:
                                   3123 ;	../UI_Manager/ui.c:931: return "Strobe Slow";
      0010B9 90r01rDD         [24] 3124 	mov	dptr,#___str_50
      0010BC 75 F0 80         [24] 3125 	mov	b,#0x80
      0010BF 22               [24] 3126 	ret
                                   3127 ;	../UI_Manager/ui.c:932: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_MEDIUM:
      0010C0                       3128 00124$:
                                   3129 ;	../UI_Manager/ui.c:933: return "Strobe Medium";
      0010C0 90r01rE9         [24] 3130 	mov	dptr,#___str_51
      0010C3 75 F0 80         [24] 3131 	mov	b,#0x80
      0010C6 22               [24] 3132 	ret
                                   3133 ;	../UI_Manager/ui.c:934: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_FAST:
      0010C7                       3134 00125$:
                                   3135 ;	../UI_Manager/ui.c:935: return "Strobe Fast";
      0010C7 90r01rF7         [24] 3136 	mov	dptr,#___str_52
      0010CA 75 F0 80         [24] 3137 	mov	b,#0x80
      0010CD 22               [24] 3138 	ret
                                   3139 ;	../UI_Manager/ui.c:936: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_BLACKOUT:
      0010CE                       3140 00126$:
                                   3141 ;	../UI_Manager/ui.c:937: return "Blackout";
      0010CE 90r02r03         [24] 3142 	mov	dptr,#___str_53
      0010D1 75 F0 80         [24] 3143 	mov	b,#0x80
      0010D4 22               [24] 3144 	ret
                                   3145 ;	../UI_Manager/ui.c:938: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_WHITEOUT:
      0010D5                       3146 00127$:
                                   3147 ;	../UI_Manager/ui.c:939: return "Whiteout";         
      0010D5 90r02r0C         [24] 3148 	mov	dptr,#___str_54
      0010D8 75 F0 80         [24] 3149 	mov	b,#0x80
      0010DB 22               [24] 3150 	ret
                                   3151 ;	../UI_Manager/ui.c:941: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_1: 
      0010DC                       3152 00128$:
                                   3153 ;	../UI_Manager/ui.c:942: return "Slot 1";   
      0010DC 90r02r15         [24] 3154 	mov	dptr,#___str_55
      0010DF 75 F0 80         [24] 3155 	mov	b,#0x80
      0010E2 22               [24] 3156 	ret
                                   3157 ;	../UI_Manager/ui.c:943: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_2: 
      0010E3                       3158 00129$:
                                   3159 ;	../UI_Manager/ui.c:944: return "Slot 2";   
      0010E3 90r02r1C         [24] 3160 	mov	dptr,#___str_56
      0010E6 75 F0 80         [24] 3161 	mov	b,#0x80
      0010E9 22               [24] 3162 	ret
                                   3163 ;	../UI_Manager/ui.c:945: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_3: 
      0010EA                       3164 00130$:
                                   3165 ;	../UI_Manager/ui.c:946: return "Slot 3"; 
      0010EA 90r02r23         [24] 3166 	mov	dptr,#___str_57
      0010ED 75 F0 80         [24] 3167 	mov	b,#0x80
                                   3168 ;	../UI_Manager/ui.c:948: case DMX_STRING_OFFSET + OPTION_DMX_MODE_9: 
      0010F0 22               [24] 3169 	ret
      0010F1                       3170 00131$:
                                   3171 ;	../UI_Manager/ui.c:949: return "10 All";     
      0010F1 90r02r2A         [24] 3172 	mov	dptr,#___str_58
      0010F4 75 F0 80         [24] 3173 	mov	b,#0x80
                                   3174 ;	../UI_Manager/ui.c:950: case DMX_STRING_OFFSET + OPTION_DMX_MODE_3: 
      0010F7 22               [24] 3175 	ret
      0010F8                       3176 00132$:
                                   3177 ;	../UI_Manager/ui.c:951: return "3 Fog + Macro";   
      0010F8 90r02r31         [24] 3178 	mov	dptr,#___str_59
      0010FB 75 F0 80         [24] 3179 	mov	b,#0x80
                                   3180 ;	../UI_Manager/ui.c:952: case DMX_STRING_OFFSET + OPTION_DMX_MODE_1: 
      0010FE 22               [24] 3181 	ret
      0010FF                       3182 00133$:
                                   3183 ;	../UI_Manager/ui.c:953: return "1 Fog";    
      0010FF 90r02r3F         [24] 3184 	mov	dptr,#___str_60
      001102 75 F0 80         [24] 3185 	mov	b,#0x80
                                   3186 ;	../UI_Manager/ui.c:955: case SECRET_STRING_OFFSET + 0:
      001105 22               [24] 3187 	ret
      001106                       3188 00134$:
                                   3189 ;	../UI_Manager/ui.c:956: return "0x486F6C6D6573";
      001106 90r02r45         [24] 3190 	mov	dptr,#___str_61
      001109 75 F0 80         [24] 3191 	mov	b,#0x80
                                   3192 ;	../UI_Manager/ui.c:957: case SECRET_STRING_OFFSET + 1:
      00110C 22               [24] 3193 	ret
      00110D                       3194 00135$:
                                   3195 ;	../UI_Manager/ui.c:958: return "& 576174736F6E";
      00110D 90r02r54         [24] 3196 	mov	dptr,#___str_62
      001110 75 F0 80         [24] 3197 	mov	b,#0x80
                                   3198 ;	../UI_Manager/ui.c:959: case SECRET_STRING_OFFSET + 2:
      001113 22               [24] 3199 	ret
      001114                       3200 00136$:
                                   3201 ;	../UI_Manager/ui.c:960: return "626F74684F776E41";
      001114 90r02r63         [24] 3202 	mov	dptr,#___str_63
      001117 75 F0 80         [24] 3203 	mov	b,#0x80
                                   3204 ;	../UI_Manager/ui.c:961: case SECRET_STRING_OFFSET + 3:
      00111A 22               [24] 3205 	ret
      00111B                       3206 00137$:
                                   3207 ;	../UI_Manager/ui.c:962: return "536E6F7762616C6C";
      00111B 90r02r74         [24] 3208 	mov	dptr,#___str_64
      00111E 75 F0 80         [24] 3209 	mov	b,#0x80
                                   3210 ;	../UI_Manager/ui.c:963: case SECRET_STRING_OFFSET + 4:
      001121 22               [24] 3211 	ret
      001122                       3212 00138$:
                                   3213 ;	../UI_Manager/ui.c:964: return "4D6F726961727479";
      001122 90r02r85         [24] 3214 	mov	dptr,#___str_65
      001125 75 F0 80         [24] 3215 	mov	b,#0x80
                                   3216 ;	../UI_Manager/ui.c:965: case SECRET_STRING_OFFSET + 5:
      001128 22               [24] 3217 	ret
      001129                       3218 00139$:
                                   3219 ;	../UI_Manager/ui.c:966: return "646F65734E6F74 ;";
      001129 90r02r96         [24] 3220 	mov	dptr,#___str_66
      00112C 75 F0 80         [24] 3221 	mov	b,#0x80
                                   3222 ;	../UI_Manager/ui.c:967: }
      00112F 22               [24] 3223 	ret
      001130                       3224 00140$:
                                   3225 ;	../UI_Manager/ui.c:969: return 0;
      001130 90 00 00         [24] 3226 	mov	dptr,#0x0000
      001133 75 F0 00         [24] 3227 	mov	b,#0x00
                                   3228 ;	../UI_Manager/ui.c:970: }
      001136 22               [24] 3229 	ret
                                   3230 	.area CSEG    (CODE)
                                   3231 	.area CONST   (CODE)
      000000                       3232 ___str_0:
      000000 54 61 6E 6B 20 4C 69  3233 	.ascii "Tank Lights Off"
             67 68 74 73 20 4F 66
             66
      00000F 00                    3234 	.db 0x00
      000010                       3235 ___str_1:
      000010 54 61 6E 6B 20 4C 69  3236 	.ascii "Tank Lights On"
             67 68 74 73 20 4F 6E
      00001E 00                    3237 	.db 0x00
      00001F                       3238 ___str_2:
      00001F 46 75 6E 2B 4D 61 6E  3239 	.ascii "Fun+Man to Undo"
             20 74 6F 20 55 6E 64
             6F
      00002E 00                    3240 	.db 0x00
      00002F                       3241 ___str_3:
      00002F 41 74 6D 6F 73 46 45  3242 	.ascii "AtmosFEAR 221B"
             41 52 20 32 32 31 42
      00003D 00                    3243 	.db 0x00
      00003E                       3244 ___str_4:
      00003E 42 79 20 42 6C 69 7A  3245 	.ascii "By Blizzard Pro"
             7A 61 72 64 20 50 72
             6F
      00004D 00                    3246 	.db 0x00
      00004E                       3247 ___str_5:
      00004E 50 43 20 4C 6F 61 64  3248 	.ascii "PC Load Letter"
             20 4C 65 74 74 65 72
      00005C 00                    3249 	.db 0x00
      00005D                       3250 ___str_6:
      00005D 42 75 72 73 74 20 74  3251 	.ascii "Burst to Refill"
             6F 20 52 65 66 69 6C
             6C
      00006C 00                    3252 	.db 0x00
      00006D                       3253 ___str_7:
      00006D 4D 61 6E 75 61 6C 20  3254 	.ascii "Manual Mode"
             4D 6F 64 65
      000078 00                    3255 	.db 0x00
      000079                       3256 ___str_8:
      000079 41 64 64 72           3257 	.ascii "Addr"
      00007D 00                    3258 	.db 0x00
      00007E                       3259 ___str_9:
      00007E 4D 6F 64 65           3260 	.ascii "Mode"
      000082 00                    3261 	.db 0x00
      000083                       3262 ___str_10:
      000083 44 4D 58 20 4F 6B     3263 	.ascii "DMX Ok"
      000089 00                    3264 	.db 0x00
      00008A                       3265 ___str_11:
      00008A 4E 6F 20 44 4D 58     3266 	.ascii "No DMX"
      000090 00                    3267 	.db 0x00
      000091                       3268 ___str_12:
      000091 49 6E 74 65 72 76 61  3269 	.ascii "Interval"
             6C
      000099 00                    3270 	.db 0x00
      00009A                       3271 ___str_13:
      00009A 44 75 72 61 74 69 6F  3272 	.ascii "Duration"
             6E
      0000A2 00                    3273 	.db 0x00
      0000A3                       3274 ___str_14:
      0000A3 46 6F 67 20 4C 65 76  3275 	.ascii "Fog Level"
             65 6C
      0000AC 00                    3276 	.db 0x00
      0000AD                       3277 ___str_15:
      0000AD 46 6F 67 20 49 6E 74  3278 	.ascii "Fog Interval"
             65 72 76 61 6C
      0000B9 00                    3279 	.db 0x00
      0000BA                       3280 ___str_16:
      0000BA 53 65 63 6F 6E 64 73  3281 	.ascii "Seconds"
      0000C1 00                    3282 	.db 0x00
      0000C2                       3283 ___str_17:
      0000C2 46 6F 67 20 44 75 72  3284 	.ascii "Fog Duration"
             61 74 69 6F 6E
      0000CE 00                    3285 	.db 0x00
      0000CF                       3286 ___str_18:
      0000CF 4D 61 63 72 6F 73     3287 	.ascii "Macros"
      0000D5 00                    3288 	.db 0x00
      0000D6                       3289 ___str_19:
      0000D6 4D 61 63 72 6F 20 53  3290 	.ascii "Macro Speed"
             70 65 65 64
      0000E1 00                    3291 	.db 0x00
      0000E2                       3292 ___str_20:
      0000E2 4F 66 66              3293 	.ascii "Off"
      0000E5 00                    3294 	.db 0x00
      0000E6                       3295 ___str_21:
      0000E6 00                    3296 	.db 0x00
      0000E7                       3297 ___str_22:
      0000E7 52 65 6D 6F 74 65 20  3298 	.ascii "Remote X Action"
             58 20 41 63 74 69 6F
             6E
      0000F6 00                    3299 	.db 0x00
      0000F7                       3300 ___str_23:
      0000F7 53 61 76 65 20 53 65  3301 	.ascii "Save Settings"
             74 74 69 6E 67 73
      000104 00                    3302 	.db 0x00
      000105                       3303 ___str_24:
      000105 4C 6F 61 64 20 53 65  3304 	.ascii "Load Settings"
             74 74 69 6E 67 73
      000112 00                    3305 	.db 0x00
      000113                       3306 ___str_25:
      000113 53 61 76 65 64 21     3307 	.ascii "Saved!"
      000119 00                    3308 	.db 0x00
      00011A                       3309 ___str_26:
      00011A 4C 6F 61 64 65 64 21  3310 	.ascii "Loaded!"
      000121 00                    3311 	.db 0x00
      000122                       3312 ___str_27:
      000122 44 4D 58 20 41 64 64  3313 	.ascii "DMX Address"
             72 65 73 73
      00012D 00                    3314 	.db 0x00
      00012E                       3315 ___str_28:
      00012E 44 4D 58 20 43 68 61  3316 	.ascii "DMX Channel Mode"
             6E 6E 65 6C 20 4D 6F
             64 65
      00013E 00                    3317 	.db 0x00
      00013F                       3318 ___str_29:
      00013F 57 69 6D 70 79        3319 	.ascii "Wimpy"
      000144 00                    3320 	.db 0x00
      000145                       3321 ___str_30:
      000145 4D 69 6C 64           3322 	.ascii "Mild"
      000149 00                    3323 	.db 0x00
      00014A                       3324 ___str_31:
      00014A 42 6C 61 7A 69 6E     3325 	.ascii "Blazin"
      000150 00                    3326 	.db 0x00
      000151                       3327 ___str_32:
      000151 52 61 69 6E 62 6F 77  3328 	.ascii "Rainbow"
      000158 00                    3329 	.db 0x00
      000159                       3330 ___str_33:
      000159 46 69 72 65           3331 	.ascii "Fire"
      00015D 00                    3332 	.db 0x00
      00015E                       3333 ___str_34:
      00015E 57 61 74 65 72        3334 	.ascii "Water"
      000163 00                    3335 	.db 0x00
      000164                       3336 ___str_35:
      000164 53 74 6F 72 6D        3337 	.ascii "Storm"
      000169 00                    3338 	.db 0x00
      00016A                       3339 ___str_36:
      00016A 41 63 69 64           3340 	.ascii "Acid"
      00016E 00                    3341 	.db 0x00
      00016F                       3342 ___str_37:
      00016F 45 74 68 65 72        3343 	.ascii "Ether"
      000174 00                    3344 	.db 0x00
      000175                       3345 ___str_38:
      000175 52 65 64 20 4C 65 76  3346 	.ascii "Red Level"
             65 6C
      00017E 00                    3347 	.db 0x00
      00017F                       3348 ___str_39:
      00017F 47 72 65 65 6E 20 4C  3349 	.ascii "Green Level"
             65 76 65 6C
      00018A 00                    3350 	.db 0x00
      00018B                       3351 ___str_40:
      00018B 42 6C 75 65 20 4C 65  3352 	.ascii "Blue Level"
             76 65 6C
      000195 00                    3353 	.db 0x00
      000196                       3354 ___str_41:
      000196 53 74 72 6F 62 65 20  3355 	.ascii "Strobe Level"
             4C 65 76 65 6C
      0001A2 00                    3356 	.db 0x00
      0001A3                       3357 ___str_42:
      0001A3 4E 6F 20 41 63 74 69  3358 	.ascii "No Action"
             6F 6E
      0001AC 00                    3359 	.db 0x00
      0001AD                       3360 ___str_43:
      0001AD 43 68 6F 6F 73 65 20  3361 	.ascii "Choose Macro"
             4D 61 63 72 6F
      0001B9 00                    3362 	.db 0x00
      0001BA                       3363 ___str_44:
      0001BA 52 65 64              3364 	.ascii "Red"
      0001BD 00                    3365 	.db 0x00
      0001BE                       3366 ___str_45:
      0001BE 59 65 6C 6C 6F 77     3367 	.ascii "Yellow"
      0001C4 00                    3368 	.db 0x00
      0001C5                       3369 ___str_46:
      0001C5 47 72 65 65 6E        3370 	.ascii "Green"
      0001CA 00                    3371 	.db 0x00
      0001CB                       3372 ___str_47:
      0001CB 43 79 61 6E           3373 	.ascii "Cyan"
      0001CF 00                    3374 	.db 0x00
      0001D0                       3375 ___str_48:
      0001D0 42 6C 75 65           3376 	.ascii "Blue"
      0001D4 00                    3377 	.db 0x00
      0001D5                       3378 ___str_49:
      0001D5 4D 61 67 65 6E 74 61  3379 	.ascii "Magenta"
      0001DC 00                    3380 	.db 0x00
      0001DD                       3381 ___str_50:
      0001DD 53 74 72 6F 62 65 20  3382 	.ascii "Strobe Slow"
             53 6C 6F 77
      0001E8 00                    3383 	.db 0x00
      0001E9                       3384 ___str_51:
      0001E9 53 74 72 6F 62 65 20  3385 	.ascii "Strobe Medium"
             4D 65 64 69 75 6D
      0001F6 00                    3386 	.db 0x00
      0001F7                       3387 ___str_52:
      0001F7 53 74 72 6F 62 65 20  3388 	.ascii "Strobe Fast"
             46 61 73 74
      000202 00                    3389 	.db 0x00
      000203                       3390 ___str_53:
      000203 42 6C 61 63 6B 6F 75  3391 	.ascii "Blackout"
             74
      00020B 00                    3392 	.db 0x00
      00020C                       3393 ___str_54:
      00020C 57 68 69 74 65 6F 75  3394 	.ascii "Whiteout"
             74
      000214 00                    3395 	.db 0x00
      000215                       3396 ___str_55:
      000215 53 6C 6F 74 20 31     3397 	.ascii "Slot 1"
      00021B 00                    3398 	.db 0x00
      00021C                       3399 ___str_56:
      00021C 53 6C 6F 74 20 32     3400 	.ascii "Slot 2"
      000222 00                    3401 	.db 0x00
      000223                       3402 ___str_57:
      000223 53 6C 6F 74 20 33     3403 	.ascii "Slot 3"
      000229 00                    3404 	.db 0x00
      00022A                       3405 ___str_58:
      00022A 31 30 20 41 6C 6C     3406 	.ascii "10 All"
      000230 00                    3407 	.db 0x00
      000231                       3408 ___str_59:
      000231 33 20 46 6F 67 20 2B  3409 	.ascii "3 Fog + Macro"
             20 4D 61 63 72 6F
      00023E 00                    3410 	.db 0x00
      00023F                       3411 ___str_60:
      00023F 31 20 46 6F 67        3412 	.ascii "1 Fog"
      000244 00                    3413 	.db 0x00
      000245                       3414 ___str_61:
      000245 30 78 34 38 36 46 36  3415 	.ascii "0x486F6C6D6573"
             43 36 44 36 35 37 33
      000253 00                    3416 	.db 0x00
      000254                       3417 ___str_62:
      000254 26 20 35 37 36 31 37  3418 	.ascii "& 576174736F6E"
             34 37 33 36 46 36 45
      000262 00                    3419 	.db 0x00
      000263                       3420 ___str_63:
      000263 36 32 36 46 37 34 36  3421 	.ascii "626F74684F776E41"
             38 34 46 37 37 36 45
             34 31
      000273 00                    3422 	.db 0x00
      000274                       3423 ___str_64:
      000274 35 33 36 45 36 46 37  3424 	.ascii "536E6F7762616C6C"
             37 36 32 36 31 36 43
             36 43
      000284 00                    3425 	.db 0x00
      000285                       3426 ___str_65:
      000285 34 44 36 46 37 32 36  3427 	.ascii "4D6F726961727479"
             39 36 31 37 32 37 34
             37 39
      000295 00                    3428 	.db 0x00
      000296                       3429 ___str_66:
      000296 36 34 36 46 36 35 37  3430 	.ascii "646F65734E6F74 ;"
             33 34 45 36 46 37 34
             20 3B
      0002A6 00                    3431 	.db 0x00
                                   3432 	.area XINIT   (CODE)
                                   3433 	.area CABS    (ABS,CODE)
