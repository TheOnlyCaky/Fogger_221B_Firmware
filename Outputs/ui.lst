                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ui
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _exe_command
                                     12 	.globl _write_char
                                     13 	.globl _write_number
                                     14 	.globl _write_string
                                     15 	.globl _get_button_action
                                     16 	.globl _power_heater
                                     17 	.globl _power_pump
                                     18 	.globl _tick_fogger
                                     19 	.globl _set_dmx_address
                                     20 	.globl _get_dmx_address
                                     21 	.globl _set_runtime_data
                                     22 	.globl _get_runtime_data
                                     23 	.globl _save_load_settings
                                     24 	.globl _CPRL2
                                     25 	.globl _CT2
                                     26 	.globl _TR2
                                     27 	.globl _EXEN2
                                     28 	.globl _TCLK
                                     29 	.globl _RCLK
                                     30 	.globl _REN
                                     31 	.globl _SM2
                                     32 	.globl _SM1
                                     33 	.globl _SM0
                                     34 	.globl _RCK
                                     35 	.globl _SER
                                     36 	.globl _SCK
                                     37 	.globl _RI
                                     38 	.globl _ES
                                     39 	.globl _ET0
                                     40 	.globl _EA
                                     41 	.globl _P3_7
                                     42 	.globl _P3_6
                                     43 	.globl _P3_5
                                     44 	.globl _P3_4
                                     45 	.globl _P3_3
                                     46 	.globl _P3_2
                                     47 	.globl _P3_1
                                     48 	.globl _P3_0
                                     49 	.globl _P2_7
                                     50 	.globl _P2_6
                                     51 	.globl _P2_5
                                     52 	.globl _P2_4
                                     53 	.globl _P2_3
                                     54 	.globl _P2_2
                                     55 	.globl _P2_1
                                     56 	.globl _P2_0
                                     57 	.globl _P1_7
                                     58 	.globl _P1_6
                                     59 	.globl _P1_5
                                     60 	.globl _P1_4
                                     61 	.globl _P1_3
                                     62 	.globl _P1_2
                                     63 	.globl _P1_1
                                     64 	.globl _P1_0
                                     65 	.globl _P0_7
                                     66 	.globl _P0_6
                                     67 	.globl _P0_5
                                     68 	.globl _P0_4
                                     69 	.globl _P0_3
                                     70 	.globl _P0_2
                                     71 	.globl _P0_1
                                     72 	.globl _P0_0
                                     73 	.globl _IAP_ADRH
                                     74 	.globl _IAP_ADRL
                                     75 	.globl _IAPEN
                                     76 	.globl _TH0
                                     77 	.globl _TL0
                                     78 	.globl _CKCON
                                     79 	.globl _TMOD
                                     80 	.globl _TCON
                                     81 	.globl _PWMDATA17L
                                     82 	.globl _PWMDATA17H
                                     83 	.globl _PWMDATA14L
                                     84 	.globl _PWMDATA14H
                                     85 	.globl _PWMDATA11L
                                     86 	.globl _PWMDATA11H
                                     87 	.globl _PWM_EA2
                                     88 	.globl _PWM_EA1
                                     89 	.globl _SBUF
                                     90 	.globl _TL3
                                     91 	.globl _TH3
                                     92 	.globl _T2CON
                                     93 	.globl _RCAP2H
                                     94 	.globl _RCAP2L
                                     95 	.globl _SCON
                                     96 	.globl _P1_OPT
                                     97 	.globl _ADCVAL2
                                     98 	.globl _ADCVAL1
                                     99 	.globl _ADCSEL
                                    100 	.globl _EXIF
                                    101 	.globl _EIE
                                    102 	.globl _IE
                                    103 	.globl _P3
                                    104 	.globl _P2
                                    105 	.globl _P1
                                    106 	.globl _P0
                                    107 	.globl _PCLKSEL
                                    108 	.globl _CHIPCON
                                    109 	.globl _tick_ui
                                    110 	.globl _idlePage
                                    111 	.globl _fogLevelPage
                                    112 	.globl _fogIntervalPage
                                    113 	.globl _fogDurationPage
                                    114 	.globl _macroPage
                                    115 	.globl _macroSpeedPage
                                    116 	.globl _colorPage
                                    117 	.globl _remotePage
                                    118 	.globl _saveLoadPage
                                    119 	.globl _dmxAddressPage
                                    120 	.globl _dmxChannelPage
                                    121 	.globl _set_ui_state
                                    122 	.globl _get_ui_state
                                    123 	.globl _getString
                                    124 ;--------------------------------------------------------
                                    125 ; special function registers
                                    126 ;--------------------------------------------------------
                                    127 	.area RSEG    (ABS,DATA)
      000000                        128 	.org 0x0000
                           0000BF   129 _CHIPCON	=	0x00bf
                           0000B7   130 _PCLKSEL	=	0x00b7
                           000080   131 _P0	=	0x0080
                           000090   132 _P1	=	0x0090
                           0000A0   133 _P2	=	0x00a0
                           0000B0   134 _P3	=	0x00b0
                           0000A8   135 _IE	=	0x00a8
                           0000E8   136 _EIE	=	0x00e8
                           000091   137 _EXIF	=	0x0091
                           0000DA   138 _ADCSEL	=	0x00da
                           0000DB   139 _ADCVAL1	=	0x00db
                           0000DC   140 _ADCVAL2	=	0x00dc
                           0000D9   141 _P1_OPT	=	0x00d9
                           000098   142 _SCON	=	0x0098
                           0000CA   143 _RCAP2L	=	0x00ca
                           0000CB   144 _RCAP2H	=	0x00cb
                           0000C8   145 _T2CON	=	0x00c8
                           00009B   146 _TH3	=	0x009b
                           00009A   147 _TL3	=	0x009a
                           000099   148 _SBUF	=	0x0099
                           0000D3   149 _PWM_EA1	=	0x00d3
                           0000D4   150 _PWM_EA2	=	0x00d4
                           0000BD   151 _PWMDATA11H	=	0x00bd
                           0000BE   152 _PWMDATA11L	=	0x00be
                           0000B5   153 _PWMDATA14H	=	0x00b5
                           0000B6   154 _PWMDATA14L	=	0x00b6
                           0000AD   155 _PWMDATA17H	=	0x00ad
                           0000AE   156 _PWMDATA17L	=	0x00ae
                           000088   157 _TCON	=	0x0088
                           000089   158 _TMOD	=	0x0089
                           00008E   159 _CKCON	=	0x008e
                           00008A   160 _TL0	=	0x008a
                           00008C   161 _TH0	=	0x008c
                           0000E4   162 _IAPEN	=	0x00e4
                           0000E5   163 _IAP_ADRL	=	0x00e5
                           0000E6   164 _IAP_ADRH	=	0x00e6
                                    165 ;--------------------------------------------------------
                                    166 ; special function bits
                                    167 ;--------------------------------------------------------
                                    168 	.area RSEG    (ABS,DATA)
      000000                        169 	.org 0x0000
                           000080   170 _P0_0	=	0x0080
                           000081   171 _P0_1	=	0x0081
                           000082   172 _P0_2	=	0x0082
                           000083   173 _P0_3	=	0x0083
                           000084   174 _P0_4	=	0x0084
                           000085   175 _P0_5	=	0x0085
                           000086   176 _P0_6	=	0x0086
                           000087   177 _P0_7	=	0x0087
                           000090   178 _P1_0	=	0x0090
                           000091   179 _P1_1	=	0x0091
                           000092   180 _P1_2	=	0x0092
                           000093   181 _P1_3	=	0x0093
                           000094   182 _P1_4	=	0x0094
                           000095   183 _P1_5	=	0x0095
                           000096   184 _P1_6	=	0x0096
                           000097   185 _P1_7	=	0x0097
                           0000A0   186 _P2_0	=	0x00a0
                           0000A1   187 _P2_1	=	0x00a1
                           0000A2   188 _P2_2	=	0x00a2
                           0000A3   189 _P2_3	=	0x00a3
                           0000A4   190 _P2_4	=	0x00a4
                           0000A5   191 _P2_5	=	0x00a5
                           0000A6   192 _P2_6	=	0x00a6
                           0000A7   193 _P2_7	=	0x00a7
                           0000B0   194 _P3_0	=	0x00b0
                           0000B1   195 _P3_1	=	0x00b1
                           0000B2   196 _P3_2	=	0x00b2
                           0000B3   197 _P3_3	=	0x00b3
                           0000B4   198 _P3_4	=	0x00b4
                           0000B5   199 _P3_5	=	0x00b5
                           0000B6   200 _P3_6	=	0x00b6
                           0000B7   201 _P3_7	=	0x00b7
                           0000AF   202 _EA	=	0x00af
                           0000A9   203 _ET0	=	0x00a9
                           0000AC   204 _ES	=	0x00ac
                           000098   205 _RI	=	0x0098
                           000093   206 _SCK	=	0x0093
                           000095   207 _SER	=	0x0095
                           000092   208 _RCK	=	0x0092
                           00009F   209 _SM0	=	0x009f
                           00009E   210 _SM1	=	0x009e
                           00009D   211 _SM2	=	0x009d
                           00009C   212 _REN	=	0x009c
                           0000CD   213 _RCLK	=	0x00cd
                           0000CC   214 _TCLK	=	0x00cc
                           0000CB   215 _EXEN2	=	0x00cb
                           0000CA   216 _TR2	=	0x00ca
                           0000C9   217 _CT2	=	0x00c9
                           0000C8   218 _CPRL2	=	0x00c8
                                    219 ;--------------------------------------------------------
                                    220 ; overlayable register banks
                                    221 ;--------------------------------------------------------
                                    222 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        223 	.ds 8
                                    224 ;--------------------------------------------------------
                                    225 ; internal ram data
                                    226 ;--------------------------------------------------------
                                    227 	.area DSEG    (DATA)
      000000                        228 _State:
      000000                        229 	.ds 1
      000001                        230 _Changed:
      000001                        231 	.ds 1
      000002                        232 _changed:
      000002                        233 	.ds 1
      000003                        234 _tick_ui_bursting_65536_37:
      000003                        235 	.ds 1
      000004                        236 _idlePage_timer_65536_61:
      000004                        237 	.ds 1
      000005                        238 _idlePage_intervalOrDuration_65536_61:
      000005                        239 	.ds 1
      000006                        240 _idlePage_empty_65536_61:
      000006                        241 	.ds 1
      000007                        242 _idlePage_tock_65536_61:
      000007                        243 	.ds 1
      000008                        244 _idlePage_iconChange_65536_61:
      000008                        245 	.ds 1
      000009                        246 _idlePage_playing_65536_61:
      000009                        247 	.ds 1
      00000A                        248 _saveLoadPage_slot_65536_144:
      00000A                        249 	.ds 1
                                    250 ;--------------------------------------------------------
                                    251 ; overlayable items in internal ram 
                                    252 ;--------------------------------------------------------
                                    253 ;--------------------------------------------------------
                                    254 ; indirectly addressable internal ram data
                                    255 ;--------------------------------------------------------
                                    256 	.area ISEG    (DATA)
                                    257 ;--------------------------------------------------------
                                    258 ; absolute internal ram data
                                    259 ;--------------------------------------------------------
                                    260 	.area IABS    (ABS,DATA)
                                    261 	.area IABS    (ABS,DATA)
                                    262 ;--------------------------------------------------------
                                    263 ; bit data
                                    264 ;--------------------------------------------------------
                                    265 	.area BSEG    (BIT)
                                    266 ;--------------------------------------------------------
                                    267 ; paged external ram data
                                    268 ;--------------------------------------------------------
                                    269 	.area PSEG    (PAG,XDATA)
                                    270 ;--------------------------------------------------------
                                    271 ; external ram data
                                    272 ;--------------------------------------------------------
                                    273 	.area XSEG    (XDATA)
                                    274 ;--------------------------------------------------------
                                    275 ; absolute external ram data
                                    276 ;--------------------------------------------------------
                                    277 	.area XABS    (ABS,XDATA)
                                    278 ;--------------------------------------------------------
                                    279 ; external initialized ram data
                                    280 ;--------------------------------------------------------
                                    281 	.area XISEG   (XDATA)
                                    282 	.area HOME    (CODE)
                                    283 	.area GSINIT0 (CODE)
                                    284 	.area GSINIT1 (CODE)
                                    285 	.area GSINIT2 (CODE)
                                    286 	.area GSINIT3 (CODE)
                                    287 	.area GSINIT4 (CODE)
                                    288 	.area GSINIT5 (CODE)
                                    289 	.area GSINIT  (CODE)
                                    290 	.area GSFINAL (CODE)
                                    291 	.area CSEG    (CODE)
                                    292 ;--------------------------------------------------------
                                    293 ; global & static initialisations
                                    294 ;--------------------------------------------------------
                                    295 	.area HOME    (CODE)
                                    296 	.area GSINIT  (CODE)
                                    297 	.area GSFINAL (CODE)
                                    298 	.area GSINIT  (CODE)
                                    299 ;------------------------------------------------------------
                                    300 ;Allocation info for local variables in function 'tick_ui'
                                    301 ;------------------------------------------------------------
                                    302 ;action                    Allocated to registers r7 
                                    303 ;ss                        Allocated to registers r5 
                                    304 ;delay                     Allocated to stack - _bp +1
                                    305 ;sloc0                     Allocated to stack - _bp +7
                                    306 ;bursting                  Allocated with name '_tick_ui_bursting_65536_37'
                                    307 ;------------------------------------------------------------
                                    308 ;	../UI_Manager/ui.c:17: static uint8_t bursting = 0;
      000000 75*03 00         [24]  309 	mov	_tick_ui_bursting_65536_37,#0x00
                                    310 ;------------------------------------------------------------
                                    311 ;Allocation info for local variables in function 'idlePage'
                                    312 ;------------------------------------------------------------
                                    313 ;temp                      Allocated to registers r7 
                                    314 ;timer                     Allocated with name '_idlePage_timer_65536_61'
                                    315 ;intervalOrDuration        Allocated with name '_idlePage_intervalOrDuration_65536_61'
                                    316 ;empty                     Allocated with name '_idlePage_empty_65536_61'
                                    317 ;tock                      Allocated with name '_idlePage_tock_65536_61'
                                    318 ;iconChange                Allocated with name '_idlePage_iconChange_65536_61'
                                    319 ;playing                   Allocated with name '_idlePage_playing_65536_61'
                                    320 ;------------------------------------------------------------
                                    321 ;	../UI_Manager/ui.c:215: static uint8_t timer = 0;
      000003 75*04 00         [24]  322 	mov	_idlePage_timer_65536_61,#0x00
                                    323 ;	../UI_Manager/ui.c:217: static uint8_t empty = 0x00;
      000006 75*06 00         [24]  324 	mov	_idlePage_empty_65536_61,#0x00
                                    325 ;	../UI_Manager/ui.c:218: static uint8_t tock = 0x00;
      000009 75*07 00         [24]  326 	mov	_idlePage_tock_65536_61,#0x00
                                    327 ;	../UI_Manager/ui.c:219: static uint8_t iconChange = 0x00;
      00000C 75*08 00         [24]  328 	mov	_idlePage_iconChange_65536_61,#0x00
                                    329 ;	../UI_Manager/ui.c:220: static uint8_t playing = PAUSE;
      00000F 75*09 00         [24]  330 	mov	_idlePage_playing_65536_61,#0x00
                                    331 ;------------------------------------------------------------
                                    332 ;Allocation info for local variables in function 'saveLoadPage'
                                    333 ;------------------------------------------------------------
                                    334 ;action                    Allocated to registers r7 
                                    335 ;slot                      Allocated with name '_saveLoadPage_slot_65536_144'
                                    336 ;------------------------------------------------------------
                                    337 ;	../UI_Manager/ui.c:752: static uint8_t slot = 0;
      000012 75*0A 00         [24]  338 	mov	_saveLoadPage_slot_65536_144,#0x00
                                    339 ;	../UI_Manager/ui.c:12: static volatile uint8_t State = WELCOME_STATE;
      000015 75*00 45         [24]  340 	mov	_State,#0x45
                                    341 ;	../UI_Manager/ui.c:13: static volatile uint8_t Changed = CHANGE_SCREEN_X;
      000018 75*01 FF         [24]  342 	mov	_Changed,#0xff
                                    343 ;	../UI_Manager/ui.c:14: static volatile uint8_t changed = CHANGE_SCREEN_X;
      00001B 75*02 FF         [24]  344 	mov	_changed,#0xff
                                    345 ;--------------------------------------------------------
                                    346 ; Home
                                    347 ;--------------------------------------------------------
                                    348 	.area HOME    (CODE)
                                    349 	.area HOME    (CODE)
                                    350 ;--------------------------------------------------------
                                    351 ; code
                                    352 ;--------------------------------------------------------
                                    353 	.area CSEG    (CODE)
                                    354 ;------------------------------------------------------------
                                    355 ;Allocation info for local variables in function 'tick_ui'
                                    356 ;------------------------------------------------------------
                                    357 ;action                    Allocated to registers r7 
                                    358 ;ss                        Allocated to registers r5 
                                    359 ;delay                     Allocated to stack - _bp +1
                                    360 ;sloc0                     Allocated to stack - _bp +7
                                    361 ;bursting                  Allocated with name '_tick_ui_bursting_65536_37'
                                    362 ;------------------------------------------------------------
                                    363 ;	../UI_Manager/ui.c:16: void tick_ui(void){
                                    364 ;	-----------------------------------------
                                    365 ;	 function tick_ui
                                    366 ;	-----------------------------------------
      000000                        367 _tick_ui:
                           000007   368 	ar7 = 0x07
                           000006   369 	ar6 = 0x06
                           000005   370 	ar5 = 0x05
                           000004   371 	ar4 = 0x04
                           000003   372 	ar3 = 0x03
                           000002   373 	ar2 = 0x02
                           000001   374 	ar1 = 0x01
                           000000   375 	ar0 = 0x00
      000000 C0*00            [24]  376 	push	_bp
      000002 E5 81            [12]  377 	mov	a,sp
      000004 F5*00            [12]  378 	mov	_bp,a
      000006 24 04            [12]  379 	add	a,#0x04
      000008 F5 81            [12]  380 	mov	sp,a
                                    381 ;	../UI_Manager/ui.c:18: uint8_t action = get_button_action();
      00000A 12r00r00         [24]  382 	lcall	_get_button_action
      00000D AF 82            [24]  383 	mov	r7,dpl
                                    384 ;	../UI_Manager/ui.c:24: if(action == BUTTON_BURST || action == BUTTON_MAN_BURST){
      00000F E4               [12]  385 	clr	a
      000010 BF 05 01         [24]  386 	cjne	r7,#0x05,00424$
      000013 04               [12]  387 	inc	a
      000014                        388 00424$:
      000014 FE               [12]  389 	mov	r6,a
      000015 70 03            [24]  390 	jnz	00103$
      000017 BF 0A 21         [24]  391 	cjne	r7,#0x0a,00104$
      00001A                        392 00103$:
                                    393 ;	../UI_Manager/ui.c:25: power_pump(action == (BUTTON_BURST) ? PUMP_OVERRIDE : PUMP_MASTER_OVERRIDE);
      00001A EE               [12]  394 	mov	a,r6
      00001B 60 06            [24]  395 	jz	00177$
      00001D 7D 02            [12]  396 	mov	r5,#0x02
      00001F 7E 00            [12]  397 	mov	r6,#0x00
      000021 80 04            [24]  398 	sjmp	00178$
      000023                        399 00177$:
      000023 7D 03            [12]  400 	mov	r5,#0x03
      000025 7E 00            [12]  401 	mov	r6,#0x00
      000027                        402 00178$:
      000027 8D 82            [24]  403 	mov	dpl,r5
      000029 C0 07            [24]  404 	push	ar7
      00002B 12r00r00         [24]  405 	lcall	_power_pump
      00002E D0 07            [24]  406 	pop	ar7
                                    407 ;	../UI_Manager/ui.c:26: bursting |= BURSTING;
      000030 AD*03            [24]  408 	mov	r5,_tick_ui_bursting_65536_37
      000032 7E 00            [12]  409 	mov	r6,#0x00
      000034 43 05 80         [24]  410 	orl	ar5,#0x80
      000037 8D*03            [24]  411 	mov	_tick_ui_bursting_65536_37,r5
      000039 80 12            [24]  412 	sjmp	00105$
      00003B                        413 00104$:
                                    414 ;	../UI_Manager/ui.c:27: } else if(bursting & BURSTING){
      00003B E5*03            [12]  415 	mov	a,_tick_ui_bursting_65536_37
      00003D 30 E7 0D         [24]  416 	jnb	acc.7,00105$
                                    417 ;	../UI_Manager/ui.c:28: power_pump(PUMP_OFF);
      000040 75 82 00         [24]  418 	mov	dpl,#0x00
      000043 C0 07            [24]  419 	push	ar7
      000045 12r00r00         [24]  420 	lcall	_power_pump
      000048 D0 07            [24]  421 	pop	ar7
                                    422 ;	../UI_Manager/ui.c:29: bursting &= ~BURSTING;
      00004A 53*03 7F         [24]  423 	anl	_tick_ui_bursting_65536_37,#0x7f
      00004D                        424 00105$:
                                    425 ;	../UI_Manager/ui.c:33: if(action == BUTTON_MANUAL){
      00004D BF 08 38         [24]  426 	cjne	r7,#0x08,00108$
                                    427 ;	../UI_Manager/ui.c:34: set_runtime_data(OP_MODE_INDEX, VALUE, (get_runtime_data(OP_MODE_INDEX) == MODE_MANUAL) ? MODE_DMX : MODE_MANUAL);
      000050 75 82 10         [24]  428 	mov	dpl,#0x10
      000053 C0 07            [24]  429 	push	ar7
      000055 12r00r00         [24]  430 	lcall	_get_runtime_data
      000058 AE 82            [24]  431 	mov	r6,dpl
      00005A D0 07            [24]  432 	pop	ar7
      00005C BE 80 06         [24]  433 	cjne	r6,#0x80,00179$
      00005F 7D 00            [12]  434 	mov	r5,#0x00
      000061 7E 00            [12]  435 	mov	r6,#0x00
      000063 80 04            [24]  436 	sjmp	00180$
      000065                        437 00179$:
      000065 7D 80            [12]  438 	mov	r5,#0x80
      000067 7E 00            [12]  439 	mov	r6,#0x00
      000069                        440 00180$:
      000069 C0 07            [24]  441 	push	ar7
      00006B C0 05            [24]  442 	push	ar5
      00006D E4               [12]  443 	clr	a
      00006E C0 E0            [24]  444 	push	acc
      000070 75 82 10         [24]  445 	mov	dpl,#0x10
      000073 12r00r00         [24]  446 	lcall	_set_runtime_data
      000076 15 81            [12]  447 	dec	sp
      000078 15 81            [12]  448 	dec	sp
                                    449 ;	../UI_Manager/ui.c:36: State = IDLE_STATE;
      00007A 75*00 00         [24]  450 	mov	_State,#0x00
                                    451 ;	../UI_Manager/ui.c:37: Changed = CHANGE_SCREEN_X;
      00007D 75*01 FF         [24]  452 	mov	_Changed,#0xff
                                    453 ;	../UI_Manager/ui.c:39: set_playing(RESET);
      000080 75*00 02         [24]  454 	mov	_Playing,#0x02
                                    455 ;	../UI_Manager/ui.c:41: tick_fogger();
      000083 12r00r00         [24]  456 	lcall	_tick_fogger
      000086 D0 07            [24]  457 	pop	ar7
      000088                        458 00108$:
                                    459 ;	../UI_Manager/ui.c:46: if(action == BUTTON_TIMER_HOLD){
      000088 BF C8 13         [24]  460 	cjne	r7,#0xc8,00113$
                                    461 ;	../UI_Manager/ui.c:47: if(get_playing() == PLAY){
      00008B 74 01            [12]  462 	mov	a,#0x01
      00008D B5*00 05         [24]  463 	cjne	a,_Playing,00110$
                                    464 ;	../UI_Manager/ui.c:48: set_playing(RESET);
      000090 75*00 02         [24]  465 	mov	_Playing,#0x02
      000093 80 03            [24]  466 	sjmp	00111$
      000095                        467 00110$:
                                    468 ;	../UI_Manager/ui.c:50: set_playing(PLAY);
      000095 75*00 01         [24]  469 	mov	_Playing,#0x01
      000098                        470 00111$:
                                    471 ;	../UI_Manager/ui.c:53: tick_fogger();
      000098 12r00r00         [24]  472 	lcall	_tick_fogger
                                    473 ;	../UI_Manager/ui.c:55: return;
      00009B 02r04r90         [24]  474 	ljmp	00175$
      00009E                        475 00113$:
                                    476 ;	../UI_Manager/ui.c:59: if(action == BUTTON_FUN_MAN){
      00009E BF 09 02         [24]  477 	cjne	r7,#0x09,00439$
      0000A1 80 03            [24]  478 	sjmp	00440$
      0000A3                        479 00439$:
      0000A3 02r01r5C         [24]  480 	ljmp	00121$
      0000A6                        481 00440$:
                                    482 ;	../UI_Manager/ui.c:60: set_runtime_data(TANK_LIGHTS_INDEX, VALUE, ~get_runtime_data(TANK_LIGHTS_INDEX));
      0000A6 75 82 0F         [24]  483 	mov	dpl,#0x0f
      0000A9 12r00r00         [24]  484 	lcall	_get_runtime_data
      0000AC E5 82            [12]  485 	mov	a,dpl
      0000AE F4               [12]  486 	cpl	a
      0000AF FE               [12]  487 	mov	r6,a
      0000B0 C0 06            [24]  488 	push	ar6
      0000B2 E4               [12]  489 	clr	a
      0000B3 C0 E0            [24]  490 	push	acc
      0000B5 75 82 0F         [24]  491 	mov	dpl,#0x0f
      0000B8 12r00r00         [24]  492 	lcall	_set_runtime_data
      0000BB 15 81            [12]  493 	dec	sp
      0000BD 15 81            [12]  494 	dec	sp
                                    495 ;	../UI_Manager/ui.c:62: exe_command(CLEAR_DISPLAY);
      0000BF 90 80 00         [24]  496 	mov	dptr,#0x8000
      0000C2 12r00r00         [24]  497 	lcall	_exe_command
                                    498 ;	../UI_Manager/ui.c:63: if(get_runtime_data(TANK_LIGHTS_INDEX)){
      0000C5 75 82 0F         [24]  499 	mov	dpl,#0x0f
      0000C8 12r00r00         [24]  500 	lcall	_get_runtime_data
      0000CB E5 82            [12]  501 	mov	a,dpl
      0000CD 60 1C            [24]  502 	jz	00115$
                                    503 ;	../UI_Manager/ui.c:64: write_string("Tank Lights Off", 15, 0, LINE_0, NOT_SELECTED);
      0000CF E4               [12]  504 	clr	a
      0000D0 C0 E0            [24]  505 	push	acc
      0000D2 C0 E0            [24]  506 	push	acc
      0000D4 C0 E0            [24]  507 	push	acc
      0000D6 74 0F            [12]  508 	mov	a,#0x0f
      0000D8 C0 E0            [24]  509 	push	acc
      0000DA 90r00r00         [24]  510 	mov	dptr,#___str_0
      0000DD 75 F0 80         [24]  511 	mov	b,#0x80
      0000E0 12r00r00         [24]  512 	lcall	_write_string
      0000E3 E5 81            [12]  513 	mov	a,sp
      0000E5 24 FC            [12]  514 	add	a,#0xfc
      0000E7 F5 81            [12]  515 	mov	sp,a
      0000E9 80 1A            [24]  516 	sjmp	00116$
      0000EB                        517 00115$:
                                    518 ;	../UI_Manager/ui.c:66: write_string("Tank Lights On", 15, 0, LINE_0, NOT_SELECTED);
      0000EB E4               [12]  519 	clr	a
      0000EC C0 E0            [24]  520 	push	acc
      0000EE C0 E0            [24]  521 	push	acc
      0000F0 C0 E0            [24]  522 	push	acc
      0000F2 74 0F            [12]  523 	mov	a,#0x0f
      0000F4 C0 E0            [24]  524 	push	acc
      0000F6 90r00r10         [24]  525 	mov	dptr,#___str_1
      0000F9 75 F0 80         [24]  526 	mov	b,#0x80
      0000FC 12r00r00         [24]  527 	lcall	_write_string
      0000FF E5 81            [12]  528 	mov	a,sp
      000101 24 FC            [12]  529 	add	a,#0xfc
      000103 F5 81            [12]  530 	mov	sp,a
      000105                        531 00116$:
                                    532 ;	../UI_Manager/ui.c:69: write_string("Fun+Man to Undo", 15, 0, LINE_1, NOT_SELECTED);
      000105 E4               [12]  533 	clr	a
      000106 C0 E0            [24]  534 	push	acc
      000108 04               [12]  535 	inc	a
      000109 C0 E0            [24]  536 	push	acc
      00010B E4               [12]  537 	clr	a
      00010C C0 E0            [24]  538 	push	acc
      00010E 74 0F            [12]  539 	mov	a,#0x0f
      000110 C0 E0            [24]  540 	push	acc
      000112 90r00r1F         [24]  541 	mov	dptr,#___str_2
      000115 75 F0 80         [24]  542 	mov	b,#0x80
      000118 12r00r00         [24]  543 	lcall	_write_string
      00011B E5 81            [12]  544 	mov	a,sp
      00011D 24 FC            [12]  545 	add	a,#0xfc
      00011F F5 81            [12]  546 	mov	sp,a
                                    547 ;	../UI_Manager/ui.c:73: while(delay--){ ;; }
      000121 A8*00            [24]  548 	mov	r0,_bp
      000123 08               [12]  549 	inc	r0
      000124 76 B5            [12]  550 	mov	@r0,#0xb5
      000126 08               [12]  551 	inc	r0
      000127 76 D8            [12]  552 	mov	@r0,#0xd8
      000129 08               [12]  553 	inc	r0
      00012A 76 07            [12]  554 	mov	@r0,#0x07
      00012C 08               [12]  555 	inc	r0
      00012D 76 00            [12]  556 	mov	@r0,#0x00
      00012F                        557 00117$:
      00012F A8*00            [24]  558 	mov	r0,_bp
      000131 08               [12]  559 	inc	r0
      000132 86 02            [24]  560 	mov	ar2,@r0
      000134 08               [12]  561 	inc	r0
      000135 86 04            [24]  562 	mov	ar4,@r0
      000137 08               [12]  563 	inc	r0
      000138 86 05            [24]  564 	mov	ar5,@r0
      00013A 08               [12]  565 	inc	r0
      00013B 86 06            [24]  566 	mov	ar6,@r0
      00013D A8*00            [24]  567 	mov	r0,_bp
      00013F 08               [12]  568 	inc	r0
      000140 16               [12]  569 	dec	@r0
      000141 B6 FF 0C         [24]  570 	cjne	@r0,#0xff,00442$
      000144 08               [12]  571 	inc	r0
      000145 16               [12]  572 	dec	@r0
      000146 B6 FF 07         [24]  573 	cjne	@r0,#0xff,00442$
      000149 08               [12]  574 	inc	r0
      00014A 16               [12]  575 	dec	@r0
      00014B B6 FF 02         [24]  576 	cjne	@r0,#0xff,00442$
      00014E 08               [12]  577 	inc	r0
      00014F 16               [12]  578 	dec	@r0
      000150                        579 00442$:
      000150 EA               [12]  580 	mov	a,r2
      000151 4C               [12]  581 	orl	a,r4
      000152 4D               [12]  582 	orl	a,r5
      000153 4E               [12]  583 	orl	a,r6
      000154 70 D9            [24]  584 	jnz	00117$
                                    585 ;	../UI_Manager/ui.c:75: Changed = CHANGE_SCREEN_X;
      000156 75*01 FF         [24]  586 	mov	_Changed,#0xff
                                    587 ;	../UI_Manager/ui.c:77: return;
      000159 02r04r90         [24]  588 	ljmp	00175$
      00015C                        589 00121$:
                                    590 ;	../UI_Manager/ui.c:81: if(action == BUTTON_BURST_UP){
      00015C BF 07 02         [24]  591 	cjne	r7,#0x07,00444$
      00015F 80 03            [24]  592 	sjmp	00445$
      000161                        593 00444$:
      000161 02r02r0C         [24]  594 	ljmp	00129$
      000164                        595 00445$:
                                    596 ;	../UI_Manager/ui.c:83: exe_command(CLEAR_DISPLAY);
      000164 90 80 00         [24]  597 	mov	dptr,#0x8000
      000167 12r00r00         [24]  598 	lcall	_exe_command
                                    599 ;	../UI_Manager/ui.c:84: if(get_heater_enabled()){
      00016A E5*00            [12]  600 	mov	a,_Heat_Flag
      00016C 20 E4 24         [24]  601 	jb	acc.4,00123$
                                    602 ;	../UI_Manager/ui.c:85: write_string("Heater Off", 15, 2, LINE_0, NOT_SELECTED);
      00016F E4               [12]  603 	clr	a
      000170 C0 E0            [24]  604 	push	acc
      000172 C0 E0            [24]  605 	push	acc
      000174 74 02            [12]  606 	mov	a,#0x02
      000176 C0 E0            [24]  607 	push	acc
      000178 74 0F            [12]  608 	mov	a,#0x0f
      00017A C0 E0            [24]  609 	push	acc
      00017C 90r00r2F         [24]  610 	mov	dptr,#___str_3
      00017F 75 F0 80         [24]  611 	mov	b,#0x80
      000182 12r00r00         [24]  612 	lcall	_write_string
      000185 E5 81            [12]  613 	mov	a,sp
      000187 24 FC            [12]  614 	add	a,#0xfc
      000189 F5 81            [12]  615 	mov	sp,a
                                    616 ;	../UI_Manager/ui.c:86: power_heater(HEATER_DISABLE);
      00018B 75 82 01         [24]  617 	mov	dpl,#0x01
      00018E 12r00r00         [24]  618 	lcall	_power_heater
      000191 80 22            [24]  619 	sjmp	00124$
      000193                        620 00123$:
                                    621 ;	../UI_Manager/ui.c:88: write_string("Heater On", 15, 2, LINE_0, NOT_SELECTED);
      000193 E4               [12]  622 	clr	a
      000194 C0 E0            [24]  623 	push	acc
      000196 C0 E0            [24]  624 	push	acc
      000198 74 02            [12]  625 	mov	a,#0x02
      00019A C0 E0            [24]  626 	push	acc
      00019C 74 0F            [12]  627 	mov	a,#0x0f
      00019E C0 E0            [24]  628 	push	acc
      0001A0 90r00r3A         [24]  629 	mov	dptr,#___str_4
      0001A3 75 F0 80         [24]  630 	mov	b,#0x80
      0001A6 12r00r00         [24]  631 	lcall	_write_string
      0001A9 E5 81            [12]  632 	mov	a,sp
      0001AB 24 FC            [12]  633 	add	a,#0xfc
      0001AD F5 81            [12]  634 	mov	sp,a
                                    635 ;	../UI_Manager/ui.c:89: power_heater(HEATER_ENABLE);
      0001AF 75 82 00         [24]  636 	mov	dpl,#0x00
      0001B2 12r00r00         [24]  637 	lcall	_power_heater
      0001B5                        638 00124$:
                                    639 ;	../UI_Manager/ui.c:92: write_string("Burst+Up to Undo", 16, 0, LINE_1, NOT_SELECTED);
      0001B5 E4               [12]  640 	clr	a
      0001B6 C0 E0            [24]  641 	push	acc
      0001B8 04               [12]  642 	inc	a
      0001B9 C0 E0            [24]  643 	push	acc
      0001BB E4               [12]  644 	clr	a
      0001BC C0 E0            [24]  645 	push	acc
      0001BE 74 10            [12]  646 	mov	a,#0x10
      0001C0 C0 E0            [24]  647 	push	acc
      0001C2 90r00r44         [24]  648 	mov	dptr,#___str_5
      0001C5 75 F0 80         [24]  649 	mov	b,#0x80
      0001C8 12r00r00         [24]  650 	lcall	_write_string
      0001CB E5 81            [12]  651 	mov	a,sp
      0001CD 24 FC            [12]  652 	add	a,#0xfc
      0001CF F5 81            [12]  653 	mov	sp,a
                                    654 ;	../UI_Manager/ui.c:96: while(delay--){ ;; }
      0001D1 A8*00            [24]  655 	mov	r0,_bp
      0001D3 08               [12]  656 	inc	r0
      0001D4 76 B5            [12]  657 	mov	@r0,#0xb5
      0001D6 08               [12]  658 	inc	r0
      0001D7 76 D8            [12]  659 	mov	@r0,#0xd8
      0001D9 08               [12]  660 	inc	r0
      0001DA 76 07            [12]  661 	mov	@r0,#0x07
      0001DC 08               [12]  662 	inc	r0
      0001DD 76 00            [12]  663 	mov	@r0,#0x00
      0001DF                        664 00125$:
      0001DF A8*00            [24]  665 	mov	r0,_bp
      0001E1 08               [12]  666 	inc	r0
      0001E2 86 02            [24]  667 	mov	ar2,@r0
      0001E4 08               [12]  668 	inc	r0
      0001E5 86 04            [24]  669 	mov	ar4,@r0
      0001E7 08               [12]  670 	inc	r0
      0001E8 86 05            [24]  671 	mov	ar5,@r0
      0001EA 08               [12]  672 	inc	r0
      0001EB 86 06            [24]  673 	mov	ar6,@r0
      0001ED A8*00            [24]  674 	mov	r0,_bp
      0001EF 08               [12]  675 	inc	r0
      0001F0 16               [12]  676 	dec	@r0
      0001F1 B6 FF 0C         [24]  677 	cjne	@r0,#0xff,00447$
      0001F4 08               [12]  678 	inc	r0
      0001F5 16               [12]  679 	dec	@r0
      0001F6 B6 FF 07         [24]  680 	cjne	@r0,#0xff,00447$
      0001F9 08               [12]  681 	inc	r0
      0001FA 16               [12]  682 	dec	@r0
      0001FB B6 FF 02         [24]  683 	cjne	@r0,#0xff,00447$
      0001FE 08               [12]  684 	inc	r0
      0001FF 16               [12]  685 	dec	@r0
      000200                        686 00447$:
      000200 EA               [12]  687 	mov	a,r2
      000201 4C               [12]  688 	orl	a,r4
      000202 4D               [12]  689 	orl	a,r5
      000203 4E               [12]  690 	orl	a,r6
      000204 70 D9            [24]  691 	jnz	00125$
                                    692 ;	../UI_Manager/ui.c:98: Changed = CHANGE_SCREEN_X;
      000206 75*01 FF         [24]  693 	mov	_Changed,#0xff
                                    694 ;	../UI_Manager/ui.c:100: return;
      000209 02r04r90         [24]  695 	ljmp	00175$
      00020C                        696 00129$:
                                    697 ;	../UI_Manager/ui.c:104: if(action == BUTTON_FUN_BURST){
      00020C BF 06 02         [24]  698 	cjne	r7,#0x06,00449$
      00020F 80 03            [24]  699 	sjmp	00450$
      000211                        700 00449$:
      000211 02r03r3B         [24]  701 	ljmp	00137$
      000214                        702 00450$:
                                    703 ;	../UI_Manager/ui.c:106: ss = bursting & ~BURSTING;
      000214 74 7F            [12]  704 	mov	a,#0x7f
      000216 55*03            [12]  705 	anl	a,_tick_ui_bursting_65536_37
      000218 FE               [12]  706 	mov	r6,a
                                    707 ;	../UI_Manager/ui.c:108: exe_command(CLEAR_DISPLAY);
      000219 90 80 00         [24]  708 	mov	dptr,#0x8000
      00021C C0 06            [24]  709 	push	ar6
      00021E 12r00r00         [24]  710 	lcall	_exe_command
      000221 D0 06            [24]  711 	pop	ar6
                                    712 ;	../UI_Manager/ui.c:110: if(!ss){
      000223 EE               [12]  713 	mov	a,r6
      000224 70 53            [24]  714 	jnz	00131$
                                    715 ;	../UI_Manager/ui.c:111: write_string(getString(SECRET_STRING_OFFSET + 6), LINE_LENGTH, 0, LINE_0, NOT_SELECTED);
      000226 75 82 2E         [24]  716 	mov	dpl,#0x2e
      000229 12r13r83         [24]  717 	lcall	_getString
      00022C AB 82            [24]  718 	mov	r3,dpl
      00022E AC 83            [24]  719 	mov	r4,dph
      000230 AD F0            [24]  720 	mov	r5,b
      000232 E4               [12]  721 	clr	a
      000233 C0 E0            [24]  722 	push	acc
      000235 C0 E0            [24]  723 	push	acc
      000237 C0 E0            [24]  724 	push	acc
      000239 74 10            [12]  725 	mov	a,#0x10
      00023B C0 E0            [24]  726 	push	acc
      00023D 8B 82            [24]  727 	mov	dpl,r3
      00023F 8C 83            [24]  728 	mov	dph,r4
      000241 8D F0            [24]  729 	mov	b,r5
      000243 12r00r00         [24]  730 	lcall	_write_string
      000246 E5 81            [12]  731 	mov	a,sp
      000248 24 FC            [12]  732 	add	a,#0xfc
      00024A F5 81            [12]  733 	mov	sp,a
                                    734 ;	../UI_Manager/ui.c:112: write_string(getString(SECRET_STRING_OFFSET + 7), LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      00024C 75 82 2F         [24]  735 	mov	dpl,#0x2f
      00024F 12r13r83         [24]  736 	lcall	_getString
      000252 AB 82            [24]  737 	mov	r3,dpl
      000254 AC 83            [24]  738 	mov	r4,dph
      000256 AD F0            [24]  739 	mov	r5,b
      000258 E4               [12]  740 	clr	a
      000259 C0 E0            [24]  741 	push	acc
      00025B 04               [12]  742 	inc	a
      00025C C0 E0            [24]  743 	push	acc
      00025E E4               [12]  744 	clr	a
      00025F C0 E0            [24]  745 	push	acc
      000261 74 10            [12]  746 	mov	a,#0x10
      000263 C0 E0            [24]  747 	push	acc
      000265 8B 82            [24]  748 	mov	dpl,r3
      000267 8C 83            [24]  749 	mov	dph,r4
      000269 8D F0            [24]  750 	mov	b,r5
      00026B 12r00r00         [24]  751 	lcall	_write_string
      00026E E5 81            [12]  752 	mov	a,sp
      000270 24 FC            [12]  753 	add	a,#0xfc
      000272 F5 81            [12]  754 	mov	sp,a
                                    755 ;	../UI_Manager/ui.c:113: ss = 3;
      000274 7D 03            [12]  756 	mov	r5,#0x03
      000276 02r02rF8         [24]  757 	ljmp	00132$
      000279                        758 00131$:
                                    759 ;	../UI_Manager/ui.c:115: write_string(getString(SECRET_STRING_OFFSET + (ss % 3)*2), LINE_LENGTH, 0, LINE_0, NOT_SELECTED);
      000279 8E 03            [24]  760 	mov	ar3,r6
      00027B 7C 00            [12]  761 	mov	r4,#0x00
      00027D C0 06            [24]  762 	push	ar6
      00027F 74 03            [12]  763 	mov	a,#0x03
      000281 C0 E0            [24]  764 	push	acc
      000283 E4               [12]  765 	clr	a
      000284 C0 E0            [24]  766 	push	acc
      000286 8B 82            [24]  767 	mov	dpl,r3
      000288 8C 83            [24]  768 	mov	dph,r4
      00028A 12r00r00         [24]  769 	lcall	__modsint
      00028D AB 82            [24]  770 	mov	r3,dpl
      00028F 15 81            [12]  771 	dec	sp
      000291 15 81            [12]  772 	dec	sp
      000293 D0 06            [24]  773 	pop	ar6
      000295 EB               [12]  774 	mov	a,r3
      000296 2B               [12]  775 	add	a,r3
      000297 FF               [12]  776 	mov	r7,a
      000298 24 28            [12]  777 	add	a,#0x28
      00029A F5 82            [12]  778 	mov	dpl,a
      00029C C0 07            [24]  779 	push	ar7
      00029E C0 06            [24]  780 	push	ar6
      0002A0 12r13r83         [24]  781 	lcall	_getString
      0002A3 AA 82            [24]  782 	mov	r2,dpl
      0002A5 AB 83            [24]  783 	mov	r3,dph
      0002A7 AC F0            [24]  784 	mov	r4,b
      0002A9 E4               [12]  785 	clr	a
      0002AA C0 E0            [24]  786 	push	acc
      0002AC C0 E0            [24]  787 	push	acc
      0002AE C0 E0            [24]  788 	push	acc
      0002B0 74 10            [12]  789 	mov	a,#0x10
      0002B2 C0 E0            [24]  790 	push	acc
      0002B4 8A 82            [24]  791 	mov	dpl,r2
      0002B6 8B 83            [24]  792 	mov	dph,r3
      0002B8 8C F0            [24]  793 	mov	b,r4
      0002BA 12r00r00         [24]  794 	lcall	_write_string
      0002BD E5 81            [12]  795 	mov	a,sp
      0002BF 24 FC            [12]  796 	add	a,#0xfc
      0002C1 F5 81            [12]  797 	mov	sp,a
      0002C3 D0 06            [24]  798 	pop	ar6
      0002C5 D0 07            [24]  799 	pop	ar7
                                    800 ;	../UI_Manager/ui.c:116: write_string(getString(SECRET_STRING_OFFSET + (ss % 3)*2 + 1), LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      0002C7 74 29            [12]  801 	mov	a,#0x29
      0002C9 2F               [12]  802 	add	a,r7
      0002CA F5 82            [12]  803 	mov	dpl,a
      0002CC C0 06            [24]  804 	push	ar6
      0002CE 12r13r83         [24]  805 	lcall	_getString
      0002D1 AA 82            [24]  806 	mov	r2,dpl
      0002D3 AB 83            [24]  807 	mov	r3,dph
      0002D5 AC F0            [24]  808 	mov	r4,b
      0002D7 E4               [12]  809 	clr	a
      0002D8 C0 E0            [24]  810 	push	acc
      0002DA 04               [12]  811 	inc	a
      0002DB C0 E0            [24]  812 	push	acc
      0002DD E4               [12]  813 	clr	a
      0002DE C0 E0            [24]  814 	push	acc
      0002E0 74 10            [12]  815 	mov	a,#0x10
      0002E2 C0 E0            [24]  816 	push	acc
      0002E4 8A 82            [24]  817 	mov	dpl,r2
      0002E6 8B 83            [24]  818 	mov	dph,r3
      0002E8 8C F0            [24]  819 	mov	b,r4
      0002EA 12r00r00         [24]  820 	lcall	_write_string
      0002ED E5 81            [12]  821 	mov	a,sp
      0002EF 24 FC            [12]  822 	add	a,#0xfc
      0002F1 F5 81            [12]  823 	mov	sp,a
      0002F3 D0 06            [24]  824 	pop	ar6
                                    825 ;	../UI_Manager/ui.c:117: ss++;
      0002F5 EE               [12]  826 	mov	a,r6
      0002F6 04               [12]  827 	inc	a
      0002F7 FD               [12]  828 	mov	r5,a
      0002F8                        829 00132$:
                                    830 ;	../UI_Manager/ui.c:120: bursting &= BURSTING;
      0002F8 53*03 80         [24]  831 	anl	_tick_ui_bursting_65536_37,#0x80
                                    832 ;	../UI_Manager/ui.c:121: bursting |= (ss & ~BURSTING);
      0002FB 74 7F            [12]  833 	mov	a,#0x7f
      0002FD 5D               [12]  834 	anl	a,r5
      0002FE 42*03            [12]  835 	orl	_tick_ui_bursting_65536_37,a
                                    836 ;	../UI_Manager/ui.c:125: while(delay--){ ;; }
      000300 A8*00            [24]  837 	mov	r0,_bp
      000302 08               [12]  838 	inc	r0
      000303 76 DD            [12]  839 	mov	@r0,#0xdd
      000305 08               [12]  840 	inc	r0
      000306 76 8A            [12]  841 	mov	@r0,#0x8a
      000308 08               [12]  842 	inc	r0
      000309 76 14            [12]  843 	mov	@r0,#0x14
      00030B 08               [12]  844 	inc	r0
      00030C 76 00            [12]  845 	mov	@r0,#0x00
      00030E                        846 00133$:
      00030E A8*00            [24]  847 	mov	r0,_bp
      000310 08               [12]  848 	inc	r0
      000311 86 02            [24]  849 	mov	ar2,@r0
      000313 08               [12]  850 	inc	r0
      000314 86 04            [24]  851 	mov	ar4,@r0
      000316 08               [12]  852 	inc	r0
      000317 86 05            [24]  853 	mov	ar5,@r0
      000319 08               [12]  854 	inc	r0
      00031A 86 06            [24]  855 	mov	ar6,@r0
      00031C A8*00            [24]  856 	mov	r0,_bp
      00031E 08               [12]  857 	inc	r0
      00031F 16               [12]  858 	dec	@r0
      000320 B6 FF 0C         [24]  859 	cjne	@r0,#0xff,00452$
      000323 08               [12]  860 	inc	r0
      000324 16               [12]  861 	dec	@r0
      000325 B6 FF 07         [24]  862 	cjne	@r0,#0xff,00452$
      000328 08               [12]  863 	inc	r0
      000329 16               [12]  864 	dec	@r0
      00032A B6 FF 02         [24]  865 	cjne	@r0,#0xff,00452$
      00032D 08               [12]  866 	inc	r0
      00032E 16               [12]  867 	dec	@r0
      00032F                        868 00452$:
      00032F EA               [12]  869 	mov	a,r2
      000330 4C               [12]  870 	orl	a,r4
      000331 4D               [12]  871 	orl	a,r5
      000332 4E               [12]  872 	orl	a,r6
      000333 70 D9            [24]  873 	jnz	00133$
                                    874 ;	../UI_Manager/ui.c:127: Changed = CHANGE_SCREEN_X;
      000335 75*01 FF         [24]  875 	mov	_Changed,#0xff
                                    876 ;	../UI_Manager/ui.c:129: return;
      000338 02r04r90         [24]  877 	ljmp	00175$
      00033B                        878 00137$:
                                    879 ;	../UI_Manager/ui.c:133: if(action == BUTTON_FUN_TIME){
      00033B BF 04 06         [24]  880 	cjne	r7,#0x04,00139$
                                    881 ;	../UI_Manager/ui.c:134: State = IDLE_STATE;
      00033E 75*00 00         [24]  882 	mov	_State,#0x00
                                    883 ;	../UI_Manager/ui.c:135: Changed = CHANGE_SCREEN_X;
      000341 75*01 FF         [24]  884 	mov	_Changed,#0xff
      000344                        885 00139$:
                                    886 ;	../UI_Manager/ui.c:140: if(Changed || 
      000344 E5*01            [12]  887 	mov	a,_Changed
      000346 70 2F            [24]  888 	jnz	00164$
                                    889 ;	../UI_Manager/ui.c:141: action == BUTTON_UP ||
      000348 BF 03 02         [24]  890 	cjne	r7,#0x03,00457$
      00034B 80 2A            [24]  891 	sjmp	00164$
      00034D                        892 00457$:
                                    893 ;	../UI_Manager/ui.c:142: action == BUTTON_UP_HOLD||
      00034D BF 1E 02         [24]  894 	cjne	r7,#0x1e,00458$
      000350 80 25            [24]  895 	sjmp	00164$
      000352                        896 00458$:
                                    897 ;	../UI_Manager/ui.c:143: action == BUTTON_UP_BURST ||
      000352 BF 1F 02         [24]  898 	cjne	r7,#0x1f,00459$
      000355 80 20            [24]  899 	sjmp	00164$
      000357                        900 00459$:
                                    901 ;	../UI_Manager/ui.c:144: action == BUTTON_DOWN ||
      000357 BF 0B 02         [24]  902 	cjne	r7,#0x0b,00460$
      00035A 80 1B            [24]  903 	sjmp	00164$
      00035C                        904 00460$:
                                    905 ;	../UI_Manager/ui.c:145: action == BUTTON_DOWN_HOLD ||
      00035C BF 6E 02         [24]  906 	cjne	r7,#0x6e,00461$
      00035F 80 16            [24]  907 	sjmp	00164$
      000361                        908 00461$:
                                    909 ;	../UI_Manager/ui.c:146: action == BUTTON_DOWN_BURST ||
      000361 BF 6F 02         [24]  910 	cjne	r7,#0x6f,00462$
      000364 80 11            [24]  911 	sjmp	00164$
      000366                        912 00462$:
                                    913 ;	../UI_Manager/ui.c:147: action == BUTTON_TIMER ||
      000366 BF 01 02         [24]  914 	cjne	r7,#0x01,00463$
      000369 80 0C            [24]  915 	sjmp	00164$
      00036B                        916 00463$:
                                    917 ;	../UI_Manager/ui.c:148: action == BUTTON_FUNCTION ||
      00036B BF 02 02         [24]  918 	cjne	r7,#0x02,00464$
      00036E 80 07            [24]  919 	sjmp	00164$
      000370                        920 00464$:
                                    921 ;	../UI_Manager/ui.c:149: State == IDLE_STATE){
      000370 E5*00            [12]  922 	mov	a,_State
      000372 60 03            [24]  923 	jz	00465$
      000374 02r04r90         [24]  924 	ljmp	00175$
      000377                        925 00465$:
      000377                        926 00164$:
                                    927 ;	../UI_Manager/ui.c:151: switch (State)
      000377 AE*00            [24]  928 	mov	r6,_State
      000379 BE 01 03         [24]  929 	cjne	r6,#0x01,00466$
      00037C 02r04r25         [24]  930 	ljmp	00141$
      00037F                        931 00466$:
      00037F BE 02 03         [24]  932 	cjne	r6,#0x02,00467$
      000382 02r04r33         [24]  933 	ljmp	00143$
      000385                        934 00467$:
      000385 BE 03 03         [24]  935 	cjne	r6,#0x03,00468$
      000388 02r04r2C         [24]  936 	ljmp	00142$
      00038B                        937 00468$:
      00038B BE 04 03         [24]  938 	cjne	r6,#0x04,00469$
      00038E 02r04r3A         [24]  939 	ljmp	00144$
      000391                        940 00469$:
      000391 BE 05 03         [24]  941 	cjne	r6,#0x05,00470$
      000394 02r04r41         [24]  942 	ljmp	00145$
      000397                        943 00470$:
      000397 BE 06 03         [24]  944 	cjne	r6,#0x06,00471$
      00039A 02r04r48         [24]  945 	ljmp	00149$
      00039D                        946 00471$:
      00039D BE 07 03         [24]  947 	cjne	r6,#0x07,00472$
      0003A0 02r04r48         [24]  948 	ljmp	00149$
      0003A3                        949 00472$:
      0003A3 BE 08 03         [24]  950 	cjne	r6,#0x08,00473$
      0003A6 02r04r48         [24]  951 	ljmp	00149$
      0003A9                        952 00473$:
      0003A9 BE 09 03         [24]  953 	cjne	r6,#0x09,00474$
      0003AC 02r04r48         [24]  954 	ljmp	00149$
      0003AF                        955 00474$:
      0003AF BE 0A 03         [24]  956 	cjne	r6,#0x0a,00475$
      0003B2 02r04r4F         [24]  957 	ljmp	00152$
      0003B5                        958 00475$:
      0003B5 BE 0B 03         [24]  959 	cjne	r6,#0x0b,00476$
      0003B8 02r04r4F         [24]  960 	ljmp	00152$
      0003BB                        961 00476$:
      0003BB BE 0C 03         [24]  962 	cjne	r6,#0x0c,00477$
      0003BE 02r04r4F         [24]  963 	ljmp	00152$
      0003C1                        964 00477$:
      0003C1 BE 0D 03         [24]  965 	cjne	r6,#0x0d,00478$
      0003C4 02r04r56         [24]  966 	ljmp	00154$
      0003C7                        967 00478$:
      0003C7 BE 0E 03         [24]  968 	cjne	r6,#0x0e,00479$
      0003CA 02r04r56         [24]  969 	ljmp	00154$
      0003CD                        970 00479$:
      0003CD BE 14 03         [24]  971 	cjne	r6,#0x14,00480$
      0003D0 02r04r5D         [24]  972 	ljmp	00155$
      0003D3                        973 00480$:
      0003D3 BE 15 03         [24]  974 	cjne	r6,#0x15,00481$
      0003D6 02r04r64         [24]  975 	ljmp	00156$
      0003D9                        976 00481$:
      0003D9 BE 45 02         [24]  977 	cjne	r6,#0x45,00482$
      0003DC 80 03            [24]  978 	sjmp	00483$
      0003DE                        979 00482$:
      0003DE 02r04r6B         [24]  980 	ljmp	00157$
      0003E1                        981 00483$:
                                    982 ;	../UI_Manager/ui.c:156: exe_command(CLEAR_DISPLAY);
      0003E1 90 80 00         [24]  983 	mov	dptr,#0x8000
      0003E4 12r00r00         [24]  984 	lcall	_exe_command
                                    985 ;	../UI_Manager/ui.c:157: write_string("AtmosFEAR 221B", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      0003E7 E4               [12]  986 	clr	a
      0003E8 C0 E0            [24]  987 	push	acc
      0003EA C0 E0            [24]  988 	push	acc
      0003EC 04               [12]  989 	inc	a
      0003ED C0 E0            [24]  990 	push	acc
      0003EF C4               [12]  991 	swap	a
      0003F0 C0 E0            [24]  992 	push	acc
      0003F2 90r00r55         [24]  993 	mov	dptr,#___str_6
      0003F5 75 F0 80         [24]  994 	mov	b,#0x80
      0003F8 12r00r00         [24]  995 	lcall	_write_string
      0003FB E5 81            [12]  996 	mov	a,sp
      0003FD 24 FC            [12]  997 	add	a,#0xfc
      0003FF F5 81            [12]  998 	mov	sp,a
                                    999 ;	../UI_Manager/ui.c:158: write_string("By Blizzard Pro", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      000401 E4               [12] 1000 	clr	a
      000402 C0 E0            [24] 1001 	push	acc
      000404 04               [12] 1002 	inc	a
      000405 C0 E0            [24] 1003 	push	acc
      000407 E4               [12] 1004 	clr	a
      000408 C0 E0            [24] 1005 	push	acc
      00040A 74 10            [12] 1006 	mov	a,#0x10
      00040C C0 E0            [24] 1007 	push	acc
      00040E 90r00r64         [24] 1008 	mov	dptr,#___str_7
      000411 75 F0 80         [24] 1009 	mov	b,#0x80
      000414 12r00r00         [24] 1010 	lcall	_write_string
      000417 E5 81            [12] 1011 	mov	a,sp
      000419 24 FC            [12] 1012 	add	a,#0xfc
      00041B F5 81            [12] 1013 	mov	sp,a
                                   1014 ;	../UI_Manager/ui.c:160: Changed = CHANGE_SCREEN_X;
      00041D 75*01 FF         [24] 1015 	mov	_Changed,#0xff
                                   1016 ;	../UI_Manager/ui.c:161: State = IDLE_STATE;
      000420 75*00 00         [24] 1017 	mov	_State,#0x00
                                   1018 ;	../UI_Manager/ui.c:163: break;
                                   1019 ;	../UI_Manager/ui.c:164: case MANUAL_FOG_POWER_STATE:
      000423 80 6B            [24] 1020 	sjmp	00175$
      000425                       1021 00141$:
                                   1022 ;	../UI_Manager/ui.c:165: fogLevelPage(action);
      000425 8F 82            [24] 1023 	mov	dpl,r7
      000427 12r08r50         [24] 1024 	lcall	_fogLevelPage
                                   1025 ;	../UI_Manager/ui.c:166: break;
                                   1026 ;	../UI_Manager/ui.c:167: case MANUAL_FOG_INTERVAL_STATE:
      00042A 80 64            [24] 1027 	sjmp	00175$
      00042C                       1028 00142$:
                                   1029 ;	../UI_Manager/ui.c:168: fogIntervalPage(action);
      00042C 8F 82            [24] 1030 	mov	dpl,r7
      00042E 12r09rE0         [24] 1031 	lcall	_fogIntervalPage
                                   1032 ;	../UI_Manager/ui.c:169: break;
                                   1033 ;	../UI_Manager/ui.c:170: case MANUAL_FOG_DURATION_STATE:
      000431 80 5D            [24] 1034 	sjmp	00175$
      000433                       1035 00143$:
                                   1036 ;	../UI_Manager/ui.c:171: fogDurationPage(action);
      000433 8F 82            [24] 1037 	mov	dpl,r7
      000435 12r0ArB1         [24] 1038 	lcall	_fogDurationPage
                                   1039 ;	../UI_Manager/ui.c:172: break;
                                   1040 ;	../UI_Manager/ui.c:173: case MANUAL_COLOR_MACRO_STATE:
      000438 80 56            [24] 1041 	sjmp	00175$
      00043A                       1042 00144$:
                                   1043 ;	../UI_Manager/ui.c:174: macroPage(action);
      00043A 8F 82            [24] 1044 	mov	dpl,r7
      00043C 12r0Br82         [24] 1045 	lcall	_macroPage
                                   1046 ;	../UI_Manager/ui.c:175: break;
                                   1047 ;	../UI_Manager/ui.c:176: case MANUAL_MACRO_SPEED_STATE:
      00043F 80 4F            [24] 1048 	sjmp	00175$
      000441                       1049 00145$:
                                   1050 ;	../UI_Manager/ui.c:177: macroSpeedPage(action);
      000441 8F 82            [24] 1051 	mov	dpl,r7
      000443 12r0Cr4C         [24] 1052 	lcall	_macroSpeedPage
                                   1053 ;	../UI_Manager/ui.c:178: break;
                                   1054 ;	../UI_Manager/ui.c:182: case MANUAL_STROBE_STATE:
      000446 80 48            [24] 1055 	sjmp	00175$
      000448                       1056 00149$:
                                   1057 ;	../UI_Manager/ui.c:183: colorPage(action);
      000448 8F 82            [24] 1058 	mov	dpl,r7
      00044A 12r0Dr47         [24] 1059 	lcall	_colorPage
                                   1060 ;	../UI_Manager/ui.c:184: break;
                                   1061 ;	../UI_Manager/ui.c:187: case MANUAL_REMOTE_ACTION_6_STATE:
      00044D 80 41            [24] 1062 	sjmp	00175$
      00044F                       1063 00152$:
                                   1064 ;	../UI_Manager/ui.c:188: remotePage(action);
      00044F 8F 82            [24] 1065 	mov	dpl,r7
      000451 12r0Er87         [24] 1066 	lcall	_remotePage
                                   1067 ;	../UI_Manager/ui.c:189: break;
                                   1068 ;	../UI_Manager/ui.c:191: case MANUAL_SAVE_SETTINGS_STATE:
      000454 80 3A            [24] 1069 	sjmp	00175$
      000456                       1070 00154$:
                                   1071 ;	../UI_Manager/ui.c:192: saveLoadPage(action);
      000456 8F 82            [24] 1072 	mov	dpl,r7
      000458 12r0FrD3         [24] 1073 	lcall	_saveLoadPage
                                   1074 ;	../UI_Manager/ui.c:193: break;
                                   1075 ;	../UI_Manager/ui.c:194: case DMX_ADDRESS_STATE:
      00045B 80 33            [24] 1076 	sjmp	00175$
      00045D                       1077 00155$:
                                   1078 ;	../UI_Manager/ui.c:195: dmxAddressPage(action);
      00045D 8F 82            [24] 1079 	mov	dpl,r7
      00045F 12r11r23         [24] 1080 	lcall	_dmxAddressPage
                                   1081 ;	../UI_Manager/ui.c:196: break;
                                   1082 ;	../UI_Manager/ui.c:197: case DMX_CHANNEL_MODE_STATE:
      000462 80 2C            [24] 1083 	sjmp	00175$
      000464                       1084 00156$:
                                   1085 ;	../UI_Manager/ui.c:198: dmxChannelPage(action);
      000464 8F 82            [24] 1086 	mov	dpl,r7
      000466 12r11rBB         [24] 1087 	lcall	_dmxChannelPage
                                   1088 ;	../UI_Manager/ui.c:199: break;
                                   1089 ;	../UI_Manager/ui.c:200: default: //IDLE state
      000469 80 25            [24] 1090 	sjmp	00175$
      00046B                       1091 00157$:
                                   1092 ;	../UI_Manager/ui.c:201: idlePage();
      00046B C0 07            [24] 1093 	push	ar7
      00046D 12r04r96         [24] 1094 	lcall	_idlePage
      000470 D0 07            [24] 1095 	pop	ar7
                                   1096 ;	../UI_Manager/ui.c:203: if(action == BUTTON_FUNCTION){
      000472 BF 02 0D         [24] 1097 	cjne	r7,#0x02,00161$
                                   1098 ;	../UI_Manager/ui.c:204: set_ui_state(INC, NULL);
      000475 E4               [12] 1099 	clr	a
      000476 C0 E0            [24] 1100 	push	acc
      000478 75 82 01         [24] 1101 	mov	dpl,#0x01
      00047B 12r12r76         [24] 1102 	lcall	_set_ui_state
      00047E 15 81            [12] 1103 	dec	sp
      000480 80 0E            [24] 1104 	sjmp	00175$
      000482                       1105 00161$:
                                   1106 ;	../UI_Manager/ui.c:205: } else if(action == BUTTON_TIMER){
      000482 BF 01 0B         [24] 1107 	cjne	r7,#0x01,00175$
                                   1108 ;	../UI_Manager/ui.c:206: set_ui_state(DEC, NULL);
      000485 E4               [12] 1109 	clr	a
      000486 C0 E0            [24] 1110 	push	acc
      000488 75 82 02         [24] 1111 	mov	dpl,#0x02
      00048B 12r12r76         [24] 1112 	lcall	_set_ui_state
      00048E 15 81            [12] 1113 	dec	sp
                                   1114 ;	../UI_Manager/ui.c:209: }
      000490                       1115 00175$:
                                   1116 ;	../UI_Manager/ui.c:212: }
      000490 85*00 81         [24] 1117 	mov	sp,_bp
      000493 D0*00            [24] 1118 	pop	_bp
      000495 22               [24] 1119 	ret
                                   1120 ;------------------------------------------------------------
                                   1121 ;Allocation info for local variables in function 'idlePage'
                                   1122 ;------------------------------------------------------------
                                   1123 ;temp                      Allocated to registers r7 
                                   1124 ;timer                     Allocated with name '_idlePage_timer_65536_61'
                                   1125 ;intervalOrDuration        Allocated with name '_idlePage_intervalOrDuration_65536_61'
                                   1126 ;empty                     Allocated with name '_idlePage_empty_65536_61'
                                   1127 ;tock                      Allocated with name '_idlePage_tock_65536_61'
                                   1128 ;iconChange                Allocated with name '_idlePage_iconChange_65536_61'
                                   1129 ;playing                   Allocated with name '_idlePage_playing_65536_61'
                                   1130 ;------------------------------------------------------------
                                   1131 ;	../UI_Manager/ui.c:214: void idlePage(){
                                   1132 ;	-----------------------------------------
                                   1133 ;	 function idlePage
                                   1134 ;	-----------------------------------------
      000496                       1135 _idlePage:
                                   1136 ;	../UI_Manager/ui.c:223: if(empty){
      000496 E5*06            [12] 1137 	mov	a,_idlePage_empty_65536_61
      000498 60 50            [24] 1138 	jz	00107$
                                   1139 ;	../UI_Manager/ui.c:224: if(get_fog_fluid_level() == TANK_FULL){
      00049A 74 01            [12] 1140 	mov	a,#0x01
      00049C B5*00 07         [24] 1141 	cjne	a,_Fluid_Level,00104$
                                   1142 ;	../UI_Manager/ui.c:225: empty = 0x00;
      00049F 75*06 00         [24] 1143 	mov	_idlePage_empty_65536_61,#0x00
                                   1144 ;	../UI_Manager/ui.c:226: Changed = CHANGE_SCREEN_X;
      0004A2 75*01 FF         [24] 1145 	mov	_Changed,#0xff
      0004A5 22               [24] 1146 	ret
      0004A6                       1147 00104$:
                                   1148 ;	../UI_Manager/ui.c:227: } else if(Changed){
      0004A6 E5*01            [12] 1149 	mov	a,_Changed
      0004A8 60 3F            [24] 1150 	jz	00105$
                                   1151 ;	../UI_Manager/ui.c:228: Changed = 0x00;
      0004AA 75*01 00         [24] 1152 	mov	_Changed,#0x00
                                   1153 ;	../UI_Manager/ui.c:229: exe_command(CLEAR_DISPLAY);
      0004AD 90 80 00         [24] 1154 	mov	dptr,#0x8000
      0004B0 12r00r00         [24] 1155 	lcall	_exe_command
                                   1156 ;	../UI_Manager/ui.c:230: write_string("PC Load Letter", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      0004B3 E4               [12] 1157 	clr	a
      0004B4 C0 E0            [24] 1158 	push	acc
      0004B6 C0 E0            [24] 1159 	push	acc
      0004B8 04               [12] 1160 	inc	a
      0004B9 C0 E0            [24] 1161 	push	acc
      0004BB C4               [12] 1162 	swap	a
      0004BC C0 E0            [24] 1163 	push	acc
      0004BE 90r00r74         [24] 1164 	mov	dptr,#___str_8
      0004C1 75 F0 80         [24] 1165 	mov	b,#0x80
      0004C4 12r00r00         [24] 1166 	lcall	_write_string
      0004C7 E5 81            [12] 1167 	mov	a,sp
      0004C9 24 FC            [12] 1168 	add	a,#0xfc
      0004CB F5 81            [12] 1169 	mov	sp,a
                                   1170 ;	../UI_Manager/ui.c:231: write_string("Burst to Refill", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      0004CD E4               [12] 1171 	clr	a
      0004CE C0 E0            [24] 1172 	push	acc
      0004D0 04               [12] 1173 	inc	a
      0004D1 C0 E0            [24] 1174 	push	acc
      0004D3 E4               [12] 1175 	clr	a
      0004D4 C0 E0            [24] 1176 	push	acc
      0004D6 74 10            [12] 1177 	mov	a,#0x10
      0004D8 C0 E0            [24] 1178 	push	acc
      0004DA 90r00r83         [24] 1179 	mov	dptr,#___str_9
      0004DD 75 F0 80         [24] 1180 	mov	b,#0x80
      0004E0 12r00r00         [24] 1181 	lcall	_write_string
      0004E3 E5 81            [12] 1182 	mov	a,sp
      0004E5 24 FC            [12] 1183 	add	a,#0xfc
      0004E7 F5 81            [12] 1184 	mov	sp,a
      0004E9                       1185 00105$:
                                   1186 ;	../UI_Manager/ui.c:234: return;
      0004E9 22               [24] 1187 	ret
      0004EA                       1188 00107$:
                                   1189 ;	../UI_Manager/ui.c:238: if(get_fog_fluid_level() == TANK_EMPTY && get_heated() == HEATED){
      0004EA E5*00            [12] 1190 	mov	a,_Fluid_Level
      0004EC 70 47            [24] 1191 	jnz	00109$
      0004EE AE*00            [24] 1192 	mov	r6,_Heat_Flag
      0004F0 53 06 80         [24] 1193 	anl	ar6,#0x80
      0004F3 7F 00            [12] 1194 	mov	r7,#0x00
      0004F5 BE 80 3D         [24] 1195 	cjne	r6,#0x80,00109$
      0004F8 BF 00 3A         [24] 1196 	cjne	r7,#0x00,00109$
                                   1197 ;	../UI_Manager/ui.c:240: write_string("PC Load Letter", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      0004FB E4               [12] 1198 	clr	a
      0004FC C0 E0            [24] 1199 	push	acc
      0004FE C0 E0            [24] 1200 	push	acc
      000500 04               [12] 1201 	inc	a
      000501 C0 E0            [24] 1202 	push	acc
      000503 C4               [12] 1203 	swap	a
      000504 C0 E0            [24] 1204 	push	acc
      000506 90r00r74         [24] 1205 	mov	dptr,#___str_8
      000509 75 F0 80         [24] 1206 	mov	b,#0x80
      00050C 12r00r00         [24] 1207 	lcall	_write_string
      00050F E5 81            [12] 1208 	mov	a,sp
      000511 24 FC            [12] 1209 	add	a,#0xfc
      000513 F5 81            [12] 1210 	mov	sp,a
                                   1211 ;	../UI_Manager/ui.c:241: write_string("Burst to Refill", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      000515 E4               [12] 1212 	clr	a
      000516 C0 E0            [24] 1213 	push	acc
      000518 04               [12] 1214 	inc	a
      000519 C0 E0            [24] 1215 	push	acc
      00051B E4               [12] 1216 	clr	a
      00051C C0 E0            [24] 1217 	push	acc
      00051E 74 10            [12] 1218 	mov	a,#0x10
      000520 C0 E0            [24] 1219 	push	acc
      000522 90r00r83         [24] 1220 	mov	dptr,#___str_9
      000525 75 F0 80         [24] 1221 	mov	b,#0x80
      000528 12r00r00         [24] 1222 	lcall	_write_string
      00052B E5 81            [12] 1223 	mov	a,sp
      00052D 24 FC            [12] 1224 	add	a,#0xfc
      00052F F5 81            [12] 1225 	mov	sp,a
                                   1226 ;	../UI_Manager/ui.c:243: empty = 0xFF;
      000531 75*06 FF         [24] 1227 	mov	_idlePage_empty_65536_61,#0xff
                                   1228 ;	../UI_Manager/ui.c:245: return;
      000534 22               [24] 1229 	ret
      000535                       1230 00109$:
                                   1231 ;	../UI_Manager/ui.c:248: if(Changed){
      000535 E5*01            [12] 1232 	mov	a,_Changed
      000537 70 03            [24] 1233 	jnz	00344$
      000539 02r05rF8         [24] 1234 	ljmp	00119$
      00053C                       1235 00344$:
                                   1236 ;	../UI_Manager/ui.c:249: exe_command(CLEAR_DISPLAY);
      00053C 90 80 00         [24] 1237 	mov	dptr,#0x8000
      00053F 12r00r00         [24] 1238 	lcall	_exe_command
                                   1239 ;	../UI_Manager/ui.c:250: Changed = 0x00;
      000542 75*01 00         [24] 1240 	mov	_Changed,#0x00
                                   1241 ;	../UI_Manager/ui.c:251: changed = 0xFF;
      000545 75*02 FF         [24] 1242 	mov	_changed,#0xff
                                   1243 ;	../UI_Manager/ui.c:252: timer = 0xFF;
      000548 75*04 FF         [24] 1244 	mov	_idlePage_timer_65536_61,#0xff
                                   1245 ;	../UI_Manager/ui.c:253: intervalOrDuration = 0x55; //guaranteed to not be interval or duration
      00054B 75*05 55         [24] 1246 	mov	_idlePage_intervalOrDuration_65536_61,#0x55
                                   1247 ;	../UI_Manager/ui.c:255: if(get_runtime_data(OP_MODE_INDEX)){ /* Manual Mode */
      00054E 75 82 10         [24] 1248 	mov	dpl,#0x10
      000551 12r00r00         [24] 1249 	lcall	_get_runtime_data
      000554 E5 82            [12] 1250 	mov	a,dpl
      000556 60 1D            [24] 1251 	jz	00116$
                                   1252 ;	../UI_Manager/ui.c:256: write_string("Manual Mode", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      000558 E4               [12] 1253 	clr	a
      000559 C0 E0            [24] 1254 	push	acc
      00055B C0 E0            [24] 1255 	push	acc
      00055D 04               [12] 1256 	inc	a
      00055E C0 E0            [24] 1257 	push	acc
      000560 C4               [12] 1258 	swap	a
      000561 C0 E0            [24] 1259 	push	acc
      000563 90r00r93         [24] 1260 	mov	dptr,#___str_10
      000566 75 F0 80         [24] 1261 	mov	b,#0x80
      000569 12r00r00         [24] 1262 	lcall	_write_string
      00056C E5 81            [12] 1263 	mov	a,sp
      00056E 24 FC            [12] 1264 	add	a,#0xfc
      000570 F5 81            [12] 1265 	mov	sp,a
      000572 02r05rF8         [24] 1266 	ljmp	00119$
      000575                       1267 00116$:
                                   1268 ;	../UI_Manager/ui.c:259: write_number(get_dmx_address(), 4, LINE_1, NOT_SELECTED);
      000575 12r00r00         [24] 1269 	lcall	_get_dmx_address
      000578 E4               [12] 1270 	clr	a
      000579 C0 E0            [24] 1271 	push	acc
      00057B 04               [12] 1272 	inc	a
      00057C C0 E0            [24] 1273 	push	acc
      00057E 74 04            [12] 1274 	mov	a,#0x04
      000580 C0 E0            [24] 1275 	push	acc
      000582 12r00r00         [24] 1276 	lcall	_write_number
      000585 15 81            [12] 1277 	dec	sp
      000587 15 81            [12] 1278 	dec	sp
      000589 15 81            [12] 1279 	dec	sp
                                   1280 ;	../UI_Manager/ui.c:260: switch (get_runtime_data(MODE_INDEX))
      00058B 75 82 0E         [24] 1281 	mov	dpl,#0x0e
      00058E 12r00r00         [24] 1282 	lcall	_get_runtime_data
      000591 AF 82            [24] 1283 	mov	r7,dpl
      000593 BF 01 02         [24] 1284 	cjne	r7,#0x01,00346$
      000596 80 05            [24] 1285 	sjmp	00111$
      000598                       1286 00346$:
                                   1287 ;	../UI_Manager/ui.c:262: case OPTION_DMX_MODE_3:
      000598 BF 02 0A         [24] 1288 	cjne	r7,#0x02,00113$
      00059B 80 04            [24] 1289 	sjmp	00112$
      00059D                       1290 00111$:
                                   1291 ;	../UI_Manager/ui.c:263: temp = 3;
      00059D 7F 03            [12] 1292 	mov	r7,#0x03
                                   1293 ;	../UI_Manager/ui.c:264: break;
                                   1294 ;	../UI_Manager/ui.c:265: case OPTION_DMX_MODE_1: 
      00059F 80 06            [24] 1295 	sjmp	00114$
      0005A1                       1296 00112$:
                                   1297 ;	../UI_Manager/ui.c:266: temp = 1;
      0005A1 7F 01            [12] 1298 	mov	r7,#0x01
                                   1299 ;	../UI_Manager/ui.c:267: break;
                                   1300 ;	../UI_Manager/ui.c:268: default:
      0005A3 80 02            [24] 1301 	sjmp	00114$
      0005A5                       1302 00113$:
                                   1303 ;	../UI_Manager/ui.c:269: temp = 11;
      0005A5 7F 0B            [12] 1304 	mov	r7,#0x0b
                                   1305 ;	../UI_Manager/ui.c:271: }
      0005A7                       1306 00114$:
                                   1307 ;	../UI_Manager/ui.c:272: write_number(temp, 12, LINE_1, NOT_SELECTED);
      0005A7 E4               [12] 1308 	clr	a
      0005A8 FE               [12] 1309 	mov	r6,a
      0005A9 C0 E0            [24] 1310 	push	acc
      0005AB 04               [12] 1311 	inc	a
      0005AC C0 E0            [24] 1312 	push	acc
      0005AE 74 0C            [12] 1313 	mov	a,#0x0c
      0005B0 C0 E0            [24] 1314 	push	acc
      0005B2 8F 82            [24] 1315 	mov	dpl,r7
      0005B4 8E 83            [24] 1316 	mov	dph,r6
      0005B6 12r00r00         [24] 1317 	lcall	_write_number
      0005B9 15 81            [12] 1318 	dec	sp
      0005BB 15 81            [12] 1319 	dec	sp
      0005BD 15 81            [12] 1320 	dec	sp
                                   1321 ;	../UI_Manager/ui.c:274: write_string("Addr", sizeof("Addr") - 1, 0, LINE_1, NOT_SELECTED);
      0005BF E4               [12] 1322 	clr	a
      0005C0 C0 E0            [24] 1323 	push	acc
      0005C2 04               [12] 1324 	inc	a
      0005C3 C0 E0            [24] 1325 	push	acc
      0005C5 E4               [12] 1326 	clr	a
      0005C6 C0 E0            [24] 1327 	push	acc
      0005C8 74 04            [12] 1328 	mov	a,#0x04
      0005CA C0 E0            [24] 1329 	push	acc
      0005CC 90r00r9F         [24] 1330 	mov	dptr,#___str_11
      0005CF 75 F0 80         [24] 1331 	mov	b,#0x80
      0005D2 12r00r00         [24] 1332 	lcall	_write_string
      0005D5 E5 81            [12] 1333 	mov	a,sp
      0005D7 24 FC            [12] 1334 	add	a,#0xfc
      0005D9 F5 81            [12] 1335 	mov	sp,a
                                   1336 ;	../UI_Manager/ui.c:275: write_string("Mode", sizeof("Mode") - 1, 9, LINE_1, NOT_SELECTED);
      0005DB E4               [12] 1337 	clr	a
      0005DC C0 E0            [24] 1338 	push	acc
      0005DE 04               [12] 1339 	inc	a
      0005DF C0 E0            [24] 1340 	push	acc
      0005E1 74 09            [12] 1341 	mov	a,#0x09
      0005E3 C0 E0            [24] 1342 	push	acc
      0005E5 74 04            [12] 1343 	mov	a,#0x04
      0005E7 C0 E0            [24] 1344 	push	acc
      0005E9 90r00rA4         [24] 1345 	mov	dptr,#___str_12
      0005EC 75 F0 80         [24] 1346 	mov	b,#0x80
      0005EF 12r00r00         [24] 1347 	lcall	_write_string
      0005F2 E5 81            [12] 1348 	mov	a,sp
      0005F4 24 FC            [12] 1349 	add	a,#0xfc
      0005F6 F5 81            [12] 1350 	mov	sp,a
      0005F8                       1351 00119$:
                                   1352 ;	../UI_Manager/ui.c:283: tock++;
      0005F8 05*07            [12] 1353 	inc	_idlePage_tock_65536_61
                                   1354 ;	../UI_Manager/ui.c:284: if(get_playing() == PLAY){
      0005FA 74 01            [12] 1355 	mov	a,#0x01
      0005FC B5*00 64         [24] 1356 	cjne	a,_Playing,00137$
                                   1357 ;	../UI_Manager/ui.c:285: if(playing == PAUSE){
      0005FF E5*09            [12] 1358 	mov	a,_idlePage_playing_65536_61
                                   1359 ;	../UI_Manager/ui.c:286: iconChange |= PLAY_CHANGE;
      000601 70 08            [24] 1360 	jnz	00121$
      000603 AE*08            [24] 1361 	mov	r6,_idlePage_iconChange_65536_61
      000605 FF               [12] 1362 	mov	r7,a
      000606 43 06 20         [24] 1363 	orl	ar6,#0x20
      000609 8E*08            [24] 1364 	mov	_idlePage_iconChange_65536_61,r6
      00060B                       1365 00121$:
                                   1366 ;	../UI_Manager/ui.c:289: if(get_interval_or_duration() == INTERVAL){
      00060B E5*00            [12] 1367 	mov	a,_Interval_Or_Duration
      00060D 70 1B            [24] 1368 	jnz	00130$
                                   1369 ;	../UI_Manager/ui.c:291: if(iconChange & PLAY_CHANGE){
      00060F E5*08            [12] 1370 	mov	a,_idlePage_iconChange_65536_61
      000611 30 E5 44         [24] 1371 	jnb	acc.5,00131$
                                   1372 ;	../UI_Manager/ui.c:292: write_char(CHAR_PLAY, PLAY_ICON_INDEX, LINE_0);
      000614 E4               [12] 1373 	clr	a
      000615 C0 E0            [24] 1374 	push	acc
      000617 74 0E            [12] 1375 	mov	a,#0x0e
      000619 C0 E0            [24] 1376 	push	acc
      00061B 75 82 80         [24] 1377 	mov	dpl,#0x80
      00061E 12r00r00         [24] 1378 	lcall	_write_char
      000621 15 81            [12] 1379 	dec	sp
      000623 15 81            [12] 1380 	dec	sp
                                   1381 ;	../UI_Manager/ui.c:293: iconChange &= ~PLAY_CHANGE;
      000625 53*08 DF         [24] 1382 	anl	_idlePage_iconChange_65536_61,#0xdf
      000628 80 2E            [24] 1383 	sjmp	00131$
      00062A                       1384 00130$:
                                   1385 ;	../UI_Manager/ui.c:297: if(tock == 0x80 + 55){ //blink if fogging
      00062A 74 B7            [12] 1386 	mov	a,#0xb7
      00062C B5*07 13         [24] 1387 	cjne	a,_idlePage_tock_65536_61,00127$
                                   1388 ;	../UI_Manager/ui.c:298: write_char(CHAR_PLAY, PLAY_ICON_INDEX, LINE_0);
      00062F E4               [12] 1389 	clr	a
      000630 C0 E0            [24] 1390 	push	acc
      000632 74 0E            [12] 1391 	mov	a,#0x0e
      000634 C0 E0            [24] 1392 	push	acc
      000636 75 82 80         [24] 1393 	mov	dpl,#0x80
      000639 12r00r00         [24] 1394 	lcall	_write_char
      00063C 15 81            [12] 1395 	dec	sp
      00063E 15 81            [12] 1396 	dec	sp
      000640 80 16            [24] 1397 	sjmp	00131$
      000642                       1398 00127$:
                                   1399 ;	../UI_Manager/ui.c:299: } else if(tock == 0x08 + 55){
      000642 74 3F            [12] 1400 	mov	a,#0x3f
      000644 B5*07 11         [24] 1401 	cjne	a,_idlePage_tock_65536_61,00131$
                                   1402 ;	../UI_Manager/ui.c:300: write_char(CHAR_NULL, PLAY_ICON_INDEX, LINE_0);
      000647 E4               [12] 1403 	clr	a
      000648 C0 E0            [24] 1404 	push	acc
      00064A 74 0E            [12] 1405 	mov	a,#0x0e
      00064C C0 E0            [24] 1406 	push	acc
      00064E 75 82 04         [24] 1407 	mov	dpl,#0x04
      000651 12r00r00         [24] 1408 	lcall	_write_char
      000654 15 81            [12] 1409 	dec	sp
      000656 15 81            [12] 1410 	dec	sp
      000658                       1411 00131$:
                                   1412 ;	../UI_Manager/ui.c:303: iconChange |= PAUSE_CHANGE;
      000658 AE*08            [24] 1413 	mov	r6,_idlePage_iconChange_65536_61
      00065A 7F 00            [12] 1414 	mov	r7,#0x00
      00065C 43 06 10         [24] 1415 	orl	ar6,#0x10
      00065F 8E*08            [24] 1416 	mov	_idlePage_iconChange_65536_61,r6
      000661 80 33            [24] 1417 	sjmp	00138$
      000663                       1418 00137$:
                                   1419 ;	../UI_Manager/ui.c:305: if(playing == PLAY){
      000663 74 01            [12] 1420 	mov	a,#0x01
      000665 B5*09 09         [24] 1421 	cjne	a,_idlePage_playing_65536_61,00133$
                                   1422 ;	../UI_Manager/ui.c:306: iconChange |= PAUSE_CHANGE;
      000668 AE*08            [24] 1423 	mov	r6,_idlePage_iconChange_65536_61
      00066A 7F 00            [12] 1424 	mov	r7,#0x00
      00066C 43 06 10         [24] 1425 	orl	ar6,#0x10
      00066F 8E*08            [24] 1426 	mov	_idlePage_iconChange_65536_61,r6
      000671                       1427 00133$:
                                   1428 ;	../UI_Manager/ui.c:309: if(iconChange & PAUSE_CHANGE){
      000671 E5*08            [12] 1429 	mov	a,_idlePage_iconChange_65536_61
      000673 30 E4 1D         [24] 1430 	jnb	acc.4,00135$
                                   1431 ;	../UI_Manager/ui.c:310: write_char(CHAR_NULL, PLAY_ICON_INDEX, LINE_0);
      000676 E4               [12] 1432 	clr	a
      000677 C0 E0            [24] 1433 	push	acc
      000679 74 0E            [12] 1434 	mov	a,#0x0e
      00067B C0 E0            [24] 1435 	push	acc
      00067D 75 82 04         [24] 1436 	mov	dpl,#0x04
      000680 12r00r00         [24] 1437 	lcall	_write_char
      000683 15 81            [12] 1438 	dec	sp
      000685 15 81            [12] 1439 	dec	sp
                                   1440 ;	../UI_Manager/ui.c:311: iconChange |= PLAY_CHANGE;
      000687 AE*08            [24] 1441 	mov	r6,_idlePage_iconChange_65536_61
      000689 7F 00            [12] 1442 	mov	r7,#0x00
      00068B 43 06 20         [24] 1443 	orl	ar6,#0x20
      00068E 8E*08            [24] 1444 	mov	_idlePage_iconChange_65536_61,r6
                                   1445 ;	../UI_Manager/ui.c:312: iconChange &= ~PAUSE_CHANGE;
      000690 53*08 EF         [24] 1446 	anl	_idlePage_iconChange_65536_61,#0xef
      000693                       1447 00135$:
                                   1448 ;	../UI_Manager/ui.c:315: playing = PAUSE;
      000693 75*09 00         [24] 1449 	mov	_idlePage_playing_65536_61,#0x00
      000696                       1450 00138$:
                                   1451 ;	../UI_Manager/ui.c:318: if(get_heater_enabled()){
      000696 E5*00            [12] 1452 	mov	a,_Heat_Flag
      000698 20 E4 6D         [24] 1453 	jb	acc.4,00152$
                                   1454 ;	../UI_Manager/ui.c:319: if(get_heated()){
      00069B E5*00            [12] 1455 	mov	a,_Heat_Flag
      00069D 30 E7 1B         [24] 1456 	jnb	acc.7,00147$
                                   1457 ;	../UI_Manager/ui.c:320: if(iconChange & HEATED_CHANGE){
      0006A0 E5*08            [12] 1458 	mov	a,_idlePage_iconChange_65536_61
      0006A2 30 E0 58         [24] 1459 	jnb	acc.0,00148$
                                   1460 ;	../UI_Manager/ui.c:321: write_char(CHAR_HEATED, HEAT_ICON_INDEX, LINE_0);
      0006A5 E4               [12] 1461 	clr	a
      0006A6 C0 E0            [24] 1462 	push	acc
      0006A8 74 0F            [12] 1463 	mov	a,#0x0f
      0006AA C0 E0            [24] 1464 	push	acc
      0006AC 75 82 60         [24] 1465 	mov	dpl,#0x60
      0006AF 12r00r00         [24] 1466 	lcall	_write_char
      0006B2 15 81            [12] 1467 	dec	sp
      0006B4 15 81            [12] 1468 	dec	sp
                                   1469 ;	../UI_Manager/ui.c:322: iconChange &= ~HEATED_CHANGE;
      0006B6 53*08 FE         [24] 1470 	anl	_idlePage_iconChange_65536_61,#0xfe
      0006B9 80 42            [24] 1471 	sjmp	00148$
      0006BB                       1472 00147$:
                                   1473 ;	../UI_Manager/ui.c:325: if(!(tock)){
      0006BB E5*07            [12] 1474 	mov	a,_idlePage_tock_65536_61
      0006BD 70 35            [24] 1475 	jnz	00145$
                                   1476 ;	../UI_Manager/ui.c:326: if(iconChange & HEATING_CHANGE){
      0006BF E5*08            [12] 1477 	mov	a,_idlePage_iconChange_65536_61
      0006C1 30 E1 16         [24] 1478 	jnb	acc.1,00142$
                                   1479 ;	../UI_Manager/ui.c:327: write_char(CHAR_NULL, HEAT_ICON_INDEX, LINE_0);
      0006C4 E4               [12] 1480 	clr	a
      0006C5 C0 E0            [24] 1481 	push	acc
      0006C7 74 0F            [12] 1482 	mov	a,#0x0f
      0006C9 C0 E0            [24] 1483 	push	acc
      0006CB 75 82 04         [24] 1484 	mov	dpl,#0x04
      0006CE 12r00r00         [24] 1485 	lcall	_write_char
      0006D1 15 81            [12] 1486 	dec	sp
      0006D3 15 81            [12] 1487 	dec	sp
                                   1488 ;	../UI_Manager/ui.c:328: iconChange &= ~HEATING_CHANGE;
      0006D5 53*08 FD         [24] 1489 	anl	_idlePage_iconChange_65536_61,#0xfd
      0006D8 80 1A            [24] 1490 	sjmp	00145$
      0006DA                       1491 00142$:
                                   1492 ;	../UI_Manager/ui.c:330: write_char(CHAR_HEATING, HEAT_ICON_INDEX, LINE_0);
      0006DA E4               [12] 1493 	clr	a
      0006DB C0 E0            [24] 1494 	push	acc
      0006DD 74 0F            [12] 1495 	mov	a,#0x0f
      0006DF C0 E0            [24] 1496 	push	acc
      0006E1 75 82 A0         [24] 1497 	mov	dpl,#0xa0
      0006E4 12r00r00         [24] 1498 	lcall	_write_char
      0006E7 15 81            [12] 1499 	dec	sp
      0006E9 15 81            [12] 1500 	dec	sp
                                   1501 ;	../UI_Manager/ui.c:331: iconChange |= HEATING_CHANGE;
      0006EB AE*08            [24] 1502 	mov	r6,_idlePage_iconChange_65536_61
      0006ED 7F 00            [12] 1503 	mov	r7,#0x00
      0006EF 43 06 02         [24] 1504 	orl	ar6,#0x02
      0006F2 8E*08            [24] 1505 	mov	_idlePage_iconChange_65536_61,r6
      0006F4                       1506 00145$:
                                   1507 ;	../UI_Manager/ui.c:334: iconChange |= HEATED_CHANGE;
      0006F4 AE*08            [24] 1508 	mov	r6,_idlePage_iconChange_65536_61
      0006F6 7F 00            [12] 1509 	mov	r7,#0x00
      0006F8 43 06 01         [24] 1510 	orl	ar6,#0x01
      0006FB 8E*08            [24] 1511 	mov	_idlePage_iconChange_65536_61,r6
      0006FD                       1512 00148$:
                                   1513 ;	../UI_Manager/ui.c:336: iconChange |= HEATER_CHANGE;
      0006FD AE*08            [24] 1514 	mov	r6,_idlePage_iconChange_65536_61
      0006FF 7F 00            [12] 1515 	mov	r7,#0x00
      000701 43 06 08         [24] 1516 	orl	ar6,#0x08
      000704 8E*08            [24] 1517 	mov	_idlePage_iconChange_65536_61,r6
      000706 80 1C            [24] 1518 	sjmp	00153$
      000708                       1519 00152$:
                                   1520 ;	../UI_Manager/ui.c:338: if(iconChange & HEATER_CHANGE){
      000708 E5*08            [12] 1521 	mov	a,_idlePage_iconChange_65536_61
      00070A 30 E3 14         [24] 1522 	jnb	acc.3,00150$
                                   1523 ;	../UI_Manager/ui.c:339: write_char(CHAR_HEATER_OFF, HEAT_ICON_INDEX, LINE_0);
      00070D E4               [12] 1524 	clr	a
      00070E C0 E0            [24] 1525 	push	acc
      000710 74 0F            [12] 1526 	mov	a,#0x0f
      000712 C0 E0            [24] 1527 	push	acc
      000714 75 82 00         [24] 1528 	mov	dpl,#0x00
      000717 12r00r00         [24] 1529 	lcall	_write_char
      00071A 15 81            [12] 1530 	dec	sp
      00071C 15 81            [12] 1531 	dec	sp
                                   1532 ;	../UI_Manager/ui.c:340: iconChange &= ~HEATER_CHANGE;
      00071E 53*08 F7         [24] 1533 	anl	_idlePage_iconChange_65536_61,#0xf7
      000721                       1534 00150$:
                                   1535 ;	../UI_Manager/ui.c:342: iconChange |= HEATER_CHANGE | HEATED_CHANGE;
      000721 43*08 09         [24] 1536 	orl	_idlePage_iconChange_65536_61,#0x09
      000724                       1537 00153$:
                                   1538 ;	../UI_Manager/ui.c:347: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      000724 75 82 10         [24] 1539 	mov	dpl,#0x10
      000727 12r00r00         [24] 1540 	lcall	_get_runtime_data
      00072A E5 82            [12] 1541 	mov	a,dpl
      00072C 60 03            [24] 1542 	jz	00366$
      00072E 02r07rD8         [24] 1543 	ljmp	00171$
      000731                       1544 00366$:
                                   1545 ;	../UI_Manager/ui.c:350: if(has_dmx()){
      000731 E5*00            [12] 1546 	mov	a,_Has_DMX
      000733 60 2E            [24] 1547 	jz	00159$
                                   1548 ;	../UI_Manager/ui.c:351: if(changed & DMX_OK_CHANGE){
      000735 E5*02            [12] 1549 	mov	a,_changed
      000737 30 E7 55         [24] 1550 	jnb	acc.7,00160$
                                   1551 ;	../UI_Manager/ui.c:352: write_string("DMX Ok", sizeof("DMX Ok") - 1, 1, LINE_0, NOT_SELECTED);
      00073A E4               [12] 1552 	clr	a
      00073B C0 E0            [24] 1553 	push	acc
      00073D C0 E0            [24] 1554 	push	acc
      00073F 04               [12] 1555 	inc	a
      000740 C0 E0            [24] 1556 	push	acc
      000742 74 06            [12] 1557 	mov	a,#0x06
      000744 C0 E0            [24] 1558 	push	acc
      000746 90r00rA9         [24] 1559 	mov	dptr,#___str_13
      000749 75 F0 80         [24] 1560 	mov	b,#0x80
      00074C 12r00r00         [24] 1561 	lcall	_write_string
      00074F E5 81            [12] 1562 	mov	a,sp
      000751 24 FC            [12] 1563 	add	a,#0xfc
      000753 F5 81            [12] 1564 	mov	sp,a
                                   1565 ;	../UI_Manager/ui.c:353: changed |= NO_DMX_CHANGE;
      000755 AE*02            [24] 1566 	mov	r6,_changed
      000757 7F 00            [12] 1567 	mov	r7,#0x00
      000759 43 06 40         [24] 1568 	orl	ar6,#0x40
      00075C 8E*02            [24] 1569 	mov	_changed,r6
                                   1570 ;	../UI_Manager/ui.c:354: changed &= ~DMX_OK_CHANGE;
      00075E 53*02 7F         [24] 1571 	anl	_changed,#0x7f
      000761 80 2C            [24] 1572 	sjmp	00160$
      000763                       1573 00159$:
                                   1574 ;	../UI_Manager/ui.c:357: if(changed & NO_DMX_CHANGE){
      000763 E5*02            [12] 1575 	mov	a,_changed
      000765 30 E6 27         [24] 1576 	jnb	acc.6,00160$
                                   1577 ;	../UI_Manager/ui.c:358: write_string("No DMX", sizeof("No DMX") - 1, 1, LINE_0, NOT_SELECTED);
      000768 E4               [12] 1578 	clr	a
      000769 C0 E0            [24] 1579 	push	acc
      00076B C0 E0            [24] 1580 	push	acc
      00076D 04               [12] 1581 	inc	a
      00076E C0 E0            [24] 1582 	push	acc
      000770 74 06            [12] 1583 	mov	a,#0x06
      000772 C0 E0            [24] 1584 	push	acc
      000774 90r00rB0         [24] 1585 	mov	dptr,#___str_14
      000777 75 F0 80         [24] 1586 	mov	b,#0x80
      00077A 12r00r00         [24] 1587 	lcall	_write_string
      00077D E5 81            [12] 1588 	mov	a,sp
      00077F 24 FC            [12] 1589 	add	a,#0xfc
      000781 F5 81            [12] 1590 	mov	sp,a
                                   1591 ;	../UI_Manager/ui.c:359: changed |= DMX_OK_CHANGE;
      000783 AE*02            [24] 1592 	mov	r6,_changed
      000785 7F 00            [12] 1593 	mov	r7,#0x00
      000787 43 06 80         [24] 1594 	orl	ar6,#0x80
      00078A 8E*02            [24] 1595 	mov	_changed,r6
                                   1596 ;	../UI_Manager/ui.c:360: changed &= ~NO_DMX_CHANGE;
      00078C 53*02 BF         [24] 1597 	anl	_changed,#0xbf
      00078F                       1598 00160$:
                                   1599 ;	../UI_Manager/ui.c:364: temp = get_timer();
                                   1600 ;	../UI_Manager/ui.c:367: if(timer != temp){
      00078F E5*00            [12] 1601 	mov	a,_Timer
      000791 FF               [12] 1602 	mov	r7,a
      000792 B5*04 01         [24] 1603 	cjne	a,_idlePage_timer_65536_61,00370$
      000795 22               [24] 1604 	ret
      000796                       1605 00370$:
                                   1606 ;	../UI_Manager/ui.c:369: write_number(temp, 7, LINE_0, NOT_SELECTED);
      000796 8F 05            [24] 1607 	mov	ar5,r7
      000798 7E 00            [12] 1608 	mov	r6,#0x00
      00079A C0 07            [24] 1609 	push	ar7
      00079C E4               [12] 1610 	clr	a
      00079D C0 E0            [24] 1611 	push	acc
      00079F C0 E0            [24] 1612 	push	acc
      0007A1 74 07            [12] 1613 	mov	a,#0x07
      0007A3 C0 E0            [24] 1614 	push	acc
      0007A5 8D 82            [24] 1615 	mov	dpl,r5
      0007A7 8E 83            [24] 1616 	mov	dph,r6
      0007A9 12r00r00         [24] 1617 	lcall	_write_number
      0007AC 15 81            [12] 1618 	dec	sp
      0007AE 15 81            [12] 1619 	dec	sp
      0007B0 15 81            [12] 1620 	dec	sp
      0007B2 D0 07            [24] 1621 	pop	ar7
                                   1622 ;	../UI_Manager/ui.c:370: write_char((get_interval_or_duration() == INTERVAL) ? CHAR_I : CHAR_D, 11, LINE_0);
      0007B4 E5*00            [12] 1623 	mov	a,_Interval_Or_Duration
      0007B6 70 05            [24] 1624 	jnz	00175$
      0007B8 7D 92            [12] 1625 	mov	r5,#0x92
      0007BA FE               [12] 1626 	mov	r6,a
      0007BB 80 04            [24] 1627 	sjmp	00176$
      0007BD                       1628 00175$:
      0007BD 7D 22            [12] 1629 	mov	r5,#0x22
      0007BF 7E 00            [12] 1630 	mov	r6,#0x00
      0007C1                       1631 00176$:
      0007C1 8D 82            [24] 1632 	mov	dpl,r5
      0007C3 C0 07            [24] 1633 	push	ar7
      0007C5 E4               [12] 1634 	clr	a
      0007C6 C0 E0            [24] 1635 	push	acc
      0007C8 74 0B            [12] 1636 	mov	a,#0x0b
      0007CA C0 E0            [24] 1637 	push	acc
      0007CC 12r00r00         [24] 1638 	lcall	_write_char
      0007CF 15 81            [12] 1639 	dec	sp
      0007D1 15 81            [12] 1640 	dec	sp
      0007D3 D0 07            [24] 1641 	pop	ar7
                                   1642 ;	../UI_Manager/ui.c:372: timer = temp;
      0007D5 8F*04            [24] 1643 	mov	_idlePage_timer_65536_61,r7
      0007D7 22               [24] 1644 	ret
      0007D8                       1645 00171$:
                                   1646 ;	../UI_Manager/ui.c:377: temp = get_interval_or_duration();
                                   1647 ;	../UI_Manager/ui.c:379: if(intervalOrDuration != temp){
      0007D8 E5*00            [12] 1648 	mov	a,_Interval_Or_Duration
      0007DA FF               [12] 1649 	mov	r7,a
      0007DB B5*05 02         [24] 1650 	cjne	a,_idlePage_intervalOrDuration_65536_61,00372$
      0007DE 80 47            [24] 1651 	sjmp	00167$
      0007E0                       1652 00372$:
                                   1653 ;	../UI_Manager/ui.c:380: if(temp == INTERVAL){
      0007E0 EF               [12] 1654 	mov	a,r7
      0007E1 70 22            [24] 1655 	jnz	00164$
                                   1656 ;	../UI_Manager/ui.c:381: write_string("Interval", sizeof("Interval"), 0, LINE_1, NOT_SELECTED);
      0007E3 C0 07            [24] 1657 	push	ar7
      0007E5 E4               [12] 1658 	clr	a
      0007E6 C0 E0            [24] 1659 	push	acc
      0007E8 04               [12] 1660 	inc	a
      0007E9 C0 E0            [24] 1661 	push	acc
      0007EB E4               [12] 1662 	clr	a
      0007EC C0 E0            [24] 1663 	push	acc
      0007EE 74 09            [12] 1664 	mov	a,#0x09
      0007F0 C0 E0            [24] 1665 	push	acc
      0007F2 90r00rB7         [24] 1666 	mov	dptr,#___str_15
      0007F5 75 F0 80         [24] 1667 	mov	b,#0x80
      0007F8 12r00r00         [24] 1668 	lcall	_write_string
      0007FB E5 81            [12] 1669 	mov	a,sp
      0007FD 24 FC            [12] 1670 	add	a,#0xfc
      0007FF F5 81            [12] 1671 	mov	sp,a
      000801 D0 07            [24] 1672 	pop	ar7
      000803 80 20            [24] 1673 	sjmp	00165$
      000805                       1674 00164$:
                                   1675 ;	../UI_Manager/ui.c:383: write_string("Duration", sizeof("Duration"), 0, LINE_1, NOT_SELECTED);
      000805 C0 07            [24] 1676 	push	ar7
      000807 E4               [12] 1677 	clr	a
      000808 C0 E0            [24] 1678 	push	acc
      00080A 04               [12] 1679 	inc	a
      00080B C0 E0            [24] 1680 	push	acc
      00080D E4               [12] 1681 	clr	a
      00080E C0 E0            [24] 1682 	push	acc
      000810 74 09            [12] 1683 	mov	a,#0x09
      000812 C0 E0            [24] 1684 	push	acc
      000814 90r00rC0         [24] 1685 	mov	dptr,#___str_16
      000817 75 F0 80         [24] 1686 	mov	b,#0x80
      00081A 12r00r00         [24] 1687 	lcall	_write_string
      00081D E5 81            [12] 1688 	mov	a,sp
      00081F 24 FC            [12] 1689 	add	a,#0xfc
      000821 F5 81            [12] 1690 	mov	sp,a
      000823 D0 07            [24] 1691 	pop	ar7
      000825                       1692 00165$:
                                   1693 ;	../UI_Manager/ui.c:386: intervalOrDuration = temp;
      000825 8F*05            [24] 1694 	mov	_idlePage_intervalOrDuration_65536_61,r7
      000827                       1695 00167$:
                                   1696 ;	../UI_Manager/ui.c:389: temp = get_timer();
                                   1697 ;	../UI_Manager/ui.c:391: if(timer != temp){
      000827 E5*00            [12] 1698 	mov	a,_Timer
      000829 FF               [12] 1699 	mov	r7,a
      00082A B5*04 01         [24] 1700 	cjne	a,_idlePage_timer_65536_61,00374$
      00082D 22               [24] 1701 	ret
      00082E                       1702 00374$:
                                   1703 ;	../UI_Manager/ui.c:393: write_number(temp, NUMBER_END_INDEX-1, LINE_1, NOT_SELECTED);
      00082E 8F 05            [24] 1704 	mov	ar5,r7
      000830 7E 00            [12] 1705 	mov	r6,#0x00
      000832 C0 07            [24] 1706 	push	ar7
      000834 E4               [12] 1707 	clr	a
      000835 C0 E0            [24] 1708 	push	acc
      000837 04               [12] 1709 	inc	a
      000838 C0 E0            [24] 1710 	push	acc
      00083A 74 0B            [12] 1711 	mov	a,#0x0b
      00083C C0 E0            [24] 1712 	push	acc
      00083E 8D 82            [24] 1713 	mov	dpl,r5
      000840 8E 83            [24] 1714 	mov	dph,r6
      000842 12r00r00         [24] 1715 	lcall	_write_number
      000845 15 81            [12] 1716 	dec	sp
      000847 15 81            [12] 1717 	dec	sp
      000849 15 81            [12] 1718 	dec	sp
      00084B D0 07            [24] 1719 	pop	ar7
                                   1720 ;	../UI_Manager/ui.c:395: timer = temp;
      00084D 8F*04            [24] 1721 	mov	_idlePage_timer_65536_61,r7
                                   1722 ;	../UI_Manager/ui.c:399: }
      00084F 22               [24] 1723 	ret
                                   1724 ;------------------------------------------------------------
                                   1725 ;Allocation info for local variables in function 'fogLevelPage'
                                   1726 ;------------------------------------------------------------
                                   1727 ;action                    Allocated to registers r7 
                                   1728 ;------------------------------------------------------------
                                   1729 ;	../UI_Manager/ui.c:401: void fogLevelPage(uint8_t action){
                                   1730 ;	-----------------------------------------
                                   1731 ;	 function fogLevelPage
                                   1732 ;	-----------------------------------------
      000850                       1733 _fogLevelPage:
      000850 AF 82            [24] 1734 	mov	r7,dpl
                                   1735 ;	../UI_Manager/ui.c:403: switch (action)
      000852 BF 01 02         [24] 1736 	cjne	r7,#0x01,00152$
      000855 80 46            [24] 1737 	sjmp	00104$
      000857                       1738 00152$:
      000857 BF 02 02         [24] 1739 	cjne	r7,#0x02,00153$
      00085A 80 35            [24] 1740 	sjmp	00103$
      00085C                       1741 00153$:
      00085C BF 03 02         [24] 1742 	cjne	r7,#0x03,00154$
      00085F 80 05            [24] 1743 	sjmp	00101$
      000861                       1744 00154$:
                                   1745 ;	../UI_Manager/ui.c:405: case BUTTON_UP:
      000861 BF 0B 45         [24] 1746 	cjne	r7,#0x0b,00105$
      000864 80 15            [24] 1747 	sjmp	00102$
      000866                       1748 00101$:
                                   1749 ;	../UI_Manager/ui.c:406: set_runtime_data(FOG_POWER_INDEX, INC, NULL);
      000866 E4               [12] 1750 	clr	a
      000867 C0 E0            [24] 1751 	push	acc
      000869 04               [12] 1752 	inc	a
      00086A C0 E0            [24] 1753 	push	acc
      00086C 75 82 00         [24] 1754 	mov	dpl,#0x00
      00086F 12r00r00         [24] 1755 	lcall	_set_runtime_data
      000872 15 81            [12] 1756 	dec	sp
      000874 15 81            [12] 1757 	dec	sp
                                   1758 ;	../UI_Manager/ui.c:407: changed = 0xFF;
      000876 75*02 FF         [24] 1759 	mov	_changed,#0xff
                                   1760 ;	../UI_Manager/ui.c:408: break;
                                   1761 ;	../UI_Manager/ui.c:409: case BUTTON_DOWN:
      000879 80 2E            [24] 1762 	sjmp	00105$
      00087B                       1763 00102$:
                                   1764 ;	../UI_Manager/ui.c:410: set_runtime_data(FOG_POWER_INDEX, DEC, NULL);
      00087B E4               [12] 1765 	clr	a
      00087C C0 E0            [24] 1766 	push	acc
      00087E 74 02            [12] 1767 	mov	a,#0x02
      000880 C0 E0            [24] 1768 	push	acc
      000882 75 82 00         [24] 1769 	mov	dpl,#0x00
      000885 12r00r00         [24] 1770 	lcall	_set_runtime_data
      000888 15 81            [12] 1771 	dec	sp
      00088A 15 81            [12] 1772 	dec	sp
                                   1773 ;	../UI_Manager/ui.c:411: changed = 0xFF;  
      00088C 75*02 FF         [24] 1774 	mov	_changed,#0xff
                                   1775 ;	../UI_Manager/ui.c:412: break;
                                   1776 ;	../UI_Manager/ui.c:413: case BUTTON_FUNCTION:
      00088F 80 18            [24] 1777 	sjmp	00105$
      000891                       1778 00103$:
                                   1779 ;	../UI_Manager/ui.c:414: set_ui_state(INC, NULL);
      000891 E4               [12] 1780 	clr	a
      000892 C0 E0            [24] 1781 	push	acc
      000894 75 82 01         [24] 1782 	mov	dpl,#0x01
      000897 12r12r76         [24] 1783 	lcall	_set_ui_state
      00089A 15 81            [12] 1784 	dec	sp
                                   1785 ;	../UI_Manager/ui.c:415: return;
      00089C 22               [24] 1786 	ret
                                   1787 ;	../UI_Manager/ui.c:416: case BUTTON_TIMER:
      00089D                       1788 00104$:
                                   1789 ;	../UI_Manager/ui.c:417: set_ui_state(DEC, NULL);
      00089D E4               [12] 1790 	clr	a
      00089E C0 E0            [24] 1791 	push	acc
      0008A0 75 82 02         [24] 1792 	mov	dpl,#0x02
      0008A3 12r12r76         [24] 1793 	lcall	_set_ui_state
      0008A6 15 81            [12] 1794 	dec	sp
                                   1795 ;	../UI_Manager/ui.c:418: return;
      0008A8 22               [24] 1796 	ret
                                   1797 ;	../UI_Manager/ui.c:419: }
      0008A9                       1798 00105$:
                                   1799 ;	../UI_Manager/ui.c:421: if(Changed){
      0008A9 E5*01            [12] 1800 	mov	a,_Changed
      0008AB 60 28            [24] 1801 	jz	00107$
                                   1802 ;	../UI_Manager/ui.c:422: Changed = 0x00;
      0008AD 75*01 00         [24] 1803 	mov	_Changed,#0x00
                                   1804 ;	../UI_Manager/ui.c:423: changed = 0xFF;
      0008B0 75*02 FF         [24] 1805 	mov	_changed,#0xff
                                   1806 ;	../UI_Manager/ui.c:425: exe_command(CLEAR_DISPLAY);
      0008B3 90 80 00         [24] 1807 	mov	dptr,#0x8000
      0008B6 12r00r00         [24] 1808 	lcall	_exe_command
                                   1809 ;	../UI_Manager/ui.c:427: write_string("Fog Level", sizeof("Fog Level"), 3, LINE_0, NOT_SELECTED);
      0008B9 E4               [12] 1810 	clr	a
      0008BA C0 E0            [24] 1811 	push	acc
      0008BC C0 E0            [24] 1812 	push	acc
      0008BE 74 03            [12] 1813 	mov	a,#0x03
      0008C0 C0 E0            [24] 1814 	push	acc
      0008C2 74 0A            [12] 1815 	mov	a,#0x0a
      0008C4 C0 E0            [24] 1816 	push	acc
      0008C6 90r00rC9         [24] 1817 	mov	dptr,#___str_17
      0008C9 75 F0 80         [24] 1818 	mov	b,#0x80
      0008CC 12r00r00         [24] 1819 	lcall	_write_string
      0008CF E5 81            [12] 1820 	mov	a,sp
      0008D1 24 FC            [12] 1821 	add	a,#0xfc
      0008D3 F5 81            [12] 1822 	mov	sp,a
      0008D5                       1823 00107$:
                                   1824 ;	../UI_Manager/ui.c:431: if(changed){
      0008D5 E5*02            [12] 1825 	mov	a,_changed
      0008D7 70 01            [24] 1826 	jnz	00157$
      0008D9 22               [24] 1827 	ret
      0008DA                       1828 00157$:
                                   1829 ;	../UI_Manager/ui.c:432: changed = 0x00;
      0008DA 75*02 00         [24] 1830 	mov	_changed,#0x00
                                   1831 ;	../UI_Manager/ui.c:434: switch (get_runtime_data(FOG_POWER_INDEX))
      0008DD 75 82 00         [24] 1832 	mov	dpl,#0x00
      0008E0 12r00r00         [24] 1833 	lcall	_get_runtime_data
      0008E3 AF 82            [24] 1834 	mov	r7,dpl
      0008E5 BF 00 02         [24] 1835 	cjne	r7,#0x00,00158$
      0008E8 80 0C            [24] 1836 	sjmp	00108$
      0008EA                       1837 00158$:
      0008EA BF 01 02         [24] 1838 	cjne	r7,#0x01,00159$
      0008ED 80 43            [24] 1839 	sjmp	00109$
      0008EF                       1840 00159$:
      0008EF BF 02 03         [24] 1841 	cjne	r7,#0x02,00160$
      0008F2 02r09r80         [24] 1842 	ljmp	00110$
      0008F5                       1843 00160$:
      0008F5 22               [24] 1844 	ret
                                   1845 ;	../UI_Manager/ui.c:436: case OPTION_FOG_LOW:
      0008F6                       1846 00108$:
                                   1847 ;	../UI_Manager/ui.c:437: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_LOW), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      0008F6 75 82 00         [24] 1848 	mov	dpl,#0x00
      0008F9 12r13r83         [24] 1849 	lcall	_getString
      0008FC AD 82            [24] 1850 	mov	r5,dpl
      0008FE AE 83            [24] 1851 	mov	r6,dph
      000900 AF F0            [24] 1852 	mov	r7,b
      000902 E4               [12] 1853 	clr	a
      000903 C0 E0            [24] 1854 	push	acc
      000905 04               [12] 1855 	inc	a
      000906 C0 E0            [24] 1856 	push	acc
      000908 74 03            [12] 1857 	mov	a,#0x03
      00090A C0 E0            [24] 1858 	push	acc
      00090C 74 10            [12] 1859 	mov	a,#0x10
      00090E C0 E0            [24] 1860 	push	acc
      000910 8D 82            [24] 1861 	mov	dpl,r5
      000912 8E 83            [24] 1862 	mov	dph,r6
      000914 8F F0            [24] 1863 	mov	b,r7
      000916 12r00r00         [24] 1864 	lcall	_write_string
      000919 E5 81            [12] 1865 	mov	a,sp
      00091B 24 FC            [12] 1866 	add	a,#0xfc
      00091D F5 81            [12] 1867 	mov	sp,a
                                   1868 ;	../UI_Manager/ui.c:438: write_char(CHAR_LVL_1, 12, LINE_1);
      00091F 74 01            [12] 1869 	mov	a,#0x01
      000921 C0 E0            [24] 1870 	push	acc
      000923 74 0C            [12] 1871 	mov	a,#0x0c
      000925 C0 E0            [24] 1872 	push	acc
      000927 75 82 40         [24] 1873 	mov	dpl,#0x40
      00092A 12r00r00         [24] 1874 	lcall	_write_char
      00092D 15 81            [12] 1875 	dec	sp
      00092F 15 81            [12] 1876 	dec	sp
                                   1877 ;	../UI_Manager/ui.c:439: break;
      000931 22               [24] 1878 	ret
                                   1879 ;	../UI_Manager/ui.c:440: case OPTION_FOG_MEDIUM:
      000932                       1880 00109$:
                                   1881 ;	../UI_Manager/ui.c:441: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_MEDIUM), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000932 75 82 01         [24] 1882 	mov	dpl,#0x01
      000935 12r13r83         [24] 1883 	lcall	_getString
      000938 AD 82            [24] 1884 	mov	r5,dpl
      00093A AE 83            [24] 1885 	mov	r6,dph
      00093C AF F0            [24] 1886 	mov	r7,b
      00093E E4               [12] 1887 	clr	a
      00093F C0 E0            [24] 1888 	push	acc
      000941 04               [12] 1889 	inc	a
      000942 C0 E0            [24] 1890 	push	acc
      000944 74 03            [12] 1891 	mov	a,#0x03
      000946 C0 E0            [24] 1892 	push	acc
      000948 74 10            [12] 1893 	mov	a,#0x10
      00094A C0 E0            [24] 1894 	push	acc
      00094C 8D 82            [24] 1895 	mov	dpl,r5
      00094E 8E 83            [24] 1896 	mov	dph,r6
      000950 8F F0            [24] 1897 	mov	b,r7
      000952 12r00r00         [24] 1898 	lcall	_write_string
      000955 E5 81            [12] 1899 	mov	a,sp
      000957 24 FC            [12] 1900 	add	a,#0xfc
      000959 F5 81            [12] 1901 	mov	sp,a
                                   1902 ;	../UI_Manager/ui.c:442: write_char(CHAR_LVL_1, 12, LINE_1);
      00095B 74 01            [12] 1903 	mov	a,#0x01
      00095D C0 E0            [24] 1904 	push	acc
      00095F 74 0C            [12] 1905 	mov	a,#0x0c
      000961 C0 E0            [24] 1906 	push	acc
      000963 75 82 40         [24] 1907 	mov	dpl,#0x40
      000966 12r00r00         [24] 1908 	lcall	_write_char
      000969 15 81            [12] 1909 	dec	sp
      00096B 15 81            [12] 1910 	dec	sp
                                   1911 ;	../UI_Manager/ui.c:443: write_char(CHAR_LVL_2, 13, LINE_1);
      00096D 74 01            [12] 1912 	mov	a,#0x01
      00096F C0 E0            [24] 1913 	push	acc
      000971 74 0D            [12] 1914 	mov	a,#0x0d
      000973 C0 E0            [24] 1915 	push	acc
      000975 75 82 C0         [24] 1916 	mov	dpl,#0xc0
      000978 12r00r00         [24] 1917 	lcall	_write_char
      00097B 15 81            [12] 1918 	dec	sp
      00097D 15 81            [12] 1919 	dec	sp
                                   1920 ;	../UI_Manager/ui.c:444: break;
                                   1921 ;	../UI_Manager/ui.c:445: case OPTION_FOG_HIGH:
      00097F 22               [24] 1922 	ret
      000980                       1923 00110$:
                                   1924 ;	../UI_Manager/ui.c:446: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_HIGH), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000980 75 82 02         [24] 1925 	mov	dpl,#0x02
      000983 12r13r83         [24] 1926 	lcall	_getString
      000986 AD 82            [24] 1927 	mov	r5,dpl
      000988 AE 83            [24] 1928 	mov	r6,dph
      00098A AF F0            [24] 1929 	mov	r7,b
      00098C E4               [12] 1930 	clr	a
      00098D C0 E0            [24] 1931 	push	acc
      00098F 04               [12] 1932 	inc	a
      000990 C0 E0            [24] 1933 	push	acc
      000992 74 03            [12] 1934 	mov	a,#0x03
      000994 C0 E0            [24] 1935 	push	acc
      000996 74 10            [12] 1936 	mov	a,#0x10
      000998 C0 E0            [24] 1937 	push	acc
      00099A 8D 82            [24] 1938 	mov	dpl,r5
      00099C 8E 83            [24] 1939 	mov	dph,r6
      00099E 8F F0            [24] 1940 	mov	b,r7
      0009A0 12r00r00         [24] 1941 	lcall	_write_string
      0009A3 E5 81            [12] 1942 	mov	a,sp
      0009A5 24 FC            [12] 1943 	add	a,#0xfc
      0009A7 F5 81            [12] 1944 	mov	sp,a
                                   1945 ;	../UI_Manager/ui.c:447: write_char(CHAR_LVL_1, 12, LINE_1);
      0009A9 74 01            [12] 1946 	mov	a,#0x01
      0009AB C0 E0            [24] 1947 	push	acc
      0009AD 74 0C            [12] 1948 	mov	a,#0x0c
      0009AF C0 E0            [24] 1949 	push	acc
      0009B1 75 82 40         [24] 1950 	mov	dpl,#0x40
      0009B4 12r00r00         [24] 1951 	lcall	_write_char
      0009B7 15 81            [12] 1952 	dec	sp
      0009B9 15 81            [12] 1953 	dec	sp
                                   1954 ;	../UI_Manager/ui.c:448: write_char(CHAR_LVL_2, 13, LINE_1);
      0009BB 74 01            [12] 1955 	mov	a,#0x01
      0009BD C0 E0            [24] 1956 	push	acc
      0009BF 74 0D            [12] 1957 	mov	a,#0x0d
      0009C1 C0 E0            [24] 1958 	push	acc
      0009C3 75 82 C0         [24] 1959 	mov	dpl,#0xc0
      0009C6 12r00r00         [24] 1960 	lcall	_write_char
      0009C9 15 81            [12] 1961 	dec	sp
      0009CB 15 81            [12] 1962 	dec	sp
                                   1963 ;	../UI_Manager/ui.c:449: write_char(CHAR_LVL_3, 14, LINE_1);
      0009CD 74 01            [12] 1964 	mov	a,#0x01
      0009CF C0 E0            [24] 1965 	push	acc
      0009D1 74 0E            [12] 1966 	mov	a,#0x0e
      0009D3 C0 E0            [24] 1967 	push	acc
      0009D5 75 82 20         [24] 1968 	mov	dpl,#0x20
      0009D8 12r00r00         [24] 1969 	lcall	_write_char
      0009DB 15 81            [12] 1970 	dec	sp
      0009DD 15 81            [12] 1971 	dec	sp
                                   1972 ;	../UI_Manager/ui.c:451: }
                                   1973 ;	../UI_Manager/ui.c:454: }
      0009DF 22               [24] 1974 	ret
                                   1975 ;------------------------------------------------------------
                                   1976 ;Allocation info for local variables in function 'fogIntervalPage'
                                   1977 ;------------------------------------------------------------
                                   1978 ;action                    Allocated to registers r7 
                                   1979 ;------------------------------------------------------------
                                   1980 ;	../UI_Manager/ui.c:456: void fogIntervalPage(uint8_t action){
                                   1981 ;	-----------------------------------------
                                   1982 ;	 function fogIntervalPage
                                   1983 ;	-----------------------------------------
      0009E0                       1984 _fogIntervalPage:
      0009E0 AF 82            [24] 1985 	mov	r7,dpl
                                   1986 ;	../UI_Manager/ui.c:458: switch (action)
      0009E2 BF 01 02         [24] 1987 	cjne	r7,#0x01,00146$
      0009E5 80 50            [24] 1988 	sjmp	00106$
      0009E7                       1989 00146$:
      0009E7 BF 02 02         [24] 1990 	cjne	r7,#0x02,00147$
      0009EA 80 3F            [24] 1991 	sjmp	00105$
      0009EC                       1992 00147$:
      0009EC BF 03 02         [24] 1993 	cjne	r7,#0x03,00148$
      0009EF 80 0F            [24] 1994 	sjmp	00102$
      0009F1                       1995 00148$:
      0009F1 BF 0B 02         [24] 1996 	cjne	r7,#0x0b,00149$
      0009F4 80 1F            [24] 1997 	sjmp	00104$
      0009F6                       1998 00149$:
      0009F6 BF 1F 02         [24] 1999 	cjne	r7,#0x1f,00150$
      0009F9 80 05            [24] 2000 	sjmp	00102$
      0009FB                       2001 00150$:
                                   2002 ;	../UI_Manager/ui.c:461: case BUTTON_UP:
      0009FB BF 6F 45         [24] 2003 	cjne	r7,#0x6f,00107$
      0009FE 80 15            [24] 2004 	sjmp	00104$
      000A00                       2005 00102$:
                                   2006 ;	../UI_Manager/ui.c:462: set_runtime_data(FOG_INTERVAL_INDEX, INC, NULL);
      000A00 E4               [12] 2007 	clr	a
      000A01 C0 E0            [24] 2008 	push	acc
      000A03 04               [12] 2009 	inc	a
      000A04 C0 E0            [24] 2010 	push	acc
      000A06 75 82 02         [24] 2011 	mov	dpl,#0x02
      000A09 12r00r00         [24] 2012 	lcall	_set_runtime_data
      000A0C 15 81            [12] 2013 	dec	sp
      000A0E 15 81            [12] 2014 	dec	sp
                                   2015 ;	../UI_Manager/ui.c:463: changed = 0xFF;
      000A10 75*02 FF         [24] 2016 	mov	_changed,#0xff
                                   2017 ;	../UI_Manager/ui.c:464: break;
                                   2018 ;	../UI_Manager/ui.c:466: case BUTTON_DOWN:
      000A13 80 2E            [24] 2019 	sjmp	00107$
      000A15                       2020 00104$:
                                   2021 ;	../UI_Manager/ui.c:467: set_runtime_data(FOG_INTERVAL_INDEX, DEC, NULL);
      000A15 E4               [12] 2022 	clr	a
      000A16 C0 E0            [24] 2023 	push	acc
      000A18 74 02            [12] 2024 	mov	a,#0x02
      000A1A C0 E0            [24] 2025 	push	acc
      000A1C 75 82 02         [24] 2026 	mov	dpl,#0x02
      000A1F 12r00r00         [24] 2027 	lcall	_set_runtime_data
      000A22 15 81            [12] 2028 	dec	sp
      000A24 15 81            [12] 2029 	dec	sp
                                   2030 ;	../UI_Manager/ui.c:468: changed = 0xFF;  
      000A26 75*02 FF         [24] 2031 	mov	_changed,#0xff
                                   2032 ;	../UI_Manager/ui.c:469: break;
                                   2033 ;	../UI_Manager/ui.c:470: case BUTTON_FUNCTION:
      000A29 80 18            [24] 2034 	sjmp	00107$
      000A2B                       2035 00105$:
                                   2036 ;	../UI_Manager/ui.c:471: set_ui_state(INC, NULL);
      000A2B E4               [12] 2037 	clr	a
      000A2C C0 E0            [24] 2038 	push	acc
      000A2E 75 82 01         [24] 2039 	mov	dpl,#0x01
      000A31 12r12r76         [24] 2040 	lcall	_set_ui_state
      000A34 15 81            [12] 2041 	dec	sp
                                   2042 ;	../UI_Manager/ui.c:472: return;
      000A36 22               [24] 2043 	ret
                                   2044 ;	../UI_Manager/ui.c:473: case BUTTON_TIMER:
      000A37                       2045 00106$:
                                   2046 ;	../UI_Manager/ui.c:474: set_ui_state(DEC, NULL);
      000A37 E4               [12] 2047 	clr	a
      000A38 C0 E0            [24] 2048 	push	acc
      000A3A 75 82 02         [24] 2049 	mov	dpl,#0x02
      000A3D 12r12r76         [24] 2050 	lcall	_set_ui_state
      000A40 15 81            [12] 2051 	dec	sp
                                   2052 ;	../UI_Manager/ui.c:475: return;
                                   2053 ;	../UI_Manager/ui.c:476: }
      000A42 22               [24] 2054 	ret
      000A43                       2055 00107$:
                                   2056 ;	../UI_Manager/ui.c:478: if(Changed){
      000A43 E5*01            [12] 2057 	mov	a,_Changed
      000A45 60 44            [24] 2058 	jz	00109$
                                   2059 ;	../UI_Manager/ui.c:479: Changed = 0x00;
      000A47 75*01 00         [24] 2060 	mov	_Changed,#0x00
                                   2061 ;	../UI_Manager/ui.c:480: changed = 0xFF;
      000A4A 75*02 FF         [24] 2062 	mov	_changed,#0xff
                                   2063 ;	../UI_Manager/ui.c:482: exe_command(CLEAR_DISPLAY);
      000A4D 90 80 00         [24] 2064 	mov	dptr,#0x8000
      000A50 12r00r00         [24] 2065 	lcall	_exe_command
                                   2066 ;	../UI_Manager/ui.c:484: write_string("Fog Interval", sizeof("Fog Interval"), 2, LINE_0, NOT_SELECTED);
      000A53 E4               [12] 2067 	clr	a
      000A54 C0 E0            [24] 2068 	push	acc
      000A56 C0 E0            [24] 2069 	push	acc
      000A58 74 02            [12] 2070 	mov	a,#0x02
      000A5A C0 E0            [24] 2071 	push	acc
      000A5C 74 0D            [12] 2072 	mov	a,#0x0d
      000A5E C0 E0            [24] 2073 	push	acc
      000A60 90r00rD3         [24] 2074 	mov	dptr,#___str_18
      000A63 75 F0 80         [24] 2075 	mov	b,#0x80
      000A66 12r00r00         [24] 2076 	lcall	_write_string
      000A69 E5 81            [12] 2077 	mov	a,sp
      000A6B 24 FC            [12] 2078 	add	a,#0xfc
      000A6D F5 81            [12] 2079 	mov	sp,a
                                   2080 ;	../UI_Manager/ui.c:485: write_string("Seconds", sizeof("Seconds"), 7, LINE_1, NOT_SELECTED);
      000A6F E4               [12] 2081 	clr	a
      000A70 C0 E0            [24] 2082 	push	acc
      000A72 04               [12] 2083 	inc	a
      000A73 C0 E0            [24] 2084 	push	acc
      000A75 74 07            [12] 2085 	mov	a,#0x07
      000A77 C0 E0            [24] 2086 	push	acc
      000A79 04               [12] 2087 	inc	a
      000A7A C0 E0            [24] 2088 	push	acc
      000A7C 90r00rE0         [24] 2089 	mov	dptr,#___str_19
      000A7F 75 F0 80         [24] 2090 	mov	b,#0x80
      000A82 12r00r00         [24] 2091 	lcall	_write_string
      000A85 E5 81            [12] 2092 	mov	a,sp
      000A87 24 FC            [12] 2093 	add	a,#0xfc
      000A89 F5 81            [12] 2094 	mov	sp,a
      000A8B                       2095 00109$:
                                   2096 ;	../UI_Manager/ui.c:489: if(changed){
      000A8B E5*02            [12] 2097 	mov	a,_changed
      000A8D 60 21            [24] 2098 	jz	00112$
                                   2099 ;	../UI_Manager/ui.c:490: changed = 0x00;
      000A8F 75*02 00         [24] 2100 	mov	_changed,#0x00
                                   2101 ;	../UI_Manager/ui.c:492: write_number(get_runtime_data(FOG_INTERVAL_INDEX), 1, LINE_1, NOT_SELECTED);
      000A92 75 82 02         [24] 2102 	mov	dpl,#0x02
      000A95 12r00r00         [24] 2103 	lcall	_get_runtime_data
      000A98 AF 82            [24] 2104 	mov	r7,dpl
      000A9A E4               [12] 2105 	clr	a
      000A9B FE               [12] 2106 	mov	r6,a
      000A9C C0 E0            [24] 2107 	push	acc
      000A9E 04               [12] 2108 	inc	a
      000A9F C0 E0            [24] 2109 	push	acc
      000AA1 C0 E0            [24] 2110 	push	acc
      000AA3 8F 82            [24] 2111 	mov	dpl,r7
      000AA5 8E 83            [24] 2112 	mov	dph,r6
      000AA7 12r00r00         [24] 2113 	lcall	_write_number
      000AAA 15 81            [12] 2114 	dec	sp
      000AAC 15 81            [12] 2115 	dec	sp
      000AAE 15 81            [12] 2116 	dec	sp
      000AB0                       2117 00112$:
                                   2118 ;	../UI_Manager/ui.c:497: }
      000AB0 22               [24] 2119 	ret
                                   2120 ;------------------------------------------------------------
                                   2121 ;Allocation info for local variables in function 'fogDurationPage'
                                   2122 ;------------------------------------------------------------
                                   2123 ;action                    Allocated to registers r7 
                                   2124 ;------------------------------------------------------------
                                   2125 ;	../UI_Manager/ui.c:499: void fogDurationPage(uint8_t action){
                                   2126 ;	-----------------------------------------
                                   2127 ;	 function fogDurationPage
                                   2128 ;	-----------------------------------------
      000AB1                       2129 _fogDurationPage:
      000AB1 AF 82            [24] 2130 	mov	r7,dpl
                                   2131 ;	../UI_Manager/ui.c:501: switch (action)
      000AB3 BF 01 02         [24] 2132 	cjne	r7,#0x01,00146$
      000AB6 80 50            [24] 2133 	sjmp	00106$
      000AB8                       2134 00146$:
      000AB8 BF 02 02         [24] 2135 	cjne	r7,#0x02,00147$
      000ABB 80 3F            [24] 2136 	sjmp	00105$
      000ABD                       2137 00147$:
      000ABD BF 03 02         [24] 2138 	cjne	r7,#0x03,00148$
      000AC0 80 0F            [24] 2139 	sjmp	00102$
      000AC2                       2140 00148$:
      000AC2 BF 0B 02         [24] 2141 	cjne	r7,#0x0b,00149$
      000AC5 80 1F            [24] 2142 	sjmp	00104$
      000AC7                       2143 00149$:
      000AC7 BF 1F 02         [24] 2144 	cjne	r7,#0x1f,00150$
      000ACA 80 05            [24] 2145 	sjmp	00102$
      000ACC                       2146 00150$:
                                   2147 ;	../UI_Manager/ui.c:504: case BUTTON_UP:
      000ACC BF 6F 45         [24] 2148 	cjne	r7,#0x6f,00107$
      000ACF 80 15            [24] 2149 	sjmp	00104$
      000AD1                       2150 00102$:
                                   2151 ;	../UI_Manager/ui.c:505: set_runtime_data(FOG_DURATION_INDEX, INC, NULL);
      000AD1 E4               [12] 2152 	clr	a
      000AD2 C0 E0            [24] 2153 	push	acc
      000AD4 04               [12] 2154 	inc	a
      000AD5 C0 E0            [24] 2155 	push	acc
      000AD7 75 82 01         [24] 2156 	mov	dpl,#0x01
      000ADA 12r00r00         [24] 2157 	lcall	_set_runtime_data
      000ADD 15 81            [12] 2158 	dec	sp
      000ADF 15 81            [12] 2159 	dec	sp
                                   2160 ;	../UI_Manager/ui.c:506: changed = 0xFF;
      000AE1 75*02 FF         [24] 2161 	mov	_changed,#0xff
                                   2162 ;	../UI_Manager/ui.c:507: break;
                                   2163 ;	../UI_Manager/ui.c:509: case BUTTON_DOWN:
      000AE4 80 2E            [24] 2164 	sjmp	00107$
      000AE6                       2165 00104$:
                                   2166 ;	../UI_Manager/ui.c:510: set_runtime_data(FOG_DURATION_INDEX, DEC, NULL);
      000AE6 E4               [12] 2167 	clr	a
      000AE7 C0 E0            [24] 2168 	push	acc
      000AE9 74 02            [12] 2169 	mov	a,#0x02
      000AEB C0 E0            [24] 2170 	push	acc
      000AED 75 82 01         [24] 2171 	mov	dpl,#0x01
      000AF0 12r00r00         [24] 2172 	lcall	_set_runtime_data
      000AF3 15 81            [12] 2173 	dec	sp
      000AF5 15 81            [12] 2174 	dec	sp
                                   2175 ;	../UI_Manager/ui.c:511: changed = 0xFF;  
      000AF7 75*02 FF         [24] 2176 	mov	_changed,#0xff
                                   2177 ;	../UI_Manager/ui.c:512: break;
                                   2178 ;	../UI_Manager/ui.c:513: case BUTTON_FUNCTION:
      000AFA 80 18            [24] 2179 	sjmp	00107$
      000AFC                       2180 00105$:
                                   2181 ;	../UI_Manager/ui.c:514: set_ui_state(INC, NULL);
      000AFC E4               [12] 2182 	clr	a
      000AFD C0 E0            [24] 2183 	push	acc
      000AFF 75 82 01         [24] 2184 	mov	dpl,#0x01
      000B02 12r12r76         [24] 2185 	lcall	_set_ui_state
      000B05 15 81            [12] 2186 	dec	sp
                                   2187 ;	../UI_Manager/ui.c:515: return;
      000B07 22               [24] 2188 	ret
                                   2189 ;	../UI_Manager/ui.c:516: case BUTTON_TIMER:
      000B08                       2190 00106$:
                                   2191 ;	../UI_Manager/ui.c:517: set_ui_state(DEC, NULL);
      000B08 E4               [12] 2192 	clr	a
      000B09 C0 E0            [24] 2193 	push	acc
      000B0B 75 82 02         [24] 2194 	mov	dpl,#0x02
      000B0E 12r12r76         [24] 2195 	lcall	_set_ui_state
      000B11 15 81            [12] 2196 	dec	sp
                                   2197 ;	../UI_Manager/ui.c:518: return;
                                   2198 ;	../UI_Manager/ui.c:519: }
      000B13 22               [24] 2199 	ret
      000B14                       2200 00107$:
                                   2201 ;	../UI_Manager/ui.c:521: if(Changed){
      000B14 E5*01            [12] 2202 	mov	a,_Changed
      000B16 60 44            [24] 2203 	jz	00109$
                                   2204 ;	../UI_Manager/ui.c:522: Changed = 0x00;
      000B18 75*01 00         [24] 2205 	mov	_Changed,#0x00
                                   2206 ;	../UI_Manager/ui.c:523: changed = 0xFF;
      000B1B 75*02 FF         [24] 2207 	mov	_changed,#0xff
                                   2208 ;	../UI_Manager/ui.c:525: exe_command(CLEAR_DISPLAY);
      000B1E 90 80 00         [24] 2209 	mov	dptr,#0x8000
      000B21 12r00r00         [24] 2210 	lcall	_exe_command
                                   2211 ;	../UI_Manager/ui.c:527: write_string("Fog Duration", sizeof("Fog Duration"), 2, LINE_0, NOT_SELECTED);
      000B24 E4               [12] 2212 	clr	a
      000B25 C0 E0            [24] 2213 	push	acc
      000B27 C0 E0            [24] 2214 	push	acc
      000B29 74 02            [12] 2215 	mov	a,#0x02
      000B2B C0 E0            [24] 2216 	push	acc
      000B2D 74 0D            [12] 2217 	mov	a,#0x0d
      000B2F C0 E0            [24] 2218 	push	acc
      000B31 90r00rE8         [24] 2219 	mov	dptr,#___str_20
      000B34 75 F0 80         [24] 2220 	mov	b,#0x80
      000B37 12r00r00         [24] 2221 	lcall	_write_string
      000B3A E5 81            [12] 2222 	mov	a,sp
      000B3C 24 FC            [12] 2223 	add	a,#0xfc
      000B3E F5 81            [12] 2224 	mov	sp,a
                                   2225 ;	../UI_Manager/ui.c:528: write_string("Seconds", sizeof("Seconds"), 7, LINE_1, NOT_SELECTED);
      000B40 E4               [12] 2226 	clr	a
      000B41 C0 E0            [24] 2227 	push	acc
      000B43 04               [12] 2228 	inc	a
      000B44 C0 E0            [24] 2229 	push	acc
      000B46 74 07            [12] 2230 	mov	a,#0x07
      000B48 C0 E0            [24] 2231 	push	acc
      000B4A 04               [12] 2232 	inc	a
      000B4B C0 E0            [24] 2233 	push	acc
      000B4D 90r00rE0         [24] 2234 	mov	dptr,#___str_19
      000B50 75 F0 80         [24] 2235 	mov	b,#0x80
      000B53 12r00r00         [24] 2236 	lcall	_write_string
      000B56 E5 81            [12] 2237 	mov	a,sp
      000B58 24 FC            [12] 2238 	add	a,#0xfc
      000B5A F5 81            [12] 2239 	mov	sp,a
      000B5C                       2240 00109$:
                                   2241 ;	../UI_Manager/ui.c:532: if(changed){
      000B5C E5*02            [12] 2242 	mov	a,_changed
      000B5E 60 21            [24] 2243 	jz	00112$
                                   2244 ;	../UI_Manager/ui.c:533: changed = 0x00;
      000B60 75*02 00         [24] 2245 	mov	_changed,#0x00
                                   2246 ;	../UI_Manager/ui.c:535: write_number(get_runtime_data(FOG_DURATION_INDEX), 1, LINE_1, NOT_SELECTED);
      000B63 75 82 01         [24] 2247 	mov	dpl,#0x01
      000B66 12r00r00         [24] 2248 	lcall	_get_runtime_data
      000B69 AF 82            [24] 2249 	mov	r7,dpl
      000B6B E4               [12] 2250 	clr	a
      000B6C FE               [12] 2251 	mov	r6,a
      000B6D C0 E0            [24] 2252 	push	acc
      000B6F 04               [12] 2253 	inc	a
      000B70 C0 E0            [24] 2254 	push	acc
      000B72 C0 E0            [24] 2255 	push	acc
      000B74 8F 82            [24] 2256 	mov	dpl,r7
      000B76 8E 83            [24] 2257 	mov	dph,r6
      000B78 12r00r00         [24] 2258 	lcall	_write_number
      000B7B 15 81            [12] 2259 	dec	sp
      000B7D 15 81            [12] 2260 	dec	sp
      000B7F 15 81            [12] 2261 	dec	sp
      000B81                       2262 00112$:
                                   2263 ;	../UI_Manager/ui.c:538: }
      000B81 22               [24] 2264 	ret
                                   2265 ;------------------------------------------------------------
                                   2266 ;Allocation info for local variables in function 'macroPage'
                                   2267 ;------------------------------------------------------------
                                   2268 ;action                    Allocated to registers r7 
                                   2269 ;------------------------------------------------------------
                                   2270 ;	../UI_Manager/ui.c:540: void macroPage(uint8_t action){
                                   2271 ;	-----------------------------------------
                                   2272 ;	 function macroPage
                                   2273 ;	-----------------------------------------
      000B82                       2274 _macroPage:
      000B82 AF 82            [24] 2275 	mov	r7,dpl
                                   2276 ;	../UI_Manager/ui.c:542: switch (action)
      000B84 BF 01 02         [24] 2277 	cjne	r7,#0x01,00146$
      000B87 80 50            [24] 2278 	sjmp	00106$
      000B89                       2279 00146$:
      000B89 BF 02 02         [24] 2280 	cjne	r7,#0x02,00147$
      000B8C 80 3F            [24] 2281 	sjmp	00105$
      000B8E                       2282 00147$:
      000B8E BF 03 02         [24] 2283 	cjne	r7,#0x03,00148$
      000B91 80 0F            [24] 2284 	sjmp	00102$
      000B93                       2285 00148$:
      000B93 BF 0B 02         [24] 2286 	cjne	r7,#0x0b,00149$
      000B96 80 1F            [24] 2287 	sjmp	00104$
      000B98                       2288 00149$:
      000B98 BF 1F 02         [24] 2289 	cjne	r7,#0x1f,00150$
      000B9B 80 05            [24] 2290 	sjmp	00102$
      000B9D                       2291 00150$:
                                   2292 ;	../UI_Manager/ui.c:545: case BUTTON_UP:
      000B9D BF 6F 45         [24] 2293 	cjne	r7,#0x6f,00107$
      000BA0 80 15            [24] 2294 	sjmp	00104$
      000BA2                       2295 00102$:
                                   2296 ;	../UI_Manager/ui.c:546: set_runtime_data(MACRO_INDEX, INC, NULL);
      000BA2 E4               [12] 2297 	clr	a
      000BA3 C0 E0            [24] 2298 	push	acc
      000BA5 04               [12] 2299 	inc	a
      000BA6 C0 E0            [24] 2300 	push	acc
      000BA8 75 82 03         [24] 2301 	mov	dpl,#0x03
      000BAB 12r00r00         [24] 2302 	lcall	_set_runtime_data
      000BAE 15 81            [12] 2303 	dec	sp
      000BB0 15 81            [12] 2304 	dec	sp
                                   2305 ;	../UI_Manager/ui.c:547: changed = 0xFF;
      000BB2 75*02 FF         [24] 2306 	mov	_changed,#0xff
                                   2307 ;	../UI_Manager/ui.c:548: break;
                                   2308 ;	../UI_Manager/ui.c:550: case BUTTON_DOWN:
      000BB5 80 2E            [24] 2309 	sjmp	00107$
      000BB7                       2310 00104$:
                                   2311 ;	../UI_Manager/ui.c:551: set_runtime_data(MACRO_INDEX, DEC, NULL);
      000BB7 E4               [12] 2312 	clr	a
      000BB8 C0 E0            [24] 2313 	push	acc
      000BBA 74 02            [12] 2314 	mov	a,#0x02
      000BBC C0 E0            [24] 2315 	push	acc
      000BBE 75 82 03         [24] 2316 	mov	dpl,#0x03
      000BC1 12r00r00         [24] 2317 	lcall	_set_runtime_data
      000BC4 15 81            [12] 2318 	dec	sp
      000BC6 15 81            [12] 2319 	dec	sp
                                   2320 ;	../UI_Manager/ui.c:552: changed = 0xFF;  
      000BC8 75*02 FF         [24] 2321 	mov	_changed,#0xff
                                   2322 ;	../UI_Manager/ui.c:553: break;
                                   2323 ;	../UI_Manager/ui.c:554: case BUTTON_FUNCTION:
      000BCB 80 18            [24] 2324 	sjmp	00107$
      000BCD                       2325 00105$:
                                   2326 ;	../UI_Manager/ui.c:555: set_ui_state(INC, NULL);
      000BCD E4               [12] 2327 	clr	a
      000BCE C0 E0            [24] 2328 	push	acc
      000BD0 75 82 01         [24] 2329 	mov	dpl,#0x01
      000BD3 12r12r76         [24] 2330 	lcall	_set_ui_state
      000BD6 15 81            [12] 2331 	dec	sp
                                   2332 ;	../UI_Manager/ui.c:556: return;
      000BD8 22               [24] 2333 	ret
                                   2334 ;	../UI_Manager/ui.c:557: case BUTTON_TIMER:
      000BD9                       2335 00106$:
                                   2336 ;	../UI_Manager/ui.c:558: set_ui_state(DEC, NULL);
      000BD9 E4               [12] 2337 	clr	a
      000BDA C0 E0            [24] 2338 	push	acc
      000BDC 75 82 02         [24] 2339 	mov	dpl,#0x02
      000BDF 12r12r76         [24] 2340 	lcall	_set_ui_state
      000BE2 15 81            [12] 2341 	dec	sp
                                   2342 ;	../UI_Manager/ui.c:559: return;
                                   2343 ;	../UI_Manager/ui.c:560: }
      000BE4 22               [24] 2344 	ret
      000BE5                       2345 00107$:
                                   2346 ;	../UI_Manager/ui.c:562: if(Changed){
      000BE5 E5*01            [12] 2347 	mov	a,_Changed
      000BE7 60 28            [24] 2348 	jz	00109$
                                   2349 ;	../UI_Manager/ui.c:563: Changed = 0x00;
      000BE9 75*01 00         [24] 2350 	mov	_Changed,#0x00
                                   2351 ;	../UI_Manager/ui.c:564: changed = 0xFF;
      000BEC 75*02 FF         [24] 2352 	mov	_changed,#0xff
                                   2353 ;	../UI_Manager/ui.c:566: exe_command(CLEAR_DISPLAY);
      000BEF 90 80 00         [24] 2354 	mov	dptr,#0x8000
      000BF2 12r00r00         [24] 2355 	lcall	_exe_command
                                   2356 ;	../UI_Manager/ui.c:568: write_string("Macros", sizeof("Macros"), 4, LINE_0, NOT_SELECTED);
      000BF5 E4               [12] 2357 	clr	a
      000BF6 C0 E0            [24] 2358 	push	acc
      000BF8 C0 E0            [24] 2359 	push	acc
      000BFA 74 04            [12] 2360 	mov	a,#0x04
      000BFC C0 E0            [24] 2361 	push	acc
      000BFE 74 07            [12] 2362 	mov	a,#0x07
      000C00 C0 E0            [24] 2363 	push	acc
      000C02 90r00rF5         [24] 2364 	mov	dptr,#___str_21
      000C05 75 F0 80         [24] 2365 	mov	b,#0x80
      000C08 12r00r00         [24] 2366 	lcall	_write_string
      000C0B E5 81            [12] 2367 	mov	a,sp
      000C0D 24 FC            [12] 2368 	add	a,#0xfc
      000C0F F5 81            [12] 2369 	mov	sp,a
      000C11                       2370 00109$:
                                   2371 ;	../UI_Manager/ui.c:572: if(changed){
      000C11 E5*02            [12] 2372 	mov	a,_changed
      000C13 60 36            [24] 2373 	jz	00112$
                                   2374 ;	../UI_Manager/ui.c:573: changed = 0x00;
      000C15 75*02 00         [24] 2375 	mov	_changed,#0x00
                                   2376 ;	../UI_Manager/ui.c:575: write_string(getString(get_runtime_data(MACRO_INDEX) + MACRO_STRING_OFFSET), LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000C18 75 82 03         [24] 2377 	mov	dpl,#0x03
      000C1B 12r00r00         [24] 2378 	lcall	_get_runtime_data
      000C1E AF 82            [24] 2379 	mov	r7,dpl
      000C20 74 14            [12] 2380 	mov	a,#0x14
      000C22 2F               [12] 2381 	add	a,r7
      000C23 F5 82            [12] 2382 	mov	dpl,a
      000C25 12r13r83         [24] 2383 	lcall	_getString
      000C28 AD 82            [24] 2384 	mov	r5,dpl
      000C2A AE 83            [24] 2385 	mov	r6,dph
      000C2C AF F0            [24] 2386 	mov	r7,b
      000C2E E4               [12] 2387 	clr	a
      000C2F C0 E0            [24] 2388 	push	acc
      000C31 04               [12] 2389 	inc	a
      000C32 C0 E0            [24] 2390 	push	acc
      000C34 74 06            [12] 2391 	mov	a,#0x06
      000C36 C0 E0            [24] 2392 	push	acc
      000C38 74 10            [12] 2393 	mov	a,#0x10
      000C3A C0 E0            [24] 2394 	push	acc
      000C3C 8D 82            [24] 2395 	mov	dpl,r5
      000C3E 8E 83            [24] 2396 	mov	dph,r6
      000C40 8F F0            [24] 2397 	mov	b,r7
      000C42 12r00r00         [24] 2398 	lcall	_write_string
      000C45 E5 81            [12] 2399 	mov	a,sp
      000C47 24 FC            [12] 2400 	add	a,#0xfc
      000C49 F5 81            [12] 2401 	mov	sp,a
      000C4B                       2402 00112$:
                                   2403 ;	../UI_Manager/ui.c:578: }
      000C4B 22               [24] 2404 	ret
                                   2405 ;------------------------------------------------------------
                                   2406 ;Allocation info for local variables in function 'macroSpeedPage'
                                   2407 ;------------------------------------------------------------
                                   2408 ;action                    Allocated to registers r7 
                                   2409 ;------------------------------------------------------------
                                   2410 ;	../UI_Manager/ui.c:580: void macroSpeedPage(uint8_t action){
                                   2411 ;	-----------------------------------------
                                   2412 ;	 function macroSpeedPage
                                   2413 ;	-----------------------------------------
      000C4C                       2414 _macroSpeedPage:
      000C4C AF 82            [24] 2415 	mov	r7,dpl
                                   2416 ;	../UI_Manager/ui.c:582: switch (action)
      000C4E BF 01 02         [24] 2417 	cjne	r7,#0x01,00153$
      000C51 80 50            [24] 2418 	sjmp	00106$
      000C53                       2419 00153$:
      000C53 BF 02 02         [24] 2420 	cjne	r7,#0x02,00154$
      000C56 80 3F            [24] 2421 	sjmp	00105$
      000C58                       2422 00154$:
      000C58 BF 03 02         [24] 2423 	cjne	r7,#0x03,00155$
      000C5B 80 0F            [24] 2424 	sjmp	00102$
      000C5D                       2425 00155$:
      000C5D BF 0B 02         [24] 2426 	cjne	r7,#0x0b,00156$
      000C60 80 1F            [24] 2427 	sjmp	00104$
      000C62                       2428 00156$:
      000C62 BF 1F 02         [24] 2429 	cjne	r7,#0x1f,00157$
      000C65 80 05            [24] 2430 	sjmp	00102$
      000C67                       2431 00157$:
                                   2432 ;	../UI_Manager/ui.c:585: case BUTTON_UP:
      000C67 BF 6F 45         [24] 2433 	cjne	r7,#0x6f,00107$
      000C6A 80 15            [24] 2434 	sjmp	00104$
      000C6C                       2435 00102$:
                                   2436 ;	../UI_Manager/ui.c:586: set_runtime_data(MACRO_SPEED_INDEX, INC, NULL);
      000C6C E4               [12] 2437 	clr	a
      000C6D C0 E0            [24] 2438 	push	acc
      000C6F 04               [12] 2439 	inc	a
      000C70 C0 E0            [24] 2440 	push	acc
      000C72 75 82 04         [24] 2441 	mov	dpl,#0x04
      000C75 12r00r00         [24] 2442 	lcall	_set_runtime_data
      000C78 15 81            [12] 2443 	dec	sp
      000C7A 15 81            [12] 2444 	dec	sp
                                   2445 ;	../UI_Manager/ui.c:587: changed = 0xFF;
      000C7C 75*02 FF         [24] 2446 	mov	_changed,#0xff
                                   2447 ;	../UI_Manager/ui.c:588: break;
                                   2448 ;	../UI_Manager/ui.c:590: case BUTTON_DOWN:
      000C7F 80 2E            [24] 2449 	sjmp	00107$
      000C81                       2450 00104$:
                                   2451 ;	../UI_Manager/ui.c:591: set_runtime_data(MACRO_SPEED_INDEX, DEC, NULL);
      000C81 E4               [12] 2452 	clr	a
      000C82 C0 E0            [24] 2453 	push	acc
      000C84 74 02            [12] 2454 	mov	a,#0x02
      000C86 C0 E0            [24] 2455 	push	acc
      000C88 75 82 04         [24] 2456 	mov	dpl,#0x04
      000C8B 12r00r00         [24] 2457 	lcall	_set_runtime_data
      000C8E 15 81            [12] 2458 	dec	sp
      000C90 15 81            [12] 2459 	dec	sp
                                   2460 ;	../UI_Manager/ui.c:592: changed = 0xFF;  
      000C92 75*02 FF         [24] 2461 	mov	_changed,#0xff
                                   2462 ;	../UI_Manager/ui.c:593: break;
                                   2463 ;	../UI_Manager/ui.c:594: case BUTTON_FUNCTION:
      000C95 80 18            [24] 2464 	sjmp	00107$
      000C97                       2465 00105$:
                                   2466 ;	../UI_Manager/ui.c:595: set_ui_state(INC, NULL);
      000C97 E4               [12] 2467 	clr	a
      000C98 C0 E0            [24] 2468 	push	acc
      000C9A 75 82 01         [24] 2469 	mov	dpl,#0x01
      000C9D 12r12r76         [24] 2470 	lcall	_set_ui_state
      000CA0 15 81            [12] 2471 	dec	sp
                                   2472 ;	../UI_Manager/ui.c:596: return;
      000CA2 22               [24] 2473 	ret
                                   2474 ;	../UI_Manager/ui.c:597: case BUTTON_TIMER:
      000CA3                       2475 00106$:
                                   2476 ;	../UI_Manager/ui.c:598: set_ui_state(DEC, NULL);
      000CA3 E4               [12] 2477 	clr	a
      000CA4 C0 E0            [24] 2478 	push	acc
      000CA6 75 82 02         [24] 2479 	mov	dpl,#0x02
      000CA9 12r12r76         [24] 2480 	lcall	_set_ui_state
      000CAC 15 81            [12] 2481 	dec	sp
                                   2482 ;	../UI_Manager/ui.c:599: return;
      000CAE 22               [24] 2483 	ret
                                   2484 ;	../UI_Manager/ui.c:600: }
      000CAF                       2485 00107$:
                                   2486 ;	../UI_Manager/ui.c:602: if(Changed){
      000CAF E5*01            [12] 2487 	mov	a,_Changed
      000CB1 60 28            [24] 2488 	jz	00109$
                                   2489 ;	../UI_Manager/ui.c:603: Changed = 0x00;
      000CB3 75*01 00         [24] 2490 	mov	_Changed,#0x00
                                   2491 ;	../UI_Manager/ui.c:604: changed = 0xFF;
      000CB6 75*02 FF         [24] 2492 	mov	_changed,#0xff
                                   2493 ;	../UI_Manager/ui.c:606: exe_command(CLEAR_DISPLAY);
      000CB9 90 80 00         [24] 2494 	mov	dptr,#0x8000
      000CBC 12r00r00         [24] 2495 	lcall	_exe_command
                                   2496 ;	../UI_Manager/ui.c:608: write_string("Macro Speed", sizeof("Macro Speed"), 3, LINE_0, NOT_SELECTED);
      000CBF E4               [12] 2497 	clr	a
      000CC0 C0 E0            [24] 2498 	push	acc
      000CC2 C0 E0            [24] 2499 	push	acc
      000CC4 74 03            [12] 2500 	mov	a,#0x03
      000CC6 C0 E0            [24] 2501 	push	acc
      000CC8 74 0C            [12] 2502 	mov	a,#0x0c
      000CCA C0 E0            [24] 2503 	push	acc
      000CCC 90r00rFC         [24] 2504 	mov	dptr,#___str_22
      000CCF 75 F0 80         [24] 2505 	mov	b,#0x80
      000CD2 12r00r00         [24] 2506 	lcall	_write_string
      000CD5 E5 81            [12] 2507 	mov	a,sp
      000CD7 24 FC            [12] 2508 	add	a,#0xfc
      000CD9 F5 81            [12] 2509 	mov	sp,a
      000CDB                       2510 00109$:
                                   2511 ;	../UI_Manager/ui.c:612: if(changed){
      000CDB E5*02            [12] 2512 	mov	a,_changed
      000CDD 60 67            [24] 2513 	jz	00115$
                                   2514 ;	../UI_Manager/ui.c:613: changed = 0x00;
      000CDF 75*02 00         [24] 2515 	mov	_changed,#0x00
                                   2516 ;	../UI_Manager/ui.c:615: if(get_runtime_data(MACRO_SPEED_INDEX) == 0){
      000CE2 75 82 04         [24] 2517 	mov	dpl,#0x04
      000CE5 12r00r00         [24] 2518 	lcall	_get_runtime_data
      000CE8 E5 82            [12] 2519 	mov	a,dpl
                                   2520 ;	../UI_Manager/ui.c:616: write_string("Off", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000CEA 70 1D            [24] 2521 	jnz	00111$
      000CEC C0 E0            [24] 2522 	push	acc
      000CEE 04               [12] 2523 	inc	a
      000CEF C0 E0            [24] 2524 	push	acc
      000CF1 74 06            [12] 2525 	mov	a,#0x06
      000CF3 C0 E0            [24] 2526 	push	acc
      000CF5 74 10            [12] 2527 	mov	a,#0x10
      000CF7 C0 E0            [24] 2528 	push	acc
      000CF9 90r01r08         [24] 2529 	mov	dptr,#___str_23
      000CFC 75 F0 80         [24] 2530 	mov	b,#0x80
      000CFF 12r00r00         [24] 2531 	lcall	_write_string
      000D02 E5 81            [12] 2532 	mov	a,sp
      000D04 24 FC            [12] 2533 	add	a,#0xfc
      000D06 F5 81            [12] 2534 	mov	sp,a
      000D08 22               [24] 2535 	ret
      000D09                       2536 00111$:
                                   2537 ;	../UI_Manager/ui.c:618: write_string("", LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000D09 E4               [12] 2538 	clr	a
      000D0A C0 E0            [24] 2539 	push	acc
      000D0C 04               [12] 2540 	inc	a
      000D0D C0 E0            [24] 2541 	push	acc
      000D0F 74 03            [12] 2542 	mov	a,#0x03
      000D11 C0 E0            [24] 2543 	push	acc
      000D13 74 10            [12] 2544 	mov	a,#0x10
      000D15 C0 E0            [24] 2545 	push	acc
      000D17 90r01r0C         [24] 2546 	mov	dptr,#___str_24
      000D1A 75 F0 80         [24] 2547 	mov	b,#0x80
      000D1D 12r00r00         [24] 2548 	lcall	_write_string
      000D20 E5 81            [12] 2549 	mov	a,sp
      000D22 24 FC            [12] 2550 	add	a,#0xfc
      000D24 F5 81            [12] 2551 	mov	sp,a
                                   2552 ;	../UI_Manager/ui.c:619: write_number(get_runtime_data(MACRO_SPEED_INDEX), 5, LINE_1, NOT_SELECTED);
      000D26 75 82 04         [24] 2553 	mov	dpl,#0x04
      000D29 12r00r00         [24] 2554 	lcall	_get_runtime_data
      000D2C AF 82            [24] 2555 	mov	r7,dpl
      000D2E E4               [12] 2556 	clr	a
      000D2F FE               [12] 2557 	mov	r6,a
      000D30 C0 E0            [24] 2558 	push	acc
      000D32 04               [12] 2559 	inc	a
      000D33 C0 E0            [24] 2560 	push	acc
      000D35 74 05            [12] 2561 	mov	a,#0x05
      000D37 C0 E0            [24] 2562 	push	acc
      000D39 8F 82            [24] 2563 	mov	dpl,r7
      000D3B 8E 83            [24] 2564 	mov	dph,r6
      000D3D 12r00r00         [24] 2565 	lcall	_write_number
      000D40 15 81            [12] 2566 	dec	sp
      000D42 15 81            [12] 2567 	dec	sp
      000D44 15 81            [12] 2568 	dec	sp
      000D46                       2569 00115$:
                                   2570 ;	../UI_Manager/ui.c:623: }
      000D46 22               [24] 2571 	ret
                                   2572 ;------------------------------------------------------------
                                   2573 ;Allocation info for local variables in function 'colorPage'
                                   2574 ;------------------------------------------------------------
                                   2575 ;action                    Allocated to registers r7 
                                   2576 ;index                     Allocated to registers r6 
                                   2577 ;------------------------------------------------------------
                                   2578 ;	../UI_Manager/ui.c:625: void colorPage(uint8_t action){
                                   2579 ;	-----------------------------------------
                                   2580 ;	 function colorPage
                                   2581 ;	-----------------------------------------
      000D47                       2582 _colorPage:
      000D47 AF 82            [24] 2583 	mov	r7,dpl
                                   2584 ;	../UI_Manager/ui.c:626: uint8_t index = 0;
      000D49 7E 00            [12] 2585 	mov	r6,#0x00
                                   2586 ;	../UI_Manager/ui.c:628: switch (State)
      000D4B AD*00            [24] 2587 	mov	r5,_State
      000D4D BD 06 02         [24] 2588 	cjne	r5,#0x06,00174$
      000D50 80 0F            [24] 2589 	sjmp	00101$
      000D52                       2590 00174$:
      000D52 BD 07 02         [24] 2591 	cjne	r5,#0x07,00175$
      000D55 80 0E            [24] 2592 	sjmp	00102$
      000D57                       2593 00175$:
      000D57 BD 08 02         [24] 2594 	cjne	r5,#0x08,00176$
      000D5A 80 0D            [24] 2595 	sjmp	00103$
      000D5C                       2596 00176$:
                                   2597 ;	../UI_Manager/ui.c:630: case MANUAL_RED_STATE:
      000D5C BD 09 10         [24] 2598 	cjne	r5,#0x09,00105$
      000D5F 80 0C            [24] 2599 	sjmp	00104$
      000D61                       2600 00101$:
                                   2601 ;	../UI_Manager/ui.c:631: index = RED_INDEX;
      000D61 7E 05            [12] 2602 	mov	r6,#0x05
                                   2603 ;	../UI_Manager/ui.c:632: break;
                                   2604 ;	../UI_Manager/ui.c:633: case MANUAL_GREEN_STATE:
      000D63 80 0A            [24] 2605 	sjmp	00105$
      000D65                       2606 00102$:
                                   2607 ;	../UI_Manager/ui.c:634: index = GREEN_INDEX;
      000D65 7E 06            [12] 2608 	mov	r6,#0x06
                                   2609 ;	../UI_Manager/ui.c:635: break;
                                   2610 ;	../UI_Manager/ui.c:636: case MANUAL_BLUE_STATE:
      000D67 80 06            [24] 2611 	sjmp	00105$
      000D69                       2612 00103$:
                                   2613 ;	../UI_Manager/ui.c:637: index = BLUE_INDEX;
      000D69 7E 07            [12] 2614 	mov	r6,#0x07
                                   2615 ;	../UI_Manager/ui.c:638: break;
                                   2616 ;	../UI_Manager/ui.c:639: case MANUAL_STROBE_STATE:
      000D6B 80 02            [24] 2617 	sjmp	00105$
      000D6D                       2618 00104$:
                                   2619 ;	../UI_Manager/ui.c:640: index = STROBE_INDEX;
      000D6D 7E 08            [12] 2620 	mov	r6,#0x08
                                   2621 ;	../UI_Manager/ui.c:642: }
      000D6F                       2622 00105$:
                                   2623 ;	../UI_Manager/ui.c:644: switch (action)
      000D6F BF 01 02         [24] 2624 	cjne	r7,#0x01,00178$
      000D72 80 56            [24] 2625 	sjmp	00111$
      000D74                       2626 00178$:
      000D74 BF 02 02         [24] 2627 	cjne	r7,#0x02,00179$
      000D77 80 45            [24] 2628 	sjmp	00110$
      000D79                       2629 00179$:
      000D79 BF 03 02         [24] 2630 	cjne	r7,#0x03,00180$
      000D7C 80 0F            [24] 2631 	sjmp	00107$
      000D7E                       2632 00180$:
      000D7E BF 0B 02         [24] 2633 	cjne	r7,#0x0b,00181$
      000D81 80 22            [24] 2634 	sjmp	00109$
      000D83                       2635 00181$:
      000D83 BF 1F 02         [24] 2636 	cjne	r7,#0x1f,00182$
      000D86 80 05            [24] 2637 	sjmp	00107$
      000D88                       2638 00182$:
                                   2639 ;	../UI_Manager/ui.c:647: case BUTTON_UP:
      000D88 BF 6F 4B         [24] 2640 	cjne	r7,#0x6f,00112$
      000D8B 80 18            [24] 2641 	sjmp	00109$
      000D8D                       2642 00107$:
                                   2643 ;	../UI_Manager/ui.c:648: set_runtime_data(index, INC, NULL);
      000D8D C0 06            [24] 2644 	push	ar6
      000D8F E4               [12] 2645 	clr	a
      000D90 C0 E0            [24] 2646 	push	acc
      000D92 04               [12] 2647 	inc	a
      000D93 C0 E0            [24] 2648 	push	acc
      000D95 8E 82            [24] 2649 	mov	dpl,r6
      000D97 12r00r00         [24] 2650 	lcall	_set_runtime_data
      000D9A 15 81            [12] 2651 	dec	sp
      000D9C 15 81            [12] 2652 	dec	sp
      000D9E D0 06            [24] 2653 	pop	ar6
                                   2654 ;	../UI_Manager/ui.c:649: changed = 0xFF;
      000DA0 75*02 FF         [24] 2655 	mov	_changed,#0xff
                                   2656 ;	../UI_Manager/ui.c:650: break;
                                   2657 ;	../UI_Manager/ui.c:652: case BUTTON_DOWN:
      000DA3 80 31            [24] 2658 	sjmp	00112$
      000DA5                       2659 00109$:
                                   2660 ;	../UI_Manager/ui.c:653: set_runtime_data(index, DEC, NULL);
      000DA5 C0 06            [24] 2661 	push	ar6
      000DA7 E4               [12] 2662 	clr	a
      000DA8 C0 E0            [24] 2663 	push	acc
      000DAA 74 02            [12] 2664 	mov	a,#0x02
      000DAC C0 E0            [24] 2665 	push	acc
      000DAE 8E 82            [24] 2666 	mov	dpl,r6
      000DB0 12r00r00         [24] 2667 	lcall	_set_runtime_data
      000DB3 15 81            [12] 2668 	dec	sp
      000DB5 15 81            [12] 2669 	dec	sp
      000DB7 D0 06            [24] 2670 	pop	ar6
                                   2671 ;	../UI_Manager/ui.c:654: changed = 0xFF;  
      000DB9 75*02 FF         [24] 2672 	mov	_changed,#0xff
                                   2673 ;	../UI_Manager/ui.c:655: break;
                                   2674 ;	../UI_Manager/ui.c:656: case BUTTON_FUNCTION:
      000DBC 80 18            [24] 2675 	sjmp	00112$
      000DBE                       2676 00110$:
                                   2677 ;	../UI_Manager/ui.c:657: set_ui_state(INC, NULL);
      000DBE E4               [12] 2678 	clr	a
      000DBF C0 E0            [24] 2679 	push	acc
      000DC1 75 82 01         [24] 2680 	mov	dpl,#0x01
      000DC4 12r12r76         [24] 2681 	lcall	_set_ui_state
      000DC7 15 81            [12] 2682 	dec	sp
                                   2683 ;	../UI_Manager/ui.c:658: return;
      000DC9 22               [24] 2684 	ret
                                   2685 ;	../UI_Manager/ui.c:659: case BUTTON_TIMER:
      000DCA                       2686 00111$:
                                   2687 ;	../UI_Manager/ui.c:660: set_ui_state(DEC, NULL);
      000DCA E4               [12] 2688 	clr	a
      000DCB C0 E0            [24] 2689 	push	acc
      000DCD 75 82 02         [24] 2690 	mov	dpl,#0x02
      000DD0 12r12r76         [24] 2691 	lcall	_set_ui_state
      000DD3 15 81            [12] 2692 	dec	sp
                                   2693 ;	../UI_Manager/ui.c:661: return;
      000DD5 22               [24] 2694 	ret
                                   2695 ;	../UI_Manager/ui.c:662: }
      000DD6                       2696 00112$:
                                   2697 ;	../UI_Manager/ui.c:664: if(Changed){
      000DD6 E5*01            [12] 2698 	mov	a,_Changed
      000DD8 60 3C            [24] 2699 	jz	00114$
                                   2700 ;	../UI_Manager/ui.c:665: Changed = 0x00;
      000DDA 75*01 00         [24] 2701 	mov	_Changed,#0x00
                                   2702 ;	../UI_Manager/ui.c:666: changed = 0xFF;
      000DDD 75*02 FF         [24] 2703 	mov	_changed,#0xff
                                   2704 ;	../UI_Manager/ui.c:668: exe_command(CLEAR_DISPLAY);
      000DE0 90 80 00         [24] 2705 	mov	dptr,#0x8000
      000DE3 C0 06            [24] 2706 	push	ar6
      000DE5 12r00r00         [24] 2707 	lcall	_exe_command
                                   2708 ;	../UI_Manager/ui.c:670: write_string(getString(COLOR_STRING_OFFSET + State), LINE_LENGTH, 3, LINE_0, NOT_SELECTED);
      000DE8 AF*00            [24] 2709 	mov	r7,_State
      000DEA 74 C8            [12] 2710 	mov	a,#0xc8
      000DEC 2F               [12] 2711 	add	a,r7
      000DED F5 82            [12] 2712 	mov	dpl,a
      000DEF 12r13r83         [24] 2713 	lcall	_getString
      000DF2 AC 82            [24] 2714 	mov	r4,dpl
      000DF4 AD 83            [24] 2715 	mov	r5,dph
      000DF6 AF F0            [24] 2716 	mov	r7,b
      000DF8 E4               [12] 2717 	clr	a
      000DF9 C0 E0            [24] 2718 	push	acc
      000DFB C0 E0            [24] 2719 	push	acc
      000DFD 74 03            [12] 2720 	mov	a,#0x03
      000DFF C0 E0            [24] 2721 	push	acc
      000E01 74 10            [12] 2722 	mov	a,#0x10
      000E03 C0 E0            [24] 2723 	push	acc
      000E05 8C 82            [24] 2724 	mov	dpl,r4
      000E07 8D 83            [24] 2725 	mov	dph,r5
      000E09 8F F0            [24] 2726 	mov	b,r7
      000E0B 12r00r00         [24] 2727 	lcall	_write_string
      000E0E E5 81            [12] 2728 	mov	a,sp
      000E10 24 FC            [12] 2729 	add	a,#0xfc
      000E12 F5 81            [12] 2730 	mov	sp,a
      000E14 D0 06            [24] 2731 	pop	ar6
      000E16                       2732 00114$:
                                   2733 ;	../UI_Manager/ui.c:674: if(changed){
      000E16 E5*02            [12] 2734 	mov	a,_changed
      000E18 60 6C            [24] 2735 	jz	00120$
                                   2736 ;	../UI_Manager/ui.c:675: changed = 0x00;
      000E1A 75*02 00         [24] 2737 	mov	_changed,#0x00
                                   2738 ;	../UI_Manager/ui.c:677: if(get_runtime_data(index) == 0){
      000E1D 8E 82            [24] 2739 	mov	dpl,r6
      000E1F C0 06            [24] 2740 	push	ar6
      000E21 12r00r00         [24] 2741 	lcall	_get_runtime_data
      000E24 E5 82            [12] 2742 	mov	a,dpl
      000E26 D0 06            [24] 2743 	pop	ar6
                                   2744 ;	../UI_Manager/ui.c:678: write_string("Off", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000E28 70 1D            [24] 2745 	jnz	00116$
      000E2A C0 E0            [24] 2746 	push	acc
      000E2C 04               [12] 2747 	inc	a
      000E2D C0 E0            [24] 2748 	push	acc
      000E2F 74 06            [12] 2749 	mov	a,#0x06
      000E31 C0 E0            [24] 2750 	push	acc
      000E33 74 10            [12] 2751 	mov	a,#0x10
      000E35 C0 E0            [24] 2752 	push	acc
      000E37 90r01r08         [24] 2753 	mov	dptr,#___str_23
      000E3A 75 F0 80         [24] 2754 	mov	b,#0x80
      000E3D 12r00r00         [24] 2755 	lcall	_write_string
      000E40 E5 81            [12] 2756 	mov	a,sp
      000E42 24 FC            [12] 2757 	add	a,#0xfc
      000E44 F5 81            [12] 2758 	mov	sp,a
      000E46 22               [24] 2759 	ret
      000E47                       2760 00116$:
                                   2761 ;	../UI_Manager/ui.c:680: write_string("", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      000E47 C0 06            [24] 2762 	push	ar6
      000E49 E4               [12] 2763 	clr	a
      000E4A C0 E0            [24] 2764 	push	acc
      000E4C 04               [12] 2765 	inc	a
      000E4D C0 E0            [24] 2766 	push	acc
      000E4F E4               [12] 2767 	clr	a
      000E50 C0 E0            [24] 2768 	push	acc
      000E52 74 10            [12] 2769 	mov	a,#0x10
      000E54 C0 E0            [24] 2770 	push	acc
      000E56 90r01r0C         [24] 2771 	mov	dptr,#___str_24
      000E59 75 F0 80         [24] 2772 	mov	b,#0x80
      000E5C 12r00r00         [24] 2773 	lcall	_write_string
      000E5F E5 81            [12] 2774 	mov	a,sp
      000E61 24 FC            [12] 2775 	add	a,#0xfc
      000E63 F5 81            [12] 2776 	mov	sp,a
      000E65 D0 06            [24] 2777 	pop	ar6
                                   2778 ;	../UI_Manager/ui.c:681: write_number(get_runtime_data(index), 6, LINE_1, NOT_SELECTED);
      000E67 8E 82            [24] 2779 	mov	dpl,r6
      000E69 12r00r00         [24] 2780 	lcall	_get_runtime_data
      000E6C AF 82            [24] 2781 	mov	r7,dpl
      000E6E E4               [12] 2782 	clr	a
      000E6F FE               [12] 2783 	mov	r6,a
      000E70 C0 E0            [24] 2784 	push	acc
      000E72 04               [12] 2785 	inc	a
      000E73 C0 E0            [24] 2786 	push	acc
      000E75 74 06            [12] 2787 	mov	a,#0x06
      000E77 C0 E0            [24] 2788 	push	acc
      000E79 8F 82            [24] 2789 	mov	dpl,r7
      000E7B 8E 83            [24] 2790 	mov	dph,r6
      000E7D 12r00r00         [24] 2791 	lcall	_write_number
      000E80 15 81            [12] 2792 	dec	sp
      000E82 15 81            [12] 2793 	dec	sp
      000E84 15 81            [12] 2794 	dec	sp
      000E86                       2795 00120$:
                                   2796 ;	../UI_Manager/ui.c:684: }
      000E86 22               [24] 2797 	ret
                                   2798 ;------------------------------------------------------------
                                   2799 ;Allocation info for local variables in function 'remotePage'
                                   2800 ;------------------------------------------------------------
                                   2801 ;action                    Allocated to registers r7 
                                   2802 ;remoteNumber              Allocated to registers r6 
                                   2803 ;index                     Allocated to registers r5 
                                   2804 ;------------------------------------------------------------
                                   2805 ;	../UI_Manager/ui.c:686: void remotePage(uint8_t action){
                                   2806 ;	-----------------------------------------
                                   2807 ;	 function remotePage
                                   2808 ;	-----------------------------------------
      000E87                       2809 _remotePage:
      000E87 AF 82            [24] 2810 	mov	r7,dpl
                                   2811 ;	../UI_Manager/ui.c:687: uint8_t remoteNumber = 0;
      000E89 7E 00            [12] 2812 	mov	r6,#0x00
                                   2813 ;	../UI_Manager/ui.c:688: uint8_t index = 0;
      000E8B 7D 00            [12] 2814 	mov	r5,#0x00
                                   2815 ;	../UI_Manager/ui.c:690: switch (State)
      000E8D AC*00            [24] 2816 	mov	r4,_State
      000E8F BC 0A 02         [24] 2817 	cjne	r4,#0x0a,00168$
      000E92 80 0A            [24] 2818 	sjmp	00101$
      000E94                       2819 00168$:
      000E94 BC 0B 02         [24] 2820 	cjne	r4,#0x0b,00169$
      000E97 80 0B            [24] 2821 	sjmp	00102$
      000E99                       2822 00169$:
                                   2823 ;	../UI_Manager/ui.c:692: case MANUAL_REMOTE_ACTION_4_STATE:
      000E99 BC 0C 12         [24] 2824 	cjne	r4,#0x0c,00104$
      000E9C 80 0C            [24] 2825 	sjmp	00103$
      000E9E                       2826 00101$:
                                   2827 ;	../UI_Manager/ui.c:693: index = R4_INDEX;
      000E9E 7D 09            [12] 2828 	mov	r5,#0x09
                                   2829 ;	../UI_Manager/ui.c:694: remoteNumber = 4;
      000EA0 7E 04            [12] 2830 	mov	r6,#0x04
                                   2831 ;	../UI_Manager/ui.c:695: break;
                                   2832 ;	../UI_Manager/ui.c:696: case MANUAL_REMOTE_ACTION_5_STATE:
      000EA2 80 0A            [24] 2833 	sjmp	00104$
      000EA4                       2834 00102$:
                                   2835 ;	../UI_Manager/ui.c:697: index = R5_INDEX;
      000EA4 7D 0A            [12] 2836 	mov	r5,#0x0a
                                   2837 ;	../UI_Manager/ui.c:698: remoteNumber = 5;
      000EA6 7E 05            [12] 2838 	mov	r6,#0x05
                                   2839 ;	../UI_Manager/ui.c:699: break;
                                   2840 ;	../UI_Manager/ui.c:700: case MANUAL_REMOTE_ACTION_6_STATE:
      000EA8 80 04            [24] 2841 	sjmp	00104$
      000EAA                       2842 00103$:
                                   2843 ;	../UI_Manager/ui.c:701: index = R6_INDEX;
      000EAA 7D 0B            [12] 2844 	mov	r5,#0x0b
                                   2845 ;	../UI_Manager/ui.c:702: remoteNumber = 6;
      000EAC 7E 06            [12] 2846 	mov	r6,#0x06
                                   2847 ;	../UI_Manager/ui.c:704: }
      000EAE                       2848 00104$:
                                   2849 ;	../UI_Manager/ui.c:706: switch (action)
      000EAE BF 01 02         [24] 2850 	cjne	r7,#0x01,00171$
      000EB1 80 54            [24] 2851 	sjmp	00108$
      000EB3                       2852 00171$:
      000EB3 BF 02 02         [24] 2853 	cjne	r7,#0x02,00172$
      000EB6 80 43            [24] 2854 	sjmp	00107$
      000EB8                       2855 00172$:
      000EB8 BF 03 02         [24] 2856 	cjne	r7,#0x03,00173$
      000EBB 80 05            [24] 2857 	sjmp	00105$
      000EBD                       2858 00173$:
                                   2859 ;	../UI_Manager/ui.c:708: case BUTTON_UP:
      000EBD BF 0B 53         [24] 2860 	cjne	r7,#0x0b,00109$
      000EC0 80 1C            [24] 2861 	sjmp	00106$
      000EC2                       2862 00105$:
                                   2863 ;	../UI_Manager/ui.c:709: set_runtime_data(index, INC, NULL);
      000EC2 C0 06            [24] 2864 	push	ar6
      000EC4 C0 05            [24] 2865 	push	ar5
      000EC6 E4               [12] 2866 	clr	a
      000EC7 C0 E0            [24] 2867 	push	acc
      000EC9 04               [12] 2868 	inc	a
      000ECA C0 E0            [24] 2869 	push	acc
      000ECC 8D 82            [24] 2870 	mov	dpl,r5
      000ECE 12r00r00         [24] 2871 	lcall	_set_runtime_data
      000ED1 15 81            [12] 2872 	dec	sp
      000ED3 15 81            [12] 2873 	dec	sp
      000ED5 D0 05            [24] 2874 	pop	ar5
      000ED7 D0 06            [24] 2875 	pop	ar6
                                   2876 ;	../UI_Manager/ui.c:710: changed = 0xFF;
      000ED9 75*02 FF         [24] 2877 	mov	_changed,#0xff
                                   2878 ;	../UI_Manager/ui.c:711: break;
                                   2879 ;	../UI_Manager/ui.c:712: case BUTTON_DOWN:
      000EDC 80 35            [24] 2880 	sjmp	00109$
      000EDE                       2881 00106$:
                                   2882 ;	../UI_Manager/ui.c:713: set_runtime_data(index, DEC, NULL);
      000EDE C0 06            [24] 2883 	push	ar6
      000EE0 C0 05            [24] 2884 	push	ar5
      000EE2 E4               [12] 2885 	clr	a
      000EE3 C0 E0            [24] 2886 	push	acc
      000EE5 74 02            [12] 2887 	mov	a,#0x02
      000EE7 C0 E0            [24] 2888 	push	acc
      000EE9 8D 82            [24] 2889 	mov	dpl,r5
      000EEB 12r00r00         [24] 2890 	lcall	_set_runtime_data
      000EEE 15 81            [12] 2891 	dec	sp
      000EF0 15 81            [12] 2892 	dec	sp
      000EF2 D0 05            [24] 2893 	pop	ar5
      000EF4 D0 06            [24] 2894 	pop	ar6
                                   2895 ;	../UI_Manager/ui.c:714: changed = 0xFF;  
      000EF6 75*02 FF         [24] 2896 	mov	_changed,#0xff
                                   2897 ;	../UI_Manager/ui.c:715: break;
                                   2898 ;	../UI_Manager/ui.c:716: case BUTTON_FUNCTION:
      000EF9 80 18            [24] 2899 	sjmp	00109$
      000EFB                       2900 00107$:
                                   2901 ;	../UI_Manager/ui.c:717: set_ui_state(INC, NULL);
      000EFB E4               [12] 2902 	clr	a
      000EFC C0 E0            [24] 2903 	push	acc
      000EFE 75 82 01         [24] 2904 	mov	dpl,#0x01
      000F01 12r12r76         [24] 2905 	lcall	_set_ui_state
      000F04 15 81            [12] 2906 	dec	sp
                                   2907 ;	../UI_Manager/ui.c:718: return;
      000F06 22               [24] 2908 	ret
                                   2909 ;	../UI_Manager/ui.c:719: case BUTTON_TIMER:
      000F07                       2910 00108$:
                                   2911 ;	../UI_Manager/ui.c:720: set_ui_state(DEC, NULL);
      000F07 E4               [12] 2912 	clr	a
      000F08 C0 E0            [24] 2913 	push	acc
      000F0A 75 82 02         [24] 2914 	mov	dpl,#0x02
      000F0D 12r12r76         [24] 2915 	lcall	_set_ui_state
      000F10 15 81            [12] 2916 	dec	sp
                                   2917 ;	../UI_Manager/ui.c:721: return;
      000F12 22               [24] 2918 	ret
                                   2919 ;	../UI_Manager/ui.c:722: }
      000F13                       2920 00109$:
                                   2921 ;	../UI_Manager/ui.c:724: if(Changed){
      000F13 E5*01            [12] 2922 	mov	a,_Changed
      000F15 70 03            [24] 2923 	jnz	00175$
      000F17 02r0Fr9A         [24] 2924 	ljmp	00115$
      000F1A                       2925 00175$:
                                   2926 ;	../UI_Manager/ui.c:725: Changed = 0x00;
      000F1A 75*01 00         [24] 2927 	mov	_Changed,#0x00
                                   2928 ;	../UI_Manager/ui.c:726: changed = 0xFF;
      000F1D 75*02 FF         [24] 2929 	mov	_changed,#0xff
                                   2930 ;	../UI_Manager/ui.c:728: exe_command(CLEAR_DISPLAY);
      000F20 90 80 00         [24] 2931 	mov	dptr,#0x8000
      000F23 C0 06            [24] 2932 	push	ar6
      000F25 C0 05            [24] 2933 	push	ar5
      000F27 12r00r00         [24] 2934 	lcall	_exe_command
                                   2935 ;	../UI_Manager/ui.c:730: write_string("Remote X Action", sizeof("Remote X Action"), 1, LINE_0, NOT_SELECTED);
      000F2A E4               [12] 2936 	clr	a
      000F2B C0 E0            [24] 2937 	push	acc
      000F2D C0 E0            [24] 2938 	push	acc
      000F2F 04               [12] 2939 	inc	a
      000F30 C0 E0            [24] 2940 	push	acc
      000F32 C4               [12] 2941 	swap	a
      000F33 C0 E0            [24] 2942 	push	acc
      000F35 90r01r0D         [24] 2943 	mov	dptr,#___str_25
      000F38 75 F0 80         [24] 2944 	mov	b,#0x80
      000F3B 12r00r00         [24] 2945 	lcall	_write_string
      000F3E E5 81            [12] 2946 	mov	a,sp
      000F40 24 FC            [12] 2947 	add	a,#0xfc
      000F42 F5 81            [12] 2948 	mov	sp,a
      000F44 D0 05            [24] 2949 	pop	ar5
      000F46 D0 06            [24] 2950 	pop	ar6
                                   2951 ;	../UI_Manager/ui.c:731: switch (remoteNumber)
      000F48 BE 04 02         [24] 2952 	cjne	r6,#0x04,00176$
      000F4B 80 0A            [24] 2953 	sjmp	00110$
      000F4D                       2954 00176$:
      000F4D BE 05 02         [24] 2955 	cjne	r6,#0x05,00177$
      000F50 80 1C            [24] 2956 	sjmp	00111$
      000F52                       2957 00177$:
                                   2958 ;	../UI_Manager/ui.c:733: case 4:
      000F52 BE 06 45         [24] 2959 	cjne	r6,#0x06,00115$
      000F55 80 2E            [24] 2960 	sjmp	00112$
      000F57                       2961 00110$:
                                   2962 ;	../UI_Manager/ui.c:734: write_char(CHAR_4, 8, LINE_0);
      000F57 C0 05            [24] 2963 	push	ar5
      000F59 E4               [12] 2964 	clr	a
      000F5A C0 E0            [24] 2965 	push	acc
      000F5C 74 08            [12] 2966 	mov	a,#0x08
      000F5E C0 E0            [24] 2967 	push	acc
      000F60 75 82 2C         [24] 2968 	mov	dpl,#0x2c
      000F63 12r00r00         [24] 2969 	lcall	_write_char
      000F66 15 81            [12] 2970 	dec	sp
      000F68 15 81            [12] 2971 	dec	sp
      000F6A D0 05            [24] 2972 	pop	ar5
                                   2973 ;	../UI_Manager/ui.c:735: break;
                                   2974 ;	../UI_Manager/ui.c:736: case 5:
      000F6C 80 2C            [24] 2975 	sjmp	00115$
      000F6E                       2976 00111$:
                                   2977 ;	../UI_Manager/ui.c:737: write_char(CHAR_5, 8, LINE_0);
      000F6E C0 05            [24] 2978 	push	ar5
      000F70 E4               [12] 2979 	clr	a
      000F71 C0 E0            [24] 2980 	push	acc
      000F73 74 08            [12] 2981 	mov	a,#0x08
      000F75 C0 E0            [24] 2982 	push	acc
      000F77 75 82 AC         [24] 2983 	mov	dpl,#0xac
      000F7A 12r00r00         [24] 2984 	lcall	_write_char
      000F7D 15 81            [12] 2985 	dec	sp
      000F7F 15 81            [12] 2986 	dec	sp
      000F81 D0 05            [24] 2987 	pop	ar5
                                   2988 ;	../UI_Manager/ui.c:738: break;
                                   2989 ;	../UI_Manager/ui.c:739: case 6:
      000F83 80 15            [24] 2990 	sjmp	00115$
      000F85                       2991 00112$:
                                   2992 ;	../UI_Manager/ui.c:740: write_char(CHAR_6, 8, LINE_0);
      000F85 C0 05            [24] 2993 	push	ar5
      000F87 E4               [12] 2994 	clr	a
      000F88 C0 E0            [24] 2995 	push	acc
      000F8A 74 08            [12] 2996 	mov	a,#0x08
      000F8C C0 E0            [24] 2997 	push	acc
      000F8E 75 82 6C         [24] 2998 	mov	dpl,#0x6c
      000F91 12r00r00         [24] 2999 	lcall	_write_char
      000F94 15 81            [12] 3000 	dec	sp
      000F96 15 81            [12] 3001 	dec	sp
      000F98 D0 05            [24] 3002 	pop	ar5
                                   3003 ;	../UI_Manager/ui.c:742: }
      000F9A                       3004 00115$:
                                   3005 ;	../UI_Manager/ui.c:745: if(changed){
      000F9A E5*02            [12] 3006 	mov	a,_changed
      000F9C 60 34            [24] 3007 	jz	00118$
                                   3008 ;	../UI_Manager/ui.c:746: changed = 0x00;
      000F9E 75*02 00         [24] 3009 	mov	_changed,#0x00
                                   3010 ;	../UI_Manager/ui.c:747: write_string(getString(get_runtime_data(index) + WIRELESS_ACTION_STRING_OFFSET), LINE_LENGTH, 2, LINE_1, NOT_SELECTED);  
      000FA1 8D 82            [24] 3011 	mov	dpl,r5
      000FA3 12r00r00         [24] 3012 	lcall	_get_runtime_data
      000FA6 AF 82            [24] 3013 	mov	r7,dpl
      000FA8 74 3C            [12] 3014 	mov	a,#0x3c
      000FAA 2F               [12] 3015 	add	a,r7
      000FAB F5 82            [12] 3016 	mov	dpl,a
      000FAD 12r13r83         [24] 3017 	lcall	_getString
      000FB0 AD 82            [24] 3018 	mov	r5,dpl
      000FB2 AE 83            [24] 3019 	mov	r6,dph
      000FB4 AF F0            [24] 3020 	mov	r7,b
      000FB6 E4               [12] 3021 	clr	a
      000FB7 C0 E0            [24] 3022 	push	acc
      000FB9 04               [12] 3023 	inc	a
      000FBA C0 E0            [24] 3024 	push	acc
      000FBC 04               [12] 3025 	inc	a
      000FBD C0 E0            [24] 3026 	push	acc
      000FBF 74 10            [12] 3027 	mov	a,#0x10
      000FC1 C0 E0            [24] 3028 	push	acc
      000FC3 8D 82            [24] 3029 	mov	dpl,r5
      000FC5 8E 83            [24] 3030 	mov	dph,r6
      000FC7 8F F0            [24] 3031 	mov	b,r7
      000FC9 12r00r00         [24] 3032 	lcall	_write_string
      000FCC E5 81            [12] 3033 	mov	a,sp
      000FCE 24 FC            [12] 3034 	add	a,#0xfc
      000FD0 F5 81            [12] 3035 	mov	sp,a
      000FD2                       3036 00118$:
                                   3037 ;	../UI_Manager/ui.c:749: }
      000FD2 22               [24] 3038 	ret
                                   3039 ;------------------------------------------------------------
                                   3040 ;Allocation info for local variables in function 'saveLoadPage'
                                   3041 ;------------------------------------------------------------
                                   3042 ;action                    Allocated to registers r7 
                                   3043 ;slot                      Allocated with name '_saveLoadPage_slot_65536_144'
                                   3044 ;------------------------------------------------------------
                                   3045 ;	../UI_Manager/ui.c:751: void saveLoadPage(uint8_t action){
                                   3046 ;	-----------------------------------------
                                   3047 ;	 function saveLoadPage
                                   3048 ;	-----------------------------------------
      000FD3                       3049 _saveLoadPage:
      000FD3 AF 82            [24] 3050 	mov	r7,dpl
                                   3051 ;	../UI_Manager/ui.c:754: switch (action)
      000FD5 BF 01 03         [24] 3052 	cjne	r7,#0x01,00161$
      000FD8 02r10r8D         [24] 3053 	ljmp	00108$
      000FDB                       3054 00161$:
      000FDB BF 02 03         [24] 3055 	cjne	r7,#0x02,00162$
      000FDE 02r10r81         [24] 3056 	ljmp	00107$
      000FE1                       3057 00162$:
      000FE1 BF 03 03         [24] 3058 	cjne	r7,#0x03,00163$
      000FE4 02r10r73         [24] 3059 	ljmp	00105$
      000FE7                       3060 00163$:
      000FE7 BF 0B 03         [24] 3061 	cjne	r7,#0x0b,00164$
      000FEA 02r10r7A         [24] 3062 	ljmp	00106$
      000FED                       3063 00164$:
      000FED BF 1E 02         [24] 3064 	cjne	r7,#0x1e,00165$
      000FF0 80 03            [24] 3065 	sjmp	00166$
      000FF2                       3066 00165$:
      000FF2 02r10r99         [24] 3067 	ljmp	00109$
      000FF5                       3068 00166$:
                                   3069 ;	../UI_Manager/ui.c:757: save_load_settings(slot % (SLOT_COUNT - 1), (State == MANUAL_SAVE_SETTINGS_STATE) ? SAVE : LOAD);
      000FF5 74 0D            [12] 3070 	mov	a,#0x0d
      000FF7 B5*00 06         [24] 3071 	cjne	a,_State,00119$
      000FFA 7E 01            [12] 3072 	mov	r6,#0x01
      000FFC 7F 00            [12] 3073 	mov	r7,#0x00
      000FFE 80 04            [24] 3074 	sjmp	00120$
      001000                       3075 00119$:
      001000 7E 00            [12] 3076 	mov	r6,#0x00
      001002 7F 00            [12] 3077 	mov	r7,#0x00
      001004                       3078 00120$:
      001004 75 F0 03         [24] 3079 	mov	b,#0x03
      001007 E5*0A            [12] 3080 	mov	a,_saveLoadPage_slot_65536_144
      001009 84               [48] 3081 	div	ab
      00100A 85 F0 82         [24] 3082 	mov	dpl,b
      00100D C0 06            [24] 3083 	push	ar6
      00100F 12r00r00         [24] 3084 	lcall	_save_load_settings
      001012 15 81            [12] 3085 	dec	sp
                                   3086 ;	../UI_Manager/ui.c:758: write_string("", LINE_LENGTH, 0, LINE_1, NOT_SELECTED); 
      001014 E4               [12] 3087 	clr	a
      001015 C0 E0            [24] 3088 	push	acc
      001017 04               [12] 3089 	inc	a
      001018 C0 E0            [24] 3090 	push	acc
      00101A E4               [12] 3091 	clr	a
      00101B C0 E0            [24] 3092 	push	acc
      00101D 74 10            [12] 3093 	mov	a,#0x10
      00101F C0 E0            [24] 3094 	push	acc
      001021 90r01r0C         [24] 3095 	mov	dptr,#___str_24
      001024 75 F0 80         [24] 3096 	mov	b,#0x80
      001027 12r00r00         [24] 3097 	lcall	_write_string
      00102A E5 81            [12] 3098 	mov	a,sp
      00102C 24 FC            [12] 3099 	add	a,#0xfc
      00102E F5 81            [12] 3100 	mov	sp,a
                                   3101 ;	../UI_Manager/ui.c:760: if(State == MANUAL_SAVE_SETTINGS_STATE){
      001030 74 0D            [12] 3102 	mov	a,#0x0d
      001032 B5*00 1F         [24] 3103 	cjne	a,_State,00103$
                                   3104 ;	../UI_Manager/ui.c:761: write_string("Saved!", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      001035 E4               [12] 3105 	clr	a
      001036 C0 E0            [24] 3106 	push	acc
      001038 04               [12] 3107 	inc	a
      001039 C0 E0            [24] 3108 	push	acc
      00103B 74 06            [12] 3109 	mov	a,#0x06
      00103D C0 E0            [24] 3110 	push	acc
      00103F 74 10            [12] 3111 	mov	a,#0x10
      001041 C0 E0            [24] 3112 	push	acc
      001043 90r01r1D         [24] 3113 	mov	dptr,#___str_26
      001046 75 F0 80         [24] 3114 	mov	b,#0x80
      001049 12r00r00         [24] 3115 	lcall	_write_string
      00104C E5 81            [12] 3116 	mov	a,sp
      00104E 24 FC            [12] 3117 	add	a,#0xfc
      001050 F5 81            [12] 3118 	mov	sp,a
      001052 80 45            [24] 3119 	sjmp	00109$
      001054                       3120 00103$:
                                   3121 ;	../UI_Manager/ui.c:763: write_string("Loaded!", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      001054 E4               [12] 3122 	clr	a
      001055 C0 E0            [24] 3123 	push	acc
      001057 04               [12] 3124 	inc	a
      001058 C0 E0            [24] 3125 	push	acc
      00105A 74 06            [12] 3126 	mov	a,#0x06
      00105C C0 E0            [24] 3127 	push	acc
      00105E 74 10            [12] 3128 	mov	a,#0x10
      001060 C0 E0            [24] 3129 	push	acc
      001062 90r01r24         [24] 3130 	mov	dptr,#___str_27
      001065 75 F0 80         [24] 3131 	mov	b,#0x80
      001068 12r00r00         [24] 3132 	lcall	_write_string
      00106B E5 81            [12] 3133 	mov	a,sp
      00106D 24 FC            [12] 3134 	add	a,#0xfc
      00106F F5 81            [12] 3135 	mov	sp,a
                                   3136 ;	../UI_Manager/ui.c:765: break;
                                   3137 ;	../UI_Manager/ui.c:766: case BUTTON_UP:
      001071 80 26            [24] 3138 	sjmp	00109$
      001073                       3139 00105$:
                                   3140 ;	../UI_Manager/ui.c:767: slot++;
      001073 05*0A            [12] 3141 	inc	_saveLoadPage_slot_65536_144
                                   3142 ;	../UI_Manager/ui.c:768: changed = 0xFF;
      001075 75*02 FF         [24] 3143 	mov	_changed,#0xff
                                   3144 ;	../UI_Manager/ui.c:769: break;
                                   3145 ;	../UI_Manager/ui.c:770: case BUTTON_DOWN:
      001078 80 1F            [24] 3146 	sjmp	00109$
      00107A                       3147 00106$:
                                   3148 ;	../UI_Manager/ui.c:771: slot--;
      00107A 15*0A            [12] 3149 	dec	_saveLoadPage_slot_65536_144
                                   3150 ;	../UI_Manager/ui.c:772: changed = 0xFF;  
      00107C 75*02 FF         [24] 3151 	mov	_changed,#0xff
                                   3152 ;	../UI_Manager/ui.c:773: break;
                                   3153 ;	../UI_Manager/ui.c:774: case BUTTON_FUNCTION:
      00107F 80 18            [24] 3154 	sjmp	00109$
      001081                       3155 00107$:
                                   3156 ;	../UI_Manager/ui.c:775: set_ui_state(INC, NULL);
      001081 E4               [12] 3157 	clr	a
      001082 C0 E0            [24] 3158 	push	acc
      001084 75 82 01         [24] 3159 	mov	dpl,#0x01
      001087 12r12r76         [24] 3160 	lcall	_set_ui_state
      00108A 15 81            [12] 3161 	dec	sp
                                   3162 ;	../UI_Manager/ui.c:776: return;
      00108C 22               [24] 3163 	ret
                                   3164 ;	../UI_Manager/ui.c:777: case BUTTON_TIMER:
      00108D                       3165 00108$:
                                   3166 ;	../UI_Manager/ui.c:778: set_ui_state(DEC, NULL);
      00108D E4               [12] 3167 	clr	a
      00108E C0 E0            [24] 3168 	push	acc
      001090 75 82 02         [24] 3169 	mov	dpl,#0x02
      001093 12r12r76         [24] 3170 	lcall	_set_ui_state
      001096 15 81            [12] 3171 	dec	sp
                                   3172 ;	../UI_Manager/ui.c:779: return;
      001098 22               [24] 3173 	ret
                                   3174 ;	../UI_Manager/ui.c:780: }
      001099                       3175 00109$:
                                   3176 ;	../UI_Manager/ui.c:782: if(Changed){
      001099 E5*01            [12] 3177 	mov	a,_Changed
      00109B 60 4B            [24] 3178 	jz	00114$
                                   3179 ;	../UI_Manager/ui.c:783: Changed = 0x00;
      00109D 75*01 00         [24] 3180 	mov	_Changed,#0x00
                                   3181 ;	../UI_Manager/ui.c:784: changed = 0xFF;
      0010A0 75*02 FF         [24] 3182 	mov	_changed,#0xff
                                   3183 ;	../UI_Manager/ui.c:786: exe_command(CLEAR_DISPLAY);
      0010A3 90 80 00         [24] 3184 	mov	dptr,#0x8000
      0010A6 12r00r00         [24] 3185 	lcall	_exe_command
                                   3186 ;	../UI_Manager/ui.c:788: if(State == MANUAL_SAVE_SETTINGS_STATE){
      0010A9 74 0D            [12] 3187 	mov	a,#0x0d
      0010AB B5*00 1E         [24] 3188 	cjne	a,_State,00111$
                                   3189 ;	../UI_Manager/ui.c:789: write_string("Save Settings", sizeof("Save Settings"), 2, LINE_0, NOT_SELECTED);
      0010AE E4               [12] 3190 	clr	a
      0010AF C0 E0            [24] 3191 	push	acc
      0010B1 C0 E0            [24] 3192 	push	acc
      0010B3 74 02            [12] 3193 	mov	a,#0x02
      0010B5 C0 E0            [24] 3194 	push	acc
      0010B7 74 0E            [12] 3195 	mov	a,#0x0e
      0010B9 C0 E0            [24] 3196 	push	acc
      0010BB 90r01r2C         [24] 3197 	mov	dptr,#___str_28
      0010BE 75 F0 80         [24] 3198 	mov	b,#0x80
      0010C1 12r00r00         [24] 3199 	lcall	_write_string
      0010C4 E5 81            [12] 3200 	mov	a,sp
      0010C6 24 FC            [12] 3201 	add	a,#0xfc
      0010C8 F5 81            [12] 3202 	mov	sp,a
      0010CA 80 1C            [24] 3203 	sjmp	00114$
      0010CC                       3204 00111$:
                                   3205 ;	../UI_Manager/ui.c:791: write_string("Load Settings", sizeof("Load Settings"), 2, LINE_0, NOT_SELECTED);
      0010CC E4               [12] 3206 	clr	a
      0010CD C0 E0            [24] 3207 	push	acc
      0010CF C0 E0            [24] 3208 	push	acc
      0010D1 74 02            [12] 3209 	mov	a,#0x02
      0010D3 C0 E0            [24] 3210 	push	acc
      0010D5 74 0E            [12] 3211 	mov	a,#0x0e
      0010D7 C0 E0            [24] 3212 	push	acc
      0010D9 90r01r3A         [24] 3213 	mov	dptr,#___str_29
      0010DC 75 F0 80         [24] 3214 	mov	b,#0x80
      0010DF 12r00r00         [24] 3215 	lcall	_write_string
      0010E2 E5 81            [12] 3216 	mov	a,sp
      0010E4 24 FC            [12] 3217 	add	a,#0xfc
      0010E6 F5 81            [12] 3218 	mov	sp,a
      0010E8                       3219 00114$:
                                   3220 ;	../UI_Manager/ui.c:796: if(changed){
      0010E8 E5*02            [12] 3221 	mov	a,_changed
      0010EA 60 36            [24] 3222 	jz	00117$
                                   3223 ;	../UI_Manager/ui.c:797: changed = 0x00;
      0010EC 75*02 00         [24] 3224 	mov	_changed,#0x00
                                   3225 ;	../UI_Manager/ui.c:798: write_string(getString((slot % (SLOT_COUNT - 1)) + SAVE_LOAD_STRING_OFFSET), LINE_LENGTH, 4, LINE_1, NOT_SELECTED);  
      0010EF 75 F0 03         [24] 3226 	mov	b,#0x03
      0010F2 E5*0A            [12] 3227 	mov	a,_saveLoadPage_slot_65536_144
      0010F4 84               [48] 3228 	div	ab
      0010F5 AF F0            [24] 3229 	mov	r7,b
      0010F7 74 50            [12] 3230 	mov	a,#0x50
      0010F9 2F               [12] 3231 	add	a,r7
      0010FA F5 82            [12] 3232 	mov	dpl,a
      0010FC 12r13r83         [24] 3233 	lcall	_getString
      0010FF AD 82            [24] 3234 	mov	r5,dpl
      001101 AE 83            [24] 3235 	mov	r6,dph
      001103 AF F0            [24] 3236 	mov	r7,b
      001105 E4               [12] 3237 	clr	a
      001106 C0 E0            [24] 3238 	push	acc
      001108 04               [12] 3239 	inc	a
      001109 C0 E0            [24] 3240 	push	acc
      00110B 74 04            [12] 3241 	mov	a,#0x04
      00110D C0 E0            [24] 3242 	push	acc
      00110F 74 10            [12] 3243 	mov	a,#0x10
      001111 C0 E0            [24] 3244 	push	acc
      001113 8D 82            [24] 3245 	mov	dpl,r5
      001115 8E 83            [24] 3246 	mov	dph,r6
      001117 8F F0            [24] 3247 	mov	b,r7
      001119 12r00r00         [24] 3248 	lcall	_write_string
      00111C E5 81            [12] 3249 	mov	a,sp
      00111E 24 FC            [12] 3250 	add	a,#0xfc
      001120 F5 81            [12] 3251 	mov	sp,a
      001122                       3252 00117$:
                                   3253 ;	../UI_Manager/ui.c:801: }
      001122 22               [24] 3254 	ret
                                   3255 ;------------------------------------------------------------
                                   3256 ;Allocation info for local variables in function 'dmxAddressPage'
                                   3257 ;------------------------------------------------------------
                                   3258 ;action                    Allocated to registers r7 
                                   3259 ;------------------------------------------------------------
                                   3260 ;	../UI_Manager/ui.c:803: void dmxAddressPage(uint8_t action){
                                   3261 ;	-----------------------------------------
                                   3262 ;	 function dmxAddressPage
                                   3263 ;	-----------------------------------------
      001123                       3264 _dmxAddressPage:
      001123 AF 82            [24] 3265 	mov	r7,dpl
                                   3266 ;	../UI_Manager/ui.c:805: switch (action)
      001125 BF 01 02         [24] 3267 	cjne	r7,#0x01,00146$
      001128 80 3B            [24] 3268 	sjmp	00106$
      00112A                       3269 00146$:
      00112A BF 02 02         [24] 3270 	cjne	r7,#0x02,00147$
      00112D 80 2A            [24] 3271 	sjmp	00105$
      00112F                       3272 00147$:
      00112F BF 03 02         [24] 3273 	cjne	r7,#0x03,00148$
      001132 80 0F            [24] 3274 	sjmp	00102$
      001134                       3275 00148$:
      001134 BF 0B 02         [24] 3276 	cjne	r7,#0x0b,00149$
      001137 80 15            [24] 3277 	sjmp	00104$
      001139                       3278 00149$:
      001139 BF 1F 02         [24] 3279 	cjne	r7,#0x1f,00150$
      00113C 80 05            [24] 3280 	sjmp	00102$
      00113E                       3281 00150$:
                                   3282 ;	../UI_Manager/ui.c:808: case BUTTON_UP:
      00113E BF 6F 30         [24] 3283 	cjne	r7,#0x6f,00107$
      001141 80 0B            [24] 3284 	sjmp	00104$
      001143                       3285 00102$:
                                   3286 ;	../UI_Manager/ui.c:809: set_dmx_address(INC);
      001143 75 82 01         [24] 3287 	mov	dpl,#0x01
      001146 12r00r00         [24] 3288 	lcall	_set_dmx_address
                                   3289 ;	../UI_Manager/ui.c:810: changed = 0xFF;
      001149 75*02 FF         [24] 3290 	mov	_changed,#0xff
                                   3291 ;	../UI_Manager/ui.c:811: break;
                                   3292 ;	../UI_Manager/ui.c:813: case BUTTON_DOWN:
      00114C 80 23            [24] 3293 	sjmp	00107$
      00114E                       3294 00104$:
                                   3295 ;	../UI_Manager/ui.c:814: set_dmx_address(DEC);
      00114E 75 82 02         [24] 3296 	mov	dpl,#0x02
      001151 12r00r00         [24] 3297 	lcall	_set_dmx_address
                                   3298 ;	../UI_Manager/ui.c:815: changed = 0xFF;  
      001154 75*02 FF         [24] 3299 	mov	_changed,#0xff
                                   3300 ;	../UI_Manager/ui.c:816: break;
                                   3301 ;	../UI_Manager/ui.c:817: case BUTTON_FUNCTION:
      001157 80 18            [24] 3302 	sjmp	00107$
      001159                       3303 00105$:
                                   3304 ;	../UI_Manager/ui.c:818: set_ui_state(INC, NULL);
      001159 E4               [12] 3305 	clr	a
      00115A C0 E0            [24] 3306 	push	acc
      00115C 75 82 01         [24] 3307 	mov	dpl,#0x01
      00115F 12r12r76         [24] 3308 	lcall	_set_ui_state
      001162 15 81            [12] 3309 	dec	sp
                                   3310 ;	../UI_Manager/ui.c:819: return;
                                   3311 ;	../UI_Manager/ui.c:820: case BUTTON_TIMER:
      001164 22               [24] 3312 	ret
      001165                       3313 00106$:
                                   3314 ;	../UI_Manager/ui.c:821: set_ui_state(DEC, NULL);
      001165 E4               [12] 3315 	clr	a
      001166 C0 E0            [24] 3316 	push	acc
      001168 75 82 02         [24] 3317 	mov	dpl,#0x02
      00116B 12r12r76         [24] 3318 	lcall	_set_ui_state
      00116E 15 81            [12] 3319 	dec	sp
                                   3320 ;	../UI_Manager/ui.c:822: return;
                                   3321 ;	../UI_Manager/ui.c:823: }
      001170 22               [24] 3322 	ret
      001171                       3323 00107$:
                                   3324 ;	../UI_Manager/ui.c:825: if(Changed){
      001171 E5*01            [12] 3325 	mov	a,_Changed
      001173 60 28            [24] 3326 	jz	00109$
                                   3327 ;	../UI_Manager/ui.c:826: Changed = 0x00;
      001175 75*01 00         [24] 3328 	mov	_Changed,#0x00
                                   3329 ;	../UI_Manager/ui.c:827: changed = 0xFF;
      001178 75*02 FF         [24] 3330 	mov	_changed,#0xff
                                   3331 ;	../UI_Manager/ui.c:829: exe_command(CLEAR_DISPLAY);
      00117B 90 80 00         [24] 3332 	mov	dptr,#0x8000
      00117E 12r00r00         [24] 3333 	lcall	_exe_command
                                   3334 ;	../UI_Manager/ui.c:831: write_string("DMX Address", sizeof("DMX Address"), 2, LINE_0, NOT_SELECTED);
      001181 E4               [12] 3335 	clr	a
      001182 C0 E0            [24] 3336 	push	acc
      001184 C0 E0            [24] 3337 	push	acc
      001186 74 02            [12] 3338 	mov	a,#0x02
      001188 C0 E0            [24] 3339 	push	acc
      00118A 74 0C            [12] 3340 	mov	a,#0x0c
      00118C C0 E0            [24] 3341 	push	acc
      00118E 90r01r48         [24] 3342 	mov	dptr,#___str_30
      001191 75 F0 80         [24] 3343 	mov	b,#0x80
      001194 12r00r00         [24] 3344 	lcall	_write_string
      001197 E5 81            [12] 3345 	mov	a,sp
      001199 24 FC            [12] 3346 	add	a,#0xfc
      00119B F5 81            [12] 3347 	mov	sp,a
      00119D                       3348 00109$:
                                   3349 ;	../UI_Manager/ui.c:834: if(changed){
      00119D E5*02            [12] 3350 	mov	a,_changed
      00119F 60 19            [24] 3351 	jz	00112$
                                   3352 ;	../UI_Manager/ui.c:835: changed = 0x00;
      0011A1 75*02 00         [24] 3353 	mov	_changed,#0x00
                                   3354 ;	../UI_Manager/ui.c:837: write_number(get_dmx_address(), 4, LINE_1, NOT_SELECTED);
      0011A4 12r00r00         [24] 3355 	lcall	_get_dmx_address
      0011A7 E4               [12] 3356 	clr	a
      0011A8 C0 E0            [24] 3357 	push	acc
      0011AA 04               [12] 3358 	inc	a
      0011AB C0 E0            [24] 3359 	push	acc
      0011AD 74 04            [12] 3360 	mov	a,#0x04
      0011AF C0 E0            [24] 3361 	push	acc
      0011B1 12r00r00         [24] 3362 	lcall	_write_number
      0011B4 15 81            [12] 3363 	dec	sp
      0011B6 15 81            [12] 3364 	dec	sp
      0011B8 15 81            [12] 3365 	dec	sp
      0011BA                       3366 00112$:
                                   3367 ;	../UI_Manager/ui.c:840: }
      0011BA 22               [24] 3368 	ret
                                   3369 ;------------------------------------------------------------
                                   3370 ;Allocation info for local variables in function 'dmxChannelPage'
                                   3371 ;------------------------------------------------------------
                                   3372 ;action                    Allocated to registers r7 
                                   3373 ;------------------------------------------------------------
                                   3374 ;	../UI_Manager/ui.c:842: void dmxChannelPage(uint8_t action){
                                   3375 ;	-----------------------------------------
                                   3376 ;	 function dmxChannelPage
                                   3377 ;	-----------------------------------------
      0011BB                       3378 _dmxChannelPage:
      0011BB AF 82            [24] 3379 	mov	r7,dpl
                                   3380 ;	../UI_Manager/ui.c:844: switch (action)
      0011BD BF 01 02         [24] 3381 	cjne	r7,#0x01,00136$
      0011C0 80 46            [24] 3382 	sjmp	00104$
      0011C2                       3383 00136$:
      0011C2 BF 02 02         [24] 3384 	cjne	r7,#0x02,00137$
      0011C5 80 35            [24] 3385 	sjmp	00103$
      0011C7                       3386 00137$:
      0011C7 BF 03 02         [24] 3387 	cjne	r7,#0x03,00138$
      0011CA 80 05            [24] 3388 	sjmp	00101$
      0011CC                       3389 00138$:
                                   3390 ;	../UI_Manager/ui.c:846: case BUTTON_UP:
      0011CC BF 0B 45         [24] 3391 	cjne	r7,#0x0b,00105$
      0011CF 80 15            [24] 3392 	sjmp	00102$
      0011D1                       3393 00101$:
                                   3394 ;	../UI_Manager/ui.c:847: set_runtime_data(MODE_INDEX, INC, NULL);
      0011D1 E4               [12] 3395 	clr	a
      0011D2 C0 E0            [24] 3396 	push	acc
      0011D4 04               [12] 3397 	inc	a
      0011D5 C0 E0            [24] 3398 	push	acc
      0011D7 75 82 0E         [24] 3399 	mov	dpl,#0x0e
      0011DA 12r00r00         [24] 3400 	lcall	_set_runtime_data
      0011DD 15 81            [12] 3401 	dec	sp
      0011DF 15 81            [12] 3402 	dec	sp
                                   3403 ;	../UI_Manager/ui.c:848: changed = 0xFF;
      0011E1 75*02 FF         [24] 3404 	mov	_changed,#0xff
                                   3405 ;	../UI_Manager/ui.c:849: break;
                                   3406 ;	../UI_Manager/ui.c:850: case BUTTON_DOWN:
      0011E4 80 2E            [24] 3407 	sjmp	00105$
      0011E6                       3408 00102$:
                                   3409 ;	../UI_Manager/ui.c:851: set_runtime_data(MODE_INDEX, DEC, NULL);
      0011E6 E4               [12] 3410 	clr	a
      0011E7 C0 E0            [24] 3411 	push	acc
      0011E9 74 02            [12] 3412 	mov	a,#0x02
      0011EB C0 E0            [24] 3413 	push	acc
      0011ED 75 82 0E         [24] 3414 	mov	dpl,#0x0e
      0011F0 12r00r00         [24] 3415 	lcall	_set_runtime_data
      0011F3 15 81            [12] 3416 	dec	sp
      0011F5 15 81            [12] 3417 	dec	sp
                                   3418 ;	../UI_Manager/ui.c:852: changed = 0xFF;  
      0011F7 75*02 FF         [24] 3419 	mov	_changed,#0xff
                                   3420 ;	../UI_Manager/ui.c:853: break;
                                   3421 ;	../UI_Manager/ui.c:854: case BUTTON_FUNCTION:
      0011FA 80 18            [24] 3422 	sjmp	00105$
      0011FC                       3423 00103$:
                                   3424 ;	../UI_Manager/ui.c:855: set_ui_state(INC, NULL);
      0011FC E4               [12] 3425 	clr	a
      0011FD C0 E0            [24] 3426 	push	acc
      0011FF 75 82 01         [24] 3427 	mov	dpl,#0x01
      001202 12r12r76         [24] 3428 	lcall	_set_ui_state
      001205 15 81            [12] 3429 	dec	sp
                                   3430 ;	../UI_Manager/ui.c:856: return;
                                   3431 ;	../UI_Manager/ui.c:857: case BUTTON_TIMER:
      001207 22               [24] 3432 	ret
      001208                       3433 00104$:
                                   3434 ;	../UI_Manager/ui.c:858: set_ui_state(DEC, NULL);
      001208 E4               [12] 3435 	clr	a
      001209 C0 E0            [24] 3436 	push	acc
      00120B 75 82 02         [24] 3437 	mov	dpl,#0x02
      00120E 12r12r76         [24] 3438 	lcall	_set_ui_state
      001211 15 81            [12] 3439 	dec	sp
                                   3440 ;	../UI_Manager/ui.c:859: return;
                                   3441 ;	../UI_Manager/ui.c:860: }
      001213 22               [24] 3442 	ret
      001214                       3443 00105$:
                                   3444 ;	../UI_Manager/ui.c:862: if(Changed){
      001214 E5*01            [12] 3445 	mov	a,_Changed
      001216 60 26            [24] 3446 	jz	00107$
                                   3447 ;	../UI_Manager/ui.c:863: Changed = 0x00;
      001218 75*01 00         [24] 3448 	mov	_Changed,#0x00
                                   3449 ;	../UI_Manager/ui.c:864: changed = 0xFF;
      00121B 75*02 FF         [24] 3450 	mov	_changed,#0xff
                                   3451 ;	../UI_Manager/ui.c:866: exe_command(CLEAR_DISPLAY);
      00121E 90 80 00         [24] 3452 	mov	dptr,#0x8000
      001221 12r00r00         [24] 3453 	lcall	_exe_command
                                   3454 ;	../UI_Manager/ui.c:868: write_string("DMX Channel Mode", sizeof("DMX Channel Mode"), 0, LINE_0, NOT_SELECTED);
      001224 E4               [12] 3455 	clr	a
      001225 C0 E0            [24] 3456 	push	acc
      001227 C0 E0            [24] 3457 	push	acc
      001229 C0 E0            [24] 3458 	push	acc
      00122B 74 11            [12] 3459 	mov	a,#0x11
      00122D C0 E0            [24] 3460 	push	acc
      00122F 90r01r54         [24] 3461 	mov	dptr,#___str_31
      001232 75 F0 80         [24] 3462 	mov	b,#0x80
      001235 12r00r00         [24] 3463 	lcall	_write_string
      001238 E5 81            [12] 3464 	mov	a,sp
      00123A 24 FC            [12] 3465 	add	a,#0xfc
      00123C F5 81            [12] 3466 	mov	sp,a
      00123E                       3467 00107$:
                                   3468 ;	../UI_Manager/ui.c:871: if(changed){
      00123E E5*02            [12] 3469 	mov	a,_changed
      001240 60 33            [24] 3470 	jz	00110$
                                   3471 ;	../UI_Manager/ui.c:872: changed = 0x00;
      001242 75*02 00         [24] 3472 	mov	_changed,#0x00
                                   3473 ;	../UI_Manager/ui.c:874: write_string(getString(get_runtime_data(MODE_INDEX) + DMX_STRING_OFFSET), LINE_LENGTH, 1, LINE_1, NOT_SELECTED);
      001245 75 82 0E         [24] 3474 	mov	dpl,#0x0e
      001248 12r00r00         [24] 3475 	lcall	_get_runtime_data
      00124B AF 82            [24] 3476 	mov	r7,dpl
      00124D 74 64            [12] 3477 	mov	a,#0x64
      00124F 2F               [12] 3478 	add	a,r7
      001250 F5 82            [12] 3479 	mov	dpl,a
      001252 12r13r83         [24] 3480 	lcall	_getString
      001255 AD 82            [24] 3481 	mov	r5,dpl
      001257 AE 83            [24] 3482 	mov	r6,dph
      001259 AF F0            [24] 3483 	mov	r7,b
      00125B E4               [12] 3484 	clr	a
      00125C C0 E0            [24] 3485 	push	acc
      00125E 04               [12] 3486 	inc	a
      00125F C0 E0            [24] 3487 	push	acc
      001261 C0 E0            [24] 3488 	push	acc
      001263 C4               [12] 3489 	swap	a
      001264 C0 E0            [24] 3490 	push	acc
      001266 8D 82            [24] 3491 	mov	dpl,r5
      001268 8E 83            [24] 3492 	mov	dph,r6
      00126A 8F F0            [24] 3493 	mov	b,r7
      00126C 12r00r00         [24] 3494 	lcall	_write_string
      00126F E5 81            [12] 3495 	mov	a,sp
      001271 24 FC            [12] 3496 	add	a,#0xfc
      001273 F5 81            [12] 3497 	mov	sp,a
      001275                       3498 00110$:
                                   3499 ;	../UI_Manager/ui.c:877: }
      001275 22               [24] 3500 	ret
                                   3501 ;------------------------------------------------------------
                                   3502 ;Allocation info for local variables in function 'set_ui_state'
                                   3503 ;------------------------------------------------------------
                                   3504 ;state                     Allocated to stack - _bp -3
                                   3505 ;inc                       Allocated to registers r7 
                                   3506 ;------------------------------------------------------------
                                   3507 ;	../UI_Manager/ui.c:879: void set_ui_state(uint8_t inc, uint8_t state){
                                   3508 ;	-----------------------------------------
                                   3509 ;	 function set_ui_state
                                   3510 ;	-----------------------------------------
      001276                       3511 _set_ui_state:
      001276 C0*00            [24] 3512 	push	_bp
      001278 85 81*00         [24] 3513 	mov	_bp,sp
      00127B AF 82            [24] 3514 	mov	r7,dpl
                                   3515 ;	../UI_Manager/ui.c:880: Changed = CHANGE_SCREEN_X;
      00127D 75*01 FF         [24] 3516 	mov	_Changed,#0xff
                                   3517 ;	../UI_Manager/ui.c:882: switch (inc)
      001280 BF 01 02         [24] 3518 	cjne	r7,#0x01,00187$
      001283 80 77            [24] 3519 	sjmp	00115$
      001285                       3520 00187$:
      001285 BF 02 02         [24] 3521 	cjne	r7,#0x02,00188$
      001288 80 03            [24] 3522 	sjmp	00189$
      00128A                       3523 00188$:
      00128A 02r13r50         [24] 3524 	ljmp	00127$
      00128D                       3525 00189$:
                                   3526 ;	../UI_Manager/ui.c:885: state = State;
      00128D E5*00            [12] 3527 	mov	a,_bp
      00128F 24 FD            [12] 3528 	add	a,#0xfd
      001291 F8               [12] 3529 	mov	r0,a
      001292 A6*00            [24] 3530 	mov	@r0,_State
                                   3531 ;	../UI_Manager/ui.c:886: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      001294 75 82 10         [24] 3532 	mov	dpl,#0x10
      001297 12r00r00         [24] 3533 	lcall	_get_runtime_data
      00129A E5 82            [12] 3534 	mov	a,dpl
      00129C 70 2F            [24] 3535 	jnz	00113$
                                   3536 ;	../UI_Manager/ui.c:887: if(state == IDLE_STATE){
      00129E E5*00            [12] 3537 	mov	a,_bp
      0012A0 24 FD            [12] 3538 	add	a,#0xfd
      0012A2 F8               [12] 3539 	mov	r0,a
      0012A3 E6               [12] 3540 	mov	a,@r0
      0012A4 70 0A            [24] 3541 	jnz	00105$
                                   3542 ;	../UI_Manager/ui.c:888: state = DMX_STATE_LOW;
      0012A6 E5*00            [12] 3543 	mov	a,_bp
      0012A8 24 FD            [12] 3544 	add	a,#0xfd
      0012AA F8               [12] 3545 	mov	r0,a
      0012AB 76 14            [12] 3546 	mov	@r0,#0x14
      0012AD 02r13r75         [24] 3547 	ljmp	00132$
      0012B0                       3548 00105$:
                                   3549 ;	../UI_Manager/ui.c:889: } else if(++state > DMX_STATE_HIGH){
      0012B0 E5*00            [12] 3550 	mov	a,_bp
      0012B2 24 FD            [12] 3551 	add	a,#0xfd
      0012B4 F8               [12] 3552 	mov	r0,a
      0012B5 06               [12] 3553 	inc	@r0
      0012B6 E5*00            [12] 3554 	mov	a,_bp
      0012B8 24 FD            [12] 3555 	add	a,#0xfd
      0012BA F8               [12] 3556 	mov	r0,a
      0012BB E6               [12] 3557 	mov	a,@r0
      0012BC 24 EA            [12] 3558 	add	a,#0xff - 0x15
      0012BE 40 03            [24] 3559 	jc	00192$
      0012C0 02r13r75         [24] 3560 	ljmp	00132$
      0012C3                       3561 00192$:
                                   3562 ;	../UI_Manager/ui.c:890: state = IDLE_STATE;
      0012C3 E5*00            [12] 3563 	mov	a,_bp
      0012C5 24 FD            [12] 3564 	add	a,#0xfd
      0012C7 F8               [12] 3565 	mov	r0,a
      0012C8 76 00            [12] 3566 	mov	@r0,#0x00
      0012CA 02r13r75         [24] 3567 	ljmp	00132$
      0012CD                       3568 00113$:
                                   3569 ;	../UI_Manager/ui.c:893: if(state == IDLE_STATE){
      0012CD E5*00            [12] 3570 	mov	a,_bp
      0012CF 24 FD            [12] 3571 	add	a,#0xfd
      0012D1 F8               [12] 3572 	mov	r0,a
      0012D2 E6               [12] 3573 	mov	a,@r0
      0012D3 70 0A            [24] 3574 	jnz	00110$
                                   3575 ;	../UI_Manager/ui.c:894: state = IDLE_STATE + 1; 
      0012D5 E5*00            [12] 3576 	mov	a,_bp
      0012D7 24 FD            [12] 3577 	add	a,#0xfd
      0012D9 F8               [12] 3578 	mov	r0,a
      0012DA 76 01            [12] 3579 	mov	@r0,#0x01
      0012DC 02r13r75         [24] 3580 	ljmp	00132$
      0012DF                       3581 00110$:
                                   3582 ;	../UI_Manager/ui.c:895: } else if(++state > MANUAL_STATE_HIGH){
      0012DF E5*00            [12] 3583 	mov	a,_bp
      0012E1 24 FD            [12] 3584 	add	a,#0xfd
      0012E3 F8               [12] 3585 	mov	r0,a
      0012E4 06               [12] 3586 	inc	@r0
      0012E5 E5*00            [12] 3587 	mov	a,_bp
      0012E7 24 FD            [12] 3588 	add	a,#0xfd
      0012E9 F8               [12] 3589 	mov	r0,a
      0012EA E6               [12] 3590 	mov	a,@r0
      0012EB 24 F1            [12] 3591 	add	a,#0xff - 0x0e
      0012ED 40 03            [24] 3592 	jc	00194$
      0012EF 02r13r75         [24] 3593 	ljmp	00132$
      0012F2                       3594 00194$:
                                   3595 ;	../UI_Manager/ui.c:896: state = IDLE_STATE;
      0012F2 E5*00            [12] 3596 	mov	a,_bp
      0012F4 24 FD            [12] 3597 	add	a,#0xfd
      0012F6 F8               [12] 3598 	mov	r0,a
      0012F7 76 00            [12] 3599 	mov	@r0,#0x00
                                   3600 ;	../UI_Manager/ui.c:899: break;
      0012F9 02r13r75         [24] 3601 	ljmp	00132$
                                   3602 ;	../UI_Manager/ui.c:900: case INC:
      0012FC                       3603 00115$:
                                   3604 ;	../UI_Manager/ui.c:901: state = State;
      0012FC E5*00            [12] 3605 	mov	a,_bp
      0012FE 24 FD            [12] 3606 	add	a,#0xfd
      001300 F8               [12] 3607 	mov	r0,a
      001301 A6*00            [24] 3608 	mov	@r0,_State
                                   3609 ;	../UI_Manager/ui.c:902: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      001303 75 82 10         [24] 3610 	mov	dpl,#0x10
      001306 12r00r00         [24] 3611 	lcall	_get_runtime_data
      001309 E5 82            [12] 3612 	mov	a,dpl
      00130B 70 2A            [24] 3613 	jnz	00125$
                                   3614 ;	../UI_Manager/ui.c:903: if(state == IDLE_STATE){
      00130D E5*00            [12] 3615 	mov	a,_bp
      00130F 24 FD            [12] 3616 	add	a,#0xfd
      001311 F8               [12] 3617 	mov	r0,a
      001312 E6               [12] 3618 	mov	a,@r0
      001313 70 09            [24] 3619 	jnz	00119$
                                   3620 ;	../UI_Manager/ui.c:904: state = DMX_STATE_HIGH;
      001315 E5*00            [12] 3621 	mov	a,_bp
      001317 24 FD            [12] 3622 	add	a,#0xfd
      001319 F8               [12] 3623 	mov	r0,a
      00131A 76 15            [12] 3624 	mov	@r0,#0x15
      00131C 80 57            [24] 3625 	sjmp	00132$
      00131E                       3626 00119$:
                                   3627 ;	../UI_Manager/ui.c:905: } else if(--state < DMX_STATE_LOW){
      00131E E5*00            [12] 3628 	mov	a,_bp
      001320 24 FD            [12] 3629 	add	a,#0xfd
      001322 F8               [12] 3630 	mov	r0,a
      001323 16               [12] 3631 	dec	@r0
      001324 E5*00            [12] 3632 	mov	a,_bp
      001326 24 FD            [12] 3633 	add	a,#0xfd
      001328 F8               [12] 3634 	mov	r0,a
      001329 B6 14 00         [24] 3635 	cjne	@r0,#0x14,00197$
      00132C                       3636 00197$:
      00132C 50 47            [24] 3637 	jnc	00132$
                                   3638 ;	../UI_Manager/ui.c:906: state = IDLE_STATE;
      00132E E5*00            [12] 3639 	mov	a,_bp
      001330 24 FD            [12] 3640 	add	a,#0xfd
      001332 F8               [12] 3641 	mov	r0,a
      001333 76 00            [12] 3642 	mov	@r0,#0x00
      001335 80 3E            [24] 3643 	sjmp	00132$
      001337                       3644 00125$:
                                   3645 ;	../UI_Manager/ui.c:909: if(state == IDLE_STATE){
      001337 E5*00            [12] 3646 	mov	a,_bp
      001339 24 FD            [12] 3647 	add	a,#0xfd
      00133B F8               [12] 3648 	mov	r0,a
      00133C E6               [12] 3649 	mov	a,@r0
      00133D 70 09            [24] 3650 	jnz	00122$
                                   3651 ;	../UI_Manager/ui.c:910: state = MANUAL_STATE_HIGH; 
      00133F E5*00            [12] 3652 	mov	a,_bp
      001341 24 FD            [12] 3653 	add	a,#0xfd
      001343 F8               [12] 3654 	mov	r0,a
      001344 76 0E            [12] 3655 	mov	@r0,#0x0e
      001346 80 2D            [24] 3656 	sjmp	00132$
      001348                       3657 00122$:
                                   3658 ;	../UI_Manager/ui.c:912: state--;
      001348 E5*00            [12] 3659 	mov	a,_bp
      00134A 24 FD            [12] 3660 	add	a,#0xfd
      00134C F8               [12] 3661 	mov	r0,a
      00134D 16               [12] 3662 	dec	@r0
                                   3663 ;	../UI_Manager/ui.c:915: break;
                                   3664 ;	../UI_Manager/ui.c:916: default: 
      00134E 80 25            [24] 3665 	sjmp	00132$
      001350                       3666 00127$:
                                   3667 ;	../UI_Manager/ui.c:917: if(state <= MANUAL_STATE_HIGH || (state >= DMX_STATE_LOW && state <= DMX_STATE_HIGH)){
      001350 E5*00            [12] 3668 	mov	a,_bp
      001352 24 FD            [12] 3669 	add	a,#0xfd
      001354 F8               [12] 3670 	mov	r0,a
      001355 E6               [12] 3671 	mov	a,@r0
      001356 24 F1            [12] 3672 	add	a,#0xff - 0x0e
      001358 50 14            [24] 3673 	jnc	00128$
      00135A E5*00            [12] 3674 	mov	a,_bp
      00135C 24 FD            [12] 3675 	add	a,#0xfd
      00135E F8               [12] 3676 	mov	r0,a
      00135F B6 14 00         [24] 3677 	cjne	@r0,#0x14,00201$
      001362                       3678 00201$:
      001362 40 11            [24] 3679 	jc	00132$
      001364 E5*00            [12] 3680 	mov	a,_bp
      001366 24 FD            [12] 3681 	add	a,#0xfd
      001368 F8               [12] 3682 	mov	r0,a
      001369 E6               [12] 3683 	mov	a,@r0
      00136A 24 EA            [12] 3684 	add	a,#0xff - 0x15
      00136C 40 07            [24] 3685 	jc	00132$
      00136E                       3686 00128$:
                                   3687 ;	../UI_Manager/ui.c:918: state = IDLE_STATE;
      00136E E5*00            [12] 3688 	mov	a,_bp
      001370 24 FD            [12] 3689 	add	a,#0xfd
      001372 F8               [12] 3690 	mov	r0,a
      001373 76 00            [12] 3691 	mov	@r0,#0x00
                                   3692 ;	../UI_Manager/ui.c:921: }
      001375                       3693 00132$:
                                   3694 ;	../UI_Manager/ui.c:923: State = state;
      001375 E5*00            [12] 3695 	mov	a,_bp
      001377 24 FD            [12] 3696 	add	a,#0xfd
      001379 F8               [12] 3697 	mov	r0,a
      00137A 86*00            [24] 3698 	mov	_State,@r0
                                   3699 ;	../UI_Manager/ui.c:924: }
      00137C D0*00            [24] 3700 	pop	_bp
      00137E 22               [24] 3701 	ret
                                   3702 ;------------------------------------------------------------
                                   3703 ;Allocation info for local variables in function 'get_ui_state'
                                   3704 ;------------------------------------------------------------
                                   3705 ;	../UI_Manager/ui.c:926: uint8_t get_ui_state(){
                                   3706 ;	-----------------------------------------
                                   3707 ;	 function get_ui_state
                                   3708 ;	-----------------------------------------
      00137F                       3709 _get_ui_state:
                                   3710 ;	../UI_Manager/ui.c:927: return State;
      00137F 85*00 82         [24] 3711 	mov	dpl,_State
                                   3712 ;	../UI_Manager/ui.c:928: }
      001382 22               [24] 3713 	ret
                                   3714 ;------------------------------------------------------------
                                   3715 ;Allocation info for local variables in function 'getString'
                                   3716 ;------------------------------------------------------------
                                   3717 ;index                     Allocated to registers r7 
                                   3718 ;------------------------------------------------------------
                                   3719 ;	../UI_Manager/ui.c:930: char* getString(uint8_t index){
                                   3720 ;	-----------------------------------------
                                   3721 ;	 function getString
                                   3722 ;	-----------------------------------------
      001383                       3723 _getString:
      001383 AF 82            [24] 3724 	mov	r7,dpl
                                   3725 ;	../UI_Manager/ui.c:931: switch (index)
      001385 8F 06            [24] 3726 	mov	ar6,r7
      001387 BE 00 03         [24] 3727 	cjne	r6,#0x00,00309$
      00138A 02r14r80         [24] 3728 	ljmp	00101$
      00138D                       3729 00309$:
      00138D BE 01 03         [24] 3730 	cjne	r6,#0x01,00310$
      001390 02r14r87         [24] 3731 	ljmp	00102$
      001393                       3732 00310$:
      001393 BF 02 03         [24] 3733 	cjne	r7,#0x02,00311$
      001396 02r14r8E         [24] 3734 	ljmp	00103$
      001399                       3735 00311$:
      001399 BF 14 03         [24] 3736 	cjne	r7,#0x14,00312$
      00139C 02r14r95         [24] 3737 	ljmp	00104$
      00139F                       3738 00312$:
      00139F BF 15 03         [24] 3739 	cjne	r7,#0x15,00313$
      0013A2 02r14r9C         [24] 3740 	ljmp	00105$
      0013A5                       3741 00313$:
      0013A5 BF 16 03         [24] 3742 	cjne	r7,#0x16,00314$
      0013A8 02r14rA3         [24] 3743 	ljmp	00106$
      0013AB                       3744 00314$:
      0013AB BF 17 03         [24] 3745 	cjne	r7,#0x17,00315$
      0013AE 02r14rAA         [24] 3746 	ljmp	00107$
      0013B1                       3747 00315$:
      0013B1 BF 18 03         [24] 3748 	cjne	r7,#0x18,00316$
      0013B4 02r14rB8         [24] 3749 	ljmp	00109$
      0013B7                       3750 00316$:
      0013B7 BF 19 03         [24] 3751 	cjne	r7,#0x19,00317$
      0013BA 02r14rBF         [24] 3752 	ljmp	00110$
      0013BD                       3753 00317$:
      0013BD BF 1A 03         [24] 3754 	cjne	r7,#0x1a,00318$
      0013C0 02r14rB1         [24] 3755 	ljmp	00108$
      0013C3                       3756 00318$:
      0013C3 BF 28 03         [24] 3757 	cjne	r7,#0x28,00319$
      0013C6 02r15r67         [24] 3758 	ljmp	00134$
      0013C9                       3759 00319$:
      0013C9 BF 29 03         [24] 3760 	cjne	r7,#0x29,00320$
      0013CC 02r15r6E         [24] 3761 	ljmp	00135$
      0013CF                       3762 00320$:
      0013CF BF 2A 03         [24] 3763 	cjne	r7,#0x2a,00321$
      0013D2 02r15r75         [24] 3764 	ljmp	00136$
      0013D5                       3765 00321$:
      0013D5 BF 2B 03         [24] 3766 	cjne	r7,#0x2b,00322$
      0013D8 02r15r7C         [24] 3767 	ljmp	00137$
      0013DB                       3768 00322$:
      0013DB BF 2C 03         [24] 3769 	cjne	r7,#0x2c,00323$
      0013DE 02r15r83         [24] 3770 	ljmp	00138$
      0013E1                       3771 00323$:
      0013E1 BF 2D 03         [24] 3772 	cjne	r7,#0x2d,00324$
      0013E4 02r15r8A         [24] 3773 	ljmp	00139$
      0013E7                       3774 00324$:
      0013E7 BF 2E 03         [24] 3775 	cjne	r7,#0x2e,00325$
      0013EA 02r15r91         [24] 3776 	ljmp	00140$
      0013ED                       3777 00325$:
      0013ED BF 2F 03         [24] 3778 	cjne	r7,#0x2f,00326$
      0013F0 02r15r98         [24] 3779 	ljmp	00141$
      0013F3                       3780 00326$:
      0013F3 BF 3C 03         [24] 3781 	cjne	r7,#0x3c,00327$
      0013F6 02r14rE2         [24] 3782 	ljmp	00115$
      0013F9                       3783 00327$:
      0013F9 BF 3D 03         [24] 3784 	cjne	r7,#0x3d,00328$
      0013FC 02r14rE9         [24] 3785 	ljmp	00116$
      0013FF                       3786 00328$:
      0013FF BF 3E 03         [24] 3787 	cjne	r7,#0x3e,00329$
      001402 02r14rF0         [24] 3788 	ljmp	00117$
      001405                       3789 00329$:
      001405 BF 3F 03         [24] 3790 	cjne	r7,#0x3f,00330$
      001408 02r14rF7         [24] 3791 	ljmp	00118$
      00140B                       3792 00330$:
      00140B BF 40 03         [24] 3793 	cjne	r7,#0x40,00331$
      00140E 02r14rFE         [24] 3794 	ljmp	00119$
      001411                       3795 00331$:
      001411 BF 41 03         [24] 3796 	cjne	r7,#0x41,00332$
      001414 02r15r05         [24] 3797 	ljmp	00120$
      001417                       3798 00332$:
      001417 BF 42 03         [24] 3799 	cjne	r7,#0x42,00333$
      00141A 02r15r0C         [24] 3800 	ljmp	00121$
      00141D                       3801 00333$:
      00141D BF 43 03         [24] 3802 	cjne	r7,#0x43,00334$
      001420 02r15r13         [24] 3803 	ljmp	00122$
      001423                       3804 00334$:
      001423 BF 44 03         [24] 3805 	cjne	r7,#0x44,00335$
      001426 02r15r1A         [24] 3806 	ljmp	00123$
      001429                       3807 00335$:
      001429 BF 45 03         [24] 3808 	cjne	r7,#0x45,00336$
      00142C 02r15r21         [24] 3809 	ljmp	00124$
      00142F                       3810 00336$:
      00142F BF 46 03         [24] 3811 	cjne	r7,#0x46,00337$
      001432 02r15r28         [24] 3812 	ljmp	00125$
      001435                       3813 00337$:
      001435 BF 47 03         [24] 3814 	cjne	r7,#0x47,00338$
      001438 02r15r2F         [24] 3815 	ljmp	00126$
      00143B                       3816 00338$:
      00143B BF 48 03         [24] 3817 	cjne	r7,#0x48,00339$
      00143E 02r15r36         [24] 3818 	ljmp	00127$
      001441                       3819 00339$:
      001441 BF 50 03         [24] 3820 	cjne	r7,#0x50,00340$
      001444 02r15r3D         [24] 3821 	ljmp	00128$
      001447                       3822 00340$:
      001447 BF 51 03         [24] 3823 	cjne	r7,#0x51,00341$
      00144A 02r15r44         [24] 3824 	ljmp	00129$
      00144D                       3825 00341$:
      00144D BF 52 03         [24] 3826 	cjne	r7,#0x52,00342$
      001450 02r15r4B         [24] 3827 	ljmp	00130$
      001453                       3828 00342$:
      001453 BF 64 03         [24] 3829 	cjne	r7,#0x64,00343$
      001456 02r15r52         [24] 3830 	ljmp	00131$
      001459                       3831 00343$:
      001459 BF 65 03         [24] 3832 	cjne	r7,#0x65,00344$
      00145C 02r15r59         [24] 3833 	ljmp	00132$
      00145F                       3834 00344$:
      00145F BF 66 03         [24] 3835 	cjne	r7,#0x66,00345$
      001462 02r15r60         [24] 3836 	ljmp	00133$
      001465                       3837 00345$:
      001465 BF CE 03         [24] 3838 	cjne	r7,#0xce,00346$
      001468 02r14rC6         [24] 3839 	ljmp	00111$
      00146B                       3840 00346$:
      00146B BF CF 03         [24] 3841 	cjne	r7,#0xcf,00347$
      00146E 02r14rCD         [24] 3842 	ljmp	00112$
      001471                       3843 00347$:
      001471 BF D0 03         [24] 3844 	cjne	r7,#0xd0,00348$
      001474 02r14rD4         [24] 3845 	ljmp	00113$
      001477                       3846 00348$:
      001477 BF D1 03         [24] 3847 	cjne	r7,#0xd1,00349$
      00147A 02r14rDB         [24] 3848 	ljmp	00114$
      00147D                       3849 00349$:
      00147D 02r15r9F         [24] 3850 	ljmp	00142$
                                   3851 ;	../UI_Manager/ui.c:933: case POWER_STRING_OFFSET + OPTION_FOG_LOW:
      001480                       3852 00101$:
                                   3853 ;	../UI_Manager/ui.c:934: return "Wimpy";
      001480 90r01r65         [24] 3854 	mov	dptr,#___str_32
      001483 75 F0 80         [24] 3855 	mov	b,#0x80
      001486 22               [24] 3856 	ret
                                   3857 ;	../UI_Manager/ui.c:935: case POWER_STRING_OFFSET + OPTION_FOG_MEDIUM:
      001487                       3858 00102$:
                                   3859 ;	../UI_Manager/ui.c:936: return "Mild";
      001487 90r01r6B         [24] 3860 	mov	dptr,#___str_33
      00148A 75 F0 80         [24] 3861 	mov	b,#0x80
      00148D 22               [24] 3862 	ret
                                   3863 ;	../UI_Manager/ui.c:937: case POWER_STRING_OFFSET + OPTION_FOG_HIGH:
      00148E                       3864 00103$:
                                   3865 ;	../UI_Manager/ui.c:938: return "Blazin";
      00148E 90r01r70         [24] 3866 	mov	dptr,#___str_34
      001491 75 F0 80         [24] 3867 	mov	b,#0x80
      001494 22               [24] 3868 	ret
                                   3869 ;	../UI_Manager/ui.c:940: case MACRO_STRING_OFFSET + OPTION_MACRO_NONE:
      001495                       3870 00104$:
                                   3871 ;	../UI_Manager/ui.c:941: return "Off";
      001495 90r01r08         [24] 3872 	mov	dptr,#___str_23
      001498 75 F0 80         [24] 3873 	mov	b,#0x80
      00149B 22               [24] 3874 	ret
                                   3875 ;	../UI_Manager/ui.c:942: case MACRO_STRING_OFFSET + OPTION_MACRO_RAINBOW_DMX:
      00149C                       3876 00105$:
                                   3877 ;	../UI_Manager/ui.c:943: return "Rainbow";
      00149C 90r01r77         [24] 3878 	mov	dptr,#___str_35
      00149F 75 F0 80         [24] 3879 	mov	b,#0x80
      0014A2 22               [24] 3880 	ret
                                   3881 ;	../UI_Manager/ui.c:944: case MACRO_STRING_OFFSET + OPTION_MACRO_FIRE_DMX:
      0014A3                       3882 00106$:
                                   3883 ;	../UI_Manager/ui.c:945: return "Fire";
      0014A3 90r01r7F         [24] 3884 	mov	dptr,#___str_36
      0014A6 75 F0 80         [24] 3885 	mov	b,#0x80
      0014A9 22               [24] 3886 	ret
                                   3887 ;	../UI_Manager/ui.c:946: case MACRO_STRING_OFFSET + OPTION_MACRO_WATER_DMX:
      0014AA                       3888 00107$:
                                   3889 ;	../UI_Manager/ui.c:947: return "Water";
      0014AA 90r01r84         [24] 3890 	mov	dptr,#___str_37
      0014AD 75 F0 80         [24] 3891 	mov	b,#0x80
      0014B0 22               [24] 3892 	ret
                                   3893 ;	../UI_Manager/ui.c:948: case MACRO_STRING_OFFSET + OPTION_MACRO_STORM_DMX:
      0014B1                       3894 00108$:
                                   3895 ;	../UI_Manager/ui.c:949: return "Storm";
      0014B1 90r01r8A         [24] 3896 	mov	dptr,#___str_38
      0014B4 75 F0 80         [24] 3897 	mov	b,#0x80
      0014B7 22               [24] 3898 	ret
                                   3899 ;	../UI_Manager/ui.c:950: case MACRO_STRING_OFFSET + OPTION_MACRO_ACID_DMX:
      0014B8                       3900 00109$:
                                   3901 ;	../UI_Manager/ui.c:951: return "Acid";
      0014B8 90r01r90         [24] 3902 	mov	dptr,#___str_39
      0014BB 75 F0 80         [24] 3903 	mov	b,#0x80
      0014BE 22               [24] 3904 	ret
                                   3905 ;	../UI_Manager/ui.c:952: case MACRO_STRING_OFFSET + OPTION_MACRO_ETHER_DMX:
      0014BF                       3906 00110$:
                                   3907 ;	../UI_Manager/ui.c:953: return "Ether";
      0014BF 90r01r95         [24] 3908 	mov	dptr,#___str_40
      0014C2 75 F0 80         [24] 3909 	mov	b,#0x80
      0014C5 22               [24] 3910 	ret
                                   3911 ;	../UI_Manager/ui.c:955: case COLOR_STRING_OFFSET + MANUAL_RED_STATE:
      0014C6                       3912 00111$:
                                   3913 ;	../UI_Manager/ui.c:956: return "Red Level";
      0014C6 90r01r9B         [24] 3914 	mov	dptr,#___str_41
      0014C9 75 F0 80         [24] 3915 	mov	b,#0x80
      0014CC 22               [24] 3916 	ret
                                   3917 ;	../UI_Manager/ui.c:957: case COLOR_STRING_OFFSET + MANUAL_GREEN_STATE:
      0014CD                       3918 00112$:
                                   3919 ;	../UI_Manager/ui.c:958: return "Green Level";
      0014CD 90r01rA5         [24] 3920 	mov	dptr,#___str_42
      0014D0 75 F0 80         [24] 3921 	mov	b,#0x80
      0014D3 22               [24] 3922 	ret
                                   3923 ;	../UI_Manager/ui.c:959: case COLOR_STRING_OFFSET + MANUAL_BLUE_STATE:
      0014D4                       3924 00113$:
                                   3925 ;	../UI_Manager/ui.c:960: return "Blue Level";
      0014D4 90r01rB1         [24] 3926 	mov	dptr,#___str_43
      0014D7 75 F0 80         [24] 3927 	mov	b,#0x80
      0014DA 22               [24] 3928 	ret
                                   3929 ;	../UI_Manager/ui.c:961: case COLOR_STRING_OFFSET + MANUAL_STROBE_STATE:
      0014DB                       3930 00114$:
                                   3931 ;	../UI_Manager/ui.c:962: return "Strobe Level";
      0014DB 90r01rBC         [24] 3932 	mov	dptr,#___str_44
      0014DE 75 F0 80         [24] 3933 	mov	b,#0x80
      0014E1 22               [24] 3934 	ret
                                   3935 ;	../UI_Manager/ui.c:964: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACITON_NONE:
      0014E2                       3936 00115$:
                                   3937 ;	../UI_Manager/ui.c:965: return "No Action";
      0014E2 90r01rC9         [24] 3938 	mov	dptr,#___str_45
      0014E5 75 F0 80         [24] 3939 	mov	b,#0x80
      0014E8 22               [24] 3940 	ret
                                   3941 ;	../UI_Manager/ui.c:966: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_CHOOSE_MACRO:
      0014E9                       3942 00116$:
                                   3943 ;	../UI_Manager/ui.c:967: return "Choose Macro";
      0014E9 90r01rD3         [24] 3944 	mov	dptr,#___str_46
      0014EC 75 F0 80         [24] 3945 	mov	b,#0x80
      0014EF 22               [24] 3946 	ret
                                   3947 ;	../UI_Manager/ui.c:968: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_RED:
      0014F0                       3948 00117$:
                                   3949 ;	../UI_Manager/ui.c:969: return "Red";
      0014F0 90r01rE0         [24] 3950 	mov	dptr,#___str_47
      0014F3 75 F0 80         [24] 3951 	mov	b,#0x80
      0014F6 22               [24] 3952 	ret
                                   3953 ;	../UI_Manager/ui.c:970: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_YELLOW:
      0014F7                       3954 00118$:
                                   3955 ;	../UI_Manager/ui.c:971: return "Yellow";
      0014F7 90r01rE4         [24] 3956 	mov	dptr,#___str_48
      0014FA 75 F0 80         [24] 3957 	mov	b,#0x80
      0014FD 22               [24] 3958 	ret
                                   3959 ;	../UI_Manager/ui.c:972: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_GREEN:
      0014FE                       3960 00119$:
                                   3961 ;	../UI_Manager/ui.c:973: return "Green";
      0014FE 90r01rEB         [24] 3962 	mov	dptr,#___str_49
      001501 75 F0 80         [24] 3963 	mov	b,#0x80
      001504 22               [24] 3964 	ret
                                   3965 ;	../UI_Manager/ui.c:974: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_CYAN:
      001505                       3966 00120$:
                                   3967 ;	../UI_Manager/ui.c:975: return "Cyan";
      001505 90r01rF1         [24] 3968 	mov	dptr,#___str_50
      001508 75 F0 80         [24] 3969 	mov	b,#0x80
      00150B 22               [24] 3970 	ret
                                   3971 ;	../UI_Manager/ui.c:976: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_BLUE:
      00150C                       3972 00121$:
                                   3973 ;	../UI_Manager/ui.c:977: return "Blue";
      00150C 90r01rF6         [24] 3974 	mov	dptr,#___str_51
      00150F 75 F0 80         [24] 3975 	mov	b,#0x80
      001512 22               [24] 3976 	ret
                                   3977 ;	../UI_Manager/ui.c:978: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_MAGENTA:
      001513                       3978 00122$:
                                   3979 ;	../UI_Manager/ui.c:979: return "Magenta";
      001513 90r01rFB         [24] 3980 	mov	dptr,#___str_52
      001516 75 F0 80         [24] 3981 	mov	b,#0x80
      001519 22               [24] 3982 	ret
                                   3983 ;	../UI_Manager/ui.c:980: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_SLOW:
      00151A                       3984 00123$:
                                   3985 ;	../UI_Manager/ui.c:981: return "Strobe Slow";
      00151A 90r02r03         [24] 3986 	mov	dptr,#___str_53
      00151D 75 F0 80         [24] 3987 	mov	b,#0x80
      001520 22               [24] 3988 	ret
                                   3989 ;	../UI_Manager/ui.c:982: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_MEDIUM:
      001521                       3990 00124$:
                                   3991 ;	../UI_Manager/ui.c:983: return "Strobe Medium";
      001521 90r02r0F         [24] 3992 	mov	dptr,#___str_54
      001524 75 F0 80         [24] 3993 	mov	b,#0x80
      001527 22               [24] 3994 	ret
                                   3995 ;	../UI_Manager/ui.c:984: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_FAST:
      001528                       3996 00125$:
                                   3997 ;	../UI_Manager/ui.c:985: return "Strobe Fast";
      001528 90r02r1D         [24] 3998 	mov	dptr,#___str_55
      00152B 75 F0 80         [24] 3999 	mov	b,#0x80
      00152E 22               [24] 4000 	ret
                                   4001 ;	../UI_Manager/ui.c:986: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_BLACKOUT:
      00152F                       4002 00126$:
                                   4003 ;	../UI_Manager/ui.c:987: return "Blackout";
      00152F 90r02r29         [24] 4004 	mov	dptr,#___str_56
      001532 75 F0 80         [24] 4005 	mov	b,#0x80
      001535 22               [24] 4006 	ret
                                   4007 ;	../UI_Manager/ui.c:988: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_WHITEOUT:
      001536                       4008 00127$:
                                   4009 ;	../UI_Manager/ui.c:989: return "Whiteout";         
      001536 90r02r32         [24] 4010 	mov	dptr,#___str_57
      001539 75 F0 80         [24] 4011 	mov	b,#0x80
      00153C 22               [24] 4012 	ret
                                   4013 ;	../UI_Manager/ui.c:991: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_1: 
      00153D                       4014 00128$:
                                   4015 ;	../UI_Manager/ui.c:992: return "Slot 1";   
      00153D 90r02r3B         [24] 4016 	mov	dptr,#___str_58
      001540 75 F0 80         [24] 4017 	mov	b,#0x80
      001543 22               [24] 4018 	ret
                                   4019 ;	../UI_Manager/ui.c:993: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_2: 
      001544                       4020 00129$:
                                   4021 ;	../UI_Manager/ui.c:994: return "Slot 2";   
      001544 90r02r42         [24] 4022 	mov	dptr,#___str_59
      001547 75 F0 80         [24] 4023 	mov	b,#0x80
      00154A 22               [24] 4024 	ret
                                   4025 ;	../UI_Manager/ui.c:995: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_3: 
      00154B                       4026 00130$:
                                   4027 ;	../UI_Manager/ui.c:996: return "Slot 3"; 
      00154B 90r02r49         [24] 4028 	mov	dptr,#___str_60
      00154E 75 F0 80         [24] 4029 	mov	b,#0x80
      001551 22               [24] 4030 	ret
                                   4031 ;	../UI_Manager/ui.c:998: case DMX_STRING_OFFSET + OPTION_DMX_MODE_11: 
      001552                       4032 00131$:
                                   4033 ;	../UI_Manager/ui.c:999: return "11 All";     
      001552 90r02r50         [24] 4034 	mov	dptr,#___str_61
      001555 75 F0 80         [24] 4035 	mov	b,#0x80
      001558 22               [24] 4036 	ret
                                   4037 ;	../UI_Manager/ui.c:1000: case DMX_STRING_OFFSET + OPTION_DMX_MODE_3: 
      001559                       4038 00132$:
                                   4039 ;	../UI_Manager/ui.c:1001: return " 3 Fog + Macro";   
      001559 90r02r57         [24] 4040 	mov	dptr,#___str_62
      00155C 75 F0 80         [24] 4041 	mov	b,#0x80
                                   4042 ;	../UI_Manager/ui.c:1002: case DMX_STRING_OFFSET + OPTION_DMX_MODE_1: 
      00155F 22               [24] 4043 	ret
      001560                       4044 00133$:
                                   4045 ;	../UI_Manager/ui.c:1003: return " 1 Fog";    
      001560 90r02r66         [24] 4046 	mov	dptr,#___str_63
      001563 75 F0 80         [24] 4047 	mov	b,#0x80
                                   4048 ;	../UI_Manager/ui.c:1005: case SECRET_STRING_OFFSET + 0:
      001566 22               [24] 4049 	ret
      001567                       4050 00134$:
                                   4051 ;	../UI_Manager/ui.c:1006: return "0x486F6C6D6573";
      001567 90r02r6D         [24] 4052 	mov	dptr,#___str_64
      00156A 75 F0 80         [24] 4053 	mov	b,#0x80
                                   4054 ;	../UI_Manager/ui.c:1007: case SECRET_STRING_OFFSET + 1:
      00156D 22               [24] 4055 	ret
      00156E                       4056 00135$:
                                   4057 ;	../UI_Manager/ui.c:1008: return "& 576174736F6E";
      00156E 90r02r7C         [24] 4058 	mov	dptr,#___str_65
      001571 75 F0 80         [24] 4059 	mov	b,#0x80
                                   4060 ;	../UI_Manager/ui.c:1009: case SECRET_STRING_OFFSET + 2:
      001574 22               [24] 4061 	ret
      001575                       4062 00136$:
                                   4063 ;	../UI_Manager/ui.c:1010: return "626F74684F776E41";
      001575 90r02r8B         [24] 4064 	mov	dptr,#___str_66
      001578 75 F0 80         [24] 4065 	mov	b,#0x80
                                   4066 ;	../UI_Manager/ui.c:1011: case SECRET_STRING_OFFSET + 3:
      00157B 22               [24] 4067 	ret
      00157C                       4068 00137$:
                                   4069 ;	../UI_Manager/ui.c:1012: return "536E6F7762616C6C";
      00157C 90r02r9C         [24] 4070 	mov	dptr,#___str_67
      00157F 75 F0 80         [24] 4071 	mov	b,#0x80
                                   4072 ;	../UI_Manager/ui.c:1013: case SECRET_STRING_OFFSET + 4:
      001582 22               [24] 4073 	ret
      001583                       4074 00138$:
                                   4075 ;	../UI_Manager/ui.c:1014: return "4D6F726961727479";
      001583 90r02rAD         [24] 4076 	mov	dptr,#___str_68
      001586 75 F0 80         [24] 4077 	mov	b,#0x80
                                   4078 ;	../UI_Manager/ui.c:1015: case SECRET_STRING_OFFSET + 5:
      001589 22               [24] 4079 	ret
      00158A                       4080 00139$:
                                   4081 ;	../UI_Manager/ui.c:1016: return "646F65734E6F74 ;";
      00158A 90r02rBE         [24] 4082 	mov	dptr,#___str_69
      00158D 75 F0 80         [24] 4083 	mov	b,#0x80
                                   4084 ;	../UI_Manager/ui.c:1017: case SECRET_STRING_OFFSET + 6:
      001590 22               [24] 4085 	ret
      001591                       4086 00140$:
                                   4087 ;	../UI_Manager/ui.c:1018: return "FirmwareCrafter:";
      001591 90r02rCF         [24] 4088 	mov	dptr,#___str_70
      001594 75 F0 80         [24] 4089 	mov	b,#0x80
                                   4090 ;	../UI_Manager/ui.c:1019: case SECRET_STRING_OFFSET + 7:
      001597 22               [24] 4091 	ret
      001598                       4092 00141$:
                                   4093 ;	../UI_Manager/ui.c:1020: return "ChristianKrueger";
      001598 90r02rE0         [24] 4094 	mov	dptr,#___str_71
      00159B 75 F0 80         [24] 4095 	mov	b,#0x80
                                   4096 ;	../UI_Manager/ui.c:1021: }
      00159E 22               [24] 4097 	ret
      00159F                       4098 00142$:
                                   4099 ;	../UI_Manager/ui.c:1023: return 0;
      00159F 90 00 00         [24] 4100 	mov	dptr,#0x0000
      0015A2 75 F0 00         [24] 4101 	mov	b,#0x00
                                   4102 ;	../UI_Manager/ui.c:1024: }
      0015A5 22               [24] 4103 	ret
                                   4104 	.area CSEG    (CODE)
                                   4105 	.area CONST   (CODE)
      000000                       4106 ___str_0:
      000000 54 61 6E 6B 20 4C 69  4107 	.ascii "Tank Lights Off"
             67 68 74 73 20 4F 66
             66
      00000F 00                    4108 	.db 0x00
      000010                       4109 ___str_1:
      000010 54 61 6E 6B 20 4C 69  4110 	.ascii "Tank Lights On"
             67 68 74 73 20 4F 6E
      00001E 00                    4111 	.db 0x00
      00001F                       4112 ___str_2:
      00001F 46 75 6E 2B 4D 61 6E  4113 	.ascii "Fun+Man to Undo"
             20 74 6F 20 55 6E 64
             6F
      00002E 00                    4114 	.db 0x00
      00002F                       4115 ___str_3:
      00002F 48 65 61 74 65 72 20  4116 	.ascii "Heater Off"
             4F 66 66
      000039 00                    4117 	.db 0x00
      00003A                       4118 ___str_4:
      00003A 48 65 61 74 65 72 20  4119 	.ascii "Heater On"
             4F 6E
      000043 00                    4120 	.db 0x00
      000044                       4121 ___str_5:
      000044 42 75 72 73 74 2B 55  4122 	.ascii "Burst+Up to Undo"
             70 20 74 6F 20 55 6E
             64 6F
      000054 00                    4123 	.db 0x00
      000055                       4124 ___str_6:
      000055 41 74 6D 6F 73 46 45  4125 	.ascii "AtmosFEAR 221B"
             41 52 20 32 32 31 42
      000063 00                    4126 	.db 0x00
      000064                       4127 ___str_7:
      000064 42 79 20 42 6C 69 7A  4128 	.ascii "By Blizzard Pro"
             7A 61 72 64 20 50 72
             6F
      000073 00                    4129 	.db 0x00
      000074                       4130 ___str_8:
      000074 50 43 20 4C 6F 61 64  4131 	.ascii "PC Load Letter"
             20 4C 65 74 74 65 72
      000082 00                    4132 	.db 0x00
      000083                       4133 ___str_9:
      000083 42 75 72 73 74 20 74  4134 	.ascii "Burst to Refill"
             6F 20 52 65 66 69 6C
             6C
      000092 00                    4135 	.db 0x00
      000093                       4136 ___str_10:
      000093 4D 61 6E 75 61 6C 20  4137 	.ascii "Manual Mode"
             4D 6F 64 65
      00009E 00                    4138 	.db 0x00
      00009F                       4139 ___str_11:
      00009F 41 64 64 72           4140 	.ascii "Addr"
      0000A3 00                    4141 	.db 0x00
      0000A4                       4142 ___str_12:
      0000A4 4D 6F 64 65           4143 	.ascii "Mode"
      0000A8 00                    4144 	.db 0x00
      0000A9                       4145 ___str_13:
      0000A9 44 4D 58 20 4F 6B     4146 	.ascii "DMX Ok"
      0000AF 00                    4147 	.db 0x00
      0000B0                       4148 ___str_14:
      0000B0 4E 6F 20 44 4D 58     4149 	.ascii "No DMX"
      0000B6 00                    4150 	.db 0x00
      0000B7                       4151 ___str_15:
      0000B7 49 6E 74 65 72 76 61  4152 	.ascii "Interval"
             6C
      0000BF 00                    4153 	.db 0x00
      0000C0                       4154 ___str_16:
      0000C0 44 75 72 61 74 69 6F  4155 	.ascii "Duration"
             6E
      0000C8 00                    4156 	.db 0x00
      0000C9                       4157 ___str_17:
      0000C9 46 6F 67 20 4C 65 76  4158 	.ascii "Fog Level"
             65 6C
      0000D2 00                    4159 	.db 0x00
      0000D3                       4160 ___str_18:
      0000D3 46 6F 67 20 49 6E 74  4161 	.ascii "Fog Interval"
             65 72 76 61 6C
      0000DF 00                    4162 	.db 0x00
      0000E0                       4163 ___str_19:
      0000E0 53 65 63 6F 6E 64 73  4164 	.ascii "Seconds"
      0000E7 00                    4165 	.db 0x00
      0000E8                       4166 ___str_20:
      0000E8 46 6F 67 20 44 75 72  4167 	.ascii "Fog Duration"
             61 74 69 6F 6E
      0000F4 00                    4168 	.db 0x00
      0000F5                       4169 ___str_21:
      0000F5 4D 61 63 72 6F 73     4170 	.ascii "Macros"
      0000FB 00                    4171 	.db 0x00
      0000FC                       4172 ___str_22:
      0000FC 4D 61 63 72 6F 20 53  4173 	.ascii "Macro Speed"
             70 65 65 64
      000107 00                    4174 	.db 0x00
      000108                       4175 ___str_23:
      000108 4F 66 66              4176 	.ascii "Off"
      00010B 00                    4177 	.db 0x00
      00010C                       4178 ___str_24:
      00010C 00                    4179 	.db 0x00
      00010D                       4180 ___str_25:
      00010D 52 65 6D 6F 74 65 20  4181 	.ascii "Remote X Action"
             58 20 41 63 74 69 6F
             6E
      00011C 00                    4182 	.db 0x00
      00011D                       4183 ___str_26:
      00011D 53 61 76 65 64 21     4184 	.ascii "Saved!"
      000123 00                    4185 	.db 0x00
      000124                       4186 ___str_27:
      000124 4C 6F 61 64 65 64 21  4187 	.ascii "Loaded!"
      00012B 00                    4188 	.db 0x00
      00012C                       4189 ___str_28:
      00012C 53 61 76 65 20 53 65  4190 	.ascii "Save Settings"
             74 74 69 6E 67 73
      000139 00                    4191 	.db 0x00
      00013A                       4192 ___str_29:
      00013A 4C 6F 61 64 20 53 65  4193 	.ascii "Load Settings"
             74 74 69 6E 67 73
      000147 00                    4194 	.db 0x00
      000148                       4195 ___str_30:
      000148 44 4D 58 20 41 64 64  4196 	.ascii "DMX Address"
             72 65 73 73
      000153 00                    4197 	.db 0x00
      000154                       4198 ___str_31:
      000154 44 4D 58 20 43 68 61  4199 	.ascii "DMX Channel Mode"
             6E 6E 65 6C 20 4D 6F
             64 65
      000164 00                    4200 	.db 0x00
      000165                       4201 ___str_32:
      000165 57 69 6D 70 79        4202 	.ascii "Wimpy"
      00016A 00                    4203 	.db 0x00
      00016B                       4204 ___str_33:
      00016B 4D 69 6C 64           4205 	.ascii "Mild"
      00016F 00                    4206 	.db 0x00
      000170                       4207 ___str_34:
      000170 42 6C 61 7A 69 6E     4208 	.ascii "Blazin"
      000176 00                    4209 	.db 0x00
      000177                       4210 ___str_35:
      000177 52 61 69 6E 62 6F 77  4211 	.ascii "Rainbow"
      00017E 00                    4212 	.db 0x00
      00017F                       4213 ___str_36:
      00017F 46 69 72 65           4214 	.ascii "Fire"
      000183 00                    4215 	.db 0x00
      000184                       4216 ___str_37:
      000184 57 61 74 65 72        4217 	.ascii "Water"
      000189 00                    4218 	.db 0x00
      00018A                       4219 ___str_38:
      00018A 53 74 6F 72 6D        4220 	.ascii "Storm"
      00018F 00                    4221 	.db 0x00
      000190                       4222 ___str_39:
      000190 41 63 69 64           4223 	.ascii "Acid"
      000194 00                    4224 	.db 0x00
      000195                       4225 ___str_40:
      000195 45 74 68 65 72        4226 	.ascii "Ether"
      00019A 00                    4227 	.db 0x00
      00019B                       4228 ___str_41:
      00019B 52 65 64 20 4C 65 76  4229 	.ascii "Red Level"
             65 6C
      0001A4 00                    4230 	.db 0x00
      0001A5                       4231 ___str_42:
      0001A5 47 72 65 65 6E 20 4C  4232 	.ascii "Green Level"
             65 76 65 6C
      0001B0 00                    4233 	.db 0x00
      0001B1                       4234 ___str_43:
      0001B1 42 6C 75 65 20 4C 65  4235 	.ascii "Blue Level"
             76 65 6C
      0001BB 00                    4236 	.db 0x00
      0001BC                       4237 ___str_44:
      0001BC 53 74 72 6F 62 65 20  4238 	.ascii "Strobe Level"
             4C 65 76 65 6C
      0001C8 00                    4239 	.db 0x00
      0001C9                       4240 ___str_45:
      0001C9 4E 6F 20 41 63 74 69  4241 	.ascii "No Action"
             6F 6E
      0001D2 00                    4242 	.db 0x00
      0001D3                       4243 ___str_46:
      0001D3 43 68 6F 6F 73 65 20  4244 	.ascii "Choose Macro"
             4D 61 63 72 6F
      0001DF 00                    4245 	.db 0x00
      0001E0                       4246 ___str_47:
      0001E0 52 65 64              4247 	.ascii "Red"
      0001E3 00                    4248 	.db 0x00
      0001E4                       4249 ___str_48:
      0001E4 59 65 6C 6C 6F 77     4250 	.ascii "Yellow"
      0001EA 00                    4251 	.db 0x00
      0001EB                       4252 ___str_49:
      0001EB 47 72 65 65 6E        4253 	.ascii "Green"
      0001F0 00                    4254 	.db 0x00
      0001F1                       4255 ___str_50:
      0001F1 43 79 61 6E           4256 	.ascii "Cyan"
      0001F5 00                    4257 	.db 0x00
      0001F6                       4258 ___str_51:
      0001F6 42 6C 75 65           4259 	.ascii "Blue"
      0001FA 00                    4260 	.db 0x00
      0001FB                       4261 ___str_52:
      0001FB 4D 61 67 65 6E 74 61  4262 	.ascii "Magenta"
      000202 00                    4263 	.db 0x00
      000203                       4264 ___str_53:
      000203 53 74 72 6F 62 65 20  4265 	.ascii "Strobe Slow"
             53 6C 6F 77
      00020E 00                    4266 	.db 0x00
      00020F                       4267 ___str_54:
      00020F 53 74 72 6F 62 65 20  4268 	.ascii "Strobe Medium"
             4D 65 64 69 75 6D
      00021C 00                    4269 	.db 0x00
      00021D                       4270 ___str_55:
      00021D 53 74 72 6F 62 65 20  4271 	.ascii "Strobe Fast"
             46 61 73 74
      000228 00                    4272 	.db 0x00
      000229                       4273 ___str_56:
      000229 42 6C 61 63 6B 6F 75  4274 	.ascii "Blackout"
             74
      000231 00                    4275 	.db 0x00
      000232                       4276 ___str_57:
      000232 57 68 69 74 65 6F 75  4277 	.ascii "Whiteout"
             74
      00023A 00                    4278 	.db 0x00
      00023B                       4279 ___str_58:
      00023B 53 6C 6F 74 20 31     4280 	.ascii "Slot 1"
      000241 00                    4281 	.db 0x00
      000242                       4282 ___str_59:
      000242 53 6C 6F 74 20 32     4283 	.ascii "Slot 2"
      000248 00                    4284 	.db 0x00
      000249                       4285 ___str_60:
      000249 53 6C 6F 74 20 33     4286 	.ascii "Slot 3"
      00024F 00                    4287 	.db 0x00
      000250                       4288 ___str_61:
      000250 31 31 20 41 6C 6C     4289 	.ascii "11 All"
      000256 00                    4290 	.db 0x00
      000257                       4291 ___str_62:
      000257 20 33 20 46 6F 67 20  4292 	.ascii " 3 Fog + Macro"
             2B 20 4D 61 63 72 6F
      000265 00                    4293 	.db 0x00
      000266                       4294 ___str_63:
      000266 20 31 20 46 6F 67     4295 	.ascii " 1 Fog"
      00026C 00                    4296 	.db 0x00
      00026D                       4297 ___str_64:
      00026D 30 78 34 38 36 46 36  4298 	.ascii "0x486F6C6D6573"
             43 36 44 36 35 37 33
      00027B 00                    4299 	.db 0x00
      00027C                       4300 ___str_65:
      00027C 26 20 35 37 36 31 37  4301 	.ascii "& 576174736F6E"
             34 37 33 36 46 36 45
      00028A 00                    4302 	.db 0x00
      00028B                       4303 ___str_66:
      00028B 36 32 36 46 37 34 36  4304 	.ascii "626F74684F776E41"
             38 34 46 37 37 36 45
             34 31
      00029B 00                    4305 	.db 0x00
      00029C                       4306 ___str_67:
      00029C 35 33 36 45 36 46 37  4307 	.ascii "536E6F7762616C6C"
             37 36 32 36 31 36 43
             36 43
      0002AC 00                    4308 	.db 0x00
      0002AD                       4309 ___str_68:
      0002AD 34 44 36 46 37 32 36  4310 	.ascii "4D6F726961727479"
             39 36 31 37 32 37 34
             37 39
      0002BD 00                    4311 	.db 0x00
      0002BE                       4312 ___str_69:
      0002BE 36 34 36 46 36 35 37  4313 	.ascii "646F65734E6F74 ;"
             33 34 45 36 46 37 34
             20 3B
      0002CE 00                    4314 	.db 0x00
      0002CF                       4315 ___str_70:
      0002CF 46 69 72 6D 77 61 72  4316 	.ascii "FirmwareCrafter:"
             65 43 72 61 66 74 65
             72 3A
      0002DF 00                    4317 	.db 0x00
      0002E0                       4318 ___str_71:
      0002E0 43 68 72 69 73 74 69  4319 	.ascii "ChristianKrueger"
             61 6E 4B 72 75 65 67
             65 72
      0002F0 00                    4320 	.db 0x00
                                   4321 	.area XINIT   (CODE)
                                   4322 	.area CABS    (ABS,CODE)
