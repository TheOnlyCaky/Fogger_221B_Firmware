                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ui
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _exe_command
                                     12 	.globl _write_char
                                     13 	.globl _write_number
                                     14 	.globl _write_string
                                     15 	.globl _get_button_action
                                     16 	.globl _power_pump
                                     17 	.globl _tick_fogger
                                     18 	.globl _set_dmx_address
                                     19 	.globl _get_dmx_address
                                     20 	.globl _set_runtime_data
                                     21 	.globl _get_runtime_data
                                     22 	.globl _save_load_settings
                                     23 	.globl _CPRL2
                                     24 	.globl _CT2
                                     25 	.globl _TR2
                                     26 	.globl _EXEN2
                                     27 	.globl _TCLK
                                     28 	.globl _RCLK
                                     29 	.globl _REN
                                     30 	.globl _SM2
                                     31 	.globl _SM1
                                     32 	.globl _SM0
                                     33 	.globl _RCK
                                     34 	.globl _SER
                                     35 	.globl _SCK
                                     36 	.globl _RI
                                     37 	.globl _ES
                                     38 	.globl _ET0
                                     39 	.globl _EA
                                     40 	.globl _P3_7
                                     41 	.globl _P3_6
                                     42 	.globl _P3_5
                                     43 	.globl _P3_4
                                     44 	.globl _P3_3
                                     45 	.globl _P3_2
                                     46 	.globl _P3_1
                                     47 	.globl _P3_0
                                     48 	.globl _P2_7
                                     49 	.globl _P2_6
                                     50 	.globl _P2_5
                                     51 	.globl _P2_4
                                     52 	.globl _P2_3
                                     53 	.globl _P2_2
                                     54 	.globl _P2_1
                                     55 	.globl _P2_0
                                     56 	.globl _P1_7
                                     57 	.globl _P1_6
                                     58 	.globl _P1_5
                                     59 	.globl _P1_4
                                     60 	.globl _P1_3
                                     61 	.globl _P1_2
                                     62 	.globl _P1_1
                                     63 	.globl _P1_0
                                     64 	.globl _P0_7
                                     65 	.globl _P0_6
                                     66 	.globl _P0_5
                                     67 	.globl _P0_4
                                     68 	.globl _P0_3
                                     69 	.globl _P0_2
                                     70 	.globl _P0_1
                                     71 	.globl _P0_0
                                     72 	.globl _IAP_ADRH
                                     73 	.globl _IAP_ADRL
                                     74 	.globl _IAPEN
                                     75 	.globl _TH0
                                     76 	.globl _TL0
                                     77 	.globl _CKCON
                                     78 	.globl _TMOD
                                     79 	.globl _TCON
                                     80 	.globl _PWMDATA17L
                                     81 	.globl _PWMDATA17H
                                     82 	.globl _PWMDATA14L
                                     83 	.globl _PWMDATA14H
                                     84 	.globl _PWMDATA11L
                                     85 	.globl _PWMDATA11H
                                     86 	.globl _PWM_EA2
                                     87 	.globl _PWM_EA1
                                     88 	.globl _SBUF
                                     89 	.globl _TL3
                                     90 	.globl _TH3
                                     91 	.globl _T2CON
                                     92 	.globl _RCAP2H
                                     93 	.globl _RCAP2L
                                     94 	.globl _SCON
                                     95 	.globl _P1_OPT
                                     96 	.globl _ADCVAL2
                                     97 	.globl _ADCVAL1
                                     98 	.globl _ADCSEL
                                     99 	.globl _EXIF
                                    100 	.globl _EIE
                                    101 	.globl _IE
                                    102 	.globl _P3
                                    103 	.globl _P2
                                    104 	.globl _P1
                                    105 	.globl _P0
                                    106 	.globl _PCLKSEL
                                    107 	.globl _CHIPCON
                                    108 	.globl _set_ui_state_PARM_2
                                    109 	.globl _tick_ui
                                    110 	.globl _idlePage
                                    111 	.globl _fogLevelPage
                                    112 	.globl _fogIntervalPage
                                    113 	.globl _fogDurationPage
                                    114 	.globl _macroPage
                                    115 	.globl _macroSpeedPage
                                    116 	.globl _colorPage
                                    117 	.globl _remotePage
                                    118 	.globl _saveLoadPage
                                    119 	.globl _dmxAddressPage
                                    120 	.globl _dmxChannelPage
                                    121 	.globl _set_ui_state
                                    122 	.globl _get_ui_state
                                    123 	.globl _getString
                                    124 ;--------------------------------------------------------
                                    125 ; special function registers
                                    126 ;--------------------------------------------------------
                                    127 	.area RSEG    (ABS,DATA)
      000000                        128 	.org 0x0000
                           0000BF   129 _CHIPCON	=	0x00bf
                           0000B7   130 _PCLKSEL	=	0x00b7
                           000080   131 _P0	=	0x0080
                           000090   132 _P1	=	0x0090
                           0000A0   133 _P2	=	0x00a0
                           0000B0   134 _P3	=	0x00b0
                           0000A8   135 _IE	=	0x00a8
                           0000E8   136 _EIE	=	0x00e8
                           000091   137 _EXIF	=	0x0091
                           0000DA   138 _ADCSEL	=	0x00da
                           0000DB   139 _ADCVAL1	=	0x00db
                           0000DC   140 _ADCVAL2	=	0x00dc
                           0000D9   141 _P1_OPT	=	0x00d9
                           000098   142 _SCON	=	0x0098
                           0000CA   143 _RCAP2L	=	0x00ca
                           0000CB   144 _RCAP2H	=	0x00cb
                           0000C8   145 _T2CON	=	0x00c8
                           00009B   146 _TH3	=	0x009b
                           00009A   147 _TL3	=	0x009a
                           000099   148 _SBUF	=	0x0099
                           0000D3   149 _PWM_EA1	=	0x00d3
                           0000D4   150 _PWM_EA2	=	0x00d4
                           0000BD   151 _PWMDATA11H	=	0x00bd
                           0000BE   152 _PWMDATA11L	=	0x00be
                           0000B5   153 _PWMDATA14H	=	0x00b5
                           0000B6   154 _PWMDATA14L	=	0x00b6
                           0000AD   155 _PWMDATA17H	=	0x00ad
                           0000AE   156 _PWMDATA17L	=	0x00ae
                           000088   157 _TCON	=	0x0088
                           000089   158 _TMOD	=	0x0089
                           00008E   159 _CKCON	=	0x008e
                           00008A   160 _TL0	=	0x008a
                           00008C   161 _TH0	=	0x008c
                           0000E4   162 _IAPEN	=	0x00e4
                           0000E5   163 _IAP_ADRL	=	0x00e5
                           0000E6   164 _IAP_ADRH	=	0x00e6
                                    165 ;--------------------------------------------------------
                                    166 ; special function bits
                                    167 ;--------------------------------------------------------
                                    168 	.area RSEG    (ABS,DATA)
      000000                        169 	.org 0x0000
                           000080   170 _P0_0	=	0x0080
                           000081   171 _P0_1	=	0x0081
                           000082   172 _P0_2	=	0x0082
                           000083   173 _P0_3	=	0x0083
                           000084   174 _P0_4	=	0x0084
                           000085   175 _P0_5	=	0x0085
                           000086   176 _P0_6	=	0x0086
                           000087   177 _P0_7	=	0x0087
                           000090   178 _P1_0	=	0x0090
                           000091   179 _P1_1	=	0x0091
                           000092   180 _P1_2	=	0x0092
                           000093   181 _P1_3	=	0x0093
                           000094   182 _P1_4	=	0x0094
                           000095   183 _P1_5	=	0x0095
                           000096   184 _P1_6	=	0x0096
                           000097   185 _P1_7	=	0x0097
                           0000A0   186 _P2_0	=	0x00a0
                           0000A1   187 _P2_1	=	0x00a1
                           0000A2   188 _P2_2	=	0x00a2
                           0000A3   189 _P2_3	=	0x00a3
                           0000A4   190 _P2_4	=	0x00a4
                           0000A5   191 _P2_5	=	0x00a5
                           0000A6   192 _P2_6	=	0x00a6
                           0000A7   193 _P2_7	=	0x00a7
                           0000B0   194 _P3_0	=	0x00b0
                           0000B1   195 _P3_1	=	0x00b1
                           0000B2   196 _P3_2	=	0x00b2
                           0000B3   197 _P3_3	=	0x00b3
                           0000B4   198 _P3_4	=	0x00b4
                           0000B5   199 _P3_5	=	0x00b5
                           0000B6   200 _P3_6	=	0x00b6
                           0000B7   201 _P3_7	=	0x00b7
                           0000AF   202 _EA	=	0x00af
                           0000A9   203 _ET0	=	0x00a9
                           0000AC   204 _ES	=	0x00ac
                           000098   205 _RI	=	0x0098
                           000093   206 _SCK	=	0x0093
                           000095   207 _SER	=	0x0095
                           000092   208 _RCK	=	0x0092
                           00009F   209 _SM0	=	0x009f
                           00009E   210 _SM1	=	0x009e
                           00009D   211 _SM2	=	0x009d
                           00009C   212 _REN	=	0x009c
                           0000CD   213 _RCLK	=	0x00cd
                           0000CC   214 _TCLK	=	0x00cc
                           0000CB   215 _EXEN2	=	0x00cb
                           0000CA   216 _TR2	=	0x00ca
                           0000C9   217 _CT2	=	0x00c9
                           0000C8   218 _CPRL2	=	0x00c8
                                    219 ;--------------------------------------------------------
                                    220 ; overlayable register banks
                                    221 ;--------------------------------------------------------
                                    222 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        223 	.ds 8
                                    224 ;--------------------------------------------------------
                                    225 ; internal ram data
                                    226 ;--------------------------------------------------------
                                    227 	.area DSEG    (DATA)
      000000                        228 _State:
      000000                        229 	.ds 1
      000001                        230 _Changed:
      000001                        231 	.ds 1
      000002                        232 _changed:
      000002                        233 	.ds 1
      000003                        234 _tick_ui_bursting_65536_37:
      000003                        235 	.ds 1
      000004                        236 _tick_ui_delay_65536_37:
      000004                        237 	.ds 4
      000008                        238 _idlePage_timer_65536_55:
      000008                        239 	.ds 1
      000009                        240 _idlePage_intervalOrDuration_65536_55:
      000009                        241 	.ds 1
      00000A                        242 _idlePage_empty_65536_55:
      00000A                        243 	.ds 1
      00000B                        244 _idlePage_tock_65536_55:
      00000B                        245 	.ds 1
      00000C                        246 _idlePage_iconChange_65536_55:
      00000C                        247 	.ds 1
      00000D                        248 _idlePage_playing_65536_55:
      00000D                        249 	.ds 1
      00000E                        250 _saveLoadPage_slot_65536_134:
      00000E                        251 	.ds 1
      00000F                        252 _set_ui_state_PARM_2:
      00000F                        253 	.ds 1
                                    254 ;--------------------------------------------------------
                                    255 ; overlayable items in internal ram 
                                    256 ;--------------------------------------------------------
                                    257 	.area	OSEG    (OVR,DATA)
                                    258 ;--------------------------------------------------------
                                    259 ; indirectly addressable internal ram data
                                    260 ;--------------------------------------------------------
                                    261 	.area ISEG    (DATA)
                                    262 ;--------------------------------------------------------
                                    263 ; absolute internal ram data
                                    264 ;--------------------------------------------------------
                                    265 	.area IABS    (ABS,DATA)
                                    266 	.area IABS    (ABS,DATA)
                                    267 ;--------------------------------------------------------
                                    268 ; bit data
                                    269 ;--------------------------------------------------------
                                    270 	.area BSEG    (BIT)
                                    271 ;--------------------------------------------------------
                                    272 ; paged external ram data
                                    273 ;--------------------------------------------------------
                                    274 	.area PSEG    (PAG,XDATA)
                                    275 ;--------------------------------------------------------
                                    276 ; external ram data
                                    277 ;--------------------------------------------------------
                                    278 	.area XSEG    (XDATA)
                                    279 ;--------------------------------------------------------
                                    280 ; absolute external ram data
                                    281 ;--------------------------------------------------------
                                    282 	.area XABS    (ABS,XDATA)
                                    283 ;--------------------------------------------------------
                                    284 ; external initialized ram data
                                    285 ;--------------------------------------------------------
                                    286 	.area XISEG   (XDATA)
                                    287 	.area HOME    (CODE)
                                    288 	.area GSINIT0 (CODE)
                                    289 	.area GSINIT1 (CODE)
                                    290 	.area GSINIT2 (CODE)
                                    291 	.area GSINIT3 (CODE)
                                    292 	.area GSINIT4 (CODE)
                                    293 	.area GSINIT5 (CODE)
                                    294 	.area GSINIT  (CODE)
                                    295 	.area GSFINAL (CODE)
                                    296 	.area CSEG    (CODE)
                                    297 ;--------------------------------------------------------
                                    298 ; global & static initialisations
                                    299 ;--------------------------------------------------------
                                    300 	.area HOME    (CODE)
                                    301 	.area GSINIT  (CODE)
                                    302 	.area GSFINAL (CODE)
                                    303 	.area GSINIT  (CODE)
                                    304 ;------------------------------------------------------------
                                    305 ;Allocation info for local variables in function 'tick_ui'
                                    306 ;------------------------------------------------------------
                                    307 ;bursting                  Allocated with name '_tick_ui_bursting_65536_37'
                                    308 ;action                    Allocated to registers r7 
                                    309 ;ss                        Allocated to registers 
                                    310 ;delay                     Allocated with name '_tick_ui_delay_65536_37'
                                    311 ;------------------------------------------------------------
                                    312 ;	../UI_Manager/ui.c:17: static uint8_t bursting = 0;
      000000 75*03 00         [24]  313 	mov	_tick_ui_bursting_65536_37,#0x00
                                    314 ;------------------------------------------------------------
                                    315 ;Allocation info for local variables in function 'idlePage'
                                    316 ;------------------------------------------------------------
                                    317 ;timer                     Allocated with name '_idlePage_timer_65536_55'
                                    318 ;intervalOrDuration        Allocated with name '_idlePage_intervalOrDuration_65536_55'
                                    319 ;empty                     Allocated with name '_idlePage_empty_65536_55'
                                    320 ;tock                      Allocated with name '_idlePage_tock_65536_55'
                                    321 ;iconChange                Allocated with name '_idlePage_iconChange_65536_55'
                                    322 ;playing                   Allocated with name '_idlePage_playing_65536_55'
                                    323 ;temp                      Allocated to registers r7 
                                    324 ;------------------------------------------------------------
                                    325 ;	../UI_Manager/ui.c:186: static uint8_t timer = 0;
      000003 75*08 00         [24]  326 	mov	_idlePage_timer_65536_55,#0x00
                                    327 ;	../UI_Manager/ui.c:188: static uint8_t empty = 0x00;
      000006 75*0A 00         [24]  328 	mov	_idlePage_empty_65536_55,#0x00
                                    329 ;	../UI_Manager/ui.c:189: static uint8_t tock = 0x00;
      000009 75*0B 00         [24]  330 	mov	_idlePage_tock_65536_55,#0x00
                                    331 ;	../UI_Manager/ui.c:190: static uint8_t iconChange = 0x00;
      00000C 75*0C 00         [24]  332 	mov	_idlePage_iconChange_65536_55,#0x00
                                    333 ;	../UI_Manager/ui.c:191: static uint8_t playing = PAUSE;
      00000F 75*0D 00         [24]  334 	mov	_idlePage_playing_65536_55,#0x00
                                    335 ;------------------------------------------------------------
                                    336 ;Allocation info for local variables in function 'saveLoadPage'
                                    337 ;------------------------------------------------------------
                                    338 ;slot                      Allocated with name '_saveLoadPage_slot_65536_134'
                                    339 ;action                    Allocated to registers r7 
                                    340 ;------------------------------------------------------------
                                    341 ;	../UI_Manager/ui.c:706: static uint8_t slot = 0;
      000012 75*0E 00         [24]  342 	mov	_saveLoadPage_slot_65536_134,#0x00
                                    343 ;	../UI_Manager/ui.c:12: static volatile uint8_t State = WELCOME_STATE;
      000015 75*00 45         [24]  344 	mov	_State,#0x45
                                    345 ;	../UI_Manager/ui.c:13: static volatile uint8_t Changed = CHANGE_SCREEN_X;
      000018 75*01 FF         [24]  346 	mov	_Changed,#0xff
                                    347 ;	../UI_Manager/ui.c:14: static volatile uint8_t changed = CHANGE_SCREEN_X;
      00001B 75*02 FF         [24]  348 	mov	_changed,#0xff
                                    349 ;--------------------------------------------------------
                                    350 ; Home
                                    351 ;--------------------------------------------------------
                                    352 	.area HOME    (CODE)
                                    353 	.area HOME    (CODE)
                                    354 ;--------------------------------------------------------
                                    355 ; code
                                    356 ;--------------------------------------------------------
                                    357 	.area CSEG    (CODE)
                                    358 ;------------------------------------------------------------
                                    359 ;Allocation info for local variables in function 'tick_ui'
                                    360 ;------------------------------------------------------------
                                    361 ;bursting                  Allocated with name '_tick_ui_bursting_65536_37'
                                    362 ;action                    Allocated to registers r7 
                                    363 ;ss                        Allocated to registers 
                                    364 ;delay                     Allocated with name '_tick_ui_delay_65536_37'
                                    365 ;------------------------------------------------------------
                                    366 ;	../UI_Manager/ui.c:16: void tick_ui(void){
                                    367 ;	-----------------------------------------
                                    368 ;	 function tick_ui
                                    369 ;	-----------------------------------------
      000000                        370 _tick_ui:
                           000007   371 	ar7 = 0x07
                           000006   372 	ar6 = 0x06
                           000005   373 	ar5 = 0x05
                           000004   374 	ar4 = 0x04
                           000003   375 	ar3 = 0x03
                           000002   376 	ar2 = 0x02
                           000001   377 	ar1 = 0x01
                           000000   378 	ar0 = 0x00
                                    379 ;	../UI_Manager/ui.c:18: uint8_t action = get_button_action();
      000000 12r00r00         [24]  380 	lcall	_get_button_action
      000003 AF 82            [24]  381 	mov	r7,dpl
                                    382 ;	../UI_Manager/ui.c:24: if(action == BUTTON_BURST || action == BUTTON_FUN_BURST){
      000005 E4               [12]  383 	clr	a
      000006 BF 05 01         [24]  384 	cjne	r7,#0x05,00387$
      000009 04               [12]  385 	inc	a
      00000A                        386 00387$:
      00000A FE               [12]  387 	mov	r6,a
      00000B 70 03            [24]  388 	jnz	00103$
      00000D BF 0B 21         [24]  389 	cjne	r7,#0x0b,00104$
      000010                        390 00103$:
                                    391 ;	../UI_Manager/ui.c:25: power_pump(action == (BUTTON_BURST) ? PUMP_OVERRIDE : PUMP_MASTER_OVERRIDE);
      000010 EE               [12]  392 	mov	a,r6
      000011 60 06            [24]  393 	jz	00166$
      000013 7D 02            [12]  394 	mov	r5,#0x02
      000015 7E 00            [12]  395 	mov	r6,#0x00
      000017 80 04            [24]  396 	sjmp	00167$
      000019                        397 00166$:
      000019 7D 03            [12]  398 	mov	r5,#0x03
      00001B 7E 00            [12]  399 	mov	r6,#0x00
      00001D                        400 00167$:
      00001D 8D 82            [24]  401 	mov	dpl,r5
      00001F C0 07            [24]  402 	push	ar7
      000021 12r00r00         [24]  403 	lcall	_power_pump
      000024 D0 07            [24]  404 	pop	ar7
                                    405 ;	../UI_Manager/ui.c:26: bursting |= BURSTING;
      000026 AD*03            [24]  406 	mov	r5,_tick_ui_bursting_65536_37
      000028 7E 00            [12]  407 	mov	r6,#0x00
      00002A 43 05 80         [24]  408 	orl	ar5,#0x80
      00002D 8D*03            [24]  409 	mov	_tick_ui_bursting_65536_37,r5
      00002F 80 12            [24]  410 	sjmp	00105$
      000031                        411 00104$:
                                    412 ;	../UI_Manager/ui.c:27: } else if(bursting & BURSTING){
      000031 E5*03            [12]  413 	mov	a,_tick_ui_bursting_65536_37
      000033 30 E7 0D         [24]  414 	jnb	acc.7,00105$
                                    415 ;	../UI_Manager/ui.c:28: power_pump(PUMP_OFF);
      000036 75 82 00         [24]  416 	mov	dpl,#0x00
      000039 C0 07            [24]  417 	push	ar7
      00003B 12r00r00         [24]  418 	lcall	_power_pump
      00003E D0 07            [24]  419 	pop	ar7
                                    420 ;	../UI_Manager/ui.c:29: bursting &= ~BURSTING;
      000040 53*03 7F         [24]  421 	anl	_tick_ui_bursting_65536_37,#0x7f
      000043                        422 00105$:
                                    423 ;	../UI_Manager/ui.c:33: if(action == BUTTON_MANUAL){
      000043 BF 07 34         [24]  424 	cjne	r7,#0x07,00108$
                                    425 ;	../UI_Manager/ui.c:34: set_runtime_data(OP_MODE_INDEX, VALUE, (get_runtime_data(OP_MODE_INDEX) == MODE_MANUAL) ? MODE_DMX : MODE_MANUAL);
      000046 75 82 10         [24]  426 	mov	dpl,#0x10
      000049 C0 07            [24]  427 	push	ar7
      00004B 12r00r00         [24]  428 	lcall	_get_runtime_data
      00004E AE 82            [24]  429 	mov	r6,dpl
      000050 D0 07            [24]  430 	pop	ar7
      000052 BE 80 06         [24]  431 	cjne	r6,#0x80,00168$
      000055 7D 00            [12]  432 	mov	r5,#0x00
      000057 7E 00            [12]  433 	mov	r6,#0x00
      000059 80 04            [24]  434 	sjmp	00169$
      00005B                        435 00168$:
      00005B 7D 80            [12]  436 	mov	r5,#0x80
      00005D 7E 00            [12]  437 	mov	r6,#0x00
      00005F                        438 00169$:
      00005F 8D*00            [24]  439 	mov	_set_runtime_data_PARM_3,r5
      000061 75*00 00         [24]  440 	mov	_set_runtime_data_PARM_2,#0x00
      000064 75 82 10         [24]  441 	mov	dpl,#0x10
      000067 C0 07            [24]  442 	push	ar7
      000069 12r00r00         [24]  443 	lcall	_set_runtime_data
                                    444 ;	../UI_Manager/ui.c:36: State = IDLE_STATE;
      00006C 75*00 00         [24]  445 	mov	_State,#0x00
                                    446 ;	../UI_Manager/ui.c:37: Changed = CHANGE_SCREEN_X;
      00006F 75*01 FF         [24]  447 	mov	_Changed,#0xff
                                    448 ;	../UI_Manager/ui.c:39: set_playing(RESET);
      000072 75*00 02         [24]  449 	mov	_Playing,#0x02
                                    450 ;	../UI_Manager/ui.c:41: tick_fogger();
      000075 12r00r00         [24]  451 	lcall	_tick_fogger
      000078 D0 07            [24]  452 	pop	ar7
      00007A                        453 00108$:
                                    454 ;	../UI_Manager/ui.c:46: if(action == BUTTON_TIMER){
      00007A BF 01 10         [24]  455 	cjne	r7,#0x01,00113$
                                    456 ;	../UI_Manager/ui.c:47: if(get_playing() == PLAY){
      00007D 74 01            [12]  457 	mov	a,#0x01
      00007F B5*00 05         [24]  458 	cjne	a,_Playing,00110$
                                    459 ;	../UI_Manager/ui.c:48: set_playing(RESET);
      000082 75*00 02         [24]  460 	mov	_Playing,#0x02
      000085 80 03            [24]  461 	sjmp	00111$
      000087                        462 00110$:
                                    463 ;	../UI_Manager/ui.c:50: set_playing(PLAY);
      000087 75*00 01         [24]  464 	mov	_Playing,#0x01
      00008A                        465 00111$:
                                    466 ;	../UI_Manager/ui.c:53: tick_fogger();
                                    467 ;	../UI_Manager/ui.c:55: return;
      00008A 02r00r00         [24]  468 	ljmp	_tick_fogger
      00008D                        469 00113$:
                                    470 ;	../UI_Manager/ui.c:59: if(action == BUTTON_FUN_MAN){
      00008D BF 08 02         [24]  471 	cjne	r7,#0x08,00402$
      000090 80 03            [24]  472 	sjmp	00403$
      000092                        473 00402$:
      000092 02r01r2B         [24]  474 	ljmp	00121$
      000095                        475 00403$:
                                    476 ;	../UI_Manager/ui.c:60: set_runtime_data(TANK_LIGHTS_INDEX, VALUE, ~get_runtime_data(TANK_LIGHTS_INDEX));
      000095 75 82 0F         [24]  477 	mov	dpl,#0x0f
      000098 12r00r00         [24]  478 	lcall	_get_runtime_data
      00009B E5 82            [12]  479 	mov	a,dpl
      00009D F4               [12]  480 	cpl	a
      00009E F5*00            [12]  481 	mov	_set_runtime_data_PARM_3,a
      0000A0 75*00 00         [24]  482 	mov	_set_runtime_data_PARM_2,#0x00
      0000A3 75 82 0F         [24]  483 	mov	dpl,#0x0f
      0000A6 12r00r00         [24]  484 	lcall	_set_runtime_data
                                    485 ;	../UI_Manager/ui.c:62: exe_command(CLEAR_DISPLAY);
      0000A9 90 80 00         [24]  486 	mov	dptr,#0x8000
      0000AC 12r00r00         [24]  487 	lcall	_exe_command
                                    488 ;	../UI_Manager/ui.c:63: if(get_runtime_data(TANK_LIGHTS_INDEX)){
      0000AF 75 82 0F         [24]  489 	mov	dpl,#0x0f
      0000B2 12r00r00         [24]  490 	lcall	_get_runtime_data
      0000B5 E5 82            [12]  491 	mov	a,dpl
      0000B7 60 17            [24]  492 	jz	00115$
                                    493 ;	../UI_Manager/ui.c:64: write_string("Tank Lights Off", 15, 0, LINE_0, NOT_SELECTED);
      0000B9 75*00 0F         [24]  494 	mov	_write_string_PARM_2,#0x0f
      0000BC 75*00 00         [24]  495 	mov	_write_string_PARM_3,#0x00
      0000BF 75*00 00         [24]  496 	mov	_write_string_PARM_4,#0x00
      0000C2 75*00 00         [24]  497 	mov	_write_string_PARM_5,#0x00
      0000C5 90r00r00         [24]  498 	mov	dptr,#___str_0
      0000C8 75 F0 80         [24]  499 	mov	b,#0x80
      0000CB 12r00r00         [24]  500 	lcall	_write_string
      0000CE 80 15            [24]  501 	sjmp	00116$
      0000D0                        502 00115$:
                                    503 ;	../UI_Manager/ui.c:66: write_string("Tank Lights On", 15, 0, LINE_0, NOT_SELECTED);
      0000D0 75*00 0F         [24]  504 	mov	_write_string_PARM_2,#0x0f
      0000D3 75*00 00         [24]  505 	mov	_write_string_PARM_3,#0x00
      0000D6 75*00 00         [24]  506 	mov	_write_string_PARM_4,#0x00
      0000D9 75*00 00         [24]  507 	mov	_write_string_PARM_5,#0x00
      0000DC 90r00r10         [24]  508 	mov	dptr,#___str_1
      0000DF 75 F0 80         [24]  509 	mov	b,#0x80
      0000E2 12r00r00         [24]  510 	lcall	_write_string
      0000E5                        511 00116$:
                                    512 ;	../UI_Manager/ui.c:69: write_string("Fun+Man to Undo", 15, 0, LINE_1, NOT_SELECTED);
      0000E5 75*00 0F         [24]  513 	mov	_write_string_PARM_2,#0x0f
      0000E8 75*00 00         [24]  514 	mov	_write_string_PARM_3,#0x00
      0000EB 75*00 01         [24]  515 	mov	_write_string_PARM_4,#0x01
      0000EE 75*00 00         [24]  516 	mov	_write_string_PARM_5,#0x00
      0000F1 90r00r1F         [24]  517 	mov	dptr,#___str_2
      0000F4 75 F0 80         [24]  518 	mov	b,#0x80
      0000F7 12r00r00         [24]  519 	lcall	_write_string
                                    520 ;	../UI_Manager/ui.c:73: while(delay--){ ;; }
      0000FA 75*04 B5         [24]  521 	mov	_tick_ui_delay_65536_37,#0xb5
      0000FD 75*05 D8         [24]  522 	mov	(_tick_ui_delay_65536_37 + 1),#0xd8
      000100 75*06 07         [24]  523 	mov	(_tick_ui_delay_65536_37 + 2),#0x07
      000103 75*07 00         [24]  524 	mov	(_tick_ui_delay_65536_37 + 3),#0x00
      000106                        525 00117$:
      000106 A8*04            [24]  526 	mov	r0,_tick_ui_delay_65536_37
      000108 A9*05            [24]  527 	mov	r1,(_tick_ui_delay_65536_37 + 1)
      00010A AA*06            [24]  528 	mov	r2,(_tick_ui_delay_65536_37 + 2)
      00010C AE*07            [24]  529 	mov	r6,(_tick_ui_delay_65536_37 + 3)
      00010E 15*04            [12]  530 	dec	_tick_ui_delay_65536_37
      000110 74 FF            [12]  531 	mov	a,#0xff
      000112 B5*04 0C         [24]  532 	cjne	a,_tick_ui_delay_65536_37,00405$
      000115 15*05            [12]  533 	dec	(_tick_ui_delay_65536_37 + 1)
      000117 B5*05 07         [24]  534 	cjne	a,(_tick_ui_delay_65536_37 + 1),00405$
      00011A 15*06            [12]  535 	dec	(_tick_ui_delay_65536_37 + 2)
      00011C B5*06 02         [24]  536 	cjne	a,(_tick_ui_delay_65536_37 + 2),00405$
      00011F 15*07            [12]  537 	dec	(_tick_ui_delay_65536_37 + 3)
      000121                        538 00405$:
      000121 E8               [12]  539 	mov	a,r0
      000122 49               [12]  540 	orl	a,r1
      000123 4A               [12]  541 	orl	a,r2
      000124 4E               [12]  542 	orl	a,r6
      000125 70 DF            [24]  543 	jnz	00117$
                                    544 ;	../UI_Manager/ui.c:75: Changed = CHANGE_SCREEN_X;
      000127 75*01 FF         [24]  545 	mov	_Changed,#0xff
                                    546 ;	../UI_Manager/ui.c:77: return;
      00012A 22               [24]  547 	ret
      00012B                        548 00121$:
                                    549 ;	../UI_Manager/ui.c:81: if(action == BUTTON_MAN_BURST){
      00012B BF 09 02         [24]  550 	cjne	r7,#0x09,00407$
      00012E 80 03            [24]  551 	sjmp	00408$
      000130                        552 00407$:
      000130 02r01rDB         [24]  553 	ljmp	00126$
      000133                        554 00408$:
                                    555 ;	../UI_Manager/ui.c:83: ss = bursting & ~BURSTING;
      000133 74 7F            [12]  556 	mov	a,#0x7f
      000135 55*03            [12]  557 	anl	a,_tick_ui_bursting_65536_37
      000137 FE               [12]  558 	mov	r6,a
                                    559 ;	../UI_Manager/ui.c:85: exe_command(CLEAR_DISPLAY);
      000138 90 80 00         [24]  560 	mov	dptr,#0x8000
      00013B C0 06            [24]  561 	push	ar6
      00013D 12r00r00         [24]  562 	lcall	_exe_command
      000140 D0 06            [24]  563 	pop	ar6
                                    564 ;	../UI_Manager/ui.c:87: write_string(getString(SECRET_STRING_OFFSET + (ss % 3)*2), LINE_LENGTH, 0, LINE_0, NOT_SELECTED);
      000142 8E 04            [24]  565 	mov	ar4,r6
      000144 7D 00            [12]  566 	mov	r5,#0x00
      000146 75*00 03         [24]  567 	mov	__modsint_PARM_2,#0x03
                                    568 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      000149 8D*01            [24]  569 	mov	(__modsint_PARM_2 + 1),r5
      00014B 8C 82            [24]  570 	mov	dpl,r4
      00014D 8D 83            [24]  571 	mov	dph,r5
      00014F C0 06            [24]  572 	push	ar6
      000151 12r00r00         [24]  573 	lcall	__modsint
      000154 E5 82            [12]  574 	mov	a,dpl
      000156 FC               [12]  575 	mov	r4,a
      000157 2C               [12]  576 	add	a,r4
      000158 FC               [12]  577 	mov	r4,a
      000159 24 28            [12]  578 	add	a,#0x28
      00015B F5 82            [12]  579 	mov	dpl,a
      00015D C0 04            [24]  580 	push	ar4
      00015F 12r0ErD7         [24]  581 	lcall	_getString
      000162 AA 82            [24]  582 	mov	r2,dpl
      000164 AB 83            [24]  583 	mov	r3,dph
      000166 AD F0            [24]  584 	mov	r5,b
      000168 75*00 10         [24]  585 	mov	_write_string_PARM_2,#0x10
      00016B 75*00 00         [24]  586 	mov	_write_string_PARM_3,#0x00
      00016E 75*00 00         [24]  587 	mov	_write_string_PARM_4,#0x00
      000171 75*00 00         [24]  588 	mov	_write_string_PARM_5,#0x00
      000174 8A 82            [24]  589 	mov	dpl,r2
      000176 8B 83            [24]  590 	mov	dph,r3
      000178 8D F0            [24]  591 	mov	b,r5
      00017A 12r00r00         [24]  592 	lcall	_write_string
      00017D D0 04            [24]  593 	pop	ar4
                                    594 ;	../UI_Manager/ui.c:88: write_string(getString(SECRET_STRING_OFFSET + (ss % 3)*2 + 1), LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      00017F 74 29            [12]  595 	mov	a,#0x29
      000181 2C               [12]  596 	add	a,r4
      000182 F5 82            [12]  597 	mov	dpl,a
      000184 12r0ErD7         [24]  598 	lcall	_getString
      000187 AB 82            [24]  599 	mov	r3,dpl
      000189 AC 83            [24]  600 	mov	r4,dph
      00018B AD F0            [24]  601 	mov	r5,b
      00018D 75*00 10         [24]  602 	mov	_write_string_PARM_2,#0x10
      000190 75*00 00         [24]  603 	mov	_write_string_PARM_3,#0x00
      000193 75*00 01         [24]  604 	mov	_write_string_PARM_4,#0x01
      000196 75*00 00         [24]  605 	mov	_write_string_PARM_5,#0x00
      000199 8B 82            [24]  606 	mov	dpl,r3
      00019B 8C 83            [24]  607 	mov	dph,r4
      00019D 8D F0            [24]  608 	mov	b,r5
      00019F 12r00r00         [24]  609 	lcall	_write_string
      0001A2 D0 06            [24]  610 	pop	ar6
                                    611 ;	../UI_Manager/ui.c:90: ss++;
      0001A4 EE               [12]  612 	mov	a,r6
      0001A5 04               [12]  613 	inc	a
                                    614 ;	../UI_Manager/ui.c:92: bursting |= (ss & ~BURSTING);
      0001A6 54 7F            [12]  615 	anl	a,#0x7f
      0001A8 42*03            [12]  616 	orl	_tick_ui_bursting_65536_37,a
                                    617 ;	../UI_Manager/ui.c:96: while(delay--){ ;; }
      0001AA 75*04 DD         [24]  618 	mov	_tick_ui_delay_65536_37,#0xdd
      0001AD 75*05 8A         [24]  619 	mov	(_tick_ui_delay_65536_37 + 1),#0x8a
      0001B0 75*06 14         [24]  620 	mov	(_tick_ui_delay_65536_37 + 2),#0x14
      0001B3 75*07 00         [24]  621 	mov	(_tick_ui_delay_65536_37 + 3),#0x00
      0001B6                        622 00122$:
      0001B6 A8*04            [24]  623 	mov	r0,_tick_ui_delay_65536_37
      0001B8 A9*05            [24]  624 	mov	r1,(_tick_ui_delay_65536_37 + 1)
      0001BA AA*06            [24]  625 	mov	r2,(_tick_ui_delay_65536_37 + 2)
      0001BC AE*07            [24]  626 	mov	r6,(_tick_ui_delay_65536_37 + 3)
      0001BE 15*04            [12]  627 	dec	_tick_ui_delay_65536_37
      0001C0 74 FF            [12]  628 	mov	a,#0xff
      0001C2 B5*04 0C         [24]  629 	cjne	a,_tick_ui_delay_65536_37,00409$
      0001C5 15*05            [12]  630 	dec	(_tick_ui_delay_65536_37 + 1)
      0001C7 B5*05 07         [24]  631 	cjne	a,(_tick_ui_delay_65536_37 + 1),00409$
      0001CA 15*06            [12]  632 	dec	(_tick_ui_delay_65536_37 + 2)
      0001CC B5*06 02         [24]  633 	cjne	a,(_tick_ui_delay_65536_37 + 2),00409$
      0001CF 15*07            [12]  634 	dec	(_tick_ui_delay_65536_37 + 3)
      0001D1                        635 00409$:
      0001D1 E8               [12]  636 	mov	a,r0
      0001D2 49               [12]  637 	orl	a,r1
      0001D3 4A               [12]  638 	orl	a,r2
      0001D4 4E               [12]  639 	orl	a,r6
      0001D5 70 DF            [24]  640 	jnz	00122$
                                    641 ;	../UI_Manager/ui.c:98: Changed = CHANGE_SCREEN_X;
      0001D7 75*01 FF         [24]  642 	mov	_Changed,#0xff
                                    643 ;	../UI_Manager/ui.c:100: return;
      0001DA 22               [24]  644 	ret
      0001DB                        645 00126$:
                                    646 ;	../UI_Manager/ui.c:104: if(action == BUTTON_FUN_TIME){
      0001DB BF 04 06         [24]  647 	cjne	r7,#0x04,00128$
                                    648 ;	../UI_Manager/ui.c:105: State = IDLE_STATE;
      0001DE 75*00 00         [24]  649 	mov	_State,#0x00
                                    650 ;	../UI_Manager/ui.c:106: Changed = CHANGE_SCREEN_X;
      0001E1 75*01 FF         [24]  651 	mov	_Changed,#0xff
      0001E4                        652 00128$:
                                    653 ;	../UI_Manager/ui.c:111: if(Changed || 
      0001E4 E5*01            [12]  654 	mov	a,_Changed
      0001E6 70 2D            [24]  655 	jnz	00153$
                                    656 ;	../UI_Manager/ui.c:112: action == BUTTON_UP ||
      0001E8 BF 03 02         [24]  657 	cjne	r7,#0x03,00414$
      0001EB 80 28            [24]  658 	sjmp	00153$
      0001ED                        659 00414$:
                                    660 ;	../UI_Manager/ui.c:113: action == BUTTON_UP_HOLD||
      0001ED BF 1E 02         [24]  661 	cjne	r7,#0x1e,00415$
      0001F0 80 23            [24]  662 	sjmp	00153$
      0001F2                        663 00415$:
                                    664 ;	../UI_Manager/ui.c:114: action == BUTTON_UP_BURST ||
      0001F2 BF 1F 02         [24]  665 	cjne	r7,#0x1f,00416$
      0001F5 80 1E            [24]  666 	sjmp	00153$
      0001F7                        667 00416$:
                                    668 ;	../UI_Manager/ui.c:115: action == BUTTON_DOWN ||
      0001F7 BF 0A 02         [24]  669 	cjne	r7,#0x0a,00417$
      0001FA 80 19            [24]  670 	sjmp	00153$
      0001FC                        671 00417$:
                                    672 ;	../UI_Manager/ui.c:116: action == BUTTON_DOWN_HOLD ||
      0001FC BF 64 02         [24]  673 	cjne	r7,#0x64,00418$
      0001FF 80 14            [24]  674 	sjmp	00153$
      000201                        675 00418$:
                                    676 ;	../UI_Manager/ui.c:117: action == BUTTON_DOWN_BURST ||
      000201 BF 65 02         [24]  677 	cjne	r7,#0x65,00419$
      000204 80 0F            [24]  678 	sjmp	00153$
      000206                        679 00419$:
                                    680 ;	../UI_Manager/ui.c:118: action == BUTTON_FUN_UP ||
      000206 BF 0C 02         [24]  681 	cjne	r7,#0x0c,00420$
      000209 80 0A            [24]  682 	sjmp	00153$
      00020B                        683 00420$:
                                    684 ;	../UI_Manager/ui.c:119: action == BUTTON_FUNCTION ||
      00020B BF 02 02         [24]  685 	cjne	r7,#0x02,00421$
      00020E 80 05            [24]  686 	sjmp	00153$
      000210                        687 00421$:
                                    688 ;	../UI_Manager/ui.c:120: State == IDLE_STATE){
      000210 E5*00            [12]  689 	mov	a,_State
      000212 60 01            [24]  690 	jz	00422$
      000214 22               [24]  691 	ret
      000215                        692 00422$:
      000215                        693 00153$:
                                    694 ;	../UI_Manager/ui.c:122: switch (State)
      000215 AE*00            [24]  695 	mov	r6,_State
      000217 BE 01 03         [24]  696 	cjne	r6,#0x01,00423$
      00021A 02r02rA9         [24]  697 	ljmp	00130$
      00021D                        698 00423$:
      00021D BE 02 03         [24]  699 	cjne	r6,#0x02,00424$
      000220 02r02rB3         [24]  700 	ljmp	00132$
      000223                        701 00424$:
      000223 BE 03 03         [24]  702 	cjne	r6,#0x03,00425$
      000226 02r02rAE         [24]  703 	ljmp	00131$
      000229                        704 00425$:
      000229 BE 04 03         [24]  705 	cjne	r6,#0x04,00426$
      00022C 02r02rB8         [24]  706 	ljmp	00133$
      00022F                        707 00426$:
      00022F BE 05 03         [24]  708 	cjne	r6,#0x05,00427$
      000232 02r02rBD         [24]  709 	ljmp	00134$
      000235                        710 00427$:
      000235 BE 06 03         [24]  711 	cjne	r6,#0x06,00428$
      000238 02r02rC2         [24]  712 	ljmp	00138$
      00023B                        713 00428$:
      00023B BE 07 03         [24]  714 	cjne	r6,#0x07,00429$
      00023E 02r02rC2         [24]  715 	ljmp	00138$
      000241                        716 00429$:
      000241 BE 08 03         [24]  717 	cjne	r6,#0x08,00430$
      000244 02r02rC2         [24]  718 	ljmp	00138$
      000247                        719 00430$:
      000247 BE 09 02         [24]  720 	cjne	r6,#0x09,00431$
      00024A 80 76            [24]  721 	sjmp	00138$
      00024C                        722 00431$:
      00024C BE 0A 02         [24]  723 	cjne	r6,#0x0a,00432$
      00024F 80 76            [24]  724 	sjmp	00141$
      000251                        725 00432$:
      000251 BE 0B 02         [24]  726 	cjne	r6,#0x0b,00433$
      000254 80 71            [24]  727 	sjmp	00141$
      000256                        728 00433$:
      000256 BE 0C 02         [24]  729 	cjne	r6,#0x0c,00434$
      000259 80 6C            [24]  730 	sjmp	00141$
      00025B                        731 00434$:
      00025B BE 0D 02         [24]  732 	cjne	r6,#0x0d,00435$
      00025E 80 6C            [24]  733 	sjmp	00143$
      000260                        734 00435$:
      000260 BE 0E 02         [24]  735 	cjne	r6,#0x0e,00436$
      000263 80 67            [24]  736 	sjmp	00143$
      000265                        737 00436$:
      000265 BE 14 02         [24]  738 	cjne	r6,#0x14,00437$
      000268 80 67            [24]  739 	sjmp	00144$
      00026A                        740 00437$:
      00026A BE 15 02         [24]  741 	cjne	r6,#0x15,00438$
      00026D 80 67            [24]  742 	sjmp	00145$
      00026F                        743 00438$:
      00026F BE 45 69         [24]  744 	cjne	r6,#0x45,00146$
                                    745 ;	../UI_Manager/ui.c:127: exe_command(CLEAR_DISPLAY);
      000272 90 80 00         [24]  746 	mov	dptr,#0x8000
      000275 12r00r00         [24]  747 	lcall	_exe_command
                                    748 ;	../UI_Manager/ui.c:128: write_string("AtmosFEAR 221B", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      000278 75*00 10         [24]  749 	mov	_write_string_PARM_2,#0x10
      00027B 75*00 01         [24]  750 	mov	_write_string_PARM_3,#0x01
      00027E 75*00 00         [24]  751 	mov	_write_string_PARM_4,#0x00
      000281 75*00 00         [24]  752 	mov	_write_string_PARM_5,#0x00
      000284 90r00r2F         [24]  753 	mov	dptr,#___str_3
      000287 75 F0 80         [24]  754 	mov	b,#0x80
      00028A 12r00r00         [24]  755 	lcall	_write_string
                                    756 ;	../UI_Manager/ui.c:129: write_string("By Blizzard Pro", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      00028D 75*00 10         [24]  757 	mov	_write_string_PARM_2,#0x10
      000290 75*00 00         [24]  758 	mov	_write_string_PARM_3,#0x00
      000293 75*00 01         [24]  759 	mov	_write_string_PARM_4,#0x01
      000296 75*00 00         [24]  760 	mov	_write_string_PARM_5,#0x00
      000299 90r00r3E         [24]  761 	mov	dptr,#___str_4
      00029C 75 F0 80         [24]  762 	mov	b,#0x80
      00029F 12r00r00         [24]  763 	lcall	_write_string
                                    764 ;	../UI_Manager/ui.c:131: Changed = CHANGE_SCREEN_X;
      0002A2 75*01 FF         [24]  765 	mov	_Changed,#0xff
                                    766 ;	../UI_Manager/ui.c:132: State = IDLE_STATE;
      0002A5 75*00 00         [24]  767 	mov	_State,#0x00
                                    768 ;	../UI_Manager/ui.c:134: break;
                                    769 ;	../UI_Manager/ui.c:135: case MANUAL_FOG_POWER_STATE:
      0002A8 22               [24]  770 	ret
      0002A9                        771 00130$:
                                    772 ;	../UI_Manager/ui.c:136: fogLevelPage(action);
      0002A9 8F 82            [24]  773 	mov	dpl,r7
                                    774 ;	../UI_Manager/ui.c:137: break;
                                    775 ;	../UI_Manager/ui.c:138: case MANUAL_FOG_INTERVAL_STATE:
      0002AB 02r05rBA         [24]  776 	ljmp	_fogLevelPage
      0002AE                        777 00131$:
                                    778 ;	../UI_Manager/ui.c:139: fogIntervalPage(action);
      0002AE 8F 82            [24]  779 	mov	dpl,r7
                                    780 ;	../UI_Manager/ui.c:140: break;
                                    781 ;	../UI_Manager/ui.c:141: case MANUAL_FOG_DURATION_STATE:
      0002B0 02r06rEC         [24]  782 	ljmp	_fogIntervalPage
      0002B3                        783 00132$:
                                    784 ;	../UI_Manager/ui.c:142: fogDurationPage(action);
      0002B3 8F 82            [24]  785 	mov	dpl,r7
                                    786 ;	../UI_Manager/ui.c:143: break;
                                    787 ;	../UI_Manager/ui.c:144: case MANUAL_COLOR_MACRO_STATE:
      0002B5 02r07r9B         [24]  788 	ljmp	_fogDurationPage
      0002B8                        789 00133$:
                                    790 ;	../UI_Manager/ui.c:145: macroPage(action);
      0002B8 8F 82            [24]  791 	mov	dpl,r7
                                    792 ;	../UI_Manager/ui.c:146: break;
                                    793 ;	../UI_Manager/ui.c:147: case MANUAL_MACRO_SPEED_STATE:
      0002BA 02r08r4A         [24]  794 	ljmp	_macroPage
      0002BD                        795 00134$:
                                    796 ;	../UI_Manager/ui.c:148: macroSpeedPage(action);
      0002BD 8F 82            [24]  797 	mov	dpl,r7
                                    798 ;	../UI_Manager/ui.c:149: break;
                                    799 ;	../UI_Manager/ui.c:153: case MANUAL_STROBE_STATE:
      0002BF 02r08rF6         [24]  800 	ljmp	_macroSpeedPage
      0002C2                        801 00138$:
                                    802 ;	../UI_Manager/ui.c:154: colorPage(action);
      0002C2 8F 82            [24]  803 	mov	dpl,r7
                                    804 ;	../UI_Manager/ui.c:155: break;
                                    805 ;	../UI_Manager/ui.c:158: case MANUAL_REMOTE_ACTION_6_STATE:
      0002C4 02r09rC3         [24]  806 	ljmp	_colorPage
      0002C7                        807 00141$:
                                    808 ;	../UI_Manager/ui.c:159: remotePage(action);
      0002C7 8F 82            [24]  809 	mov	dpl,r7
                                    810 ;	../UI_Manager/ui.c:160: break;
                                    811 ;	../UI_Manager/ui.c:162: case MANUAL_SAVE_SETTINGS_STATE:
      0002C9 02r0ArD9         [24]  812 	ljmp	_remotePage
      0002CC                        813 00143$:
                                    814 ;	../UI_Manager/ui.c:163: saveLoadPage(action);
      0002CC 8F 82            [24]  815 	mov	dpl,r7
                                    816 ;	../UI_Manager/ui.c:164: break;
                                    817 ;	../UI_Manager/ui.c:165: case DMX_ADDRESS_STATE:
      0002CE 02r0BrF7         [24]  818 	ljmp	_saveLoadPage
      0002D1                        819 00144$:
                                    820 ;	../UI_Manager/ui.c:166: dmxAddressPage(action);
      0002D1 8F 82            [24]  821 	mov	dpl,r7
                                    822 ;	../UI_Manager/ui.c:167: break;
                                    823 ;	../UI_Manager/ui.c:168: case DMX_CHANNEL_MODE_STATE:
      0002D3 02r0Dr0F         [24]  824 	ljmp	_dmxAddressPage
      0002D6                        825 00145$:
                                    826 ;	../UI_Manager/ui.c:169: dmxChannelPage(action);
      0002D6 8F 82            [24]  827 	mov	dpl,r7
                                    828 ;	../UI_Manager/ui.c:170: break;
                                    829 ;	../UI_Manager/ui.c:171: default: //IDLE state
      0002D8 02r0Dr93         [24]  830 	ljmp	_dmxChannelPage
      0002DB                        831 00146$:
                                    832 ;	../UI_Manager/ui.c:172: idlePage();
      0002DB C0 07            [24]  833 	push	ar7
      0002DD 12r02rFB         [24]  834 	lcall	_idlePage
      0002E0 D0 07            [24]  835 	pop	ar7
                                    836 ;	../UI_Manager/ui.c:174: if(action == BUTTON_FUNCTION){
      0002E2 BF 02 09         [24]  837 	cjne	r7,#0x02,00150$
                                    838 ;	../UI_Manager/ui.c:175: set_ui_state(INC, NULL);
      0002E5 75*0F 00         [24]  839 	mov	_set_ui_state_PARM_2,#0x00
      0002E8 75 82 01         [24]  840 	mov	dpl,#0x01
      0002EB 02r0Er35         [24]  841 	ljmp	_set_ui_state
      0002EE                        842 00150$:
                                    843 ;	../UI_Manager/ui.c:176: } else if(action == BUTTON_FUN_UP){
      0002EE BF 0C 09         [24]  844 	cjne	r7,#0x0c,00164$
                                    845 ;	../UI_Manager/ui.c:177: set_ui_state(DEC, NULL);
      0002F1 75*0F 00         [24]  846 	mov	_set_ui_state_PARM_2,#0x00
      0002F4 75 82 02         [24]  847 	mov	dpl,#0x02
                                    848 ;	../UI_Manager/ui.c:180: }
                                    849 ;	../UI_Manager/ui.c:183: }
      0002F7 02r0Er35         [24]  850 	ljmp	_set_ui_state
      0002FA                        851 00164$:
      0002FA 22               [24]  852 	ret
                                    853 ;------------------------------------------------------------
                                    854 ;Allocation info for local variables in function 'idlePage'
                                    855 ;------------------------------------------------------------
                                    856 ;timer                     Allocated with name '_idlePage_timer_65536_55'
                                    857 ;intervalOrDuration        Allocated with name '_idlePage_intervalOrDuration_65536_55'
                                    858 ;empty                     Allocated with name '_idlePage_empty_65536_55'
                                    859 ;tock                      Allocated with name '_idlePage_tock_65536_55'
                                    860 ;iconChange                Allocated with name '_idlePage_iconChange_65536_55'
                                    861 ;playing                   Allocated with name '_idlePage_playing_65536_55'
                                    862 ;temp                      Allocated to registers r7 
                                    863 ;------------------------------------------------------------
                                    864 ;	../UI_Manager/ui.c:185: void idlePage(){
                                    865 ;	-----------------------------------------
                                    866 ;	 function idlePage
                                    867 ;	-----------------------------------------
      0002FB                        868 _idlePage:
                                    869 ;	../UI_Manager/ui.c:194: if(Changed){
      0002FB E5*01            [12]  870 	mov	a,_Changed
      0002FD 70 03            [24]  871 	jnz	00314$
      0002FF 02r03rE2         [24]  872 	ljmp	00116$
      000302                        873 00314$:
                                    874 ;	../UI_Manager/ui.c:195: exe_command(CLEAR_DISPLAY);
      000302 90 80 00         [24]  875 	mov	dptr,#0x8000
      000305 12r00r00         [24]  876 	lcall	_exe_command
                                    877 ;	../UI_Manager/ui.c:196: Changed = 0x00;
      000308 75*01 00         [24]  878 	mov	_Changed,#0x00
                                    879 ;	../UI_Manager/ui.c:197: changed = 0xFF;
      00030B 75*02 FF         [24]  880 	mov	_changed,#0xff
                                    881 ;	../UI_Manager/ui.c:198: timer = 0xFF;
      00030E 75*08 FF         [24]  882 	mov	_idlePage_timer_65536_55,#0xff
                                    883 ;	../UI_Manager/ui.c:199: intervalOrDuration = 0x55; //guaranteed to not be interval or duration
      000311 75*09 55         [24]  884 	mov	_idlePage_intervalOrDuration_65536_55,#0x55
                                    885 ;	../UI_Manager/ui.c:202: if(get_fog_fluid_level() == TANK_EMPTY && get_heated()){
      000314 E5*00            [12]  886 	mov	a,_Fluid_Level
      000316 70 33            [24]  887 	jnz	00102$
      000318 E5*00            [12]  888 	mov	a,_Heat_Flag
      00031A 30 E7 2E         [24]  889 	jnb	acc.7,00102$
                                    890 ;	../UI_Manager/ui.c:204: write_string("PC Load Letter", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      00031D 75*00 10         [24]  891 	mov	_write_string_PARM_2,#0x10
      000320 75*00 01         [24]  892 	mov	_write_string_PARM_3,#0x01
      000323 75*00 00         [24]  893 	mov	_write_string_PARM_4,#0x00
      000326 75*00 00         [24]  894 	mov	_write_string_PARM_5,#0x00
      000329 90r00r4E         [24]  895 	mov	dptr,#___str_5
      00032C 75 F0 80         [24]  896 	mov	b,#0x80
      00032F 12r00r00         [24]  897 	lcall	_write_string
                                    898 ;	../UI_Manager/ui.c:205: write_string("Burst to Refill", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      000332 75*00 10         [24]  899 	mov	_write_string_PARM_2,#0x10
      000335 75*00 00         [24]  900 	mov	_write_string_PARM_3,#0x00
      000338 75*00 01         [24]  901 	mov	_write_string_PARM_4,#0x01
      00033B 75*00 00         [24]  902 	mov	_write_string_PARM_5,#0x00
      00033E 90r00r5D         [24]  903 	mov	dptr,#___str_6
      000341 75 F0 80         [24]  904 	mov	b,#0x80
      000344 12r00r00         [24]  905 	lcall	_write_string
                                    906 ;	../UI_Manager/ui.c:207: empty = 0xFF;
      000347 75*0A FF         [24]  907 	mov	_idlePage_empty_65536_55,#0xff
                                    908 ;	../UI_Manager/ui.c:209: return;
      00034A 22               [24]  909 	ret
      00034B                        910 00102$:
                                    911 ;	../UI_Manager/ui.c:212: if(empty){
      00034B E5*0A            [12]  912 	mov	a,_idlePage_empty_65536_55
      00034D 60 0C            [24]  913 	jz	00107$
                                    914 ;	../UI_Manager/ui.c:213: if(get_fog_fluid_level() == TANK_FULL){
      00034F 74 01            [12]  915 	mov	a,#0x01
      000351 B5*00 06         [24]  916 	cjne	a,_Fluid_Level,00105$
                                    917 ;	../UI_Manager/ui.c:214: empty = 0x00;
      000354 75*0A 00         [24]  918 	mov	_idlePage_empty_65536_55,#0x00
                                    919 ;	../UI_Manager/ui.c:215: Changed = CHANGE_SCREEN_X;
      000357 75*01 FF         [24]  920 	mov	_Changed,#0xff
      00035A                        921 00105$:
                                    922 ;	../UI_Manager/ui.c:218: return;
      00035A 22               [24]  923 	ret
      00035B                        924 00107$:
                                    925 ;	../UI_Manager/ui.c:221: if(get_runtime_data(OP_MODE_INDEX)){ /* Manual Mode */
      00035B 75 82 10         [24]  926 	mov	dpl,#0x10
      00035E 12r00r00         [24]  927 	lcall	_get_runtime_data
      000361 E5 82            [12]  928 	mov	a,dpl
      000363 60 17            [24]  929 	jz	00113$
                                    930 ;	../UI_Manager/ui.c:222: write_string("Manual Mode", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      000365 75*00 10         [24]  931 	mov	_write_string_PARM_2,#0x10
      000368 75*00 01         [24]  932 	mov	_write_string_PARM_3,#0x01
      00036B 75*00 00         [24]  933 	mov	_write_string_PARM_4,#0x00
      00036E 75*00 00         [24]  934 	mov	_write_string_PARM_5,#0x00
      000371 90r00r6D         [24]  935 	mov	dptr,#___str_7
      000374 75 F0 80         [24]  936 	mov	b,#0x80
      000377 12r00r00         [24]  937 	lcall	_write_string
      00037A 80 66            [24]  938 	sjmp	00116$
      00037C                        939 00113$:
                                    940 ;	../UI_Manager/ui.c:225: write_number(get_dmx_address(), 4, LINE_1, NOT_SELECTED);
      00037C 12r00r00         [24]  941 	lcall	_get_dmx_address
      00037F 75*00 04         [24]  942 	mov	_write_number_PARM_2,#0x04
      000382 75*00 01         [24]  943 	mov	_write_number_PARM_3,#0x01
      000385 75*00 00         [24]  944 	mov	_write_number_PARM_4,#0x00
      000388 12r00r00         [24]  945 	lcall	_write_number
                                    946 ;	../UI_Manager/ui.c:226: switch (get_runtime_data(MODE_INDEX))
      00038B 75 82 0E         [24]  947 	mov	dpl,#0x0e
      00038E 12r00r00         [24]  948 	lcall	_get_runtime_data
      000391 AF 82            [24]  949 	mov	r7,dpl
      000393 BF 01 02         [24]  950 	cjne	r7,#0x01,00321$
      000396 80 05            [24]  951 	sjmp	00108$
      000398                        952 00321$:
                                    953 ;	../UI_Manager/ui.c:228: case OPTION_DMX_MODE_3:
      000398 BF 02 0A         [24]  954 	cjne	r7,#0x02,00110$
      00039B 80 04            [24]  955 	sjmp	00109$
      00039D                        956 00108$:
                                    957 ;	../UI_Manager/ui.c:229: temp = 3;
      00039D 7F 03            [12]  958 	mov	r7,#0x03
                                    959 ;	../UI_Manager/ui.c:230: break;
                                    960 ;	../UI_Manager/ui.c:231: case OPTION_DMX_MODE_1: 
      00039F 80 06            [24]  961 	sjmp	00111$
      0003A1                        962 00109$:
                                    963 ;	../UI_Manager/ui.c:232: temp = 1;
      0003A1 7F 01            [12]  964 	mov	r7,#0x01
                                    965 ;	../UI_Manager/ui.c:233: break;
                                    966 ;	../UI_Manager/ui.c:234: default:
      0003A3 80 02            [24]  967 	sjmp	00111$
      0003A5                        968 00110$:
                                    969 ;	../UI_Manager/ui.c:235: temp = 10;
      0003A5 7F 0A            [12]  970 	mov	r7,#0x0a
                                    971 ;	../UI_Manager/ui.c:237: }
      0003A7                        972 00111$:
                                    973 ;	../UI_Manager/ui.c:238: write_number(temp, 12, LINE_1, NOT_SELECTED);
      0003A7 7E 00            [12]  974 	mov	r6,#0x00
      0003A9 75*00 0C         [24]  975 	mov	_write_number_PARM_2,#0x0c
      0003AC 75*00 01         [24]  976 	mov	_write_number_PARM_3,#0x01
                                    977 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      0003AF 8E*00            [24]  978 	mov	_write_number_PARM_4,r6
      0003B1 8F 82            [24]  979 	mov	dpl,r7
      0003B3 8E 83            [24]  980 	mov	dph,r6
      0003B5 12r00r00         [24]  981 	lcall	_write_number
                                    982 ;	../UI_Manager/ui.c:240: write_string("Addr", sizeof("Addr") - 1, 0, LINE_1, NOT_SELECTED);
      0003B8 75*00 04         [24]  983 	mov	_write_string_PARM_2,#0x04
      0003BB 75*00 00         [24]  984 	mov	_write_string_PARM_3,#0x00
      0003BE 75*00 01         [24]  985 	mov	_write_string_PARM_4,#0x01
      0003C1 75*00 00         [24]  986 	mov	_write_string_PARM_5,#0x00
      0003C4 90r00r79         [24]  987 	mov	dptr,#___str_8
      0003C7 75 F0 80         [24]  988 	mov	b,#0x80
      0003CA 12r00r00         [24]  989 	lcall	_write_string
                                    990 ;	../UI_Manager/ui.c:241: write_string("Mode", sizeof("Mode") - 1, 9, LINE_1, NOT_SELECTED);
      0003CD 75*00 04         [24]  991 	mov	_write_string_PARM_2,#0x04
      0003D0 75*00 09         [24]  992 	mov	_write_string_PARM_3,#0x09
      0003D3 75*00 01         [24]  993 	mov	_write_string_PARM_4,#0x01
      0003D6 75*00 00         [24]  994 	mov	_write_string_PARM_5,#0x00
      0003D9 90r00r7E         [24]  995 	mov	dptr,#___str_9
      0003DC 75 F0 80         [24]  996 	mov	b,#0x80
      0003DF 12r00r00         [24]  997 	lcall	_write_string
      0003E2                        998 00116$:
                                    999 ;	../UI_Manager/ui.c:249: tock++;
      0003E2 05*0B            [12] 1000 	inc	_idlePage_tock_65536_55
                                   1001 ;	../UI_Manager/ui.c:250: if(get_playing() == PLAY){
      0003E4 74 01            [12] 1002 	mov	a,#0x01
      0003E6 B5*00 55         [24] 1003 	cjne	a,_Playing,00134$
                                   1004 ;	../UI_Manager/ui.c:251: if(playing == PAUSE){
      0003E9 E5*0D            [12] 1005 	mov	a,_idlePage_playing_65536_55
                                   1006 ;	../UI_Manager/ui.c:252: iconChange |= PLAY_CHANGE;
      0003EB 70 08            [24] 1007 	jnz	00118$
      0003ED AE*0C            [24] 1008 	mov	r6,_idlePage_iconChange_65536_55
      0003EF FF               [12] 1009 	mov	r7,a
      0003F0 43 06 20         [24] 1010 	orl	ar6,#0x20
      0003F3 8E*0C            [24] 1011 	mov	_idlePage_iconChange_65536_55,r6
      0003F5                       1012 00118$:
                                   1013 ;	../UI_Manager/ui.c:255: if(get_interval_or_duration() == INTERVAL){
      0003F5 E5*00            [12] 1014 	mov	a,_Interval_Or_Duration
      0003F7 70 16            [24] 1015 	jnz	00127$
                                   1016 ;	../UI_Manager/ui.c:257: if(iconChange & PLAY_CHANGE){
      0003F9 E5*0C            [12] 1017 	mov	a,_idlePage_iconChange_65536_55
      0003FB 30 E5 35         [24] 1018 	jnb	acc.5,00128$
                                   1019 ;	../UI_Manager/ui.c:258: write_char(CHAR_PLAY, PLAY_ICON_INDEX, LINE_0);
      0003FE 75*00 0E         [24] 1020 	mov	_write_char_PARM_2,#0x0e
      000401 75*00 00         [24] 1021 	mov	_write_char_PARM_3,#0x00
      000404 75 82 80         [24] 1022 	mov	dpl,#0x80
      000407 12r00r00         [24] 1023 	lcall	_write_char
                                   1024 ;	../UI_Manager/ui.c:259: iconChange &= ~PLAY_CHANGE;
      00040A 53*0C DF         [24] 1025 	anl	_idlePage_iconChange_65536_55,#0xdf
      00040D 80 24            [24] 1026 	sjmp	00128$
      00040F                       1027 00127$:
                                   1028 ;	../UI_Manager/ui.c:263: if(tock == 0x80 + 55){ //blink if fogging
      00040F 74 B7            [12] 1029 	mov	a,#0xb7
      000411 B5*0B 0E         [24] 1030 	cjne	a,_idlePage_tock_65536_55,00124$
                                   1031 ;	../UI_Manager/ui.c:264: write_char(CHAR_PLAY, PLAY_ICON_INDEX, LINE_0);
      000414 75*00 0E         [24] 1032 	mov	_write_char_PARM_2,#0x0e
      000417 75*00 00         [24] 1033 	mov	_write_char_PARM_3,#0x00
      00041A 75 82 80         [24] 1034 	mov	dpl,#0x80
      00041D 12r00r00         [24] 1035 	lcall	_write_char
      000420 80 11            [24] 1036 	sjmp	00128$
      000422                       1037 00124$:
                                   1038 ;	../UI_Manager/ui.c:265: } else if(tock == 0x08 + 55){
      000422 74 3F            [12] 1039 	mov	a,#0x3f
      000424 B5*0B 0C         [24] 1040 	cjne	a,_idlePage_tock_65536_55,00128$
                                   1041 ;	../UI_Manager/ui.c:266: write_char(CHAR_NULL, PLAY_ICON_INDEX, LINE_0);
      000427 75*00 0E         [24] 1042 	mov	_write_char_PARM_2,#0x0e
      00042A 75*00 00         [24] 1043 	mov	_write_char_PARM_3,#0x00
      00042D 75 82 04         [24] 1044 	mov	dpl,#0x04
      000430 12r00r00         [24] 1045 	lcall	_write_char
      000433                       1046 00128$:
                                   1047 ;	../UI_Manager/ui.c:269: iconChange |= PAUSE_CHANGE;
      000433 AE*0C            [24] 1048 	mov	r6,_idlePage_iconChange_65536_55
      000435 7F 00            [12] 1049 	mov	r7,#0x00
      000437 43 06 10         [24] 1050 	orl	ar6,#0x10
      00043A 8E*0C            [24] 1051 	mov	_idlePage_iconChange_65536_55,r6
      00043C 80 2E            [24] 1052 	sjmp	00135$
      00043E                       1053 00134$:
                                   1054 ;	../UI_Manager/ui.c:271: if(playing == PLAY){
      00043E 74 01            [12] 1055 	mov	a,#0x01
      000440 B5*0D 09         [24] 1056 	cjne	a,_idlePage_playing_65536_55,00130$
                                   1057 ;	../UI_Manager/ui.c:272: iconChange |= PAUSE_CHANGE;
      000443 AE*0C            [24] 1058 	mov	r6,_idlePage_iconChange_65536_55
      000445 7F 00            [12] 1059 	mov	r7,#0x00
      000447 43 06 10         [24] 1060 	orl	ar6,#0x10
      00044A 8E*0C            [24] 1061 	mov	_idlePage_iconChange_65536_55,r6
      00044C                       1062 00130$:
                                   1063 ;	../UI_Manager/ui.c:275: if(iconChange & PAUSE_CHANGE){
      00044C E5*0C            [12] 1064 	mov	a,_idlePage_iconChange_65536_55
      00044E 30 E4 18         [24] 1065 	jnb	acc.4,00132$
                                   1066 ;	../UI_Manager/ui.c:276: write_char(CHAR_NULL, PLAY_ICON_INDEX, LINE_0);
      000451 75*00 0E         [24] 1067 	mov	_write_char_PARM_2,#0x0e
      000454 75*00 00         [24] 1068 	mov	_write_char_PARM_3,#0x00
      000457 75 82 04         [24] 1069 	mov	dpl,#0x04
      00045A 12r00r00         [24] 1070 	lcall	_write_char
                                   1071 ;	../UI_Manager/ui.c:277: iconChange |= PLAY_CHANGE;
      00045D AE*0C            [24] 1072 	mov	r6,_idlePage_iconChange_65536_55
      00045F 7F 00            [12] 1073 	mov	r7,#0x00
      000461 43 06 20         [24] 1074 	orl	ar6,#0x20
      000464 8E*0C            [24] 1075 	mov	_idlePage_iconChange_65536_55,r6
                                   1076 ;	../UI_Manager/ui.c:278: iconChange &= ~PAUSE_CHANGE;
      000466 53*0C EF         [24] 1077 	anl	_idlePage_iconChange_65536_55,#0xef
      000469                       1078 00132$:
                                   1079 ;	../UI_Manager/ui.c:281: playing = PAUSE;
      000469 75*0D 00         [24] 1080 	mov	_idlePage_playing_65536_55,#0x00
      00046C                       1081 00135$:
                                   1082 ;	../UI_Manager/ui.c:284: if(get_heated()){
      00046C E5*00            [12] 1083 	mov	a,_Heat_Flag
      00046E 30 E7 16         [24] 1084 	jnb	acc.7,00144$
                                   1085 ;	../UI_Manager/ui.c:285: if(iconChange & HEATED_CHANGE){
      000471 E5*0C            [12] 1086 	mov	a,_idlePage_iconChange_65536_55
      000473 30 E0 49         [24] 1087 	jnb	acc.0,00145$
                                   1088 ;	../UI_Manager/ui.c:286: write_char(CHAR_HEATED, HEAT_ICON_INDEX, LINE_0);
      000476 75*00 0F         [24] 1089 	mov	_write_char_PARM_2,#0x0f
      000479 75*00 00         [24] 1090 	mov	_write_char_PARM_3,#0x00
      00047C 75 82 60         [24] 1091 	mov	dpl,#0x60
      00047F 12r00r00         [24] 1092 	lcall	_write_char
                                   1093 ;	../UI_Manager/ui.c:287: iconChange &= ~HEATED_CHANGE;
      000482 53*0C FE         [24] 1094 	anl	_idlePage_iconChange_65536_55,#0xfe
      000485 80 38            [24] 1095 	sjmp	00145$
      000487                       1096 00144$:
                                   1097 ;	../UI_Manager/ui.c:290: if(!(tock)){
      000487 E5*0B            [12] 1098 	mov	a,_idlePage_tock_65536_55
      000489 70 2B            [24] 1099 	jnz	00142$
                                   1100 ;	../UI_Manager/ui.c:291: if(iconChange & HEATING_CHANGE){
      00048B E5*0C            [12] 1101 	mov	a,_idlePage_iconChange_65536_55
      00048D 30 E1 11         [24] 1102 	jnb	acc.1,00139$
                                   1103 ;	../UI_Manager/ui.c:292: write_char(CHAR_NULL, HEAT_ICON_INDEX, LINE_0);
      000490 75*00 0F         [24] 1104 	mov	_write_char_PARM_2,#0x0f
      000493 75*00 00         [24] 1105 	mov	_write_char_PARM_3,#0x00
      000496 75 82 04         [24] 1106 	mov	dpl,#0x04
      000499 12r00r00         [24] 1107 	lcall	_write_char
                                   1108 ;	../UI_Manager/ui.c:293: iconChange &= ~HEATING_CHANGE;
      00049C 53*0C FD         [24] 1109 	anl	_idlePage_iconChange_65536_55,#0xfd
      00049F 80 15            [24] 1110 	sjmp	00142$
      0004A1                       1111 00139$:
                                   1112 ;	../UI_Manager/ui.c:295: write_char(CHAR_HEATING, HEAT_ICON_INDEX, LINE_0);
      0004A1 75*00 0F         [24] 1113 	mov	_write_char_PARM_2,#0x0f
      0004A4 75*00 00         [24] 1114 	mov	_write_char_PARM_3,#0x00
      0004A7 75 82 A0         [24] 1115 	mov	dpl,#0xa0
      0004AA 12r00r00         [24] 1116 	lcall	_write_char
                                   1117 ;	../UI_Manager/ui.c:296: iconChange |= HEATING_CHANGE;
      0004AD AE*0C            [24] 1118 	mov	r6,_idlePage_iconChange_65536_55
      0004AF 7F 00            [12] 1119 	mov	r7,#0x00
      0004B1 43 06 02         [24] 1120 	orl	ar6,#0x02
      0004B4 8E*0C            [24] 1121 	mov	_idlePage_iconChange_65536_55,r6
      0004B6                       1122 00142$:
                                   1123 ;	../UI_Manager/ui.c:299: iconChange |= HEATED_CHANGE;
      0004B6 AE*0C            [24] 1124 	mov	r6,_idlePage_iconChange_65536_55
      0004B8 7F 00            [12] 1125 	mov	r7,#0x00
      0004BA 43 06 01         [24] 1126 	orl	ar6,#0x01
      0004BD 8E*0C            [24] 1127 	mov	_idlePage_iconChange_65536_55,r6
      0004BF                       1128 00145$:
                                   1129 ;	../UI_Manager/ui.c:304: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      0004BF 75 82 10         [24] 1130 	mov	dpl,#0x10
      0004C2 12r00r00         [24] 1131 	lcall	_get_runtime_data
      0004C5 E5 82            [12] 1132 	mov	a,dpl
      0004C7 60 03            [24] 1133 	jz	00339$
      0004C9 02r05r5A         [24] 1134 	ljmp	00163$
      0004CC                       1135 00339$:
                                   1136 ;	../UI_Manager/ui.c:307: if(has_dmx()){
      0004CC E5*00            [12] 1137 	mov	a,_Has_DMX
      0004CE 60 28            [24] 1138 	jz	00151$
                                   1139 ;	../UI_Manager/ui.c:308: if(changed & DMX_OK_CHANGE){
      0004D0 E5*02            [12] 1140 	mov	a,_changed
      0004D2 30 E7 49         [24] 1141 	jnb	acc.7,00152$
                                   1142 ;	../UI_Manager/ui.c:309: write_string("DMX Ok", sizeof("DMX Ok") - 1, 1, LINE_0, NOT_SELECTED);
      0004D5 75*00 06         [24] 1143 	mov	_write_string_PARM_2,#0x06
      0004D8 75*00 01         [24] 1144 	mov	_write_string_PARM_3,#0x01
      0004DB 75*00 00         [24] 1145 	mov	_write_string_PARM_4,#0x00
      0004DE 75*00 00         [24] 1146 	mov	_write_string_PARM_5,#0x00
      0004E1 90r00r83         [24] 1147 	mov	dptr,#___str_10
      0004E4 75 F0 80         [24] 1148 	mov	b,#0x80
      0004E7 12r00r00         [24] 1149 	lcall	_write_string
                                   1150 ;	../UI_Manager/ui.c:310: changed |= NO_DMX_CHANGE;
      0004EA AE*02            [24] 1151 	mov	r6,_changed
      0004EC 7F 00            [12] 1152 	mov	r7,#0x00
      0004EE 43 06 40         [24] 1153 	orl	ar6,#0x40
      0004F1 8E*02            [24] 1154 	mov	_changed,r6
                                   1155 ;	../UI_Manager/ui.c:311: changed &= ~DMX_OK_CHANGE;
      0004F3 53*02 7F         [24] 1156 	anl	_changed,#0x7f
      0004F6 80 26            [24] 1157 	sjmp	00152$
      0004F8                       1158 00151$:
                                   1159 ;	../UI_Manager/ui.c:314: if(changed & NO_DMX_CHANGE){
      0004F8 E5*02            [12] 1160 	mov	a,_changed
      0004FA 30 E6 21         [24] 1161 	jnb	acc.6,00152$
                                   1162 ;	../UI_Manager/ui.c:315: write_string("No DMX", sizeof("No DMX") - 1, 1, LINE_0, NOT_SELECTED);
      0004FD 75*00 06         [24] 1163 	mov	_write_string_PARM_2,#0x06
      000500 75*00 01         [24] 1164 	mov	_write_string_PARM_3,#0x01
      000503 75*00 00         [24] 1165 	mov	_write_string_PARM_4,#0x00
      000506 75*00 00         [24] 1166 	mov	_write_string_PARM_5,#0x00
      000509 90r00r8A         [24] 1167 	mov	dptr,#___str_11
      00050C 75 F0 80         [24] 1168 	mov	b,#0x80
      00050F 12r00r00         [24] 1169 	lcall	_write_string
                                   1170 ;	../UI_Manager/ui.c:316: changed |= DMX_OK_CHANGE;
      000512 AE*02            [24] 1171 	mov	r6,_changed
      000514 7F 00            [12] 1172 	mov	r7,#0x00
      000516 43 06 80         [24] 1173 	orl	ar6,#0x80
      000519 8E*02            [24] 1174 	mov	_changed,r6
                                   1175 ;	../UI_Manager/ui.c:317: changed &= ~NO_DMX_CHANGE;
      00051B 53*02 BF         [24] 1176 	anl	_changed,#0xbf
      00051E                       1177 00152$:
                                   1178 ;	../UI_Manager/ui.c:321: temp = get_timer();
                                   1179 ;	../UI_Manager/ui.c:324: if(timer != temp){
      00051E E5*00            [12] 1180 	mov	a,_Timer
      000520 FF               [12] 1181 	mov	r7,a
      000521 B5*08 01         [24] 1182 	cjne	a,_idlePage_timer_65536_55,00343$
      000524 22               [24] 1183 	ret
      000525                       1184 00343$:
                                   1185 ;	../UI_Manager/ui.c:326: write_number(temp, 7, LINE_0, NOT_SELECTED);
      000525 8F 05            [24] 1186 	mov	ar5,r7
      000527 7E 00            [12] 1187 	mov	r6,#0x00
      000529 75*00 07         [24] 1188 	mov	_write_number_PARM_2,#0x07
                                   1189 ;	1-genFromRTrack replaced	mov	_write_number_PARM_3,#0x00
      00052C 8E*00            [24] 1190 	mov	_write_number_PARM_3,r6
                                   1191 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      00052E 8E*00            [24] 1192 	mov	_write_number_PARM_4,r6
      000530 8D 82            [24] 1193 	mov	dpl,r5
      000532 8E 83            [24] 1194 	mov	dph,r6
      000534 C0 07            [24] 1195 	push	ar7
      000536 12r00r00         [24] 1196 	lcall	_write_number
      000539 D0 07            [24] 1197 	pop	ar7
                                   1198 ;	../UI_Manager/ui.c:327: write_char((get_interval_or_duration() == INTERVAL) ? CHAR_I : CHAR_D, 11, LINE_0);
      00053B E5*00            [12] 1199 	mov	a,_Interval_Or_Duration
      00053D 70 05            [24] 1200 	jnz	00167$
      00053F 7D 92            [12] 1201 	mov	r5,#0x92
      000541 FE               [12] 1202 	mov	r6,a
      000542 80 04            [24] 1203 	sjmp	00168$
      000544                       1204 00167$:
      000544 7D 22            [12] 1205 	mov	r5,#0x22
      000546 7E 00            [12] 1206 	mov	r6,#0x00
      000548                       1207 00168$:
      000548 8D 82            [24] 1208 	mov	dpl,r5
      00054A 75*00 0B         [24] 1209 	mov	_write_char_PARM_2,#0x0b
      00054D 75*00 00         [24] 1210 	mov	_write_char_PARM_3,#0x00
      000550 C0 07            [24] 1211 	push	ar7
      000552 12r00r00         [24] 1212 	lcall	_write_char
      000555 D0 07            [24] 1213 	pop	ar7
                                   1214 ;	../UI_Manager/ui.c:329: timer = temp;
      000557 8F*08            [24] 1215 	mov	_idlePage_timer_65536_55,r7
      000559 22               [24] 1216 	ret
      00055A                       1217 00163$:
                                   1218 ;	../UI_Manager/ui.c:334: temp = get_interval_or_duration();
                                   1219 ;	../UI_Manager/ui.c:336: if(intervalOrDuration != temp){
      00055A E5*00            [12] 1220 	mov	a,_Interval_Or_Duration
      00055C FF               [12] 1221 	mov	r7,a
      00055D B5*09 02         [24] 1222 	cjne	a,_idlePage_intervalOrDuration_65536_55,00345$
      000560 80 37            [24] 1223 	sjmp	00159$
      000562                       1224 00345$:
                                   1225 ;	../UI_Manager/ui.c:337: if(temp == INTERVAL){
      000562 EF               [12] 1226 	mov	a,r7
                                   1227 ;	../UI_Manager/ui.c:338: write_string("Interval", sizeof("Interval"), 0, LINE_1, NOT_SELECTED);
      000563 70 19            [24] 1228 	jnz	00156$
      000565 75*00 09         [24] 1229 	mov	_write_string_PARM_2,#0x09
      000568 F5*00            [12] 1230 	mov	_write_string_PARM_3,a
      00056A 75*00 01         [24] 1231 	mov	_write_string_PARM_4,#0x01
      00056D F5*00            [12] 1232 	mov	_write_string_PARM_5,a
      00056F 90r00r91         [24] 1233 	mov	dptr,#___str_12
      000572 75 F0 80         [24] 1234 	mov	b,#0x80
      000575 C0 07            [24] 1235 	push	ar7
      000577 12r00r00         [24] 1236 	lcall	_write_string
      00057A D0 07            [24] 1237 	pop	ar7
      00057C 80 19            [24] 1238 	sjmp	00157$
      00057E                       1239 00156$:
                                   1240 ;	../UI_Manager/ui.c:340: write_string("Duration", sizeof("Duration"), 0, LINE_1, NOT_SELECTED);
      00057E 75*00 09         [24] 1241 	mov	_write_string_PARM_2,#0x09
      000581 75*00 00         [24] 1242 	mov	_write_string_PARM_3,#0x00
      000584 75*00 01         [24] 1243 	mov	_write_string_PARM_4,#0x01
      000587 75*00 00         [24] 1244 	mov	_write_string_PARM_5,#0x00
      00058A 90r00r9A         [24] 1245 	mov	dptr,#___str_13
      00058D 75 F0 80         [24] 1246 	mov	b,#0x80
      000590 C0 07            [24] 1247 	push	ar7
      000592 12r00r00         [24] 1248 	lcall	_write_string
      000595 D0 07            [24] 1249 	pop	ar7
      000597                       1250 00157$:
                                   1251 ;	../UI_Manager/ui.c:343: intervalOrDuration = temp;
      000597 8F*09            [24] 1252 	mov	_idlePage_intervalOrDuration_65536_55,r7
      000599                       1253 00159$:
                                   1254 ;	../UI_Manager/ui.c:346: temp = get_timer();
                                   1255 ;	../UI_Manager/ui.c:348: if(timer != temp){
      000599 E5*00            [12] 1256 	mov	a,_Timer
      00059B FF               [12] 1257 	mov	r7,a
      00059C B5*08 01         [24] 1258 	cjne	a,_idlePage_timer_65536_55,00347$
      00059F 22               [24] 1259 	ret
      0005A0                       1260 00347$:
                                   1261 ;	../UI_Manager/ui.c:350: write_number(temp, NUMBER_END_INDEX, LINE_1, NOT_SELECTED);
      0005A0 8F 05            [24] 1262 	mov	ar5,r7
      0005A2 7E 00            [12] 1263 	mov	r6,#0x00
      0005A4 75*00 0C         [24] 1264 	mov	_write_number_PARM_2,#0x0c
      0005A7 75*00 01         [24] 1265 	mov	_write_number_PARM_3,#0x01
                                   1266 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      0005AA 8E*00            [24] 1267 	mov	_write_number_PARM_4,r6
      0005AC 8D 82            [24] 1268 	mov	dpl,r5
      0005AE 8E 83            [24] 1269 	mov	dph,r6
      0005B0 C0 07            [24] 1270 	push	ar7
      0005B2 12r00r00         [24] 1271 	lcall	_write_number
      0005B5 D0 07            [24] 1272 	pop	ar7
                                   1273 ;	../UI_Manager/ui.c:352: timer = temp;
      0005B7 8F*08            [24] 1274 	mov	_idlePage_timer_65536_55,r7
                                   1275 ;	../UI_Manager/ui.c:356: }
      0005B9 22               [24] 1276 	ret
                                   1277 ;------------------------------------------------------------
                                   1278 ;Allocation info for local variables in function 'fogLevelPage'
                                   1279 ;------------------------------------------------------------
                                   1280 ;action                    Allocated to registers r7 
                                   1281 ;------------------------------------------------------------
                                   1282 ;	../UI_Manager/ui.c:358: void fogLevelPage(uint8_t action){
                                   1283 ;	-----------------------------------------
                                   1284 ;	 function fogLevelPage
                                   1285 ;	-----------------------------------------
      0005BA                       1286 _fogLevelPage:
      0005BA AF 82            [24] 1287 	mov	r7,dpl
                                   1288 ;	../UI_Manager/ui.c:360: switch (action)
      0005BC BF 02 02         [24] 1289 	cjne	r7,#0x02,00148$
      0005BF 80 31            [24] 1290 	sjmp	00103$
      0005C1                       1291 00148$:
      0005C1 BF 03 02         [24] 1292 	cjne	r7,#0x03,00149$
      0005C4 80 0A            [24] 1293 	sjmp	00101$
      0005C6                       1294 00149$:
      0005C6 BF 0A 02         [24] 1295 	cjne	r7,#0x0a,00150$
      0005C9 80 16            [24] 1296 	sjmp	00102$
      0005CB                       1297 00150$:
                                   1298 ;	../UI_Manager/ui.c:362: case BUTTON_UP:
      0005CB BF 0C 36         [24] 1299 	cjne	r7,#0x0c,00105$
      0005CE 80 2B            [24] 1300 	sjmp	00104$
      0005D0                       1301 00101$:
                                   1302 ;	../UI_Manager/ui.c:363: set_runtime_data(FOG_POWER_INDEX, INC, NULL);
      0005D0 75*00 01         [24] 1303 	mov	_set_runtime_data_PARM_2,#0x01
      0005D3 75*00 00         [24] 1304 	mov	_set_runtime_data_PARM_3,#0x00
      0005D6 75 82 00         [24] 1305 	mov	dpl,#0x00
      0005D9 12r00r00         [24] 1306 	lcall	_set_runtime_data
                                   1307 ;	../UI_Manager/ui.c:364: changed = 0xFF;
      0005DC 75*02 FF         [24] 1308 	mov	_changed,#0xff
                                   1309 ;	../UI_Manager/ui.c:365: break;
                                   1310 ;	../UI_Manager/ui.c:366: case BUTTON_DOWN:
      0005DF 80 23            [24] 1311 	sjmp	00105$
      0005E1                       1312 00102$:
                                   1313 ;	../UI_Manager/ui.c:367: set_runtime_data(FOG_POWER_INDEX, DEC, NULL);
      0005E1 75*00 02         [24] 1314 	mov	_set_runtime_data_PARM_2,#0x02
      0005E4 75*00 00         [24] 1315 	mov	_set_runtime_data_PARM_3,#0x00
      0005E7 75 82 00         [24] 1316 	mov	dpl,#0x00
      0005EA 12r00r00         [24] 1317 	lcall	_set_runtime_data
                                   1318 ;	../UI_Manager/ui.c:368: changed = 0xFF;  
      0005ED 75*02 FF         [24] 1319 	mov	_changed,#0xff
                                   1320 ;	../UI_Manager/ui.c:369: break;
                                   1321 ;	../UI_Manager/ui.c:370: case BUTTON_FUNCTION:
      0005F0 80 12            [24] 1322 	sjmp	00105$
      0005F2                       1323 00103$:
                                   1324 ;	../UI_Manager/ui.c:371: set_ui_state(INC, NULL);
      0005F2 75*0F 00         [24] 1325 	mov	_set_ui_state_PARM_2,#0x00
      0005F5 75 82 01         [24] 1326 	mov	dpl,#0x01
                                   1327 ;	../UI_Manager/ui.c:372: return;
      0005F8 02r0Er35         [24] 1328 	ljmp	_set_ui_state
                                   1329 ;	../UI_Manager/ui.c:373: case BUTTON_FUN_UP:
      0005FB                       1330 00104$:
                                   1331 ;	../UI_Manager/ui.c:374: set_ui_state(DEC, NULL);
      0005FB 75*0F 00         [24] 1332 	mov	_set_ui_state_PARM_2,#0x00
      0005FE 75 82 02         [24] 1333 	mov	dpl,#0x02
                                   1334 ;	../UI_Manager/ui.c:375: return;
      000601 02r0Er35         [24] 1335 	ljmp	_set_ui_state
                                   1336 ;	../UI_Manager/ui.c:376: }
      000604                       1337 00105$:
                                   1338 ;	../UI_Manager/ui.c:378: if(Changed){
      000604 E5*01            [12] 1339 	mov	a,_Changed
      000606 60 21            [24] 1340 	jz	00107$
                                   1341 ;	../UI_Manager/ui.c:379: Changed = 0x00;
      000608 75*01 00         [24] 1342 	mov	_Changed,#0x00
                                   1343 ;	../UI_Manager/ui.c:380: changed = 0xFF;
      00060B 75*02 FF         [24] 1344 	mov	_changed,#0xff
                                   1345 ;	../UI_Manager/ui.c:382: exe_command(CLEAR_DISPLAY);
      00060E 90 80 00         [24] 1346 	mov	dptr,#0x8000
      000611 12r00r00         [24] 1347 	lcall	_exe_command
                                   1348 ;	../UI_Manager/ui.c:384: write_string("Fog Level", sizeof("Fog Level"), 3, LINE_0, NOT_SELECTED);
      000614 75*00 0A         [24] 1349 	mov	_write_string_PARM_2,#0x0a
      000617 75*00 03         [24] 1350 	mov	_write_string_PARM_3,#0x03
      00061A 75*00 00         [24] 1351 	mov	_write_string_PARM_4,#0x00
      00061D 75*00 00         [24] 1352 	mov	_write_string_PARM_5,#0x00
      000620 90r00rA3         [24] 1353 	mov	dptr,#___str_14
      000623 75 F0 80         [24] 1354 	mov	b,#0x80
      000626 12r00r00         [24] 1355 	lcall	_write_string
      000629                       1356 00107$:
                                   1357 ;	../UI_Manager/ui.c:388: if(changed){
      000629 E5*02            [12] 1358 	mov	a,_changed
      00062B 70 01            [24] 1359 	jnz	00153$
      00062D 22               [24] 1360 	ret
      00062E                       1361 00153$:
                                   1362 ;	../UI_Manager/ui.c:389: changed = 0x00;
      00062E 75*02 00         [24] 1363 	mov	_changed,#0x00
                                   1364 ;	../UI_Manager/ui.c:391: switch (get_runtime_data(FOG_POWER_INDEX))
      000631 75 82 00         [24] 1365 	mov	dpl,#0x00
      000634 12r00r00         [24] 1366 	lcall	_get_runtime_data
      000637 AF 82            [24] 1367 	mov	r7,dpl
      000639 BF 02 02         [24] 1368 	cjne	r7,#0x02,00154$
      00063C 80 30            [24] 1369 	sjmp	00109$
      00063E                       1370 00154$:
      00063E BF 04 66         [24] 1371 	cjne	r7,#0x04,00110$
                                   1372 ;	../UI_Manager/ui.c:394: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_LOW), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000641 75 82 02         [24] 1373 	mov	dpl,#0x02
      000644 12r0ErD7         [24] 1374 	lcall	_getString
      000647 AD 82            [24] 1375 	mov	r5,dpl
      000649 AE 83            [24] 1376 	mov	r6,dph
      00064B AF F0            [24] 1377 	mov	r7,b
      00064D 75*00 10         [24] 1378 	mov	_write_string_PARM_2,#0x10
      000650 75*00 03         [24] 1379 	mov	_write_string_PARM_3,#0x03
      000653 75*00 01         [24] 1380 	mov	_write_string_PARM_4,#0x01
      000656 75*00 00         [24] 1381 	mov	_write_string_PARM_5,#0x00
      000659 8D 82            [24] 1382 	mov	dpl,r5
      00065B 8E 83            [24] 1383 	mov	dph,r6
      00065D 8F F0            [24] 1384 	mov	b,r7
      00065F 12r00r00         [24] 1385 	lcall	_write_string
                                   1386 ;	../UI_Manager/ui.c:395: write_char(CHAR_LVL_1, 12, LINE_1);
      000662 75*00 0C         [24] 1387 	mov	_write_char_PARM_2,#0x0c
      000665 75*00 01         [24] 1388 	mov	_write_char_PARM_3,#0x01
      000668 75 82 40         [24] 1389 	mov	dpl,#0x40
                                   1390 ;	../UI_Manager/ui.c:396: break;
      00066B 02r00r00         [24] 1391 	ljmp	_write_char
                                   1392 ;	../UI_Manager/ui.c:397: case FOG_MED:
      00066E                       1393 00109$:
                                   1394 ;	../UI_Manager/ui.c:398: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_MEDIUM), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      00066E 75 82 01         [24] 1395 	mov	dpl,#0x01
      000671 12r0ErD7         [24] 1396 	lcall	_getString
      000674 AD 82            [24] 1397 	mov	r5,dpl
      000676 AE 83            [24] 1398 	mov	r6,dph
      000678 AF F0            [24] 1399 	mov	r7,b
      00067A 75*00 10         [24] 1400 	mov	_write_string_PARM_2,#0x10
      00067D 75*00 03         [24] 1401 	mov	_write_string_PARM_3,#0x03
      000680 75*00 01         [24] 1402 	mov	_write_string_PARM_4,#0x01
      000683 75*00 00         [24] 1403 	mov	_write_string_PARM_5,#0x00
      000686 8D 82            [24] 1404 	mov	dpl,r5
      000688 8E 83            [24] 1405 	mov	dph,r6
      00068A 8F F0            [24] 1406 	mov	b,r7
      00068C 12r00r00         [24] 1407 	lcall	_write_string
                                   1408 ;	../UI_Manager/ui.c:399: write_char(CHAR_LVL_1, 12, LINE_1);
      00068F 75*00 0C         [24] 1409 	mov	_write_char_PARM_2,#0x0c
      000692 75*00 01         [24] 1410 	mov	_write_char_PARM_3,#0x01
      000695 75 82 40         [24] 1411 	mov	dpl,#0x40
      000698 12r00r00         [24] 1412 	lcall	_write_char
                                   1413 ;	../UI_Manager/ui.c:400: write_char(CHAR_LVL_2, 13, LINE_1);
      00069B 75*00 0D         [24] 1414 	mov	_write_char_PARM_2,#0x0d
      00069E 75*00 01         [24] 1415 	mov	_write_char_PARM_3,#0x01
      0006A1 75 82 C0         [24] 1416 	mov	dpl,#0xc0
                                   1417 ;	../UI_Manager/ui.c:401: break;
                                   1418 ;	../UI_Manager/ui.c:402: default:
      0006A4 02r00r00         [24] 1419 	ljmp	_write_char
      0006A7                       1420 00110$:
                                   1421 ;	../UI_Manager/ui.c:403: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_HIGH), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      0006A7 75 82 00         [24] 1422 	mov	dpl,#0x00
      0006AA 12r0ErD7         [24] 1423 	lcall	_getString
      0006AD AD 82            [24] 1424 	mov	r5,dpl
      0006AF AE 83            [24] 1425 	mov	r6,dph
      0006B1 AF F0            [24] 1426 	mov	r7,b
      0006B3 75*00 10         [24] 1427 	mov	_write_string_PARM_2,#0x10
      0006B6 75*00 03         [24] 1428 	mov	_write_string_PARM_3,#0x03
      0006B9 75*00 01         [24] 1429 	mov	_write_string_PARM_4,#0x01
      0006BC 75*00 00         [24] 1430 	mov	_write_string_PARM_5,#0x00
      0006BF 8D 82            [24] 1431 	mov	dpl,r5
      0006C1 8E 83            [24] 1432 	mov	dph,r6
      0006C3 8F F0            [24] 1433 	mov	b,r7
      0006C5 12r00r00         [24] 1434 	lcall	_write_string
                                   1435 ;	../UI_Manager/ui.c:404: write_char(CHAR_LVL_1, 12, LINE_1);
      0006C8 75*00 0C         [24] 1436 	mov	_write_char_PARM_2,#0x0c
      0006CB 75*00 01         [24] 1437 	mov	_write_char_PARM_3,#0x01
      0006CE 75 82 40         [24] 1438 	mov	dpl,#0x40
      0006D1 12r00r00         [24] 1439 	lcall	_write_char
                                   1440 ;	../UI_Manager/ui.c:405: write_char(CHAR_LVL_2, 13, LINE_1);
      0006D4 75*00 0D         [24] 1441 	mov	_write_char_PARM_2,#0x0d
      0006D7 75*00 01         [24] 1442 	mov	_write_char_PARM_3,#0x01
      0006DA 75 82 C0         [24] 1443 	mov	dpl,#0xc0
      0006DD 12r00r00         [24] 1444 	lcall	_write_char
                                   1445 ;	../UI_Manager/ui.c:406: write_char(CHAR_LVL_3, 14, LINE_1);
      0006E0 75*00 0E         [24] 1446 	mov	_write_char_PARM_2,#0x0e
      0006E3 75*00 01         [24] 1447 	mov	_write_char_PARM_3,#0x01
      0006E6 75 82 20         [24] 1448 	mov	dpl,#0x20
                                   1449 ;	../UI_Manager/ui.c:408: }
                                   1450 ;	../UI_Manager/ui.c:411: }
      0006E9 02r00r00         [24] 1451 	ljmp	_write_char
                                   1452 ;------------------------------------------------------------
                                   1453 ;Allocation info for local variables in function 'fogIntervalPage'
                                   1454 ;------------------------------------------------------------
                                   1455 ;action                    Allocated to registers r7 
                                   1456 ;------------------------------------------------------------
                                   1457 ;	../UI_Manager/ui.c:413: void fogIntervalPage(uint8_t action){
                                   1458 ;	-----------------------------------------
                                   1459 ;	 function fogIntervalPage
                                   1460 ;	-----------------------------------------
      0006EC                       1461 _fogIntervalPage:
      0006EC AF 82            [24] 1462 	mov	r7,dpl
                                   1463 ;	../UI_Manager/ui.c:415: switch (action)
      0006EE BF 02 02         [24] 1464 	cjne	r7,#0x02,00146$
      0006F1 80 3B            [24] 1465 	sjmp	00105$
      0006F3                       1466 00146$:
      0006F3 BF 03 02         [24] 1467 	cjne	r7,#0x03,00147$
      0006F6 80 14            [24] 1468 	sjmp	00102$
      0006F8                       1469 00147$:
      0006F8 BF 0A 02         [24] 1470 	cjne	r7,#0x0a,00148$
      0006FB 80 20            [24] 1471 	sjmp	00104$
      0006FD                       1472 00148$:
      0006FD BF 0C 02         [24] 1473 	cjne	r7,#0x0c,00149$
      000700 80 35            [24] 1474 	sjmp	00106$
      000702                       1475 00149$:
      000702 BF 1F 02         [24] 1476 	cjne	r7,#0x1f,00150$
      000705 80 05            [24] 1477 	sjmp	00102$
      000707                       1478 00150$:
                                   1479 ;	../UI_Manager/ui.c:418: case BUTTON_UP:
      000707 BF 65 36         [24] 1480 	cjne	r7,#0x65,00107$
      00070A 80 11            [24] 1481 	sjmp	00104$
      00070C                       1482 00102$:
                                   1483 ;	../UI_Manager/ui.c:419: set_runtime_data(FOG_INTERVAL_INDEX, INC, NULL);
      00070C 75*00 01         [24] 1484 	mov	_set_runtime_data_PARM_2,#0x01
      00070F 75*00 00         [24] 1485 	mov	_set_runtime_data_PARM_3,#0x00
      000712 75 82 02         [24] 1486 	mov	dpl,#0x02
      000715 12r00r00         [24] 1487 	lcall	_set_runtime_data
                                   1488 ;	../UI_Manager/ui.c:420: changed = 0xFF;
      000718 75*02 FF         [24] 1489 	mov	_changed,#0xff
                                   1490 ;	../UI_Manager/ui.c:421: break;
                                   1491 ;	../UI_Manager/ui.c:423: case BUTTON_DOWN:
      00071B 80 23            [24] 1492 	sjmp	00107$
      00071D                       1493 00104$:
                                   1494 ;	../UI_Manager/ui.c:424: set_runtime_data(FOG_INTERVAL_INDEX, DEC, NULL);
      00071D 75*00 02         [24] 1495 	mov	_set_runtime_data_PARM_2,#0x02
      000720 75*00 00         [24] 1496 	mov	_set_runtime_data_PARM_3,#0x00
      000723 75 82 02         [24] 1497 	mov	dpl,#0x02
      000726 12r00r00         [24] 1498 	lcall	_set_runtime_data
                                   1499 ;	../UI_Manager/ui.c:425: changed = 0xFF;  
      000729 75*02 FF         [24] 1500 	mov	_changed,#0xff
                                   1501 ;	../UI_Manager/ui.c:426: break;
                                   1502 ;	../UI_Manager/ui.c:427: case BUTTON_FUNCTION:
      00072C 80 12            [24] 1503 	sjmp	00107$
      00072E                       1504 00105$:
                                   1505 ;	../UI_Manager/ui.c:428: set_ui_state(INC, NULL);
      00072E 75*0F 00         [24] 1506 	mov	_set_ui_state_PARM_2,#0x00
      000731 75 82 01         [24] 1507 	mov	dpl,#0x01
                                   1508 ;	../UI_Manager/ui.c:429: return;
                                   1509 ;	../UI_Manager/ui.c:430: case BUTTON_FUN_UP:
      000734 02r0Er35         [24] 1510 	ljmp	_set_ui_state
      000737                       1511 00106$:
                                   1512 ;	../UI_Manager/ui.c:431: set_ui_state(DEC, NULL);
      000737 75*0F 00         [24] 1513 	mov	_set_ui_state_PARM_2,#0x00
      00073A 75 82 02         [24] 1514 	mov	dpl,#0x02
                                   1515 ;	../UI_Manager/ui.c:432: return;
                                   1516 ;	../UI_Manager/ui.c:433: }
      00073D 02r0Er35         [24] 1517 	ljmp	_set_ui_state
      000740                       1518 00107$:
                                   1519 ;	../UI_Manager/ui.c:435: if(Changed){
      000740 E5*01            [12] 1520 	mov	a,_Changed
      000742 60 36            [24] 1521 	jz	00109$
                                   1522 ;	../UI_Manager/ui.c:436: Changed = 0x00;
      000744 75*01 00         [24] 1523 	mov	_Changed,#0x00
                                   1524 ;	../UI_Manager/ui.c:437: changed = 0xFF;
      000747 75*02 FF         [24] 1525 	mov	_changed,#0xff
                                   1526 ;	../UI_Manager/ui.c:439: exe_command(CLEAR_DISPLAY);
      00074A 90 80 00         [24] 1527 	mov	dptr,#0x8000
      00074D 12r00r00         [24] 1528 	lcall	_exe_command
                                   1529 ;	../UI_Manager/ui.c:441: write_string("Fog Interval", sizeof("Fog Interval"), 2, LINE_0, NOT_SELECTED);
      000750 75*00 0D         [24] 1530 	mov	_write_string_PARM_2,#0x0d
      000753 75*00 02         [24] 1531 	mov	_write_string_PARM_3,#0x02
      000756 75*00 00         [24] 1532 	mov	_write_string_PARM_4,#0x00
      000759 75*00 00         [24] 1533 	mov	_write_string_PARM_5,#0x00
      00075C 90r00rAD         [24] 1534 	mov	dptr,#___str_15
      00075F 75 F0 80         [24] 1535 	mov	b,#0x80
      000762 12r00r00         [24] 1536 	lcall	_write_string
                                   1537 ;	../UI_Manager/ui.c:442: write_string("Seconds", sizeof("Seconds"), 8, LINE_1, NOT_SELECTED);
      000765 75*00 08         [24] 1538 	mov	_write_string_PARM_2,#0x08
      000768 75*00 08         [24] 1539 	mov	_write_string_PARM_3,#0x08
      00076B 75*00 01         [24] 1540 	mov	_write_string_PARM_4,#0x01
      00076E 75*00 00         [24] 1541 	mov	_write_string_PARM_5,#0x00
      000771 90r00rBA         [24] 1542 	mov	dptr,#___str_16
      000774 75 F0 80         [24] 1543 	mov	b,#0x80
      000777 12r00r00         [24] 1544 	lcall	_write_string
      00077A                       1545 00109$:
                                   1546 ;	../UI_Manager/ui.c:446: if(changed){
      00077A E5*02            [12] 1547 	mov	a,_changed
      00077C 60 1C            [24] 1548 	jz	00112$
                                   1549 ;	../UI_Manager/ui.c:447: changed = 0x00;
      00077E 75*02 00         [24] 1550 	mov	_changed,#0x00
                                   1551 ;	../UI_Manager/ui.c:449: write_number(get_runtime_data(FOG_INTERVAL_INDEX), 4, LINE_1, NOT_SELECTED);
      000781 75 82 02         [24] 1552 	mov	dpl,#0x02
      000784 12r00r00         [24] 1553 	lcall	_get_runtime_data
      000787 AF 82            [24] 1554 	mov	r7,dpl
      000789 7E 00            [12] 1555 	mov	r6,#0x00
      00078B 75*00 04         [24] 1556 	mov	_write_number_PARM_2,#0x04
      00078E 75*00 01         [24] 1557 	mov	_write_number_PARM_3,#0x01
                                   1558 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000791 8E*00            [24] 1559 	mov	_write_number_PARM_4,r6
      000793 8F 82            [24] 1560 	mov	dpl,r7
      000795 8E 83            [24] 1561 	mov	dph,r6
                                   1562 ;	../UI_Manager/ui.c:454: }
      000797 02r00r00         [24] 1563 	ljmp	_write_number
      00079A                       1564 00112$:
      00079A 22               [24] 1565 	ret
                                   1566 ;------------------------------------------------------------
                                   1567 ;Allocation info for local variables in function 'fogDurationPage'
                                   1568 ;------------------------------------------------------------
                                   1569 ;action                    Allocated to registers r7 
                                   1570 ;------------------------------------------------------------
                                   1571 ;	../UI_Manager/ui.c:456: void fogDurationPage(uint8_t action){
                                   1572 ;	-----------------------------------------
                                   1573 ;	 function fogDurationPage
                                   1574 ;	-----------------------------------------
      00079B                       1575 _fogDurationPage:
      00079B AF 82            [24] 1576 	mov	r7,dpl
                                   1577 ;	../UI_Manager/ui.c:458: switch (action)
      00079D BF 02 02         [24] 1578 	cjne	r7,#0x02,00146$
      0007A0 80 3B            [24] 1579 	sjmp	00105$
      0007A2                       1580 00146$:
      0007A2 BF 03 02         [24] 1581 	cjne	r7,#0x03,00147$
      0007A5 80 14            [24] 1582 	sjmp	00102$
      0007A7                       1583 00147$:
      0007A7 BF 0A 02         [24] 1584 	cjne	r7,#0x0a,00148$
      0007AA 80 20            [24] 1585 	sjmp	00104$
      0007AC                       1586 00148$:
      0007AC BF 0C 02         [24] 1587 	cjne	r7,#0x0c,00149$
      0007AF 80 35            [24] 1588 	sjmp	00106$
      0007B1                       1589 00149$:
      0007B1 BF 1F 02         [24] 1590 	cjne	r7,#0x1f,00150$
      0007B4 80 05            [24] 1591 	sjmp	00102$
      0007B6                       1592 00150$:
                                   1593 ;	../UI_Manager/ui.c:461: case BUTTON_UP:
      0007B6 BF 65 36         [24] 1594 	cjne	r7,#0x65,00107$
      0007B9 80 11            [24] 1595 	sjmp	00104$
      0007BB                       1596 00102$:
                                   1597 ;	../UI_Manager/ui.c:462: set_runtime_data(FOG_DURATION_INDEX, INC, NULL);
      0007BB 75*00 01         [24] 1598 	mov	_set_runtime_data_PARM_2,#0x01
      0007BE 75*00 00         [24] 1599 	mov	_set_runtime_data_PARM_3,#0x00
      0007C1 75 82 01         [24] 1600 	mov	dpl,#0x01
      0007C4 12r00r00         [24] 1601 	lcall	_set_runtime_data
                                   1602 ;	../UI_Manager/ui.c:463: changed = 0xFF;
      0007C7 75*02 FF         [24] 1603 	mov	_changed,#0xff
                                   1604 ;	../UI_Manager/ui.c:464: break;
                                   1605 ;	../UI_Manager/ui.c:466: case BUTTON_DOWN:
      0007CA 80 23            [24] 1606 	sjmp	00107$
      0007CC                       1607 00104$:
                                   1608 ;	../UI_Manager/ui.c:467: set_runtime_data(FOG_DURATION_INDEX, DEC, NULL);
      0007CC 75*00 02         [24] 1609 	mov	_set_runtime_data_PARM_2,#0x02
      0007CF 75*00 00         [24] 1610 	mov	_set_runtime_data_PARM_3,#0x00
      0007D2 75 82 01         [24] 1611 	mov	dpl,#0x01
      0007D5 12r00r00         [24] 1612 	lcall	_set_runtime_data
                                   1613 ;	../UI_Manager/ui.c:468: changed = 0xFF;  
      0007D8 75*02 FF         [24] 1614 	mov	_changed,#0xff
                                   1615 ;	../UI_Manager/ui.c:469: break;
                                   1616 ;	../UI_Manager/ui.c:470: case BUTTON_FUNCTION:
      0007DB 80 12            [24] 1617 	sjmp	00107$
      0007DD                       1618 00105$:
                                   1619 ;	../UI_Manager/ui.c:471: set_ui_state(INC, NULL);
      0007DD 75*0F 00         [24] 1620 	mov	_set_ui_state_PARM_2,#0x00
      0007E0 75 82 01         [24] 1621 	mov	dpl,#0x01
                                   1622 ;	../UI_Manager/ui.c:472: return;
                                   1623 ;	../UI_Manager/ui.c:473: case BUTTON_FUN_UP:
      0007E3 02r0Er35         [24] 1624 	ljmp	_set_ui_state
      0007E6                       1625 00106$:
                                   1626 ;	../UI_Manager/ui.c:474: set_ui_state(DEC, NULL);
      0007E6 75*0F 00         [24] 1627 	mov	_set_ui_state_PARM_2,#0x00
      0007E9 75 82 02         [24] 1628 	mov	dpl,#0x02
                                   1629 ;	../UI_Manager/ui.c:475: return;
                                   1630 ;	../UI_Manager/ui.c:476: }
      0007EC 02r0Er35         [24] 1631 	ljmp	_set_ui_state
      0007EF                       1632 00107$:
                                   1633 ;	../UI_Manager/ui.c:478: if(Changed){
      0007EF E5*01            [12] 1634 	mov	a,_Changed
      0007F1 60 36            [24] 1635 	jz	00109$
                                   1636 ;	../UI_Manager/ui.c:479: Changed = 0x00;
      0007F3 75*01 00         [24] 1637 	mov	_Changed,#0x00
                                   1638 ;	../UI_Manager/ui.c:480: changed = 0xFF;
      0007F6 75*02 FF         [24] 1639 	mov	_changed,#0xff
                                   1640 ;	../UI_Manager/ui.c:482: exe_command(CLEAR_DISPLAY);
      0007F9 90 80 00         [24] 1641 	mov	dptr,#0x8000
      0007FC 12r00r00         [24] 1642 	lcall	_exe_command
                                   1643 ;	../UI_Manager/ui.c:484: write_string("Fog Duration", sizeof("Fog Duration"), 2, LINE_0, NOT_SELECTED);
      0007FF 75*00 0D         [24] 1644 	mov	_write_string_PARM_2,#0x0d
      000802 75*00 02         [24] 1645 	mov	_write_string_PARM_3,#0x02
      000805 75*00 00         [24] 1646 	mov	_write_string_PARM_4,#0x00
      000808 75*00 00         [24] 1647 	mov	_write_string_PARM_5,#0x00
      00080B 90r00rC2         [24] 1648 	mov	dptr,#___str_17
      00080E 75 F0 80         [24] 1649 	mov	b,#0x80
      000811 12r00r00         [24] 1650 	lcall	_write_string
                                   1651 ;	../UI_Manager/ui.c:485: write_string("Seconds", sizeof("Seconds"), 8, LINE_1, NOT_SELECTED);
      000814 75*00 08         [24] 1652 	mov	_write_string_PARM_2,#0x08
      000817 75*00 08         [24] 1653 	mov	_write_string_PARM_3,#0x08
      00081A 75*00 01         [24] 1654 	mov	_write_string_PARM_4,#0x01
      00081D 75*00 00         [24] 1655 	mov	_write_string_PARM_5,#0x00
      000820 90r00rBA         [24] 1656 	mov	dptr,#___str_16
      000823 75 F0 80         [24] 1657 	mov	b,#0x80
      000826 12r00r00         [24] 1658 	lcall	_write_string
      000829                       1659 00109$:
                                   1660 ;	../UI_Manager/ui.c:489: if(changed){
      000829 E5*02            [12] 1661 	mov	a,_changed
      00082B 60 1C            [24] 1662 	jz	00112$
                                   1663 ;	../UI_Manager/ui.c:490: changed = 0x00;
      00082D 75*02 00         [24] 1664 	mov	_changed,#0x00
                                   1665 ;	../UI_Manager/ui.c:492: write_number(get_runtime_data(FOG_DURATION_INDEX), 4, LINE_1, NOT_SELECTED);
      000830 75 82 01         [24] 1666 	mov	dpl,#0x01
      000833 12r00r00         [24] 1667 	lcall	_get_runtime_data
      000836 AF 82            [24] 1668 	mov	r7,dpl
      000838 7E 00            [12] 1669 	mov	r6,#0x00
      00083A 75*00 04         [24] 1670 	mov	_write_number_PARM_2,#0x04
      00083D 75*00 01         [24] 1671 	mov	_write_number_PARM_3,#0x01
                                   1672 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000840 8E*00            [24] 1673 	mov	_write_number_PARM_4,r6
      000842 8F 82            [24] 1674 	mov	dpl,r7
      000844 8E 83            [24] 1675 	mov	dph,r6
                                   1676 ;	../UI_Manager/ui.c:495: }
      000846 02r00r00         [24] 1677 	ljmp	_write_number
      000849                       1678 00112$:
      000849 22               [24] 1679 	ret
                                   1680 ;------------------------------------------------------------
                                   1681 ;Allocation info for local variables in function 'macroPage'
                                   1682 ;------------------------------------------------------------
                                   1683 ;action                    Allocated to registers r7 
                                   1684 ;------------------------------------------------------------
                                   1685 ;	../UI_Manager/ui.c:497: void macroPage(uint8_t action){
                                   1686 ;	-----------------------------------------
                                   1687 ;	 function macroPage
                                   1688 ;	-----------------------------------------
      00084A                       1689 _macroPage:
      00084A AF 82            [24] 1690 	mov	r7,dpl
                                   1691 ;	../UI_Manager/ui.c:499: switch (action)
      00084C BF 02 02         [24] 1692 	cjne	r7,#0x02,00146$
      00084F 80 3B            [24] 1693 	sjmp	00105$
      000851                       1694 00146$:
      000851 BF 03 02         [24] 1695 	cjne	r7,#0x03,00147$
      000854 80 14            [24] 1696 	sjmp	00102$
      000856                       1697 00147$:
      000856 BF 0A 02         [24] 1698 	cjne	r7,#0x0a,00148$
      000859 80 20            [24] 1699 	sjmp	00104$
      00085B                       1700 00148$:
      00085B BF 0C 02         [24] 1701 	cjne	r7,#0x0c,00149$
      00085E 80 35            [24] 1702 	sjmp	00106$
      000860                       1703 00149$:
      000860 BF 1F 02         [24] 1704 	cjne	r7,#0x1f,00150$
      000863 80 05            [24] 1705 	sjmp	00102$
      000865                       1706 00150$:
                                   1707 ;	../UI_Manager/ui.c:502: case BUTTON_UP:
      000865 BF 65 36         [24] 1708 	cjne	r7,#0x65,00107$
      000868 80 11            [24] 1709 	sjmp	00104$
      00086A                       1710 00102$:
                                   1711 ;	../UI_Manager/ui.c:503: set_runtime_data(MACRO_INDEX, INC, NULL);
      00086A 75*00 01         [24] 1712 	mov	_set_runtime_data_PARM_2,#0x01
      00086D 75*00 00         [24] 1713 	mov	_set_runtime_data_PARM_3,#0x00
      000870 75 82 03         [24] 1714 	mov	dpl,#0x03
      000873 12r00r00         [24] 1715 	lcall	_set_runtime_data
                                   1716 ;	../UI_Manager/ui.c:504: changed = 0xFF;
      000876 75*02 FF         [24] 1717 	mov	_changed,#0xff
                                   1718 ;	../UI_Manager/ui.c:505: break;
                                   1719 ;	../UI_Manager/ui.c:507: case BUTTON_DOWN:
      000879 80 23            [24] 1720 	sjmp	00107$
      00087B                       1721 00104$:
                                   1722 ;	../UI_Manager/ui.c:508: set_runtime_data(MACRO_INDEX, DEC, NULL);
      00087B 75*00 02         [24] 1723 	mov	_set_runtime_data_PARM_2,#0x02
      00087E 75*00 00         [24] 1724 	mov	_set_runtime_data_PARM_3,#0x00
      000881 75 82 03         [24] 1725 	mov	dpl,#0x03
      000884 12r00r00         [24] 1726 	lcall	_set_runtime_data
                                   1727 ;	../UI_Manager/ui.c:509: changed = 0xFF;  
      000887 75*02 FF         [24] 1728 	mov	_changed,#0xff
                                   1729 ;	../UI_Manager/ui.c:510: break;
                                   1730 ;	../UI_Manager/ui.c:511: case BUTTON_FUNCTION:
      00088A 80 12            [24] 1731 	sjmp	00107$
      00088C                       1732 00105$:
                                   1733 ;	../UI_Manager/ui.c:512: set_ui_state(INC, NULL);
      00088C 75*0F 00         [24] 1734 	mov	_set_ui_state_PARM_2,#0x00
      00088F 75 82 01         [24] 1735 	mov	dpl,#0x01
                                   1736 ;	../UI_Manager/ui.c:513: return;
                                   1737 ;	../UI_Manager/ui.c:514: case BUTTON_FUN_UP:
      000892 02r0Er35         [24] 1738 	ljmp	_set_ui_state
      000895                       1739 00106$:
                                   1740 ;	../UI_Manager/ui.c:515: set_ui_state(DEC, NULL);
      000895 75*0F 00         [24] 1741 	mov	_set_ui_state_PARM_2,#0x00
      000898 75 82 02         [24] 1742 	mov	dpl,#0x02
                                   1743 ;	../UI_Manager/ui.c:516: return;
                                   1744 ;	../UI_Manager/ui.c:517: }
      00089B 02r0Er35         [24] 1745 	ljmp	_set_ui_state
      00089E                       1746 00107$:
                                   1747 ;	../UI_Manager/ui.c:519: if(Changed){
      00089E E5*01            [12] 1748 	mov	a,_Changed
      0008A0 60 21            [24] 1749 	jz	00109$
                                   1750 ;	../UI_Manager/ui.c:520: Changed = 0x00;
      0008A2 75*01 00         [24] 1751 	mov	_Changed,#0x00
                                   1752 ;	../UI_Manager/ui.c:521: changed = 0xFF;
      0008A5 75*02 FF         [24] 1753 	mov	_changed,#0xff
                                   1754 ;	../UI_Manager/ui.c:523: exe_command(CLEAR_DISPLAY);
      0008A8 90 80 00         [24] 1755 	mov	dptr,#0x8000
      0008AB 12r00r00         [24] 1756 	lcall	_exe_command
                                   1757 ;	../UI_Manager/ui.c:525: write_string("Macros", sizeof("Macros"), 6, LINE_0, NOT_SELECTED);
      0008AE 75*00 07         [24] 1758 	mov	_write_string_PARM_2,#0x07
      0008B1 75*00 06         [24] 1759 	mov	_write_string_PARM_3,#0x06
      0008B4 75*00 00         [24] 1760 	mov	_write_string_PARM_4,#0x00
      0008B7 75*00 00         [24] 1761 	mov	_write_string_PARM_5,#0x00
      0008BA 90r00rCF         [24] 1762 	mov	dptr,#___str_18
      0008BD 75 F0 80         [24] 1763 	mov	b,#0x80
      0008C0 12r00r00         [24] 1764 	lcall	_write_string
      0008C3                       1765 00109$:
                                   1766 ;	../UI_Manager/ui.c:529: if(changed){
      0008C3 E5*02            [12] 1767 	mov	a,_changed
      0008C5 60 2E            [24] 1768 	jz	00112$
                                   1769 ;	../UI_Manager/ui.c:530: changed = 0x00;
      0008C7 75*02 00         [24] 1770 	mov	_changed,#0x00
                                   1771 ;	../UI_Manager/ui.c:532: write_string(getString(get_runtime_data(MACRO_INDEX) + MACRO_STRING_OFFSET), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      0008CA 75 82 03         [24] 1772 	mov	dpl,#0x03
      0008CD 12r00r00         [24] 1773 	lcall	_get_runtime_data
      0008D0 AF 82            [24] 1774 	mov	r7,dpl
      0008D2 74 14            [12] 1775 	mov	a,#0x14
      0008D4 2F               [12] 1776 	add	a,r7
      0008D5 F5 82            [12] 1777 	mov	dpl,a
      0008D7 12r0ErD7         [24] 1778 	lcall	_getString
      0008DA AD 82            [24] 1779 	mov	r5,dpl
      0008DC AE 83            [24] 1780 	mov	r6,dph
      0008DE AF F0            [24] 1781 	mov	r7,b
      0008E0 75*00 10         [24] 1782 	mov	_write_string_PARM_2,#0x10
      0008E3 75*00 03         [24] 1783 	mov	_write_string_PARM_3,#0x03
      0008E6 75*00 01         [24] 1784 	mov	_write_string_PARM_4,#0x01
      0008E9 75*00 00         [24] 1785 	mov	_write_string_PARM_5,#0x00
      0008EC 8D 82            [24] 1786 	mov	dpl,r5
      0008EE 8E 83            [24] 1787 	mov	dph,r6
      0008F0 8F F0            [24] 1788 	mov	b,r7
                                   1789 ;	../UI_Manager/ui.c:535: }
      0008F2 02r00r00         [24] 1790 	ljmp	_write_string
      0008F5                       1791 00112$:
      0008F5 22               [24] 1792 	ret
                                   1793 ;------------------------------------------------------------
                                   1794 ;Allocation info for local variables in function 'macroSpeedPage'
                                   1795 ;------------------------------------------------------------
                                   1796 ;action                    Allocated to registers r7 
                                   1797 ;------------------------------------------------------------
                                   1798 ;	../UI_Manager/ui.c:537: void macroSpeedPage(uint8_t action){
                                   1799 ;	-----------------------------------------
                                   1800 ;	 function macroSpeedPage
                                   1801 ;	-----------------------------------------
      0008F6                       1802 _macroSpeedPage:
      0008F6 AF 82            [24] 1803 	mov	r7,dpl
                                   1804 ;	../UI_Manager/ui.c:539: switch (action)
      0008F8 BF 02 02         [24] 1805 	cjne	r7,#0x02,00153$
      0008FB 80 3B            [24] 1806 	sjmp	00105$
      0008FD                       1807 00153$:
      0008FD BF 03 02         [24] 1808 	cjne	r7,#0x03,00154$
      000900 80 14            [24] 1809 	sjmp	00102$
      000902                       1810 00154$:
      000902 BF 0A 02         [24] 1811 	cjne	r7,#0x0a,00155$
      000905 80 20            [24] 1812 	sjmp	00104$
      000907                       1813 00155$:
      000907 BF 0C 02         [24] 1814 	cjne	r7,#0x0c,00156$
      00090A 80 35            [24] 1815 	sjmp	00106$
      00090C                       1816 00156$:
      00090C BF 1F 02         [24] 1817 	cjne	r7,#0x1f,00157$
      00090F 80 05            [24] 1818 	sjmp	00102$
      000911                       1819 00157$:
                                   1820 ;	../UI_Manager/ui.c:542: case BUTTON_UP:
      000911 BF 65 36         [24] 1821 	cjne	r7,#0x65,00107$
      000914 80 11            [24] 1822 	sjmp	00104$
      000916                       1823 00102$:
                                   1824 ;	../UI_Manager/ui.c:543: set_runtime_data(MACRO_SPEED_INDEX, INC, NULL);
      000916 75*00 01         [24] 1825 	mov	_set_runtime_data_PARM_2,#0x01
      000919 75*00 00         [24] 1826 	mov	_set_runtime_data_PARM_3,#0x00
      00091C 75 82 04         [24] 1827 	mov	dpl,#0x04
      00091F 12r00r00         [24] 1828 	lcall	_set_runtime_data
                                   1829 ;	../UI_Manager/ui.c:544: changed = 0xFF;
      000922 75*02 FF         [24] 1830 	mov	_changed,#0xff
                                   1831 ;	../UI_Manager/ui.c:545: break;
                                   1832 ;	../UI_Manager/ui.c:547: case BUTTON_DOWN:
      000925 80 23            [24] 1833 	sjmp	00107$
      000927                       1834 00104$:
                                   1835 ;	../UI_Manager/ui.c:548: set_runtime_data(MACRO_SPEED_INDEX, DEC, NULL);
      000927 75*00 02         [24] 1836 	mov	_set_runtime_data_PARM_2,#0x02
      00092A 75*00 00         [24] 1837 	mov	_set_runtime_data_PARM_3,#0x00
      00092D 75 82 04         [24] 1838 	mov	dpl,#0x04
      000930 12r00r00         [24] 1839 	lcall	_set_runtime_data
                                   1840 ;	../UI_Manager/ui.c:549: changed = 0xFF;  
      000933 75*02 FF         [24] 1841 	mov	_changed,#0xff
                                   1842 ;	../UI_Manager/ui.c:550: break;
                                   1843 ;	../UI_Manager/ui.c:551: case BUTTON_FUNCTION:
      000936 80 12            [24] 1844 	sjmp	00107$
      000938                       1845 00105$:
                                   1846 ;	../UI_Manager/ui.c:552: set_ui_state(INC, NULL);
      000938 75*0F 00         [24] 1847 	mov	_set_ui_state_PARM_2,#0x00
      00093B 75 82 01         [24] 1848 	mov	dpl,#0x01
                                   1849 ;	../UI_Manager/ui.c:553: return;
      00093E 02r0Er35         [24] 1850 	ljmp	_set_ui_state
                                   1851 ;	../UI_Manager/ui.c:554: case BUTTON_FUN_UP:
      000941                       1852 00106$:
                                   1853 ;	../UI_Manager/ui.c:555: set_ui_state(DEC, NULL);
      000941 75*0F 00         [24] 1854 	mov	_set_ui_state_PARM_2,#0x00
      000944 75 82 02         [24] 1855 	mov	dpl,#0x02
                                   1856 ;	../UI_Manager/ui.c:556: return;
      000947 02r0Er35         [24] 1857 	ljmp	_set_ui_state
                                   1858 ;	../UI_Manager/ui.c:557: }
      00094A                       1859 00107$:
                                   1860 ;	../UI_Manager/ui.c:559: if(Changed){
      00094A E5*01            [12] 1861 	mov	a,_Changed
      00094C 60 21            [24] 1862 	jz	00109$
                                   1863 ;	../UI_Manager/ui.c:560: Changed = 0x00;
      00094E 75*01 00         [24] 1864 	mov	_Changed,#0x00
                                   1865 ;	../UI_Manager/ui.c:561: changed = 0xFF;
      000951 75*02 FF         [24] 1866 	mov	_changed,#0xff
                                   1867 ;	../UI_Manager/ui.c:563: exe_command(CLEAR_DISPLAY);
      000954 90 80 00         [24] 1868 	mov	dptr,#0x8000
      000957 12r00r00         [24] 1869 	lcall	_exe_command
                                   1870 ;	../UI_Manager/ui.c:565: write_string("Macro Speed", sizeof("Macro Speed"), 3, LINE_0, NOT_SELECTED);
      00095A 75*00 0C         [24] 1871 	mov	_write_string_PARM_2,#0x0c
      00095D 75*00 03         [24] 1872 	mov	_write_string_PARM_3,#0x03
      000960 75*00 00         [24] 1873 	mov	_write_string_PARM_4,#0x00
      000963 75*00 00         [24] 1874 	mov	_write_string_PARM_5,#0x00
      000966 90r00rD6         [24] 1875 	mov	dptr,#___str_19
      000969 75 F0 80         [24] 1876 	mov	b,#0x80
      00096C 12r00r00         [24] 1877 	lcall	_write_string
      00096F                       1878 00109$:
                                   1879 ;	../UI_Manager/ui.c:569: if(changed){
      00096F E5*02            [12] 1880 	mov	a,_changed
      000971 60 4F            [24] 1881 	jz	00115$
                                   1882 ;	../UI_Manager/ui.c:570: changed = 0x00;
      000973 75*02 00         [24] 1883 	mov	_changed,#0x00
                                   1884 ;	../UI_Manager/ui.c:572: if(get_runtime_data(MACRO_SPEED_INDEX) == 0){
      000976 75 82 04         [24] 1885 	mov	dpl,#0x04
      000979 12r00r00         [24] 1886 	lcall	_get_runtime_data
      00097C E5 82            [12] 1887 	mov	a,dpl
                                   1888 ;	../UI_Manager/ui.c:573: write_string("Off", LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      00097E 70 14            [24] 1889 	jnz	00111$
      000980 75*00 10         [24] 1890 	mov	_write_string_PARM_2,#0x10
      000983 75*00 03         [24] 1891 	mov	_write_string_PARM_3,#0x03
      000986 75*00 01         [24] 1892 	mov	_write_string_PARM_4,#0x01
      000989 F5*00            [12] 1893 	mov	_write_string_PARM_5,a
      00098B 90r00rE2         [24] 1894 	mov	dptr,#___str_20
      00098E 75 F0 80         [24] 1895 	mov	b,#0x80
      000991 02r00r00         [24] 1896 	ljmp	_write_string
      000994                       1897 00111$:
                                   1898 ;	../UI_Manager/ui.c:575: write_string("", LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000994 75*00 10         [24] 1899 	mov	_write_string_PARM_2,#0x10
      000997 75*00 03         [24] 1900 	mov	_write_string_PARM_3,#0x03
      00099A 75*00 01         [24] 1901 	mov	_write_string_PARM_4,#0x01
      00099D 75*00 00         [24] 1902 	mov	_write_string_PARM_5,#0x00
      0009A0 90r00rE6         [24] 1903 	mov	dptr,#___str_21
      0009A3 75 F0 80         [24] 1904 	mov	b,#0x80
      0009A6 12r00r00         [24] 1905 	lcall	_write_string
                                   1906 ;	../UI_Manager/ui.c:576: write_number(get_runtime_data(MACRO_SPEED_INDEX), 6, LINE_1, NOT_SELECTED);
      0009A9 75 82 04         [24] 1907 	mov	dpl,#0x04
      0009AC 12r00r00         [24] 1908 	lcall	_get_runtime_data
      0009AF AF 82            [24] 1909 	mov	r7,dpl
      0009B1 7E 00            [12] 1910 	mov	r6,#0x00
      0009B3 75*00 06         [24] 1911 	mov	_write_number_PARM_2,#0x06
      0009B6 75*00 01         [24] 1912 	mov	_write_number_PARM_3,#0x01
                                   1913 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      0009B9 8E*00            [24] 1914 	mov	_write_number_PARM_4,r6
      0009BB 8F 82            [24] 1915 	mov	dpl,r7
      0009BD 8E 83            [24] 1916 	mov	dph,r6
                                   1917 ;	../UI_Manager/ui.c:580: }
      0009BF 02r00r00         [24] 1918 	ljmp	_write_number
      0009C2                       1919 00115$:
      0009C2 22               [24] 1920 	ret
                                   1921 ;------------------------------------------------------------
                                   1922 ;Allocation info for local variables in function 'colorPage'
                                   1923 ;------------------------------------------------------------
                                   1924 ;action                    Allocated to registers r7 
                                   1925 ;index                     Allocated to registers r6 
                                   1926 ;------------------------------------------------------------
                                   1927 ;	../UI_Manager/ui.c:582: void colorPage(uint8_t action){
                                   1928 ;	-----------------------------------------
                                   1929 ;	 function colorPage
                                   1930 ;	-----------------------------------------
      0009C3                       1931 _colorPage:
      0009C3 AF 82            [24] 1932 	mov	r7,dpl
                                   1933 ;	../UI_Manager/ui.c:583: uint8_t index = 0;
      0009C5 7E 00            [12] 1934 	mov	r6,#0x00
                                   1935 ;	../UI_Manager/ui.c:585: switch (State)
      0009C7 AD*00            [24] 1936 	mov	r5,_State
      0009C9 BD 06 02         [24] 1937 	cjne	r5,#0x06,00174$
      0009CC 80 0F            [24] 1938 	sjmp	00101$
      0009CE                       1939 00174$:
      0009CE BD 07 02         [24] 1940 	cjne	r5,#0x07,00175$
      0009D1 80 12            [24] 1941 	sjmp	00103$
      0009D3                       1942 00175$:
      0009D3 BD 08 02         [24] 1943 	cjne	r5,#0x08,00176$
      0009D6 80 09            [24] 1944 	sjmp	00102$
      0009D8                       1945 00176$:
                                   1946 ;	../UI_Manager/ui.c:587: case MANUAL_RED_STATE:
      0009D8 BD 09 10         [24] 1947 	cjne	r5,#0x09,00105$
      0009DB 80 0C            [24] 1948 	sjmp	00104$
      0009DD                       1949 00101$:
                                   1950 ;	../UI_Manager/ui.c:588: index = RED_INDEX;
      0009DD 7E 05            [12] 1951 	mov	r6,#0x05
                                   1952 ;	../UI_Manager/ui.c:589: break;
                                   1953 ;	../UI_Manager/ui.c:590: case MANUAL_GREEN_STATE:
      0009DF 80 0A            [24] 1954 	sjmp	00105$
      0009E1                       1955 00102$:
                                   1956 ;	../UI_Manager/ui.c:591: index = GREEN_INDEX;
      0009E1 7E 06            [12] 1957 	mov	r6,#0x06
                                   1958 ;	../UI_Manager/ui.c:592: break;
                                   1959 ;	../UI_Manager/ui.c:593: case MANUAL_BLUE_STATE:
      0009E3 80 06            [24] 1960 	sjmp	00105$
      0009E5                       1961 00103$:
                                   1962 ;	../UI_Manager/ui.c:594: index = BLUE_INDEX;
      0009E5 7E 07            [12] 1963 	mov	r6,#0x07
                                   1964 ;	../UI_Manager/ui.c:595: break;
                                   1965 ;	../UI_Manager/ui.c:596: case MANUAL_STROBE_STATE:
      0009E7 80 02            [24] 1966 	sjmp	00105$
      0009E9                       1967 00104$:
                                   1968 ;	../UI_Manager/ui.c:597: index = STROBE_INDEX;
      0009E9 7E 08            [12] 1969 	mov	r6,#0x08
                                   1970 ;	../UI_Manager/ui.c:599: }
      0009EB                       1971 00105$:
                                   1972 ;	../UI_Manager/ui.c:601: switch (action)
      0009EB BF 02 02         [24] 1973 	cjne	r7,#0x02,00178$
      0009EE 80 41            [24] 1974 	sjmp	00110$
      0009F0                       1975 00178$:
      0009F0 BF 03 02         [24] 1976 	cjne	r7,#0x03,00179$
      0009F3 80 14            [24] 1977 	sjmp	00107$
      0009F5                       1978 00179$:
      0009F5 BF 0A 02         [24] 1979 	cjne	r7,#0x0a,00180$
      0009F8 80 23            [24] 1980 	sjmp	00109$
      0009FA                       1981 00180$:
      0009FA BF 0C 02         [24] 1982 	cjne	r7,#0x0c,00181$
      0009FD 80 3B            [24] 1983 	sjmp	00111$
      0009FF                       1984 00181$:
      0009FF BF 1F 02         [24] 1985 	cjne	r7,#0x1f,00182$
      000A02 80 05            [24] 1986 	sjmp	00107$
      000A04                       1987 00182$:
                                   1988 ;	../UI_Manager/ui.c:604: case BUTTON_UP:
      000A04 BF 65 3C         [24] 1989 	cjne	r7,#0x65,00112$
      000A07 80 14            [24] 1990 	sjmp	00109$
      000A09                       1991 00107$:
                                   1992 ;	../UI_Manager/ui.c:605: set_runtime_data(index, INC, NULL);
      000A09 75*00 01         [24] 1993 	mov	_set_runtime_data_PARM_2,#0x01
      000A0C 75*00 00         [24] 1994 	mov	_set_runtime_data_PARM_3,#0x00
      000A0F 8E 82            [24] 1995 	mov	dpl,r6
      000A11 C0 06            [24] 1996 	push	ar6
      000A13 12r00r00         [24] 1997 	lcall	_set_runtime_data
      000A16 D0 06            [24] 1998 	pop	ar6
                                   1999 ;	../UI_Manager/ui.c:606: changed = 0xFF;
      000A18 75*02 FF         [24] 2000 	mov	_changed,#0xff
                                   2001 ;	../UI_Manager/ui.c:607: break;
                                   2002 ;	../UI_Manager/ui.c:609: case BUTTON_DOWN:
      000A1B 80 26            [24] 2003 	sjmp	00112$
      000A1D                       2004 00109$:
                                   2005 ;	../UI_Manager/ui.c:610: set_runtime_data(index, DEC, NULL);
      000A1D 75*00 02         [24] 2006 	mov	_set_runtime_data_PARM_2,#0x02
      000A20 75*00 00         [24] 2007 	mov	_set_runtime_data_PARM_3,#0x00
      000A23 8E 82            [24] 2008 	mov	dpl,r6
      000A25 C0 06            [24] 2009 	push	ar6
      000A27 12r00r00         [24] 2010 	lcall	_set_runtime_data
      000A2A D0 06            [24] 2011 	pop	ar6
                                   2012 ;	../UI_Manager/ui.c:611: changed = 0xFF;  
      000A2C 75*02 FF         [24] 2013 	mov	_changed,#0xff
                                   2014 ;	../UI_Manager/ui.c:612: break;
                                   2015 ;	../UI_Manager/ui.c:613: case BUTTON_FUNCTION:
      000A2F 80 12            [24] 2016 	sjmp	00112$
      000A31                       2017 00110$:
                                   2018 ;	../UI_Manager/ui.c:614: set_ui_state(INC, NULL);
      000A31 75*0F 00         [24] 2019 	mov	_set_ui_state_PARM_2,#0x00
      000A34 75 82 01         [24] 2020 	mov	dpl,#0x01
                                   2021 ;	../UI_Manager/ui.c:615: return;
      000A37 02r0Er35         [24] 2022 	ljmp	_set_ui_state
                                   2023 ;	../UI_Manager/ui.c:616: case BUTTON_FUN_UP:
      000A3A                       2024 00111$:
                                   2025 ;	../UI_Manager/ui.c:617: set_ui_state(DEC, NULL);
      000A3A 75*0F 00         [24] 2026 	mov	_set_ui_state_PARM_2,#0x00
      000A3D 75 82 02         [24] 2027 	mov	dpl,#0x02
                                   2028 ;	../UI_Manager/ui.c:618: return;
      000A40 02r0Er35         [24] 2029 	ljmp	_set_ui_state
                                   2030 ;	../UI_Manager/ui.c:619: }
      000A43                       2031 00112$:
                                   2032 ;	../UI_Manager/ui.c:621: if(Changed){
      000A43 E5*01            [12] 2033 	mov	a,_Changed
      000A45 60 35            [24] 2034 	jz	00114$
                                   2035 ;	../UI_Manager/ui.c:622: Changed = 0x00;
      000A47 75*01 00         [24] 2036 	mov	_Changed,#0x00
                                   2037 ;	../UI_Manager/ui.c:623: changed = 0xFF;
      000A4A 75*02 FF         [24] 2038 	mov	_changed,#0xff
                                   2039 ;	../UI_Manager/ui.c:625: exe_command(CLEAR_DISPLAY);
      000A4D 90 80 00         [24] 2040 	mov	dptr,#0x8000
      000A50 C0 06            [24] 2041 	push	ar6
      000A52 12r00r00         [24] 2042 	lcall	_exe_command
                                   2043 ;	../UI_Manager/ui.c:627: write_string(getString(COLOR_STRING_OFFSET + State), LINE_LENGTH, 3, LINE_0, NOT_SELECTED);
      000A55 AF*00            [24] 2044 	mov	r7,_State
      000A57 74 C8            [12] 2045 	mov	a,#0xc8
      000A59 2F               [12] 2046 	add	a,r7
      000A5A F5 82            [12] 2047 	mov	dpl,a
      000A5C 12r0ErD7         [24] 2048 	lcall	_getString
      000A5F AC 82            [24] 2049 	mov	r4,dpl
      000A61 AD 83            [24] 2050 	mov	r5,dph
      000A63 AF F0            [24] 2051 	mov	r7,b
      000A65 75*00 10         [24] 2052 	mov	_write_string_PARM_2,#0x10
      000A68 75*00 03         [24] 2053 	mov	_write_string_PARM_3,#0x03
      000A6B 75*00 00         [24] 2054 	mov	_write_string_PARM_4,#0x00
      000A6E 75*00 00         [24] 2055 	mov	_write_string_PARM_5,#0x00
      000A71 8C 82            [24] 2056 	mov	dpl,r4
      000A73 8D 83            [24] 2057 	mov	dph,r5
      000A75 8F F0            [24] 2058 	mov	b,r7
      000A77 12r00r00         [24] 2059 	lcall	_write_string
      000A7A D0 06            [24] 2060 	pop	ar6
      000A7C                       2061 00114$:
                                   2062 ;	../UI_Manager/ui.c:631: if(changed){
      000A7C E5*02            [12] 2063 	mov	a,_changed
      000A7E 60 58            [24] 2064 	jz	00120$
                                   2065 ;	../UI_Manager/ui.c:632: changed = 0x00;
      000A80 75*02 00         [24] 2066 	mov	_changed,#0x00
                                   2067 ;	../UI_Manager/ui.c:634: if(get_runtime_data(get_runtime_data(index)) == 0){
      000A83 8E 82            [24] 2068 	mov	dpl,r6
      000A85 C0 06            [24] 2069 	push	ar6
      000A87 12r00r00         [24] 2070 	lcall	_get_runtime_data
      000A8A 12r00r00         [24] 2071 	lcall	_get_runtime_data
      000A8D E5 82            [12] 2072 	mov	a,dpl
      000A8F D0 06            [24] 2073 	pop	ar6
                                   2074 ;	../UI_Manager/ui.c:635: write_string("Off", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000A91 70 14            [24] 2075 	jnz	00116$
      000A93 75*00 10         [24] 2076 	mov	_write_string_PARM_2,#0x10
      000A96 75*00 06         [24] 2077 	mov	_write_string_PARM_3,#0x06
      000A99 75*00 01         [24] 2078 	mov	_write_string_PARM_4,#0x01
      000A9C F5*00            [12] 2079 	mov	_write_string_PARM_5,a
      000A9E 90r00rE2         [24] 2080 	mov	dptr,#___str_20
      000AA1 75 F0 80         [24] 2081 	mov	b,#0x80
      000AA4 02r00r00         [24] 2082 	ljmp	_write_string
      000AA7                       2083 00116$:
                                   2084 ;	../UI_Manager/ui.c:637: write_string("", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      000AA7 75*00 10         [24] 2085 	mov	_write_string_PARM_2,#0x10
      000AAA 75*00 00         [24] 2086 	mov	_write_string_PARM_3,#0x00
      000AAD 75*00 01         [24] 2087 	mov	_write_string_PARM_4,#0x01
      000AB0 75*00 00         [24] 2088 	mov	_write_string_PARM_5,#0x00
      000AB3 90r00rE6         [24] 2089 	mov	dptr,#___str_21
      000AB6 75 F0 80         [24] 2090 	mov	b,#0x80
      000AB9 C0 06            [24] 2091 	push	ar6
      000ABB 12r00r00         [24] 2092 	lcall	_write_string
      000ABE D0 06            [24] 2093 	pop	ar6
                                   2094 ;	../UI_Manager/ui.c:638: write_number(get_runtime_data(index), 6, LINE_1, NOT_SELECTED);
      000AC0 8E 82            [24] 2095 	mov	dpl,r6
      000AC2 12r00r00         [24] 2096 	lcall	_get_runtime_data
      000AC5 AF 82            [24] 2097 	mov	r7,dpl
      000AC7 7E 00            [12] 2098 	mov	r6,#0x00
      000AC9 75*00 06         [24] 2099 	mov	_write_number_PARM_2,#0x06
      000ACC 75*00 01         [24] 2100 	mov	_write_number_PARM_3,#0x01
                                   2101 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000ACF 8E*00            [24] 2102 	mov	_write_number_PARM_4,r6
      000AD1 8F 82            [24] 2103 	mov	dpl,r7
      000AD3 8E 83            [24] 2104 	mov	dph,r6
                                   2105 ;	../UI_Manager/ui.c:641: }
      000AD5 02r00r00         [24] 2106 	ljmp	_write_number
      000AD8                       2107 00120$:
      000AD8 22               [24] 2108 	ret
                                   2109 ;------------------------------------------------------------
                                   2110 ;Allocation info for local variables in function 'remotePage'
                                   2111 ;------------------------------------------------------------
                                   2112 ;action                    Allocated to registers r7 
                                   2113 ;remoteNumber              Allocated to registers r6 
                                   2114 ;index                     Allocated to registers r5 
                                   2115 ;------------------------------------------------------------
                                   2116 ;	../UI_Manager/ui.c:643: void remotePage(uint8_t action){
                                   2117 ;	-----------------------------------------
                                   2118 ;	 function remotePage
                                   2119 ;	-----------------------------------------
      000AD9                       2120 _remotePage:
      000AD9 AF 82            [24] 2121 	mov	r7,dpl
                                   2122 ;	../UI_Manager/ui.c:644: uint8_t remoteNumber = MANUAL_REMOTE_ACTION_6_STATE - State + 4;
      000ADB AE*00            [24] 2123 	mov	r6,_State
      000ADD 74 10            [12] 2124 	mov	a,#0x10
      000ADF C3               [12] 2125 	clr	c
      000AE0 9E               [12] 2126 	subb	a,r6
      000AE1 FE               [12] 2127 	mov	r6,a
                                   2128 ;	../UI_Manager/ui.c:645: uint8_t index = 0;
      000AE2 7D 00            [12] 2129 	mov	r5,#0x00
                                   2130 ;	../UI_Manager/ui.c:647: switch (State)
      000AE4 AC*00            [24] 2131 	mov	r4,_State
      000AE6 BC 0A 02         [24] 2132 	cjne	r4,#0x0a,00168$
      000AE9 80 0A            [24] 2133 	sjmp	00101$
      000AEB                       2134 00168$:
      000AEB BC 0B 02         [24] 2135 	cjne	r4,#0x0b,00169$
      000AEE 80 09            [24] 2136 	sjmp	00102$
      000AF0                       2137 00169$:
                                   2138 ;	../UI_Manager/ui.c:649: case MANUAL_REMOTE_ACTION_4_STATE:
      000AF0 BC 0C 0C         [24] 2139 	cjne	r4,#0x0c,00104$
      000AF3 80 08            [24] 2140 	sjmp	00103$
      000AF5                       2141 00101$:
                                   2142 ;	../UI_Manager/ui.c:650: index = R4_INDEX;
      000AF5 7D 09            [12] 2143 	mov	r5,#0x09
                                   2144 ;	../UI_Manager/ui.c:651: break;
                                   2145 ;	../UI_Manager/ui.c:652: case MANUAL_REMOTE_ACTION_5_STATE:
      000AF7 80 06            [24] 2146 	sjmp	00104$
      000AF9                       2147 00102$:
                                   2148 ;	../UI_Manager/ui.c:653: index = R5_INDEX;
      000AF9 7D 0A            [12] 2149 	mov	r5,#0x0a
                                   2150 ;	../UI_Manager/ui.c:654: break;
                                   2151 ;	../UI_Manager/ui.c:655: case MANUAL_REMOTE_ACTION_6_STATE:
      000AFB 80 02            [24] 2152 	sjmp	00104$
      000AFD                       2153 00103$:
                                   2154 ;	../UI_Manager/ui.c:656: index = R6_INDEX;
      000AFD 7D 0B            [12] 2155 	mov	r5,#0x0b
                                   2156 ;	../UI_Manager/ui.c:658: }
      000AFF                       2157 00104$:
                                   2158 ;	../UI_Manager/ui.c:660: switch (action)
      000AFF BF 02 02         [24] 2159 	cjne	r7,#0x02,00171$
      000B02 80 3F            [24] 2160 	sjmp	00107$
      000B04                       2161 00171$:
      000B04 BF 03 02         [24] 2162 	cjne	r7,#0x03,00172$
      000B07 80 0A            [24] 2163 	sjmp	00105$
      000B09                       2164 00172$:
      000B09 BF 0A 02         [24] 2165 	cjne	r7,#0x0a,00173$
      000B0C 80 1D            [24] 2166 	sjmp	00106$
      000B0E                       2167 00173$:
                                   2168 ;	../UI_Manager/ui.c:662: case BUTTON_UP:
      000B0E BF 0C 44         [24] 2169 	cjne	r7,#0x0c,00109$
      000B11 80 39            [24] 2170 	sjmp	00108$
      000B13                       2171 00105$:
                                   2172 ;	../UI_Manager/ui.c:663: set_runtime_data(index, INC, NULL);
      000B13 75*00 01         [24] 2173 	mov	_set_runtime_data_PARM_2,#0x01
      000B16 75*00 00         [24] 2174 	mov	_set_runtime_data_PARM_3,#0x00
      000B19 8D 82            [24] 2175 	mov	dpl,r5
      000B1B C0 06            [24] 2176 	push	ar6
      000B1D C0 05            [24] 2177 	push	ar5
      000B1F 12r00r00         [24] 2178 	lcall	_set_runtime_data
      000B22 D0 05            [24] 2179 	pop	ar5
      000B24 D0 06            [24] 2180 	pop	ar6
                                   2181 ;	../UI_Manager/ui.c:664: changed = 0xFF;
      000B26 75*02 FF         [24] 2182 	mov	_changed,#0xff
                                   2183 ;	../UI_Manager/ui.c:665: break;
                                   2184 ;	../UI_Manager/ui.c:666: case BUTTON_DOWN:
      000B29 80 2A            [24] 2185 	sjmp	00109$
      000B2B                       2186 00106$:
                                   2187 ;	../UI_Manager/ui.c:667: set_runtime_data(index, DEC, NULL);
      000B2B 75*00 02         [24] 2188 	mov	_set_runtime_data_PARM_2,#0x02
      000B2E 75*00 00         [24] 2189 	mov	_set_runtime_data_PARM_3,#0x00
      000B31 8D 82            [24] 2190 	mov	dpl,r5
      000B33 C0 06            [24] 2191 	push	ar6
      000B35 C0 05            [24] 2192 	push	ar5
      000B37 12r00r00         [24] 2193 	lcall	_set_runtime_data
      000B3A D0 05            [24] 2194 	pop	ar5
      000B3C D0 06            [24] 2195 	pop	ar6
                                   2196 ;	../UI_Manager/ui.c:668: changed = 0xFF;  
      000B3E 75*02 FF         [24] 2197 	mov	_changed,#0xff
                                   2198 ;	../UI_Manager/ui.c:669: break;
                                   2199 ;	../UI_Manager/ui.c:670: case BUTTON_FUNCTION:
      000B41 80 12            [24] 2200 	sjmp	00109$
      000B43                       2201 00107$:
                                   2202 ;	../UI_Manager/ui.c:671: set_ui_state(INC, NULL);
      000B43 75*0F 00         [24] 2203 	mov	_set_ui_state_PARM_2,#0x00
      000B46 75 82 01         [24] 2204 	mov	dpl,#0x01
                                   2205 ;	../UI_Manager/ui.c:672: return;
      000B49 02r0Er35         [24] 2206 	ljmp	_set_ui_state
                                   2207 ;	../UI_Manager/ui.c:673: case BUTTON_FUN_UP:
      000B4C                       2208 00108$:
                                   2209 ;	../UI_Manager/ui.c:674: set_ui_state(DEC, NULL);
      000B4C 75*0F 00         [24] 2210 	mov	_set_ui_state_PARM_2,#0x00
      000B4F 75 82 02         [24] 2211 	mov	dpl,#0x02
                                   2212 ;	../UI_Manager/ui.c:675: return;
      000B52 02r0Er35         [24] 2213 	ljmp	_set_ui_state
                                   2214 ;	../UI_Manager/ui.c:676: }
      000B55                       2215 00109$:
                                   2216 ;	../UI_Manager/ui.c:678: if(Changed){
      000B55 E5*01            [12] 2217 	mov	a,_Changed
      000B57 60 6C            [24] 2218 	jz	00115$
                                   2219 ;	../UI_Manager/ui.c:679: Changed = 0x00;
      000B59 75*01 00         [24] 2220 	mov	_Changed,#0x00
                                   2221 ;	../UI_Manager/ui.c:680: changed = 0xFF;
      000B5C 75*02 FF         [24] 2222 	mov	_changed,#0xff
                                   2223 ;	../UI_Manager/ui.c:682: exe_command(CLEAR_DISPLAY);
      000B5F 90 80 00         [24] 2224 	mov	dptr,#0x8000
      000B62 C0 06            [24] 2225 	push	ar6
      000B64 C0 05            [24] 2226 	push	ar5
      000B66 12r00r00         [24] 2227 	lcall	_exe_command
                                   2228 ;	../UI_Manager/ui.c:684: write_string("Remote X Action", sizeof("Remote X Action"), 1, LINE_0, NOT_SELECTED);
      000B69 75*00 10         [24] 2229 	mov	_write_string_PARM_2,#0x10
      000B6C 75*00 01         [24] 2230 	mov	_write_string_PARM_3,#0x01
      000B6F 75*00 00         [24] 2231 	mov	_write_string_PARM_4,#0x00
      000B72 75*00 00         [24] 2232 	mov	_write_string_PARM_5,#0x00
      000B75 90r00rE7         [24] 2233 	mov	dptr,#___str_22
      000B78 75 F0 80         [24] 2234 	mov	b,#0x80
      000B7B 12r00r00         [24] 2235 	lcall	_write_string
      000B7E D0 05            [24] 2236 	pop	ar5
      000B80 D0 06            [24] 2237 	pop	ar6
                                   2238 ;	../UI_Manager/ui.c:685: switch (remoteNumber)
      000B82 BE 04 02         [24] 2239 	cjne	r6,#0x04,00176$
      000B85 80 0A            [24] 2240 	sjmp	00110$
      000B87                       2241 00176$:
      000B87 BE 05 02         [24] 2242 	cjne	r6,#0x05,00177$
      000B8A 80 17            [24] 2243 	sjmp	00111$
      000B8C                       2244 00177$:
                                   2245 ;	../UI_Manager/ui.c:687: case 4:
      000B8C BE 06 36         [24] 2246 	cjne	r6,#0x06,00115$
      000B8F 80 24            [24] 2247 	sjmp	00112$
      000B91                       2248 00110$:
                                   2249 ;	../UI_Manager/ui.c:688: write_char(CHAR_4, 8, LINE_0);
      000B91 75*00 08         [24] 2250 	mov	_write_char_PARM_2,#0x08
      000B94 75*00 00         [24] 2251 	mov	_write_char_PARM_3,#0x00
      000B97 75 82 2C         [24] 2252 	mov	dpl,#0x2c
      000B9A C0 05            [24] 2253 	push	ar5
      000B9C 12r00r00         [24] 2254 	lcall	_write_char
      000B9F D0 05            [24] 2255 	pop	ar5
                                   2256 ;	../UI_Manager/ui.c:689: break;
                                   2257 ;	../UI_Manager/ui.c:690: case 5:
      000BA1 80 22            [24] 2258 	sjmp	00115$
      000BA3                       2259 00111$:
                                   2260 ;	../UI_Manager/ui.c:691: write_char(CHAR_5, 8, LINE_0);
      000BA3 75*00 08         [24] 2261 	mov	_write_char_PARM_2,#0x08
      000BA6 75*00 00         [24] 2262 	mov	_write_char_PARM_3,#0x00
      000BA9 75 82 AC         [24] 2263 	mov	dpl,#0xac
      000BAC C0 05            [24] 2264 	push	ar5
      000BAE 12r00r00         [24] 2265 	lcall	_write_char
      000BB1 D0 05            [24] 2266 	pop	ar5
                                   2267 ;	../UI_Manager/ui.c:692: break;
                                   2268 ;	../UI_Manager/ui.c:693: case 6:
      000BB3 80 10            [24] 2269 	sjmp	00115$
      000BB5                       2270 00112$:
                                   2271 ;	../UI_Manager/ui.c:694: write_char(CHAR_6, 8, LINE_0);
      000BB5 75*00 08         [24] 2272 	mov	_write_char_PARM_2,#0x08
      000BB8 75*00 00         [24] 2273 	mov	_write_char_PARM_3,#0x00
      000BBB 75 82 6C         [24] 2274 	mov	dpl,#0x6c
      000BBE C0 05            [24] 2275 	push	ar5
      000BC0 12r00r00         [24] 2276 	lcall	_write_char
      000BC3 D0 05            [24] 2277 	pop	ar5
                                   2278 ;	../UI_Manager/ui.c:696: }
      000BC5                       2279 00115$:
                                   2280 ;	../UI_Manager/ui.c:699: if(changed){
      000BC5 E5*02            [12] 2281 	mov	a,_changed
      000BC7 60 2D            [24] 2282 	jz	00118$
                                   2283 ;	../UI_Manager/ui.c:700: changed = 0x00;
      000BC9 75*02 00         [24] 2284 	mov	_changed,#0x00
                                   2285 ;	../UI_Manager/ui.c:701: write_string(getString(get_runtime_data(index) + WIRELESS_ACTION_STRING_OFFSET), LINE_LENGTH, 4, LINE_1, NOT_SELECTED);  
      000BCC 8D 82            [24] 2286 	mov	dpl,r5
      000BCE 12r00r00         [24] 2287 	lcall	_get_runtime_data
      000BD1 AF 82            [24] 2288 	mov	r7,dpl
      000BD3 74 3C            [12] 2289 	mov	a,#0x3c
      000BD5 2F               [12] 2290 	add	a,r7
      000BD6 F5 82            [12] 2291 	mov	dpl,a
      000BD8 12r0ErD7         [24] 2292 	lcall	_getString
      000BDB AD 82            [24] 2293 	mov	r5,dpl
      000BDD AE 83            [24] 2294 	mov	r6,dph
      000BDF AF F0            [24] 2295 	mov	r7,b
      000BE1 75*00 10         [24] 2296 	mov	_write_string_PARM_2,#0x10
      000BE4 75*00 04         [24] 2297 	mov	_write_string_PARM_3,#0x04
      000BE7 75*00 01         [24] 2298 	mov	_write_string_PARM_4,#0x01
      000BEA 75*00 00         [24] 2299 	mov	_write_string_PARM_5,#0x00
      000BED 8D 82            [24] 2300 	mov	dpl,r5
      000BEF 8E 83            [24] 2301 	mov	dph,r6
      000BF1 8F F0            [24] 2302 	mov	b,r7
                                   2303 ;	../UI_Manager/ui.c:703: }
      000BF3 02r00r00         [24] 2304 	ljmp	_write_string
      000BF6                       2305 00118$:
      000BF6 22               [24] 2306 	ret
                                   2307 ;------------------------------------------------------------
                                   2308 ;Allocation info for local variables in function 'saveLoadPage'
                                   2309 ;------------------------------------------------------------
                                   2310 ;slot                      Allocated with name '_saveLoadPage_slot_65536_134'
                                   2311 ;action                    Allocated to registers r7 
                                   2312 ;------------------------------------------------------------
                                   2313 ;	../UI_Manager/ui.c:705: void saveLoadPage(uint8_t action){
                                   2314 ;	-----------------------------------------
                                   2315 ;	 function saveLoadPage
                                   2316 ;	-----------------------------------------
      000BF7                       2317 _saveLoadPage:
      000BF7 AF 82            [24] 2318 	mov	r7,dpl
                                   2319 ;	../UI_Manager/ui.c:708: switch (action)
      000BF9 BF 02 03         [24] 2320 	cjne	r7,#0x02,00161$
      000BFC 02r0Cr8D         [24] 2321 	ljmp	00107$
      000BFF                       2322 00161$:
      000BFF BF 03 03         [24] 2323 	cjne	r7,#0x03,00162$
      000C02 02r0Cr7F         [24] 2324 	ljmp	00105$
      000C05                       2325 00162$:
      000C05 BF 0A 03         [24] 2326 	cjne	r7,#0x0a,00163$
      000C08 02r0Cr86         [24] 2327 	ljmp	00106$
      000C0B                       2328 00163$:
      000C0B BF 0C 03         [24] 2329 	cjne	r7,#0x0c,00164$
      000C0E 02r0Cr96         [24] 2330 	ljmp	00108$
      000C11                       2331 00164$:
      000C11 BF 1E 02         [24] 2332 	cjne	r7,#0x1e,00165$
      000C14 80 03            [24] 2333 	sjmp	00166$
      000C16                       2334 00165$:
      000C16 02r0Cr9F         [24] 2335 	ljmp	00109$
      000C19                       2336 00166$:
                                   2337 ;	../UI_Manager/ui.c:711: save_load_settings(slot % (SLOT_COUNT - 1), (State == MANUAL_SAVE_SETTINGS_STATE) ? SAVE : LOAD);
      000C19 75 F0 03         [24] 2338 	mov	b,#0x03
      000C1C E5*0E            [12] 2339 	mov	a,_saveLoadPage_slot_65536_134
      000C1E 84               [48] 2340 	div	ab
      000C1F AF F0            [24] 2341 	mov	r7,b
      000C21 74 0D            [12] 2342 	mov	a,#0x0d
      000C23 B5*00 06         [24] 2343 	cjne	a,_State,00119$
      000C26 7D 01            [12] 2344 	mov	r5,#0x01
      000C28 7E 00            [12] 2345 	mov	r6,#0x00
      000C2A 80 04            [24] 2346 	sjmp	00120$
      000C2C                       2347 00119$:
      000C2C 7D 00            [12] 2348 	mov	r5,#0x00
      000C2E 7E 00            [12] 2349 	mov	r6,#0x00
      000C30                       2350 00120$:
      000C30 8D*00            [24] 2351 	mov	_save_load_settings_PARM_2,r5
      000C32 8F 82            [24] 2352 	mov	dpl,r7
      000C34 12r00r00         [24] 2353 	lcall	_save_load_settings
                                   2354 ;	../UI_Manager/ui.c:712: write_string("", LINE_LENGTH, 0, LINE_1, NOT_SELECTED); 
      000C37 75*00 10         [24] 2355 	mov	_write_string_PARM_2,#0x10
      000C3A 75*00 00         [24] 2356 	mov	_write_string_PARM_3,#0x00
      000C3D 75*00 01         [24] 2357 	mov	_write_string_PARM_4,#0x01
      000C40 75*00 00         [24] 2358 	mov	_write_string_PARM_5,#0x00
      000C43 90r00rE6         [24] 2359 	mov	dptr,#___str_21
      000C46 75 F0 80         [24] 2360 	mov	b,#0x80
      000C49 12r00r00         [24] 2361 	lcall	_write_string
                                   2362 ;	../UI_Manager/ui.c:714: if(State == MANUAL_SAVE_SETTINGS_STATE){
      000C4C 74 0D            [12] 2363 	mov	a,#0x0d
      000C4E B5*00 17         [24] 2364 	cjne	a,_State,00103$
                                   2365 ;	../UI_Manager/ui.c:715: write_string("Saved!", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000C51 75*00 10         [24] 2366 	mov	_write_string_PARM_2,#0x10
      000C54 75*00 06         [24] 2367 	mov	_write_string_PARM_3,#0x06
      000C57 75*00 01         [24] 2368 	mov	_write_string_PARM_4,#0x01
      000C5A 75*00 00         [24] 2369 	mov	_write_string_PARM_5,#0x00
      000C5D 90r00rF7         [24] 2370 	mov	dptr,#___str_23
      000C60 75 F0 80         [24] 2371 	mov	b,#0x80
      000C63 12r00r00         [24] 2372 	lcall	_write_string
      000C66 80 37            [24] 2373 	sjmp	00109$
      000C68                       2374 00103$:
                                   2375 ;	../UI_Manager/ui.c:717: write_string("Loaded!", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000C68 75*00 10         [24] 2376 	mov	_write_string_PARM_2,#0x10
      000C6B 75*00 06         [24] 2377 	mov	_write_string_PARM_3,#0x06
      000C6E 75*00 01         [24] 2378 	mov	_write_string_PARM_4,#0x01
      000C71 75*00 00         [24] 2379 	mov	_write_string_PARM_5,#0x00
      000C74 90r00rFE         [24] 2380 	mov	dptr,#___str_24
      000C77 75 F0 80         [24] 2381 	mov	b,#0x80
      000C7A 12r00r00         [24] 2382 	lcall	_write_string
                                   2383 ;	../UI_Manager/ui.c:719: break;
                                   2384 ;	../UI_Manager/ui.c:720: case BUTTON_UP:
      000C7D 80 20            [24] 2385 	sjmp	00109$
      000C7F                       2386 00105$:
                                   2387 ;	../UI_Manager/ui.c:721: slot++;
      000C7F 05*0E            [12] 2388 	inc	_saveLoadPage_slot_65536_134
                                   2389 ;	../UI_Manager/ui.c:722: changed = 0xFF;
      000C81 75*02 FF         [24] 2390 	mov	_changed,#0xff
                                   2391 ;	../UI_Manager/ui.c:723: break;
                                   2392 ;	../UI_Manager/ui.c:724: case BUTTON_DOWN:
      000C84 80 19            [24] 2393 	sjmp	00109$
      000C86                       2394 00106$:
                                   2395 ;	../UI_Manager/ui.c:725: slot--;
      000C86 15*0E            [12] 2396 	dec	_saveLoadPage_slot_65536_134
                                   2397 ;	../UI_Manager/ui.c:726: changed = 0xFF;  
      000C88 75*02 FF         [24] 2398 	mov	_changed,#0xff
                                   2399 ;	../UI_Manager/ui.c:727: break;
                                   2400 ;	../UI_Manager/ui.c:728: case BUTTON_FUNCTION:
      000C8B 80 12            [24] 2401 	sjmp	00109$
      000C8D                       2402 00107$:
                                   2403 ;	../UI_Manager/ui.c:729: set_ui_state(INC, NULL);
      000C8D 75*0F 00         [24] 2404 	mov	_set_ui_state_PARM_2,#0x00
      000C90 75 82 01         [24] 2405 	mov	dpl,#0x01
                                   2406 ;	../UI_Manager/ui.c:730: return;
      000C93 02r0Er35         [24] 2407 	ljmp	_set_ui_state
                                   2408 ;	../UI_Manager/ui.c:731: case BUTTON_FUN_UP:
      000C96                       2409 00108$:
                                   2410 ;	../UI_Manager/ui.c:732: set_ui_state(DEC, NULL);
      000C96 75*0F 00         [24] 2411 	mov	_set_ui_state_PARM_2,#0x00
      000C99 75 82 02         [24] 2412 	mov	dpl,#0x02
                                   2413 ;	../UI_Manager/ui.c:733: return;
      000C9C 02r0Er35         [24] 2414 	ljmp	_set_ui_state
                                   2415 ;	../UI_Manager/ui.c:734: }
      000C9F                       2416 00109$:
                                   2417 ;	../UI_Manager/ui.c:736: if(Changed){
      000C9F E5*01            [12] 2418 	mov	a,_Changed
      000CA1 60 3D            [24] 2419 	jz	00114$
                                   2420 ;	../UI_Manager/ui.c:737: Changed = 0x00;
      000CA3 75*01 00         [24] 2421 	mov	_Changed,#0x00
                                   2422 ;	../UI_Manager/ui.c:738: changed = 0xFF;
      000CA6 75*02 FF         [24] 2423 	mov	_changed,#0xff
                                   2424 ;	../UI_Manager/ui.c:740: exe_command(CLEAR_DISPLAY);
      000CA9 90 80 00         [24] 2425 	mov	dptr,#0x8000
      000CAC 12r00r00         [24] 2426 	lcall	_exe_command
                                   2427 ;	../UI_Manager/ui.c:742: if(State == MANUAL_SAVE_SETTINGS_STATE){
      000CAF 74 0D            [12] 2428 	mov	a,#0x0d
      000CB1 B5*00 17         [24] 2429 	cjne	a,_State,00111$
                                   2430 ;	../UI_Manager/ui.c:743: write_string("Save Settings", sizeof("Save Settings"), 2, LINE_0, NOT_SELECTED);
      000CB4 75*00 0E         [24] 2431 	mov	_write_string_PARM_2,#0x0e
      000CB7 75*00 02         [24] 2432 	mov	_write_string_PARM_3,#0x02
      000CBA 75*00 00         [24] 2433 	mov	_write_string_PARM_4,#0x00
      000CBD 75*00 00         [24] 2434 	mov	_write_string_PARM_5,#0x00
      000CC0 90r01r06         [24] 2435 	mov	dptr,#___str_25
      000CC3 75 F0 80         [24] 2436 	mov	b,#0x80
      000CC6 12r00r00         [24] 2437 	lcall	_write_string
      000CC9 80 15            [24] 2438 	sjmp	00114$
      000CCB                       2439 00111$:
                                   2440 ;	../UI_Manager/ui.c:745: write_string("Load Settings", sizeof("Load Settings"), 2, LINE_0, NOT_SELECTED);
      000CCB 75*00 0E         [24] 2441 	mov	_write_string_PARM_2,#0x0e
      000CCE 75*00 02         [24] 2442 	mov	_write_string_PARM_3,#0x02
      000CD1 75*00 00         [24] 2443 	mov	_write_string_PARM_4,#0x00
      000CD4 75*00 00         [24] 2444 	mov	_write_string_PARM_5,#0x00
      000CD7 90r01r14         [24] 2445 	mov	dptr,#___str_26
      000CDA 75 F0 80         [24] 2446 	mov	b,#0x80
      000CDD 12r00r00         [24] 2447 	lcall	_write_string
      000CE0                       2448 00114$:
                                   2449 ;	../UI_Manager/ui.c:750: if(changed){
      000CE0 E5*02            [12] 2450 	mov	a,_changed
      000CE2 60 2A            [24] 2451 	jz	00117$
                                   2452 ;	../UI_Manager/ui.c:751: changed = 0x00;
      000CE4 75*02 00         [24] 2453 	mov	_changed,#0x00
                                   2454 ;	../UI_Manager/ui.c:752: write_string(getString(slot % (SLOT_COUNT - 1)), LINE_LENGTH, 6, LINE_1, NOT_SELECTED);  
      000CE7 75 F0 03         [24] 2455 	mov	b,#0x03
      000CEA E5*0E            [12] 2456 	mov	a,_saveLoadPage_slot_65536_134
      000CEC 84               [48] 2457 	div	ab
      000CED 85 F0 82         [24] 2458 	mov	dpl,b
      000CF0 12r0ErD7         [24] 2459 	lcall	_getString
      000CF3 AD 82            [24] 2460 	mov	r5,dpl
      000CF5 AE 83            [24] 2461 	mov	r6,dph
      000CF7 AF F0            [24] 2462 	mov	r7,b
      000CF9 75*00 10         [24] 2463 	mov	_write_string_PARM_2,#0x10
      000CFC 75*00 06         [24] 2464 	mov	_write_string_PARM_3,#0x06
      000CFF 75*00 01         [24] 2465 	mov	_write_string_PARM_4,#0x01
      000D02 75*00 00         [24] 2466 	mov	_write_string_PARM_5,#0x00
      000D05 8D 82            [24] 2467 	mov	dpl,r5
      000D07 8E 83            [24] 2468 	mov	dph,r6
      000D09 8F F0            [24] 2469 	mov	b,r7
                                   2470 ;	../UI_Manager/ui.c:755: }
      000D0B 02r00r00         [24] 2471 	ljmp	_write_string
      000D0E                       2472 00117$:
      000D0E 22               [24] 2473 	ret
                                   2474 ;------------------------------------------------------------
                                   2475 ;Allocation info for local variables in function 'dmxAddressPage'
                                   2476 ;------------------------------------------------------------
                                   2477 ;action                    Allocated to registers r7 
                                   2478 ;------------------------------------------------------------
                                   2479 ;	../UI_Manager/ui.c:757: void dmxAddressPage(uint8_t action){
                                   2480 ;	-----------------------------------------
                                   2481 ;	 function dmxAddressPage
                                   2482 ;	-----------------------------------------
      000D0F                       2483 _dmxAddressPage:
      000D0F AF 82            [24] 2484 	mov	r7,dpl
                                   2485 ;	../UI_Manager/ui.c:759: switch (action)
      000D11 BF 02 02         [24] 2486 	cjne	r7,#0x02,00146$
      000D14 80 2F            [24] 2487 	sjmp	00105$
      000D16                       2488 00146$:
      000D16 BF 03 02         [24] 2489 	cjne	r7,#0x03,00147$
      000D19 80 14            [24] 2490 	sjmp	00102$
      000D1B                       2491 00147$:
      000D1B BF 0A 02         [24] 2492 	cjne	r7,#0x0a,00148$
      000D1E 80 1A            [24] 2493 	sjmp	00104$
      000D20                       2494 00148$:
      000D20 BF 0C 02         [24] 2495 	cjne	r7,#0x0c,00149$
      000D23 80 29            [24] 2496 	sjmp	00106$
      000D25                       2497 00149$:
      000D25 BF 1F 02         [24] 2498 	cjne	r7,#0x1f,00150$
      000D28 80 05            [24] 2499 	sjmp	00102$
      000D2A                       2500 00150$:
                                   2501 ;	../UI_Manager/ui.c:762: case BUTTON_UP:
      000D2A BF 65 2A         [24] 2502 	cjne	r7,#0x65,00107$
      000D2D 80 0B            [24] 2503 	sjmp	00104$
      000D2F                       2504 00102$:
                                   2505 ;	../UI_Manager/ui.c:763: set_dmx_address(INC);
      000D2F 75 82 01         [24] 2506 	mov	dpl,#0x01
      000D32 12r00r00         [24] 2507 	lcall	_set_dmx_address
                                   2508 ;	../UI_Manager/ui.c:764: changed = 0xFF;
      000D35 75*02 FF         [24] 2509 	mov	_changed,#0xff
                                   2510 ;	../UI_Manager/ui.c:765: break;
                                   2511 ;	../UI_Manager/ui.c:767: case BUTTON_DOWN:
      000D38 80 1D            [24] 2512 	sjmp	00107$
      000D3A                       2513 00104$:
                                   2514 ;	../UI_Manager/ui.c:768: set_dmx_address(DEC);
      000D3A 75 82 02         [24] 2515 	mov	dpl,#0x02
      000D3D 12r00r00         [24] 2516 	lcall	_set_dmx_address
                                   2517 ;	../UI_Manager/ui.c:769: changed = 0xFF;  
      000D40 75*02 FF         [24] 2518 	mov	_changed,#0xff
                                   2519 ;	../UI_Manager/ui.c:770: break;
                                   2520 ;	../UI_Manager/ui.c:771: case BUTTON_FUNCTION:
      000D43 80 12            [24] 2521 	sjmp	00107$
      000D45                       2522 00105$:
                                   2523 ;	../UI_Manager/ui.c:772: set_ui_state(INC, NULL);
      000D45 75*0F 00         [24] 2524 	mov	_set_ui_state_PARM_2,#0x00
      000D48 75 82 01         [24] 2525 	mov	dpl,#0x01
                                   2526 ;	../UI_Manager/ui.c:773: return;
                                   2527 ;	../UI_Manager/ui.c:774: case BUTTON_FUN_UP:
      000D4B 02r0Er35         [24] 2528 	ljmp	_set_ui_state
      000D4E                       2529 00106$:
                                   2530 ;	../UI_Manager/ui.c:775: set_ui_state(DEC, NULL);
      000D4E 75*0F 00         [24] 2531 	mov	_set_ui_state_PARM_2,#0x00
      000D51 75 82 02         [24] 2532 	mov	dpl,#0x02
                                   2533 ;	../UI_Manager/ui.c:776: return;
                                   2534 ;	../UI_Manager/ui.c:777: }
      000D54 02r0Er35         [24] 2535 	ljmp	_set_ui_state
      000D57                       2536 00107$:
                                   2537 ;	../UI_Manager/ui.c:779: if(Changed){
      000D57 E5*01            [12] 2538 	mov	a,_Changed
      000D59 60 21            [24] 2539 	jz	00109$
                                   2540 ;	../UI_Manager/ui.c:780: Changed = 0x00;
      000D5B 75*01 00         [24] 2541 	mov	_Changed,#0x00
                                   2542 ;	../UI_Manager/ui.c:781: changed = 0xFF;
      000D5E 75*02 FF         [24] 2543 	mov	_changed,#0xff
                                   2544 ;	../UI_Manager/ui.c:783: exe_command(CLEAR_DISPLAY);
      000D61 90 80 00         [24] 2545 	mov	dptr,#0x8000
      000D64 12r00r00         [24] 2546 	lcall	_exe_command
                                   2547 ;	../UI_Manager/ui.c:785: write_string("DMX Address", sizeof("DMX Address"), 2, LINE_0, NOT_SELECTED);
      000D67 75*00 0C         [24] 2548 	mov	_write_string_PARM_2,#0x0c
      000D6A 75*00 02         [24] 2549 	mov	_write_string_PARM_3,#0x02
      000D6D 75*00 00         [24] 2550 	mov	_write_string_PARM_4,#0x00
      000D70 75*00 00         [24] 2551 	mov	_write_string_PARM_5,#0x00
      000D73 90r01r22         [24] 2552 	mov	dptr,#___str_27
      000D76 75 F0 80         [24] 2553 	mov	b,#0x80
      000D79 12r00r00         [24] 2554 	lcall	_write_string
      000D7C                       2555 00109$:
                                   2556 ;	../UI_Manager/ui.c:788: if(changed){
      000D7C E5*02            [12] 2557 	mov	a,_changed
      000D7E 60 12            [24] 2558 	jz	00112$
                                   2559 ;	../UI_Manager/ui.c:789: changed = 0x00;
      000D80 75*02 00         [24] 2560 	mov	_changed,#0x00
                                   2561 ;	../UI_Manager/ui.c:791: write_number(get_dmx_address(), 4, LINE_1, NOT_SELECTED);
      000D83 12r00r00         [24] 2562 	lcall	_get_dmx_address
      000D86 75*00 04         [24] 2563 	mov	_write_number_PARM_2,#0x04
      000D89 75*00 01         [24] 2564 	mov	_write_number_PARM_3,#0x01
      000D8C 75*00 00         [24] 2565 	mov	_write_number_PARM_4,#0x00
                                   2566 ;	../UI_Manager/ui.c:794: }
      000D8F 02r00r00         [24] 2567 	ljmp	_write_number
      000D92                       2568 00112$:
      000D92 22               [24] 2569 	ret
                                   2570 ;------------------------------------------------------------
                                   2571 ;Allocation info for local variables in function 'dmxChannelPage'
                                   2572 ;------------------------------------------------------------
                                   2573 ;action                    Allocated to registers r7 
                                   2574 ;------------------------------------------------------------
                                   2575 ;	../UI_Manager/ui.c:796: void dmxChannelPage(uint8_t action){
                                   2576 ;	-----------------------------------------
                                   2577 ;	 function dmxChannelPage
                                   2578 ;	-----------------------------------------
      000D93                       2579 _dmxChannelPage:
      000D93 AF 82            [24] 2580 	mov	r7,dpl
                                   2581 ;	../UI_Manager/ui.c:798: switch (action)
      000D95 BF 02 02         [24] 2582 	cjne	r7,#0x02,00136$
      000D98 80 31            [24] 2583 	sjmp	00103$
      000D9A                       2584 00136$:
      000D9A BF 03 02         [24] 2585 	cjne	r7,#0x03,00137$
      000D9D 80 0A            [24] 2586 	sjmp	00101$
      000D9F                       2587 00137$:
      000D9F BF 0A 02         [24] 2588 	cjne	r7,#0x0a,00138$
      000DA2 80 16            [24] 2589 	sjmp	00102$
      000DA4                       2590 00138$:
                                   2591 ;	../UI_Manager/ui.c:800: case BUTTON_UP:
      000DA4 BF 0C 36         [24] 2592 	cjne	r7,#0x0c,00105$
      000DA7 80 2B            [24] 2593 	sjmp	00104$
      000DA9                       2594 00101$:
                                   2595 ;	../UI_Manager/ui.c:801: set_runtime_data(MODE_INDEX, INC, NULL);
      000DA9 75*00 01         [24] 2596 	mov	_set_runtime_data_PARM_2,#0x01
      000DAC 75*00 00         [24] 2597 	mov	_set_runtime_data_PARM_3,#0x00
      000DAF 75 82 0E         [24] 2598 	mov	dpl,#0x0e
      000DB2 12r00r00         [24] 2599 	lcall	_set_runtime_data
                                   2600 ;	../UI_Manager/ui.c:802: changed = 0xFF;
      000DB5 75*02 FF         [24] 2601 	mov	_changed,#0xff
                                   2602 ;	../UI_Manager/ui.c:803: break;
                                   2603 ;	../UI_Manager/ui.c:804: case BUTTON_DOWN:
      000DB8 80 23            [24] 2604 	sjmp	00105$
      000DBA                       2605 00102$:
                                   2606 ;	../UI_Manager/ui.c:805: set_runtime_data(MODE_INDEX, DEC, NULL);
      000DBA 75*00 02         [24] 2607 	mov	_set_runtime_data_PARM_2,#0x02
      000DBD 75*00 00         [24] 2608 	mov	_set_runtime_data_PARM_3,#0x00
      000DC0 75 82 0E         [24] 2609 	mov	dpl,#0x0e
      000DC3 12r00r00         [24] 2610 	lcall	_set_runtime_data
                                   2611 ;	../UI_Manager/ui.c:806: changed = 0xFF;  
      000DC6 75*02 FF         [24] 2612 	mov	_changed,#0xff
                                   2613 ;	../UI_Manager/ui.c:807: break;
                                   2614 ;	../UI_Manager/ui.c:808: case BUTTON_FUNCTION:
      000DC9 80 12            [24] 2615 	sjmp	00105$
      000DCB                       2616 00103$:
                                   2617 ;	../UI_Manager/ui.c:809: set_ui_state(INC, NULL);
      000DCB 75*0F 00         [24] 2618 	mov	_set_ui_state_PARM_2,#0x00
      000DCE 75 82 01         [24] 2619 	mov	dpl,#0x01
                                   2620 ;	../UI_Manager/ui.c:810: return;
                                   2621 ;	../UI_Manager/ui.c:811: case BUTTON_FUN_UP:
      000DD1 02r0Er35         [24] 2622 	ljmp	_set_ui_state
      000DD4                       2623 00104$:
                                   2624 ;	../UI_Manager/ui.c:812: set_ui_state(DEC, NULL);
      000DD4 75*0F 00         [24] 2625 	mov	_set_ui_state_PARM_2,#0x00
      000DD7 75 82 02         [24] 2626 	mov	dpl,#0x02
                                   2627 ;	../UI_Manager/ui.c:813: return;
                                   2628 ;	../UI_Manager/ui.c:814: }
      000DDA 02r0Er35         [24] 2629 	ljmp	_set_ui_state
      000DDD                       2630 00105$:
                                   2631 ;	../UI_Manager/ui.c:816: if(Changed){
      000DDD E5*01            [12] 2632 	mov	a,_Changed
      000DDF 60 21            [24] 2633 	jz	00107$
                                   2634 ;	../UI_Manager/ui.c:817: Changed = 0x00;
      000DE1 75*01 00         [24] 2635 	mov	_Changed,#0x00
                                   2636 ;	../UI_Manager/ui.c:818: changed = 0xFF;
      000DE4 75*02 FF         [24] 2637 	mov	_changed,#0xff
                                   2638 ;	../UI_Manager/ui.c:820: exe_command(CLEAR_DISPLAY);
      000DE7 90 80 00         [24] 2639 	mov	dptr,#0x8000
      000DEA 12r00r00         [24] 2640 	lcall	_exe_command
                                   2641 ;	../UI_Manager/ui.c:822: write_string("DMX Channel Mode", sizeof("DMX Channel Mode"), 0, LINE_0, NOT_SELECTED);
      000DED 75*00 11         [24] 2642 	mov	_write_string_PARM_2,#0x11
      000DF0 75*00 00         [24] 2643 	mov	_write_string_PARM_3,#0x00
      000DF3 75*00 00         [24] 2644 	mov	_write_string_PARM_4,#0x00
      000DF6 75*00 00         [24] 2645 	mov	_write_string_PARM_5,#0x00
      000DF9 90r01r2E         [24] 2646 	mov	dptr,#___str_28
      000DFC 75 F0 80         [24] 2647 	mov	b,#0x80
      000DFF 12r00r00         [24] 2648 	lcall	_write_string
      000E02                       2649 00107$:
                                   2650 ;	../UI_Manager/ui.c:825: if(changed){
      000E02 E5*02            [12] 2651 	mov	a,_changed
      000E04 60 2E            [24] 2652 	jz	00110$
                                   2653 ;	../UI_Manager/ui.c:826: changed = 0x00;
      000E06 75*02 00         [24] 2654 	mov	_changed,#0x00
                                   2655 ;	../UI_Manager/ui.c:828: write_string(getString(get_runtime_data(MODE_INDEX) + DMX_STRING_OFFSET), LINE_LENGTH, 1, LINE_1, NOT_SELECTED);
      000E09 75 82 0E         [24] 2656 	mov	dpl,#0x0e
      000E0C 12r00r00         [24] 2657 	lcall	_get_runtime_data
      000E0F AF 82            [24] 2658 	mov	r7,dpl
      000E11 74 64            [12] 2659 	mov	a,#0x64
      000E13 2F               [12] 2660 	add	a,r7
      000E14 F5 82            [12] 2661 	mov	dpl,a
      000E16 12r0ErD7         [24] 2662 	lcall	_getString
      000E19 AD 82            [24] 2663 	mov	r5,dpl
      000E1B AE 83            [24] 2664 	mov	r6,dph
      000E1D AF F0            [24] 2665 	mov	r7,b
      000E1F 75*00 10         [24] 2666 	mov	_write_string_PARM_2,#0x10
      000E22 75*00 01         [24] 2667 	mov	_write_string_PARM_3,#0x01
      000E25 75*00 01         [24] 2668 	mov	_write_string_PARM_4,#0x01
      000E28 75*00 00         [24] 2669 	mov	_write_string_PARM_5,#0x00
      000E2B 8D 82            [24] 2670 	mov	dpl,r5
      000E2D 8E 83            [24] 2671 	mov	dph,r6
      000E2F 8F F0            [24] 2672 	mov	b,r7
                                   2673 ;	../UI_Manager/ui.c:831: }
      000E31 02r00r00         [24] 2674 	ljmp	_write_string
      000E34                       2675 00110$:
      000E34 22               [24] 2676 	ret
                                   2677 ;------------------------------------------------------------
                                   2678 ;Allocation info for local variables in function 'set_ui_state'
                                   2679 ;------------------------------------------------------------
                                   2680 ;state                     Allocated with name '_set_ui_state_PARM_2'
                                   2681 ;inc                       Allocated to registers r7 
                                   2682 ;------------------------------------------------------------
                                   2683 ;	../UI_Manager/ui.c:833: void set_ui_state(uint8_t inc, uint8_t state){
                                   2684 ;	-----------------------------------------
                                   2685 ;	 function set_ui_state
                                   2686 ;	-----------------------------------------
      000E35                       2687 _set_ui_state:
      000E35 AF 82            [24] 2688 	mov	r7,dpl
                                   2689 ;	../UI_Manager/ui.c:834: Changed = CHANGE_SCREEN_X;
      000E37 75*01 FF         [24] 2690 	mov	_Changed,#0xff
                                   2691 ;	../UI_Manager/ui.c:836: switch (inc)
      000E3A BF 01 02         [24] 2692 	cjne	r7,#0x01,00193$
      000E3D 80 08            [24] 2693 	sjmp	00101$
      000E3F                       2694 00193$:
      000E3F BF 02 02         [24] 2695 	cjne	r7,#0x02,00194$
      000E42 80 3D            [24] 2696 	sjmp	00115$
      000E44                       2697 00194$:
      000E44 02r0ErBA         [24] 2698 	ljmp	00129$
                                   2699 ;	../UI_Manager/ui.c:838: case INC:
      000E47                       2700 00101$:
                                   2701 ;	../UI_Manager/ui.c:839: state = State;
      000E47 85*00*0F         [24] 2702 	mov	_set_ui_state_PARM_2,_State
                                   2703 ;	../UI_Manager/ui.c:840: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      000E4A 75 82 10         [24] 2704 	mov	dpl,#0x10
      000E4D 12r00r00         [24] 2705 	lcall	_get_runtime_data
      000E50 E5 82            [12] 2706 	mov	a,dpl
      000E52 70 17            [24] 2707 	jnz	00113$
                                   2708 ;	../UI_Manager/ui.c:841: if(state == IDLE_STATE){
      000E54 E5*0F            [12] 2709 	mov	a,_set_ui_state_PARM_2
      000E56 70 06            [24] 2710 	jnz	00105$
                                   2711 ;	../UI_Manager/ui.c:842: state = DMX_STATE_LOW;
      000E58 75*0F 14         [24] 2712 	mov	_set_ui_state_PARM_2,#0x14
      000E5B 02r0ErCF         [24] 2713 	ljmp	00134$
      000E5E                       2714 00105$:
                                   2715 ;	../UI_Manager/ui.c:843: } else if(++state > DMX_STATE_HIGH){
      000E5E 05*0F            [12] 2716 	inc	_set_ui_state_PARM_2
      000E60 E5*0F            [12] 2717 	mov	a,_set_ui_state_PARM_2
      000E62 24 EA            [12] 2718 	add	a,#0xff - 0x15
      000E64 50 69            [24] 2719 	jnc	00134$
                                   2720 ;	../UI_Manager/ui.c:844: state = IDLE_STATE;
      000E66 75*0F 00         [24] 2721 	mov	_set_ui_state_PARM_2,#0x00
      000E69 80 64            [24] 2722 	sjmp	00134$
      000E6B                       2723 00113$:
                                   2724 ;	../UI_Manager/ui.c:847: if(state == IDLE_STATE){
      000E6B E5*0F            [12] 2725 	mov	a,_set_ui_state_PARM_2
      000E6D 70 05            [24] 2726 	jnz	00110$
                                   2727 ;	../UI_Manager/ui.c:848: state = IDLE_STATE + 1; 
      000E6F 75*0F 01         [24] 2728 	mov	_set_ui_state_PARM_2,#0x01
      000E72 80 5B            [24] 2729 	sjmp	00134$
      000E74                       2730 00110$:
                                   2731 ;	../UI_Manager/ui.c:849: } else if(++state > MANUAL_STATE_HIGH){
      000E74 05*0F            [12] 2732 	inc	_set_ui_state_PARM_2
      000E76 E5*0F            [12] 2733 	mov	a,_set_ui_state_PARM_2
      000E78 24 F1            [12] 2734 	add	a,#0xff - 0x0e
      000E7A 50 53            [24] 2735 	jnc	00134$
                                   2736 ;	../UI_Manager/ui.c:850: State = IDLE_STATE;
      000E7C 75*00 00         [24] 2737 	mov	_State,#0x00
                                   2738 ;	../UI_Manager/ui.c:853: break;
                                   2739 ;	../UI_Manager/ui.c:854: case DEC:
      000E7F 80 4E            [24] 2740 	sjmp	00134$
      000E81                       2741 00115$:
                                   2742 ;	../UI_Manager/ui.c:855: state = State;
      000E81 85*00*0F         [24] 2743 	mov	_set_ui_state_PARM_2,_State
                                   2744 ;	../UI_Manager/ui.c:856: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      000E84 75 82 10         [24] 2745 	mov	dpl,#0x10
      000E87 12r00r00         [24] 2746 	lcall	_get_runtime_data
      000E8A E5 82            [12] 2747 	mov	a,dpl
      000E8C 70 16            [24] 2748 	jnz	00127$
                                   2749 ;	../UI_Manager/ui.c:857: if(state == IDLE_STATE){
      000E8E E5*0F            [12] 2750 	mov	a,_set_ui_state_PARM_2
      000E90 70 05            [24] 2751 	jnz	00119$
                                   2752 ;	../UI_Manager/ui.c:858: state = DMX_STATE_HIGH;
      000E92 75*0F 15         [24] 2753 	mov	_set_ui_state_PARM_2,#0x15
      000E95 80 38            [24] 2754 	sjmp	00134$
      000E97                       2755 00119$:
                                   2756 ;	../UI_Manager/ui.c:859: } else if(--State < DMX_STATE_LOW){
      000E97 15*00            [12] 2757 	dec	_State
      000E99 74 EC            [12] 2758 	mov	a,#0x100 - 0x14
      000E9B 25*00            [12] 2759 	add	a,_State
      000E9D 40 30            [24] 2760 	jc	00134$
                                   2761 ;	../UI_Manager/ui.c:860: State = IDLE_STATE;
      000E9F 75*00 00         [24] 2762 	mov	_State,#0x00
      000EA2 80 2B            [24] 2763 	sjmp	00134$
      000EA4                       2764 00127$:
                                   2765 ;	../UI_Manager/ui.c:863: if(state == IDLE_STATE){
      000EA4 E5*0F            [12] 2766 	mov	a,_set_ui_state_PARM_2
      000EA6 70 05            [24] 2767 	jnz	00124$
                                   2768 ;	../UI_Manager/ui.c:864: state = MANUAL_STATE_HIGH; 
      000EA8 75*0F 0E         [24] 2769 	mov	_set_ui_state_PARM_2,#0x0e
      000EAB 80 22            [24] 2770 	sjmp	00134$
      000EAD                       2771 00124$:
                                   2772 ;	../UI_Manager/ui.c:865: } else if(--State < DMX_STATE_HIGH){
      000EAD 15*00            [12] 2773 	dec	_State
      000EAF 74 EB            [12] 2774 	mov	a,#0x100 - 0x15
      000EB1 25*00            [12] 2775 	add	a,_State
      000EB3 40 1A            [24] 2776 	jc	00134$
                                   2777 ;	../UI_Manager/ui.c:866: State = IDLE_STATE;
      000EB5 75*00 00         [24] 2778 	mov	_State,#0x00
                                   2779 ;	../UI_Manager/ui.c:869: break;
                                   2780 ;	../UI_Manager/ui.c:870: default: 
      000EB8 80 15            [24] 2781 	sjmp	00134$
      000EBA                       2782 00129$:
                                   2783 ;	../UI_Manager/ui.c:871: if(state <= MANUAL_STATE_HIGH || (state >= DMX_STATE_LOW && state <= DMX_STATE_HIGH)){
      000EBA E5*0F            [12] 2784 	mov	a,_set_ui_state_PARM_2
      000EBC 24 F1            [12] 2785 	add	a,#0xff - 0x0e
      000EBE 50 0C            [24] 2786 	jnc	00130$
      000EC0 74 EC            [12] 2787 	mov	a,#0x100 - 0x14
      000EC2 25*0F            [12] 2788 	add	a,_set_ui_state_PARM_2
      000EC4 50 09            [24] 2789 	jnc	00134$
      000EC6 E5*0F            [12] 2790 	mov	a,_set_ui_state_PARM_2
      000EC8 24 EA            [12] 2791 	add	a,#0xff - 0x15
      000ECA 40 03            [24] 2792 	jc	00134$
      000ECC                       2793 00130$:
                                   2794 ;	../UI_Manager/ui.c:872: state = IDLE_STATE;
      000ECC 75*0F 00         [24] 2795 	mov	_set_ui_state_PARM_2,#0x00
                                   2796 ;	../UI_Manager/ui.c:875: }
      000ECF                       2797 00134$:
                                   2798 ;	../UI_Manager/ui.c:877: State = state;
      000ECF 85*0F*00         [24] 2799 	mov	_State,_set_ui_state_PARM_2
                                   2800 ;	../UI_Manager/ui.c:878: }
      000ED2 22               [24] 2801 	ret
                                   2802 ;------------------------------------------------------------
                                   2803 ;Allocation info for local variables in function 'get_ui_state'
                                   2804 ;------------------------------------------------------------
                                   2805 ;	../UI_Manager/ui.c:880: uint8_t get_ui_state(){
                                   2806 ;	-----------------------------------------
                                   2807 ;	 function get_ui_state
                                   2808 ;	-----------------------------------------
      000ED3                       2809 _get_ui_state:
                                   2810 ;	../UI_Manager/ui.c:881: return State;
      000ED3 85*00 82         [24] 2811 	mov	dpl,_State
                                   2812 ;	../UI_Manager/ui.c:882: }
      000ED6 22               [24] 2813 	ret
                                   2814 ;------------------------------------------------------------
                                   2815 ;Allocation info for local variables in function 'getString'
                                   2816 ;------------------------------------------------------------
                                   2817 ;index                     Allocated to registers r7 
                                   2818 ;------------------------------------------------------------
                                   2819 ;	../UI_Manager/ui.c:884: char* getString(uint8_t index){
                                   2820 ;	-----------------------------------------
                                   2821 ;	 function getString
                                   2822 ;	-----------------------------------------
      000ED7                       2823 _getString:
      000ED7 AF 82            [24] 2824 	mov	r7,dpl
                                   2825 ;	../UI_Manager/ui.c:885: switch (index)
      000ED9 8F 06            [24] 2826 	mov	ar6,r7
      000EDB BE 00 03         [24] 2827 	cjne	r6,#0x00,00299$
      000EDE 02r0FrD6         [24] 2828 	ljmp	00103$
      000EE1                       2829 00299$:
      000EE1 BE 01 03         [24] 2830 	cjne	r6,#0x01,00300$
      000EE4 02r0FrCF         [24] 2831 	ljmp	00102$
      000EE7                       2832 00300$:
      000EE7 BF 02 03         [24] 2833 	cjne	r7,#0x02,00301$
      000EEA 02r0FrC8         [24] 2834 	ljmp	00101$
      000EED                       2835 00301$:
      000EED BF 14 03         [24] 2836 	cjne	r7,#0x14,00302$
      000EF0 02r0FrDD         [24] 2837 	ljmp	00104$
      000EF3                       2838 00302$:
      000EF3 BF 15 03         [24] 2839 	cjne	r7,#0x15,00303$
      000EF6 02r0FrE4         [24] 2840 	ljmp	00105$
      000EF9                       2841 00303$:
      000EF9 BF 16 03         [24] 2842 	cjne	r7,#0x16,00304$
      000EFC 02r0FrEB         [24] 2843 	ljmp	00106$
      000EFF                       2844 00304$:
      000EFF BF 17 03         [24] 2845 	cjne	r7,#0x17,00305$
      000F02 02r0FrF2         [24] 2846 	ljmp	00107$
      000F05                       2847 00305$:
      000F05 BF 18 03         [24] 2848 	cjne	r7,#0x18,00306$
      000F08 02r10r00         [24] 2849 	ljmp	00109$
      000F0B                       2850 00306$:
      000F0B BF 19 03         [24] 2851 	cjne	r7,#0x19,00307$
      000F0E 02r10r07         [24] 2852 	ljmp	00110$
      000F11                       2853 00307$:
      000F11 BF 1A 03         [24] 2854 	cjne	r7,#0x1a,00308$
      000F14 02r0FrF9         [24] 2855 	ljmp	00108$
      000F17                       2856 00308$:
      000F17 BF 28 03         [24] 2857 	cjne	r7,#0x28,00309$
      000F1A 02r10rAF         [24] 2858 	ljmp	00134$
      000F1D                       2859 00309$:
      000F1D BF 29 03         [24] 2860 	cjne	r7,#0x29,00310$
      000F20 02r10rB6         [24] 2861 	ljmp	00135$
      000F23                       2862 00310$:
      000F23 BF 2A 03         [24] 2863 	cjne	r7,#0x2a,00311$
      000F26 02r10rBD         [24] 2864 	ljmp	00136$
      000F29                       2865 00311$:
      000F29 BF 2B 03         [24] 2866 	cjne	r7,#0x2b,00312$
      000F2C 02r10rC4         [24] 2867 	ljmp	00137$
      000F2F                       2868 00312$:
      000F2F BF 2C 03         [24] 2869 	cjne	r7,#0x2c,00313$
      000F32 02r10rCB         [24] 2870 	ljmp	00138$
      000F35                       2871 00313$:
      000F35 BF 2D 03         [24] 2872 	cjne	r7,#0x2d,00314$
      000F38 02r10rD2         [24] 2873 	ljmp	00139$
      000F3B                       2874 00314$:
      000F3B BF 3C 03         [24] 2875 	cjne	r7,#0x3c,00315$
      000F3E 02r10r2A         [24] 2876 	ljmp	00115$
      000F41                       2877 00315$:
      000F41 BF 3D 03         [24] 2878 	cjne	r7,#0x3d,00316$
      000F44 02r10r31         [24] 2879 	ljmp	00116$
      000F47                       2880 00316$:
      000F47 BF 3E 03         [24] 2881 	cjne	r7,#0x3e,00317$
      000F4A 02r10r38         [24] 2882 	ljmp	00117$
      000F4D                       2883 00317$:
      000F4D BF 3F 03         [24] 2884 	cjne	r7,#0x3f,00318$
      000F50 02r10r3F         [24] 2885 	ljmp	00118$
      000F53                       2886 00318$:
      000F53 BF 40 03         [24] 2887 	cjne	r7,#0x40,00319$
      000F56 02r10r46         [24] 2888 	ljmp	00119$
      000F59                       2889 00319$:
      000F59 BF 41 03         [24] 2890 	cjne	r7,#0x41,00320$
      000F5C 02r10r4D         [24] 2891 	ljmp	00120$
      000F5F                       2892 00320$:
      000F5F BF 42 03         [24] 2893 	cjne	r7,#0x42,00321$
      000F62 02r10r54         [24] 2894 	ljmp	00121$
      000F65                       2895 00321$:
      000F65 BF 43 03         [24] 2896 	cjne	r7,#0x43,00322$
      000F68 02r10r5B         [24] 2897 	ljmp	00122$
      000F6B                       2898 00322$:
      000F6B BF 44 03         [24] 2899 	cjne	r7,#0x44,00323$
      000F6E 02r10r62         [24] 2900 	ljmp	00123$
      000F71                       2901 00323$:
      000F71 BF 45 03         [24] 2902 	cjne	r7,#0x45,00324$
      000F74 02r10r69         [24] 2903 	ljmp	00124$
      000F77                       2904 00324$:
      000F77 BF 46 03         [24] 2905 	cjne	r7,#0x46,00325$
      000F7A 02r10r70         [24] 2906 	ljmp	00125$
      000F7D                       2907 00325$:
      000F7D BF 47 03         [24] 2908 	cjne	r7,#0x47,00326$
      000F80 02r10r77         [24] 2909 	ljmp	00126$
      000F83                       2910 00326$:
      000F83 BF 48 03         [24] 2911 	cjne	r7,#0x48,00327$
      000F86 02r10r7E         [24] 2912 	ljmp	00127$
      000F89                       2913 00327$:
      000F89 BF 50 03         [24] 2914 	cjne	r7,#0x50,00328$
      000F8C 02r10r85         [24] 2915 	ljmp	00128$
      000F8F                       2916 00328$:
      000F8F BF 51 03         [24] 2917 	cjne	r7,#0x51,00329$
      000F92 02r10r8C         [24] 2918 	ljmp	00129$
      000F95                       2919 00329$:
      000F95 BF 52 03         [24] 2920 	cjne	r7,#0x52,00330$
      000F98 02r10r93         [24] 2921 	ljmp	00130$
      000F9B                       2922 00330$:
      000F9B BF 64 03         [24] 2923 	cjne	r7,#0x64,00331$
      000F9E 02r10r9A         [24] 2924 	ljmp	00131$
      000FA1                       2925 00331$:
      000FA1 BF 65 03         [24] 2926 	cjne	r7,#0x65,00332$
      000FA4 02r10rA1         [24] 2927 	ljmp	00132$
      000FA7                       2928 00332$:
      000FA7 BF 66 03         [24] 2929 	cjne	r7,#0x66,00333$
      000FAA 02r10rA8         [24] 2930 	ljmp	00133$
      000FAD                       2931 00333$:
      000FAD BF CE 03         [24] 2932 	cjne	r7,#0xce,00334$
      000FB0 02r10r0E         [24] 2933 	ljmp	00111$
      000FB3                       2934 00334$:
      000FB3 BF CF 03         [24] 2935 	cjne	r7,#0xcf,00335$
      000FB6 02r10r1C         [24] 2936 	ljmp	00113$
      000FB9                       2937 00335$:
      000FB9 BF D0 03         [24] 2938 	cjne	r7,#0xd0,00336$
      000FBC 02r10r15         [24] 2939 	ljmp	00112$
      000FBF                       2940 00336$:
      000FBF BF D1 03         [24] 2941 	cjne	r7,#0xd1,00337$
      000FC2 02r10r23         [24] 2942 	ljmp	00114$
      000FC5                       2943 00337$:
      000FC5 02r10rD9         [24] 2944 	ljmp	00140$
                                   2945 ;	../UI_Manager/ui.c:887: case POWER_STRING_OFFSET + OPTION_FOG_LOW:
      000FC8                       2946 00101$:
                                   2947 ;	../UI_Manager/ui.c:888: return "Wimpy";
      000FC8 90r01r3F         [24] 2948 	mov	dptr,#___str_29
      000FCB 75 F0 80         [24] 2949 	mov	b,#0x80
      000FCE 22               [24] 2950 	ret
                                   2951 ;	../UI_Manager/ui.c:889: case POWER_STRING_OFFSET + OPTION_FOG_MEDIUM:
      000FCF                       2952 00102$:
                                   2953 ;	../UI_Manager/ui.c:890: return "Mild";
      000FCF 90r01r45         [24] 2954 	mov	dptr,#___str_30
      000FD2 75 F0 80         [24] 2955 	mov	b,#0x80
      000FD5 22               [24] 2956 	ret
                                   2957 ;	../UI_Manager/ui.c:891: case POWER_STRING_OFFSET + OPTION_FOG_HIGH:
      000FD6                       2958 00103$:
                                   2959 ;	../UI_Manager/ui.c:892: return "Blazin";
      000FD6 90r01r4A         [24] 2960 	mov	dptr,#___str_31
      000FD9 75 F0 80         [24] 2961 	mov	b,#0x80
      000FDC 22               [24] 2962 	ret
                                   2963 ;	../UI_Manager/ui.c:894: case MACRO_STRING_OFFSET + OPTION_MACRO_NONE:
      000FDD                       2964 00104$:
                                   2965 ;	../UI_Manager/ui.c:895: return "Off";
      000FDD 90r00rE2         [24] 2966 	mov	dptr,#___str_20
      000FE0 75 F0 80         [24] 2967 	mov	b,#0x80
      000FE3 22               [24] 2968 	ret
                                   2969 ;	../UI_Manager/ui.c:896: case MACRO_STRING_OFFSET + OPTION_MACRO_RAINBOW_DMX:
      000FE4                       2970 00105$:
                                   2971 ;	../UI_Manager/ui.c:897: return "Rainbow";
      000FE4 90r01r51         [24] 2972 	mov	dptr,#___str_32
      000FE7 75 F0 80         [24] 2973 	mov	b,#0x80
      000FEA 22               [24] 2974 	ret
                                   2975 ;	../UI_Manager/ui.c:898: case MACRO_STRING_OFFSET + OPTION_MACRO_FIRE_DMX:
      000FEB                       2976 00106$:
                                   2977 ;	../UI_Manager/ui.c:899: return "Fire";
      000FEB 90r01r59         [24] 2978 	mov	dptr,#___str_33
      000FEE 75 F0 80         [24] 2979 	mov	b,#0x80
      000FF1 22               [24] 2980 	ret
                                   2981 ;	../UI_Manager/ui.c:900: case MACRO_STRING_OFFSET + OPTION_MACRO_WATER_DMX:
      000FF2                       2982 00107$:
                                   2983 ;	../UI_Manager/ui.c:901: return "Water";
      000FF2 90r01r5E         [24] 2984 	mov	dptr,#___str_34
      000FF5 75 F0 80         [24] 2985 	mov	b,#0x80
      000FF8 22               [24] 2986 	ret
                                   2987 ;	../UI_Manager/ui.c:902: case MACRO_STRING_OFFSET + OPTION_MACRO_STORM_DMX:
      000FF9                       2988 00108$:
                                   2989 ;	../UI_Manager/ui.c:903: return "Storm";
      000FF9 90r01r64         [24] 2990 	mov	dptr,#___str_35
      000FFC 75 F0 80         [24] 2991 	mov	b,#0x80
      000FFF 22               [24] 2992 	ret
                                   2993 ;	../UI_Manager/ui.c:904: case MACRO_STRING_OFFSET + OPTION_MACRO_ACID_DMX:
      001000                       2994 00109$:
                                   2995 ;	../UI_Manager/ui.c:905: return "Acid";
      001000 90r01r6A         [24] 2996 	mov	dptr,#___str_36
      001003 75 F0 80         [24] 2997 	mov	b,#0x80
      001006 22               [24] 2998 	ret
                                   2999 ;	../UI_Manager/ui.c:906: case MACRO_STRING_OFFSET + OPTION_MACRO_ETHER_DMX:
      001007                       3000 00110$:
                                   3001 ;	../UI_Manager/ui.c:907: return "Ether";
      001007 90r01r6F         [24] 3002 	mov	dptr,#___str_37
      00100A 75 F0 80         [24] 3003 	mov	b,#0x80
      00100D 22               [24] 3004 	ret
                                   3005 ;	../UI_Manager/ui.c:909: case COLOR_STRING_OFFSET + MANUAL_RED_STATE:
      00100E                       3006 00111$:
                                   3007 ;	../UI_Manager/ui.c:910: return "Red Level";
      00100E 90r01r75         [24] 3008 	mov	dptr,#___str_38
      001011 75 F0 80         [24] 3009 	mov	b,#0x80
      001014 22               [24] 3010 	ret
                                   3011 ;	../UI_Manager/ui.c:911: case COLOR_STRING_OFFSET + MANUAL_GREEN_STATE:
      001015                       3012 00112$:
                                   3013 ;	../UI_Manager/ui.c:912: return "Green Level";
      001015 90r01r7F         [24] 3014 	mov	dptr,#___str_39
      001018 75 F0 80         [24] 3015 	mov	b,#0x80
      00101B 22               [24] 3016 	ret
                                   3017 ;	../UI_Manager/ui.c:913: case COLOR_STRING_OFFSET + MANUAL_BLUE_STATE:
      00101C                       3018 00113$:
                                   3019 ;	../UI_Manager/ui.c:914: return "Blue Level";
      00101C 90r01r8B         [24] 3020 	mov	dptr,#___str_40
      00101F 75 F0 80         [24] 3021 	mov	b,#0x80
      001022 22               [24] 3022 	ret
                                   3023 ;	../UI_Manager/ui.c:915: case COLOR_STRING_OFFSET + MANUAL_STROBE_STATE:
      001023                       3024 00114$:
                                   3025 ;	../UI_Manager/ui.c:916: return "Strobe Level";
      001023 90r01r96         [24] 3026 	mov	dptr,#___str_41
      001026 75 F0 80         [24] 3027 	mov	b,#0x80
      001029 22               [24] 3028 	ret
                                   3029 ;	../UI_Manager/ui.c:918: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACITON_NONE:
      00102A                       3030 00115$:
                                   3031 ;	../UI_Manager/ui.c:919: return "No Action";
      00102A 90r01rA3         [24] 3032 	mov	dptr,#___str_42
      00102D 75 F0 80         [24] 3033 	mov	b,#0x80
      001030 22               [24] 3034 	ret
                                   3035 ;	../UI_Manager/ui.c:920: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_CHOOSE_MACRO:
      001031                       3036 00116$:
                                   3037 ;	../UI_Manager/ui.c:921: return "Choose Macro";
      001031 90r01rAD         [24] 3038 	mov	dptr,#___str_43
      001034 75 F0 80         [24] 3039 	mov	b,#0x80
      001037 22               [24] 3040 	ret
                                   3041 ;	../UI_Manager/ui.c:922: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_RED:
      001038                       3042 00117$:
                                   3043 ;	../UI_Manager/ui.c:923: return "Red";
      001038 90r01rBA         [24] 3044 	mov	dptr,#___str_44
      00103B 75 F0 80         [24] 3045 	mov	b,#0x80
      00103E 22               [24] 3046 	ret
                                   3047 ;	../UI_Manager/ui.c:924: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_YELLOW:
      00103F                       3048 00118$:
                                   3049 ;	../UI_Manager/ui.c:925: return "Yellow";
      00103F 90r01rBE         [24] 3050 	mov	dptr,#___str_45
      001042 75 F0 80         [24] 3051 	mov	b,#0x80
      001045 22               [24] 3052 	ret
                                   3053 ;	../UI_Manager/ui.c:926: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_GREEN:
      001046                       3054 00119$:
                                   3055 ;	../UI_Manager/ui.c:927: return "Green";
      001046 90r01rC5         [24] 3056 	mov	dptr,#___str_46
      001049 75 F0 80         [24] 3057 	mov	b,#0x80
      00104C 22               [24] 3058 	ret
                                   3059 ;	../UI_Manager/ui.c:928: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_CYAN:
      00104D                       3060 00120$:
                                   3061 ;	../UI_Manager/ui.c:929: return "Cyan";
      00104D 90r01rCB         [24] 3062 	mov	dptr,#___str_47
      001050 75 F0 80         [24] 3063 	mov	b,#0x80
      001053 22               [24] 3064 	ret
                                   3065 ;	../UI_Manager/ui.c:930: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_BLUE:
      001054                       3066 00121$:
                                   3067 ;	../UI_Manager/ui.c:931: return "Blue";
      001054 90r01rD0         [24] 3068 	mov	dptr,#___str_48
      001057 75 F0 80         [24] 3069 	mov	b,#0x80
      00105A 22               [24] 3070 	ret
                                   3071 ;	../UI_Manager/ui.c:932: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_MAGENTA:
      00105B                       3072 00122$:
                                   3073 ;	../UI_Manager/ui.c:933: return "Magenta";
      00105B 90r01rD5         [24] 3074 	mov	dptr,#___str_49
      00105E 75 F0 80         [24] 3075 	mov	b,#0x80
      001061 22               [24] 3076 	ret
                                   3077 ;	../UI_Manager/ui.c:934: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_SLOW:
      001062                       3078 00123$:
                                   3079 ;	../UI_Manager/ui.c:935: return "Strobe Slow";
      001062 90r01rDD         [24] 3080 	mov	dptr,#___str_50
      001065 75 F0 80         [24] 3081 	mov	b,#0x80
      001068 22               [24] 3082 	ret
                                   3083 ;	../UI_Manager/ui.c:936: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_MEDIUM:
      001069                       3084 00124$:
                                   3085 ;	../UI_Manager/ui.c:937: return "Strobe Medium";
      001069 90r01rE9         [24] 3086 	mov	dptr,#___str_51
      00106C 75 F0 80         [24] 3087 	mov	b,#0x80
      00106F 22               [24] 3088 	ret
                                   3089 ;	../UI_Manager/ui.c:938: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_FAST:
      001070                       3090 00125$:
                                   3091 ;	../UI_Manager/ui.c:939: return "Strobe Fast";
      001070 90r01rF7         [24] 3092 	mov	dptr,#___str_52
      001073 75 F0 80         [24] 3093 	mov	b,#0x80
      001076 22               [24] 3094 	ret
                                   3095 ;	../UI_Manager/ui.c:940: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_BLACKOUT:
      001077                       3096 00126$:
                                   3097 ;	../UI_Manager/ui.c:941: return "Blackout";
      001077 90r02r03         [24] 3098 	mov	dptr,#___str_53
      00107A 75 F0 80         [24] 3099 	mov	b,#0x80
      00107D 22               [24] 3100 	ret
                                   3101 ;	../UI_Manager/ui.c:942: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_WHITEOUT:
      00107E                       3102 00127$:
                                   3103 ;	../UI_Manager/ui.c:943: return "Whiteout";         
      00107E 90r02r0C         [24] 3104 	mov	dptr,#___str_54
      001081 75 F0 80         [24] 3105 	mov	b,#0x80
      001084 22               [24] 3106 	ret
                                   3107 ;	../UI_Manager/ui.c:945: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_1: 
      001085                       3108 00128$:
                                   3109 ;	../UI_Manager/ui.c:946: return "Slot 1";   
      001085 90r02r15         [24] 3110 	mov	dptr,#___str_55
      001088 75 F0 80         [24] 3111 	mov	b,#0x80
      00108B 22               [24] 3112 	ret
                                   3113 ;	../UI_Manager/ui.c:947: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_2: 
      00108C                       3114 00129$:
                                   3115 ;	../UI_Manager/ui.c:948: return "Slot 2";   
      00108C 90r02r1C         [24] 3116 	mov	dptr,#___str_56
      00108F 75 F0 80         [24] 3117 	mov	b,#0x80
      001092 22               [24] 3118 	ret
                                   3119 ;	../UI_Manager/ui.c:949: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_3: 
      001093                       3120 00130$:
                                   3121 ;	../UI_Manager/ui.c:950: return "Slot 3"; 
      001093 90r02r23         [24] 3122 	mov	dptr,#___str_57
      001096 75 F0 80         [24] 3123 	mov	b,#0x80
                                   3124 ;	../UI_Manager/ui.c:952: case DMX_STRING_OFFSET + OPTION_DMX_MODE_9: 
      001099 22               [24] 3125 	ret
      00109A                       3126 00131$:
                                   3127 ;	../UI_Manager/ui.c:953: return "10 All";     
      00109A 90r02r2A         [24] 3128 	mov	dptr,#___str_58
      00109D 75 F0 80         [24] 3129 	mov	b,#0x80
                                   3130 ;	../UI_Manager/ui.c:954: case DMX_STRING_OFFSET + OPTION_DMX_MODE_3: 
      0010A0 22               [24] 3131 	ret
      0010A1                       3132 00132$:
                                   3133 ;	../UI_Manager/ui.c:955: return "3 Fog + Macro";   
      0010A1 90r02r31         [24] 3134 	mov	dptr,#___str_59
      0010A4 75 F0 80         [24] 3135 	mov	b,#0x80
                                   3136 ;	../UI_Manager/ui.c:956: case DMX_STRING_OFFSET + OPTION_DMX_MODE_1: 
      0010A7 22               [24] 3137 	ret
      0010A8                       3138 00133$:
                                   3139 ;	../UI_Manager/ui.c:957: return "1 Fog";    
      0010A8 90r02r3F         [24] 3140 	mov	dptr,#___str_60
      0010AB 75 F0 80         [24] 3141 	mov	b,#0x80
                                   3142 ;	../UI_Manager/ui.c:959: case SECRET_STRING_OFFSET + 0:
      0010AE 22               [24] 3143 	ret
      0010AF                       3144 00134$:
                                   3145 ;	../UI_Manager/ui.c:960: return "0x486F6C6D6573";
      0010AF 90r02r45         [24] 3146 	mov	dptr,#___str_61
      0010B2 75 F0 80         [24] 3147 	mov	b,#0x80
                                   3148 ;	../UI_Manager/ui.c:961: case SECRET_STRING_OFFSET + 1:
      0010B5 22               [24] 3149 	ret
      0010B6                       3150 00135$:
                                   3151 ;	../UI_Manager/ui.c:962: return "& 576174736F6E";
      0010B6 90r02r54         [24] 3152 	mov	dptr,#___str_62
      0010B9 75 F0 80         [24] 3153 	mov	b,#0x80
                                   3154 ;	../UI_Manager/ui.c:963: case SECRET_STRING_OFFSET + 2:
      0010BC 22               [24] 3155 	ret
      0010BD                       3156 00136$:
                                   3157 ;	../UI_Manager/ui.c:964: return "626F74684F776E41";
      0010BD 90r02r63         [24] 3158 	mov	dptr,#___str_63
      0010C0 75 F0 80         [24] 3159 	mov	b,#0x80
                                   3160 ;	../UI_Manager/ui.c:965: case SECRET_STRING_OFFSET + 3:
      0010C3 22               [24] 3161 	ret
      0010C4                       3162 00137$:
                                   3163 ;	../UI_Manager/ui.c:966: return "536E6F7762616C6C";
      0010C4 90r02r74         [24] 3164 	mov	dptr,#___str_64
      0010C7 75 F0 80         [24] 3165 	mov	b,#0x80
                                   3166 ;	../UI_Manager/ui.c:967: case SECRET_STRING_OFFSET + 4:
      0010CA 22               [24] 3167 	ret
      0010CB                       3168 00138$:
                                   3169 ;	../UI_Manager/ui.c:968: return "4D6F726961727479";
      0010CB 90r02r85         [24] 3170 	mov	dptr,#___str_65
      0010CE 75 F0 80         [24] 3171 	mov	b,#0x80
                                   3172 ;	../UI_Manager/ui.c:969: case SECRET_STRING_OFFSET + 5:
      0010D1 22               [24] 3173 	ret
      0010D2                       3174 00139$:
                                   3175 ;	../UI_Manager/ui.c:970: return "646F65734E6F74 ;";
      0010D2 90r02r96         [24] 3176 	mov	dptr,#___str_66
      0010D5 75 F0 80         [24] 3177 	mov	b,#0x80
                                   3178 ;	../UI_Manager/ui.c:971: }
      0010D8 22               [24] 3179 	ret
      0010D9                       3180 00140$:
                                   3181 ;	../UI_Manager/ui.c:973: return 0;
      0010D9 90 00 00         [24] 3182 	mov	dptr,#0x0000
      0010DC 75 F0 00         [24] 3183 	mov	b,#0x00
                                   3184 ;	../UI_Manager/ui.c:974: }
      0010DF 22               [24] 3185 	ret
                                   3186 	.area CSEG    (CODE)
                                   3187 	.area CONST   (CODE)
      000000                       3188 ___str_0:
      000000 54 61 6E 6B 20 4C 69  3189 	.ascii "Tank Lights Off"
             67 68 74 73 20 4F 66
             66
      00000F 00                    3190 	.db 0x00
      000010                       3191 ___str_1:
      000010 54 61 6E 6B 20 4C 69  3192 	.ascii "Tank Lights On"
             67 68 74 73 20 4F 6E
      00001E 00                    3193 	.db 0x00
      00001F                       3194 ___str_2:
      00001F 46 75 6E 2B 4D 61 6E  3195 	.ascii "Fun+Man to Undo"
             20 74 6F 20 55 6E 64
             6F
      00002E 00                    3196 	.db 0x00
      00002F                       3197 ___str_3:
      00002F 41 74 6D 6F 73 46 45  3198 	.ascii "AtmosFEAR 221B"
             41 52 20 32 32 31 42
      00003D 00                    3199 	.db 0x00
      00003E                       3200 ___str_4:
      00003E 42 79 20 42 6C 69 7A  3201 	.ascii "By Blizzard Pro"
             7A 61 72 64 20 50 72
             6F
      00004D 00                    3202 	.db 0x00
      00004E                       3203 ___str_5:
      00004E 50 43 20 4C 6F 61 64  3204 	.ascii "PC Load Letter"
             20 4C 65 74 74 65 72
      00005C 00                    3205 	.db 0x00
      00005D                       3206 ___str_6:
      00005D 42 75 72 73 74 20 74  3207 	.ascii "Burst to Refill"
             6F 20 52 65 66 69 6C
             6C
      00006C 00                    3208 	.db 0x00
      00006D                       3209 ___str_7:
      00006D 4D 61 6E 75 61 6C 20  3210 	.ascii "Manual Mode"
             4D 6F 64 65
      000078 00                    3211 	.db 0x00
      000079                       3212 ___str_8:
      000079 41 64 64 72           3213 	.ascii "Addr"
      00007D 00                    3214 	.db 0x00
      00007E                       3215 ___str_9:
      00007E 4D 6F 64 65           3216 	.ascii "Mode"
      000082 00                    3217 	.db 0x00
      000083                       3218 ___str_10:
      000083 44 4D 58 20 4F 6B     3219 	.ascii "DMX Ok"
      000089 00                    3220 	.db 0x00
      00008A                       3221 ___str_11:
      00008A 4E 6F 20 44 4D 58     3222 	.ascii "No DMX"
      000090 00                    3223 	.db 0x00
      000091                       3224 ___str_12:
      000091 49 6E 74 65 72 76 61  3225 	.ascii "Interval"
             6C
      000099 00                    3226 	.db 0x00
      00009A                       3227 ___str_13:
      00009A 44 75 72 61 74 69 6F  3228 	.ascii "Duration"
             6E
      0000A2 00                    3229 	.db 0x00
      0000A3                       3230 ___str_14:
      0000A3 46 6F 67 20 4C 65 76  3231 	.ascii "Fog Level"
             65 6C
      0000AC 00                    3232 	.db 0x00
      0000AD                       3233 ___str_15:
      0000AD 46 6F 67 20 49 6E 74  3234 	.ascii "Fog Interval"
             65 72 76 61 6C
      0000B9 00                    3235 	.db 0x00
      0000BA                       3236 ___str_16:
      0000BA 53 65 63 6F 6E 64 73  3237 	.ascii "Seconds"
      0000C1 00                    3238 	.db 0x00
      0000C2                       3239 ___str_17:
      0000C2 46 6F 67 20 44 75 72  3240 	.ascii "Fog Duration"
             61 74 69 6F 6E
      0000CE 00                    3241 	.db 0x00
      0000CF                       3242 ___str_18:
      0000CF 4D 61 63 72 6F 73     3243 	.ascii "Macros"
      0000D5 00                    3244 	.db 0x00
      0000D6                       3245 ___str_19:
      0000D6 4D 61 63 72 6F 20 53  3246 	.ascii "Macro Speed"
             70 65 65 64
      0000E1 00                    3247 	.db 0x00
      0000E2                       3248 ___str_20:
      0000E2 4F 66 66              3249 	.ascii "Off"
      0000E5 00                    3250 	.db 0x00
      0000E6                       3251 ___str_21:
      0000E6 00                    3252 	.db 0x00
      0000E7                       3253 ___str_22:
      0000E7 52 65 6D 6F 74 65 20  3254 	.ascii "Remote X Action"
             58 20 41 63 74 69 6F
             6E
      0000F6 00                    3255 	.db 0x00
      0000F7                       3256 ___str_23:
      0000F7 53 61 76 65 64 21     3257 	.ascii "Saved!"
      0000FD 00                    3258 	.db 0x00
      0000FE                       3259 ___str_24:
      0000FE 4C 6F 61 64 65 64 21  3260 	.ascii "Loaded!"
      000105 00                    3261 	.db 0x00
      000106                       3262 ___str_25:
      000106 53 61 76 65 20 53 65  3263 	.ascii "Save Settings"
             74 74 69 6E 67 73
      000113 00                    3264 	.db 0x00
      000114                       3265 ___str_26:
      000114 4C 6F 61 64 20 53 65  3266 	.ascii "Load Settings"
             74 74 69 6E 67 73
      000121 00                    3267 	.db 0x00
      000122                       3268 ___str_27:
      000122 44 4D 58 20 41 64 64  3269 	.ascii "DMX Address"
             72 65 73 73
      00012D 00                    3270 	.db 0x00
      00012E                       3271 ___str_28:
      00012E 44 4D 58 20 43 68 61  3272 	.ascii "DMX Channel Mode"
             6E 6E 65 6C 20 4D 6F
             64 65
      00013E 00                    3273 	.db 0x00
      00013F                       3274 ___str_29:
      00013F 57 69 6D 70 79        3275 	.ascii "Wimpy"
      000144 00                    3276 	.db 0x00
      000145                       3277 ___str_30:
      000145 4D 69 6C 64           3278 	.ascii "Mild"
      000149 00                    3279 	.db 0x00
      00014A                       3280 ___str_31:
      00014A 42 6C 61 7A 69 6E     3281 	.ascii "Blazin"
      000150 00                    3282 	.db 0x00
      000151                       3283 ___str_32:
      000151 52 61 69 6E 62 6F 77  3284 	.ascii "Rainbow"
      000158 00                    3285 	.db 0x00
      000159                       3286 ___str_33:
      000159 46 69 72 65           3287 	.ascii "Fire"
      00015D 00                    3288 	.db 0x00
      00015E                       3289 ___str_34:
      00015E 57 61 74 65 72        3290 	.ascii "Water"
      000163 00                    3291 	.db 0x00
      000164                       3292 ___str_35:
      000164 53 74 6F 72 6D        3293 	.ascii "Storm"
      000169 00                    3294 	.db 0x00
      00016A                       3295 ___str_36:
      00016A 41 63 69 64           3296 	.ascii "Acid"
      00016E 00                    3297 	.db 0x00
      00016F                       3298 ___str_37:
      00016F 45 74 68 65 72        3299 	.ascii "Ether"
      000174 00                    3300 	.db 0x00
      000175                       3301 ___str_38:
      000175 52 65 64 20 4C 65 76  3302 	.ascii "Red Level"
             65 6C
      00017E 00                    3303 	.db 0x00
      00017F                       3304 ___str_39:
      00017F 47 72 65 65 6E 20 4C  3305 	.ascii "Green Level"
             65 76 65 6C
      00018A 00                    3306 	.db 0x00
      00018B                       3307 ___str_40:
      00018B 42 6C 75 65 20 4C 65  3308 	.ascii "Blue Level"
             76 65 6C
      000195 00                    3309 	.db 0x00
      000196                       3310 ___str_41:
      000196 53 74 72 6F 62 65 20  3311 	.ascii "Strobe Level"
             4C 65 76 65 6C
      0001A2 00                    3312 	.db 0x00
      0001A3                       3313 ___str_42:
      0001A3 4E 6F 20 41 63 74 69  3314 	.ascii "No Action"
             6F 6E
      0001AC 00                    3315 	.db 0x00
      0001AD                       3316 ___str_43:
      0001AD 43 68 6F 6F 73 65 20  3317 	.ascii "Choose Macro"
             4D 61 63 72 6F
      0001B9 00                    3318 	.db 0x00
      0001BA                       3319 ___str_44:
      0001BA 52 65 64              3320 	.ascii "Red"
      0001BD 00                    3321 	.db 0x00
      0001BE                       3322 ___str_45:
      0001BE 59 65 6C 6C 6F 77     3323 	.ascii "Yellow"
      0001C4 00                    3324 	.db 0x00
      0001C5                       3325 ___str_46:
      0001C5 47 72 65 65 6E        3326 	.ascii "Green"
      0001CA 00                    3327 	.db 0x00
      0001CB                       3328 ___str_47:
      0001CB 43 79 61 6E           3329 	.ascii "Cyan"
      0001CF 00                    3330 	.db 0x00
      0001D0                       3331 ___str_48:
      0001D0 42 6C 75 65           3332 	.ascii "Blue"
      0001D4 00                    3333 	.db 0x00
      0001D5                       3334 ___str_49:
      0001D5 4D 61 67 65 6E 74 61  3335 	.ascii "Magenta"
      0001DC 00                    3336 	.db 0x00
      0001DD                       3337 ___str_50:
      0001DD 53 74 72 6F 62 65 20  3338 	.ascii "Strobe Slow"
             53 6C 6F 77
      0001E8 00                    3339 	.db 0x00
      0001E9                       3340 ___str_51:
      0001E9 53 74 72 6F 62 65 20  3341 	.ascii "Strobe Medium"
             4D 65 64 69 75 6D
      0001F6 00                    3342 	.db 0x00
      0001F7                       3343 ___str_52:
      0001F7 53 74 72 6F 62 65 20  3344 	.ascii "Strobe Fast"
             46 61 73 74
      000202 00                    3345 	.db 0x00
      000203                       3346 ___str_53:
      000203 42 6C 61 63 6B 6F 75  3347 	.ascii "Blackout"
             74
      00020B 00                    3348 	.db 0x00
      00020C                       3349 ___str_54:
      00020C 57 68 69 74 65 6F 75  3350 	.ascii "Whiteout"
             74
      000214 00                    3351 	.db 0x00
      000215                       3352 ___str_55:
      000215 53 6C 6F 74 20 31     3353 	.ascii "Slot 1"
      00021B 00                    3354 	.db 0x00
      00021C                       3355 ___str_56:
      00021C 53 6C 6F 74 20 32     3356 	.ascii "Slot 2"
      000222 00                    3357 	.db 0x00
      000223                       3358 ___str_57:
      000223 53 6C 6F 74 20 33     3359 	.ascii "Slot 3"
      000229 00                    3360 	.db 0x00
      00022A                       3361 ___str_58:
      00022A 31 30 20 41 6C 6C     3362 	.ascii "10 All"
      000230 00                    3363 	.db 0x00
      000231                       3364 ___str_59:
      000231 33 20 46 6F 67 20 2B  3365 	.ascii "3 Fog + Macro"
             20 4D 61 63 72 6F
      00023E 00                    3366 	.db 0x00
      00023F                       3367 ___str_60:
      00023F 31 20 46 6F 67        3368 	.ascii "1 Fog"
      000244 00                    3369 	.db 0x00
      000245                       3370 ___str_61:
      000245 30 78 34 38 36 46 36  3371 	.ascii "0x486F6C6D6573"
             43 36 44 36 35 37 33
      000253 00                    3372 	.db 0x00
      000254                       3373 ___str_62:
      000254 26 20 35 37 36 31 37  3374 	.ascii "& 576174736F6E"
             34 37 33 36 46 36 45
      000262 00                    3375 	.db 0x00
      000263                       3376 ___str_63:
      000263 36 32 36 46 37 34 36  3377 	.ascii "626F74684F776E41"
             38 34 46 37 37 36 45
             34 31
      000273 00                    3378 	.db 0x00
      000274                       3379 ___str_64:
      000274 35 33 36 45 36 46 37  3380 	.ascii "536E6F7762616C6C"
             37 36 32 36 31 36 43
             36 43
      000284 00                    3381 	.db 0x00
      000285                       3382 ___str_65:
      000285 34 44 36 46 37 32 36  3383 	.ascii "4D6F726961727479"
             39 36 31 37 32 37 34
             37 39
      000295 00                    3384 	.db 0x00
      000296                       3385 ___str_66:
      000296 36 34 36 46 36 35 37  3386 	.ascii "646F65734E6F74 ;"
             33 34 45 36 46 37 34
             20 3B
      0002A6 00                    3387 	.db 0x00
                                   3388 	.area XINIT   (CODE)
                                   3389 	.area CABS    (ABS,CODE)
