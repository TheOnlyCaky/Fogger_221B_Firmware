                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ui
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _exe_command
                                     12 	.globl _write_char
                                     13 	.globl _write_number
                                     14 	.globl _write_string
                                     15 	.globl _get_button_action
                                     16 	.globl _power_heater
                                     17 	.globl _power_pump
                                     18 	.globl _tick_fogger
                                     19 	.globl _set_dmx_address
                                     20 	.globl _get_dmx_address
                                     21 	.globl _set_runtime_data
                                     22 	.globl _get_runtime_data
                                     23 	.globl _save_load_settings
                                     24 	.globl _CPRL2
                                     25 	.globl _CT2
                                     26 	.globl _TR2
                                     27 	.globl _EXEN2
                                     28 	.globl _TCLK
                                     29 	.globl _RCLK
                                     30 	.globl _REN
                                     31 	.globl _SM2
                                     32 	.globl _SM1
                                     33 	.globl _SM0
                                     34 	.globl _RCK
                                     35 	.globl _SER
                                     36 	.globl _SCK
                                     37 	.globl _RI
                                     38 	.globl _ES
                                     39 	.globl _ET0
                                     40 	.globl _EA
                                     41 	.globl _P3_7
                                     42 	.globl _P3_6
                                     43 	.globl _P3_5
                                     44 	.globl _P3_4
                                     45 	.globl _P3_3
                                     46 	.globl _P3_2
                                     47 	.globl _P3_1
                                     48 	.globl _P3_0
                                     49 	.globl _P2_7
                                     50 	.globl _P2_6
                                     51 	.globl _P2_5
                                     52 	.globl _P2_4
                                     53 	.globl _P2_3
                                     54 	.globl _P2_2
                                     55 	.globl _P2_1
                                     56 	.globl _P2_0
                                     57 	.globl _P1_7
                                     58 	.globl _P1_6
                                     59 	.globl _P1_5
                                     60 	.globl _P1_4
                                     61 	.globl _P1_3
                                     62 	.globl _P1_2
                                     63 	.globl _P1_1
                                     64 	.globl _P1_0
                                     65 	.globl _P0_7
                                     66 	.globl _P0_6
                                     67 	.globl _P0_5
                                     68 	.globl _P0_4
                                     69 	.globl _P0_3
                                     70 	.globl _P0_2
                                     71 	.globl _P0_1
                                     72 	.globl _P0_0
                                     73 	.globl _IAP_ADRH
                                     74 	.globl _IAP_ADRL
                                     75 	.globl _IAPEN
                                     76 	.globl _TH0
                                     77 	.globl _TL0
                                     78 	.globl _CKCON
                                     79 	.globl _TMOD
                                     80 	.globl _TCON
                                     81 	.globl _PWMDATA17L
                                     82 	.globl _PWMDATA17H
                                     83 	.globl _PWMDATA14L
                                     84 	.globl _PWMDATA14H
                                     85 	.globl _PWMDATA11L
                                     86 	.globl _PWMDATA11H
                                     87 	.globl _PWM_EA2
                                     88 	.globl _PWM_EA1
                                     89 	.globl _SBUF
                                     90 	.globl _TL3
                                     91 	.globl _TH3
                                     92 	.globl _T2CON
                                     93 	.globl _RCAP2H
                                     94 	.globl _RCAP2L
                                     95 	.globl _SCON
                                     96 	.globl _P1_OPT
                                     97 	.globl _ADCVAL2
                                     98 	.globl _ADCVAL1
                                     99 	.globl _ADCSEL
                                    100 	.globl _EXIF
                                    101 	.globl _EIE
                                    102 	.globl _IE
                                    103 	.globl _P3
                                    104 	.globl _P2
                                    105 	.globl _P1
                                    106 	.globl _P0
                                    107 	.globl _PCLKSEL
                                    108 	.globl _CHIPCON
                                    109 	.globl _set_ui_state_PARM_2
                                    110 	.globl _tick_ui
                                    111 	.globl _idlePage
                                    112 	.globl _fogLevelPage
                                    113 	.globl _fogIntervalPage
                                    114 	.globl _fogDurationPage
                                    115 	.globl _macroPage
                                    116 	.globl _macroSpeedPage
                                    117 	.globl _colorPage
                                    118 	.globl _remotePage
                                    119 	.globl _saveLoadPage
                                    120 	.globl _dmxAddressPage
                                    121 	.globl _dmxChannelPage
                                    122 	.globl _set_ui_state
                                    123 	.globl _get_ui_state
                                    124 	.globl _getString
                                    125 ;--------------------------------------------------------
                                    126 ; special function registers
                                    127 ;--------------------------------------------------------
                                    128 	.area RSEG    (ABS,DATA)
      000000                        129 	.org 0x0000
                           0000BF   130 _CHIPCON	=	0x00bf
                           0000B7   131 _PCLKSEL	=	0x00b7
                           000080   132 _P0	=	0x0080
                           000090   133 _P1	=	0x0090
                           0000A0   134 _P2	=	0x00a0
                           0000B0   135 _P3	=	0x00b0
                           0000A8   136 _IE	=	0x00a8
                           0000E8   137 _EIE	=	0x00e8
                           000091   138 _EXIF	=	0x0091
                           0000DA   139 _ADCSEL	=	0x00da
                           0000DB   140 _ADCVAL1	=	0x00db
                           0000DC   141 _ADCVAL2	=	0x00dc
                           0000D9   142 _P1_OPT	=	0x00d9
                           000098   143 _SCON	=	0x0098
                           0000CA   144 _RCAP2L	=	0x00ca
                           0000CB   145 _RCAP2H	=	0x00cb
                           0000C8   146 _T2CON	=	0x00c8
                           00009B   147 _TH3	=	0x009b
                           00009A   148 _TL3	=	0x009a
                           000099   149 _SBUF	=	0x0099
                           0000D3   150 _PWM_EA1	=	0x00d3
                           0000D4   151 _PWM_EA2	=	0x00d4
                           0000BD   152 _PWMDATA11H	=	0x00bd
                           0000BE   153 _PWMDATA11L	=	0x00be
                           0000B5   154 _PWMDATA14H	=	0x00b5
                           0000B6   155 _PWMDATA14L	=	0x00b6
                           0000AD   156 _PWMDATA17H	=	0x00ad
                           0000AE   157 _PWMDATA17L	=	0x00ae
                           000088   158 _TCON	=	0x0088
                           000089   159 _TMOD	=	0x0089
                           00008E   160 _CKCON	=	0x008e
                           00008A   161 _TL0	=	0x008a
                           00008C   162 _TH0	=	0x008c
                           0000E4   163 _IAPEN	=	0x00e4
                           0000E5   164 _IAP_ADRL	=	0x00e5
                           0000E6   165 _IAP_ADRH	=	0x00e6
                                    166 ;--------------------------------------------------------
                                    167 ; special function bits
                                    168 ;--------------------------------------------------------
                                    169 	.area RSEG    (ABS,DATA)
      000000                        170 	.org 0x0000
                           000080   171 _P0_0	=	0x0080
                           000081   172 _P0_1	=	0x0081
                           000082   173 _P0_2	=	0x0082
                           000083   174 _P0_3	=	0x0083
                           000084   175 _P0_4	=	0x0084
                           000085   176 _P0_5	=	0x0085
                           000086   177 _P0_6	=	0x0086
                           000087   178 _P0_7	=	0x0087
                           000090   179 _P1_0	=	0x0090
                           000091   180 _P1_1	=	0x0091
                           000092   181 _P1_2	=	0x0092
                           000093   182 _P1_3	=	0x0093
                           000094   183 _P1_4	=	0x0094
                           000095   184 _P1_5	=	0x0095
                           000096   185 _P1_6	=	0x0096
                           000097   186 _P1_7	=	0x0097
                           0000A0   187 _P2_0	=	0x00a0
                           0000A1   188 _P2_1	=	0x00a1
                           0000A2   189 _P2_2	=	0x00a2
                           0000A3   190 _P2_3	=	0x00a3
                           0000A4   191 _P2_4	=	0x00a4
                           0000A5   192 _P2_5	=	0x00a5
                           0000A6   193 _P2_6	=	0x00a6
                           0000A7   194 _P2_7	=	0x00a7
                           0000B0   195 _P3_0	=	0x00b0
                           0000B1   196 _P3_1	=	0x00b1
                           0000B2   197 _P3_2	=	0x00b2
                           0000B3   198 _P3_3	=	0x00b3
                           0000B4   199 _P3_4	=	0x00b4
                           0000B5   200 _P3_5	=	0x00b5
                           0000B6   201 _P3_6	=	0x00b6
                           0000B7   202 _P3_7	=	0x00b7
                           0000AF   203 _EA	=	0x00af
                           0000A9   204 _ET0	=	0x00a9
                           0000AC   205 _ES	=	0x00ac
                           000098   206 _RI	=	0x0098
                           000093   207 _SCK	=	0x0093
                           000095   208 _SER	=	0x0095
                           000092   209 _RCK	=	0x0092
                           00009F   210 _SM0	=	0x009f
                           00009E   211 _SM1	=	0x009e
                           00009D   212 _SM2	=	0x009d
                           00009C   213 _REN	=	0x009c
                           0000CD   214 _RCLK	=	0x00cd
                           0000CC   215 _TCLK	=	0x00cc
                           0000CB   216 _EXEN2	=	0x00cb
                           0000CA   217 _TR2	=	0x00ca
                           0000C9   218 _CT2	=	0x00c9
                           0000C8   219 _CPRL2	=	0x00c8
                                    220 ;--------------------------------------------------------
                                    221 ; overlayable register banks
                                    222 ;--------------------------------------------------------
                                    223 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        224 	.ds 8
                                    225 ;--------------------------------------------------------
                                    226 ; internal ram data
                                    227 ;--------------------------------------------------------
                                    228 	.area DSEG    (DATA)
      000000                        229 _State:
      000000                        230 	.ds 1
      000001                        231 _Changed:
      000001                        232 	.ds 1
      000002                        233 _changed:
      000002                        234 	.ds 1
      000003                        235 _tick_ui_bursting_65536_37:
      000003                        236 	.ds 1
      000004                        237 _tick_ui_delay_65536_37:
      000004                        238 	.ds 4
      000008                        239 _idlePage_timer_65536_59:
      000008                        240 	.ds 1
      000009                        241 _idlePage_intervalOrDuration_65536_59:
      000009                        242 	.ds 1
      00000A                        243 _idlePage_empty_65536_59:
      00000A                        244 	.ds 1
      00000B                        245 _idlePage_tock_65536_59:
      00000B                        246 	.ds 1
      00000C                        247 _idlePage_iconChange_65536_59:
      00000C                        248 	.ds 1
      00000D                        249 _idlePage_playing_65536_59:
      00000D                        250 	.ds 1
      00000E                        251 _saveLoadPage_slot_65536_141:
      00000E                        252 	.ds 1
      00000F                        253 _set_ui_state_PARM_2:
      00000F                        254 	.ds 1
                                    255 ;--------------------------------------------------------
                                    256 ; overlayable items in internal ram 
                                    257 ;--------------------------------------------------------
                                    258 	.area	OSEG    (OVR,DATA)
                                    259 ;--------------------------------------------------------
                                    260 ; indirectly addressable internal ram data
                                    261 ;--------------------------------------------------------
                                    262 	.area ISEG    (DATA)
                                    263 ;--------------------------------------------------------
                                    264 ; absolute internal ram data
                                    265 ;--------------------------------------------------------
                                    266 	.area IABS    (ABS,DATA)
                                    267 	.area IABS    (ABS,DATA)
                                    268 ;--------------------------------------------------------
                                    269 ; bit data
                                    270 ;--------------------------------------------------------
                                    271 	.area BSEG    (BIT)
                                    272 ;--------------------------------------------------------
                                    273 ; paged external ram data
                                    274 ;--------------------------------------------------------
                                    275 	.area PSEG    (PAG,XDATA)
                                    276 ;--------------------------------------------------------
                                    277 ; external ram data
                                    278 ;--------------------------------------------------------
                                    279 	.area XSEG    (XDATA)
                                    280 ;--------------------------------------------------------
                                    281 ; absolute external ram data
                                    282 ;--------------------------------------------------------
                                    283 	.area XABS    (ABS,XDATA)
                                    284 ;--------------------------------------------------------
                                    285 ; external initialized ram data
                                    286 ;--------------------------------------------------------
                                    287 	.area XISEG   (XDATA)
                                    288 	.area HOME    (CODE)
                                    289 	.area GSINIT0 (CODE)
                                    290 	.area GSINIT1 (CODE)
                                    291 	.area GSINIT2 (CODE)
                                    292 	.area GSINIT3 (CODE)
                                    293 	.area GSINIT4 (CODE)
                                    294 	.area GSINIT5 (CODE)
                                    295 	.area GSINIT  (CODE)
                                    296 	.area GSFINAL (CODE)
                                    297 	.area CSEG    (CODE)
                                    298 ;--------------------------------------------------------
                                    299 ; global & static initialisations
                                    300 ;--------------------------------------------------------
                                    301 	.area HOME    (CODE)
                                    302 	.area GSINIT  (CODE)
                                    303 	.area GSFINAL (CODE)
                                    304 	.area GSINIT  (CODE)
                                    305 ;------------------------------------------------------------
                                    306 ;Allocation info for local variables in function 'tick_ui'
                                    307 ;------------------------------------------------------------
                                    308 ;bursting                  Allocated with name '_tick_ui_bursting_65536_37'
                                    309 ;action                    Allocated to registers r7 
                                    310 ;ss                        Allocated to registers r6 
                                    311 ;delay                     Allocated with name '_tick_ui_delay_65536_37'
                                    312 ;------------------------------------------------------------
                                    313 ;	../UI_Manager/ui.c:17: static uint8_t bursting = 0;
      000000 75*03 00         [24]  314 	mov	_tick_ui_bursting_65536_37,#0x00
                                    315 ;------------------------------------------------------------
                                    316 ;Allocation info for local variables in function 'idlePage'
                                    317 ;------------------------------------------------------------
                                    318 ;timer                     Allocated with name '_idlePage_timer_65536_59'
                                    319 ;intervalOrDuration        Allocated with name '_idlePage_intervalOrDuration_65536_59'
                                    320 ;empty                     Allocated with name '_idlePage_empty_65536_59'
                                    321 ;tock                      Allocated with name '_idlePage_tock_65536_59'
                                    322 ;iconChange                Allocated with name '_idlePage_iconChange_65536_59'
                                    323 ;playing                   Allocated with name '_idlePage_playing_65536_59'
                                    324 ;temp                      Allocated to registers r7 
                                    325 ;------------------------------------------------------------
                                    326 ;	../UI_Manager/ui.c:210: static uint8_t timer = 0;
      000003 75*08 00         [24]  327 	mov	_idlePage_timer_65536_59,#0x00
                                    328 ;	../UI_Manager/ui.c:212: static uint8_t empty = 0x00;
      000006 75*0A 00         [24]  329 	mov	_idlePage_empty_65536_59,#0x00
                                    330 ;	../UI_Manager/ui.c:213: static uint8_t tock = 0x00;
      000009 75*0B 00         [24]  331 	mov	_idlePage_tock_65536_59,#0x00
                                    332 ;	../UI_Manager/ui.c:214: static uint8_t iconChange = 0x00;
      00000C 75*0C 00         [24]  333 	mov	_idlePage_iconChange_65536_59,#0x00
                                    334 ;	../UI_Manager/ui.c:215: static uint8_t playing = PAUSE;
      00000F 75*0D 00         [24]  335 	mov	_idlePage_playing_65536_59,#0x00
                                    336 ;------------------------------------------------------------
                                    337 ;Allocation info for local variables in function 'saveLoadPage'
                                    338 ;------------------------------------------------------------
                                    339 ;slot                      Allocated with name '_saveLoadPage_slot_65536_141'
                                    340 ;action                    Allocated to registers r7 
                                    341 ;------------------------------------------------------------
                                    342 ;	../UI_Manager/ui.c:742: static uint8_t slot = 0;
      000012 75*0E 00         [24]  343 	mov	_saveLoadPage_slot_65536_141,#0x00
                                    344 ;	../UI_Manager/ui.c:12: static volatile uint8_t State = WELCOME_STATE;
      000015 75*00 45         [24]  345 	mov	_State,#0x45
                                    346 ;	../UI_Manager/ui.c:13: static volatile uint8_t Changed = CHANGE_SCREEN_X;
      000018 75*01 FF         [24]  347 	mov	_Changed,#0xff
                                    348 ;	../UI_Manager/ui.c:14: static volatile uint8_t changed = CHANGE_SCREEN_X;
      00001B 75*02 FF         [24]  349 	mov	_changed,#0xff
                                    350 ;--------------------------------------------------------
                                    351 ; Home
                                    352 ;--------------------------------------------------------
                                    353 	.area HOME    (CODE)
                                    354 	.area HOME    (CODE)
                                    355 ;--------------------------------------------------------
                                    356 ; code
                                    357 ;--------------------------------------------------------
                                    358 	.area CSEG    (CODE)
                                    359 ;------------------------------------------------------------
                                    360 ;Allocation info for local variables in function 'tick_ui'
                                    361 ;------------------------------------------------------------
                                    362 ;bursting                  Allocated with name '_tick_ui_bursting_65536_37'
                                    363 ;action                    Allocated to registers r7 
                                    364 ;ss                        Allocated to registers r6 
                                    365 ;delay                     Allocated with name '_tick_ui_delay_65536_37'
                                    366 ;------------------------------------------------------------
                                    367 ;	../UI_Manager/ui.c:16: void tick_ui(void){
                                    368 ;	-----------------------------------------
                                    369 ;	 function tick_ui
                                    370 ;	-----------------------------------------
      000000                        371 _tick_ui:
                           000007   372 	ar7 = 0x07
                           000006   373 	ar6 = 0x06
                           000005   374 	ar5 = 0x05
                           000004   375 	ar4 = 0x04
                           000003   376 	ar3 = 0x03
                           000002   377 	ar2 = 0x02
                           000001   378 	ar1 = 0x01
                           000000   379 	ar0 = 0x00
                                    380 ;	../UI_Manager/ui.c:18: uint8_t action = get_button_action();
      000000 12r00r00         [24]  381 	lcall	_get_button_action
      000003 AF 82            [24]  382 	mov	r7,dpl
                                    383 ;	../UI_Manager/ui.c:24: if(action == BUTTON_BURST || action == BUTTON_MAN_BURST){
      000005 E4               [12]  384 	clr	a
      000006 BF 05 01         [24]  385 	cjne	r7,#0x05,00416$
      000009 04               [12]  386 	inc	a
      00000A                        387 00416$:
      00000A FE               [12]  388 	mov	r6,a
      00000B 70 03            [24]  389 	jnz	00103$
      00000D BF 0A 21         [24]  390 	cjne	r7,#0x0a,00104$
      000010                        391 00103$:
                                    392 ;	../UI_Manager/ui.c:25: power_pump(action == (BUTTON_BURST) ? PUMP_OVERRIDE : PUMP_MASTER_OVERRIDE);
      000010 EE               [12]  393 	mov	a,r6
      000011 60 06            [24]  394 	jz	00174$
      000013 7D 02            [12]  395 	mov	r5,#0x02
      000015 7E 00            [12]  396 	mov	r6,#0x00
      000017 80 04            [24]  397 	sjmp	00175$
      000019                        398 00174$:
      000019 7D 03            [12]  399 	mov	r5,#0x03
      00001B 7E 00            [12]  400 	mov	r6,#0x00
      00001D                        401 00175$:
      00001D 8D 82            [24]  402 	mov	dpl,r5
      00001F C0 07            [24]  403 	push	ar7
      000021 12r00r00         [24]  404 	lcall	_power_pump
      000024 D0 07            [24]  405 	pop	ar7
                                    406 ;	../UI_Manager/ui.c:26: bursting |= BURSTING;
      000026 AD*03            [24]  407 	mov	r5,_tick_ui_bursting_65536_37
      000028 7E 00            [12]  408 	mov	r6,#0x00
      00002A 43 05 80         [24]  409 	orl	ar5,#0x80
      00002D 8D*03            [24]  410 	mov	_tick_ui_bursting_65536_37,r5
      00002F 80 12            [24]  411 	sjmp	00105$
      000031                        412 00104$:
                                    413 ;	../UI_Manager/ui.c:27: } else if(bursting & BURSTING){
      000031 E5*03            [12]  414 	mov	a,_tick_ui_bursting_65536_37
      000033 30 E7 0D         [24]  415 	jnb	acc.7,00105$
                                    416 ;	../UI_Manager/ui.c:28: power_pump(PUMP_OFF);
      000036 75 82 00         [24]  417 	mov	dpl,#0x00
      000039 C0 07            [24]  418 	push	ar7
      00003B 12r00r00         [24]  419 	lcall	_power_pump
      00003E D0 07            [24]  420 	pop	ar7
                                    421 ;	../UI_Manager/ui.c:29: bursting &= ~BURSTING;
      000040 53*03 7F         [24]  422 	anl	_tick_ui_bursting_65536_37,#0x7f
      000043                        423 00105$:
                                    424 ;	../UI_Manager/ui.c:33: if(action == BUTTON_MANUAL){
      000043 BF 08 34         [24]  425 	cjne	r7,#0x08,00108$
                                    426 ;	../UI_Manager/ui.c:34: set_runtime_data(OP_MODE_INDEX, VALUE, (get_runtime_data(OP_MODE_INDEX) == MODE_MANUAL) ? MODE_DMX : MODE_MANUAL);
      000046 75 82 10         [24]  427 	mov	dpl,#0x10
      000049 C0 07            [24]  428 	push	ar7
      00004B 12r00r00         [24]  429 	lcall	_get_runtime_data
      00004E AE 82            [24]  430 	mov	r6,dpl
      000050 D0 07            [24]  431 	pop	ar7
      000052 BE 80 06         [24]  432 	cjne	r6,#0x80,00176$
      000055 7D 00            [12]  433 	mov	r5,#0x00
      000057 7E 00            [12]  434 	mov	r6,#0x00
      000059 80 04            [24]  435 	sjmp	00177$
      00005B                        436 00176$:
      00005B 7D 80            [12]  437 	mov	r5,#0x80
      00005D 7E 00            [12]  438 	mov	r6,#0x00
      00005F                        439 00177$:
      00005F 8D*00            [24]  440 	mov	_set_runtime_data_PARM_3,r5
      000061 75*00 00         [24]  441 	mov	_set_runtime_data_PARM_2,#0x00
      000064 75 82 10         [24]  442 	mov	dpl,#0x10
      000067 C0 07            [24]  443 	push	ar7
      000069 12r00r00         [24]  444 	lcall	_set_runtime_data
                                    445 ;	../UI_Manager/ui.c:36: State = IDLE_STATE;
      00006C 75*00 00         [24]  446 	mov	_State,#0x00
                                    447 ;	../UI_Manager/ui.c:37: Changed = CHANGE_SCREEN_X;
      00006F 75*01 FF         [24]  448 	mov	_Changed,#0xff
                                    449 ;	../UI_Manager/ui.c:39: set_playing(RESET);
      000072 75*00 02         [24]  450 	mov	_Playing,#0x02
                                    451 ;	../UI_Manager/ui.c:41: tick_fogger();
      000075 12r00r00         [24]  452 	lcall	_tick_fogger
      000078 D0 07            [24]  453 	pop	ar7
      00007A                        454 00108$:
                                    455 ;	../UI_Manager/ui.c:46: if(action == BUTTON_TIMER_HOLD){
      00007A BF C8 10         [24]  456 	cjne	r7,#0xc8,00113$
                                    457 ;	../UI_Manager/ui.c:47: if(get_playing() == PLAY){
      00007D 74 01            [12]  458 	mov	a,#0x01
      00007F B5*00 05         [24]  459 	cjne	a,_Playing,00110$
                                    460 ;	../UI_Manager/ui.c:48: set_playing(RESET);
      000082 75*00 02         [24]  461 	mov	_Playing,#0x02
      000085 80 03            [24]  462 	sjmp	00111$
      000087                        463 00110$:
                                    464 ;	../UI_Manager/ui.c:50: set_playing(PLAY);
      000087 75*00 01         [24]  465 	mov	_Playing,#0x01
      00008A                        466 00111$:
                                    467 ;	../UI_Manager/ui.c:53: tick_fogger();
                                    468 ;	../UI_Manager/ui.c:55: return;
      00008A 02r00r00         [24]  469 	ljmp	_tick_fogger
      00008D                        470 00113$:
                                    471 ;	../UI_Manager/ui.c:59: if(action == BUTTON_FUN_MAN){
      00008D BF 09 02         [24]  472 	cjne	r7,#0x09,00431$
      000090 80 03            [24]  473 	sjmp	00432$
      000092                        474 00431$:
      000092 02r01r2B         [24]  475 	ljmp	00121$
      000095                        476 00432$:
                                    477 ;	../UI_Manager/ui.c:60: set_runtime_data(TANK_LIGHTS_INDEX, VALUE, ~get_runtime_data(TANK_LIGHTS_INDEX));
      000095 75 82 0F         [24]  478 	mov	dpl,#0x0f
      000098 12r00r00         [24]  479 	lcall	_get_runtime_data
      00009B E5 82            [12]  480 	mov	a,dpl
      00009D F4               [12]  481 	cpl	a
      00009E F5*00            [12]  482 	mov	_set_runtime_data_PARM_3,a
      0000A0 75*00 00         [24]  483 	mov	_set_runtime_data_PARM_2,#0x00
      0000A3 75 82 0F         [24]  484 	mov	dpl,#0x0f
      0000A6 12r00r00         [24]  485 	lcall	_set_runtime_data
                                    486 ;	../UI_Manager/ui.c:62: exe_command(CLEAR_DISPLAY);
      0000A9 90 80 00         [24]  487 	mov	dptr,#0x8000
      0000AC 12r00r00         [24]  488 	lcall	_exe_command
                                    489 ;	../UI_Manager/ui.c:63: if(get_runtime_data(TANK_LIGHTS_INDEX)){
      0000AF 75 82 0F         [24]  490 	mov	dpl,#0x0f
      0000B2 12r00r00         [24]  491 	lcall	_get_runtime_data
      0000B5 E5 82            [12]  492 	mov	a,dpl
      0000B7 60 17            [24]  493 	jz	00115$
                                    494 ;	../UI_Manager/ui.c:64: write_string("Tank Lights Off", 15, 0, LINE_0, NOT_SELECTED);
      0000B9 75*00 0F         [24]  495 	mov	_write_string_PARM_2,#0x0f
      0000BC 75*00 00         [24]  496 	mov	_write_string_PARM_3,#0x00
      0000BF 75*00 00         [24]  497 	mov	_write_string_PARM_4,#0x00
      0000C2 75*00 00         [24]  498 	mov	_write_string_PARM_5,#0x00
      0000C5 90r00r00         [24]  499 	mov	dptr,#___str_0
      0000C8 75 F0 80         [24]  500 	mov	b,#0x80
      0000CB 12r00r00         [24]  501 	lcall	_write_string
      0000CE 80 15            [24]  502 	sjmp	00116$
      0000D0                        503 00115$:
                                    504 ;	../UI_Manager/ui.c:66: write_string("Tank Lights On", 15, 0, LINE_0, NOT_SELECTED);
      0000D0 75*00 0F         [24]  505 	mov	_write_string_PARM_2,#0x0f
      0000D3 75*00 00         [24]  506 	mov	_write_string_PARM_3,#0x00
      0000D6 75*00 00         [24]  507 	mov	_write_string_PARM_4,#0x00
      0000D9 75*00 00         [24]  508 	mov	_write_string_PARM_5,#0x00
      0000DC 90r00r10         [24]  509 	mov	dptr,#___str_1
      0000DF 75 F0 80         [24]  510 	mov	b,#0x80
      0000E2 12r00r00         [24]  511 	lcall	_write_string
      0000E5                        512 00116$:
                                    513 ;	../UI_Manager/ui.c:69: write_string("Fun+Man to Undo", 15, 0, LINE_1, NOT_SELECTED);
      0000E5 75*00 0F         [24]  514 	mov	_write_string_PARM_2,#0x0f
      0000E8 75*00 00         [24]  515 	mov	_write_string_PARM_3,#0x00
      0000EB 75*00 01         [24]  516 	mov	_write_string_PARM_4,#0x01
      0000EE 75*00 00         [24]  517 	mov	_write_string_PARM_5,#0x00
      0000F1 90r00r1F         [24]  518 	mov	dptr,#___str_2
      0000F4 75 F0 80         [24]  519 	mov	b,#0x80
      0000F7 12r00r00         [24]  520 	lcall	_write_string
                                    521 ;	../UI_Manager/ui.c:73: while(delay--){ ;; }
      0000FA 75*04 B5         [24]  522 	mov	_tick_ui_delay_65536_37,#0xb5
      0000FD 75*05 D8         [24]  523 	mov	(_tick_ui_delay_65536_37 + 1),#0xd8
      000100 75*06 07         [24]  524 	mov	(_tick_ui_delay_65536_37 + 2),#0x07
      000103 75*07 00         [24]  525 	mov	(_tick_ui_delay_65536_37 + 3),#0x00
      000106                        526 00117$:
      000106 A8*04            [24]  527 	mov	r0,_tick_ui_delay_65536_37
      000108 A9*05            [24]  528 	mov	r1,(_tick_ui_delay_65536_37 + 1)
      00010A AA*06            [24]  529 	mov	r2,(_tick_ui_delay_65536_37 + 2)
      00010C AE*07            [24]  530 	mov	r6,(_tick_ui_delay_65536_37 + 3)
      00010E 15*04            [12]  531 	dec	_tick_ui_delay_65536_37
      000110 74 FF            [12]  532 	mov	a,#0xff
      000112 B5*04 0C         [24]  533 	cjne	a,_tick_ui_delay_65536_37,00434$
      000115 15*05            [12]  534 	dec	(_tick_ui_delay_65536_37 + 1)
      000117 B5*05 07         [24]  535 	cjne	a,(_tick_ui_delay_65536_37 + 1),00434$
      00011A 15*06            [12]  536 	dec	(_tick_ui_delay_65536_37 + 2)
      00011C B5*06 02         [24]  537 	cjne	a,(_tick_ui_delay_65536_37 + 2),00434$
      00011F 15*07            [12]  538 	dec	(_tick_ui_delay_65536_37 + 3)
      000121                        539 00434$:
      000121 E8               [12]  540 	mov	a,r0
      000122 49               [12]  541 	orl	a,r1
      000123 4A               [12]  542 	orl	a,r2
      000124 4E               [12]  543 	orl	a,r6
      000125 70 DF            [24]  544 	jnz	00117$
                                    545 ;	../UI_Manager/ui.c:75: Changed = CHANGE_SCREEN_X;
      000127 75*01 FF         [24]  546 	mov	_Changed,#0xff
                                    547 ;	../UI_Manager/ui.c:77: return;
      00012A 22               [24]  548 	ret
      00012B                        549 00121$:
                                    550 ;	../UI_Manager/ui.c:81: if(action == BUTTON_BURST_UP){
      00012B BF 07 02         [24]  551 	cjne	r7,#0x07,00436$
      00012E 80 03            [24]  552 	sjmp	00437$
      000130                        553 00436$:
      000130 02r01rBC         [24]  554 	ljmp	00129$
      000133                        555 00437$:
                                    556 ;	../UI_Manager/ui.c:83: exe_command(CLEAR_DISPLAY);
      000133 90 80 00         [24]  557 	mov	dptr,#0x8000
      000136 12r00r00         [24]  558 	lcall	_exe_command
                                    559 ;	../UI_Manager/ui.c:84: if(get_heater_enabled()){
      000139 E5*00            [12]  560 	mov	a,_Heat_Flag
      00013B 20 E4 1D         [24]  561 	jb	acc.4,00123$
                                    562 ;	../UI_Manager/ui.c:85: write_string("Heater Off", 15, 2, LINE_0, NOT_SELECTED);
      00013E 75*00 0F         [24]  563 	mov	_write_string_PARM_2,#0x0f
      000141 75*00 02         [24]  564 	mov	_write_string_PARM_3,#0x02
      000144 75*00 00         [24]  565 	mov	_write_string_PARM_4,#0x00
      000147 75*00 00         [24]  566 	mov	_write_string_PARM_5,#0x00
      00014A 90r00r2F         [24]  567 	mov	dptr,#___str_3
      00014D 75 F0 80         [24]  568 	mov	b,#0x80
      000150 12r00r00         [24]  569 	lcall	_write_string
                                    570 ;	../UI_Manager/ui.c:86: power_heater(HEATER_DISABLE);
      000153 75 82 01         [24]  571 	mov	dpl,#0x01
      000156 12r00r00         [24]  572 	lcall	_power_heater
      000159 80 1B            [24]  573 	sjmp	00124$
      00015B                        574 00123$:
                                    575 ;	../UI_Manager/ui.c:88: write_string("Heater On", 15, 2, LINE_0, NOT_SELECTED);
      00015B 75*00 0F         [24]  576 	mov	_write_string_PARM_2,#0x0f
      00015E 75*00 02         [24]  577 	mov	_write_string_PARM_3,#0x02
      000161 75*00 00         [24]  578 	mov	_write_string_PARM_4,#0x00
      000164 75*00 00         [24]  579 	mov	_write_string_PARM_5,#0x00
      000167 90r00r3A         [24]  580 	mov	dptr,#___str_4
      00016A 75 F0 80         [24]  581 	mov	b,#0x80
      00016D 12r00r00         [24]  582 	lcall	_write_string
                                    583 ;	../UI_Manager/ui.c:89: power_heater(HEATER_ENABLE);
      000170 75 82 00         [24]  584 	mov	dpl,#0x00
      000173 12r00r00         [24]  585 	lcall	_power_heater
      000176                        586 00124$:
                                    587 ;	../UI_Manager/ui.c:92: write_string("Burst+Up to Undo", 16, 0, LINE_1, NOT_SELECTED);
      000176 75*00 10         [24]  588 	mov	_write_string_PARM_2,#0x10
      000179 75*00 00         [24]  589 	mov	_write_string_PARM_3,#0x00
      00017C 75*00 01         [24]  590 	mov	_write_string_PARM_4,#0x01
      00017F 75*00 00         [24]  591 	mov	_write_string_PARM_5,#0x00
      000182 90r00r44         [24]  592 	mov	dptr,#___str_5
      000185 75 F0 80         [24]  593 	mov	b,#0x80
      000188 12r00r00         [24]  594 	lcall	_write_string
                                    595 ;	../UI_Manager/ui.c:96: while(delay--){ ;; }
      00018B 75*04 B5         [24]  596 	mov	_tick_ui_delay_65536_37,#0xb5
      00018E 75*05 D8         [24]  597 	mov	(_tick_ui_delay_65536_37 + 1),#0xd8
      000191 75*06 07         [24]  598 	mov	(_tick_ui_delay_65536_37 + 2),#0x07
      000194 75*07 00         [24]  599 	mov	(_tick_ui_delay_65536_37 + 3),#0x00
      000197                        600 00125$:
      000197 A8*04            [24]  601 	mov	r0,_tick_ui_delay_65536_37
      000199 A9*05            [24]  602 	mov	r1,(_tick_ui_delay_65536_37 + 1)
      00019B AA*06            [24]  603 	mov	r2,(_tick_ui_delay_65536_37 + 2)
      00019D AE*07            [24]  604 	mov	r6,(_tick_ui_delay_65536_37 + 3)
      00019F 15*04            [12]  605 	dec	_tick_ui_delay_65536_37
      0001A1 74 FF            [12]  606 	mov	a,#0xff
      0001A3 B5*04 0C         [24]  607 	cjne	a,_tick_ui_delay_65536_37,00439$
      0001A6 15*05            [12]  608 	dec	(_tick_ui_delay_65536_37 + 1)
      0001A8 B5*05 07         [24]  609 	cjne	a,(_tick_ui_delay_65536_37 + 1),00439$
      0001AB 15*06            [12]  610 	dec	(_tick_ui_delay_65536_37 + 2)
      0001AD B5*06 02         [24]  611 	cjne	a,(_tick_ui_delay_65536_37 + 2),00439$
      0001B0 15*07            [12]  612 	dec	(_tick_ui_delay_65536_37 + 3)
      0001B2                        613 00439$:
      0001B2 E8               [12]  614 	mov	a,r0
      0001B3 49               [12]  615 	orl	a,r1
      0001B4 4A               [12]  616 	orl	a,r2
      0001B5 4E               [12]  617 	orl	a,r6
      0001B6 70 DF            [24]  618 	jnz	00125$
                                    619 ;	../UI_Manager/ui.c:98: Changed = CHANGE_SCREEN_X;
      0001B8 75*01 FF         [24]  620 	mov	_Changed,#0xff
                                    621 ;	../UI_Manager/ui.c:100: return;
      0001BB 22               [24]  622 	ret
      0001BC                        623 00129$:
                                    624 ;	../UI_Manager/ui.c:104: if(action == BUTTON_FUN_BURST){
      0001BC BF 06 02         [24]  625 	cjne	r7,#0x06,00441$
      0001BF 80 03            [24]  626 	sjmp	00442$
      0001C1                        627 00441$:
      0001C1 02r02r6F         [24]  628 	ljmp	00134$
      0001C4                        629 00442$:
                                    630 ;	../UI_Manager/ui.c:106: ss = bursting & ~BURSTING;
      0001C4 74 7F            [12]  631 	mov	a,#0x7f
      0001C6 55*03            [12]  632 	anl	a,_tick_ui_bursting_65536_37
      0001C8 FE               [12]  633 	mov	r6,a
                                    634 ;	../UI_Manager/ui.c:108: exe_command(CLEAR_DISPLAY);
      0001C9 90 80 00         [24]  635 	mov	dptr,#0x8000
      0001CC C0 06            [24]  636 	push	ar6
      0001CE 12r00r00         [24]  637 	lcall	_exe_command
      0001D1 D0 06            [24]  638 	pop	ar6
                                    639 ;	../UI_Manager/ui.c:110: write_string(getString(SECRET_STRING_OFFSET + (ss % 3)*2), LINE_LENGTH, 0, LINE_0, NOT_SELECTED);
      0001D3 8E 04            [24]  640 	mov	ar4,r6
      0001D5 7D 00            [12]  641 	mov	r5,#0x00
      0001D7 75*00 03         [24]  642 	mov	__modsint_PARM_2,#0x03
                                    643 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0001DA 8D*01            [24]  644 	mov	(__modsint_PARM_2 + 1),r5
      0001DC 8C 82            [24]  645 	mov	dpl,r4
      0001DE 8D 83            [24]  646 	mov	dph,r5
      0001E0 C0 06            [24]  647 	push	ar6
      0001E2 12r00r00         [24]  648 	lcall	__modsint
      0001E5 E5 82            [12]  649 	mov	a,dpl
      0001E7 FC               [12]  650 	mov	r4,a
      0001E8 2C               [12]  651 	add	a,r4
      0001E9 FC               [12]  652 	mov	r4,a
      0001EA 24 28            [12]  653 	add	a,#0x28
      0001EC F5 82            [12]  654 	mov	dpl,a
      0001EE C0 04            [24]  655 	push	ar4
      0001F0 12r0Fr8E         [24]  656 	lcall	_getString
      0001F3 AA 82            [24]  657 	mov	r2,dpl
      0001F5 AB 83            [24]  658 	mov	r3,dph
      0001F7 AD F0            [24]  659 	mov	r5,b
      0001F9 75*00 10         [24]  660 	mov	_write_string_PARM_2,#0x10
      0001FC 75*00 00         [24]  661 	mov	_write_string_PARM_3,#0x00
      0001FF 75*00 00         [24]  662 	mov	_write_string_PARM_4,#0x00
      000202 75*00 00         [24]  663 	mov	_write_string_PARM_5,#0x00
      000205 8A 82            [24]  664 	mov	dpl,r2
      000207 8B 83            [24]  665 	mov	dph,r3
      000209 8D F0            [24]  666 	mov	b,r5
      00020B 12r00r00         [24]  667 	lcall	_write_string
      00020E D0 04            [24]  668 	pop	ar4
                                    669 ;	../UI_Manager/ui.c:111: write_string(getString(SECRET_STRING_OFFSET + (ss % 3)*2 + 1), LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      000210 74 29            [12]  670 	mov	a,#0x29
      000212 2C               [12]  671 	add	a,r4
      000213 F5 82            [12]  672 	mov	dpl,a
      000215 12r0Fr8E         [24]  673 	lcall	_getString
      000218 AB 82            [24]  674 	mov	r3,dpl
      00021A AC 83            [24]  675 	mov	r4,dph
      00021C AD F0            [24]  676 	mov	r5,b
      00021E 75*00 10         [24]  677 	mov	_write_string_PARM_2,#0x10
      000221 75*00 00         [24]  678 	mov	_write_string_PARM_3,#0x00
      000224 75*00 01         [24]  679 	mov	_write_string_PARM_4,#0x01
      000227 75*00 00         [24]  680 	mov	_write_string_PARM_5,#0x00
      00022A 8B 82            [24]  681 	mov	dpl,r3
      00022C 8C 83            [24]  682 	mov	dph,r4
      00022E 8D F0            [24]  683 	mov	b,r5
      000230 12r00r00         [24]  684 	lcall	_write_string
      000233 D0 06            [24]  685 	pop	ar6
                                    686 ;	../UI_Manager/ui.c:113: ss++;
      000235 0E               [12]  687 	inc	r6
                                    688 ;	../UI_Manager/ui.c:115: bursting &= BURSTING;
      000236 53*03 80         [24]  689 	anl	_tick_ui_bursting_65536_37,#0x80
                                    690 ;	../UI_Manager/ui.c:116: bursting |= (ss & ~BURSTING);
      000239 74 7F            [12]  691 	mov	a,#0x7f
      00023B 5E               [12]  692 	anl	a,r6
      00023C 42*03            [12]  693 	orl	_tick_ui_bursting_65536_37,a
                                    694 ;	../UI_Manager/ui.c:120: while(delay--){ ;; }
      00023E 75*04 DD         [24]  695 	mov	_tick_ui_delay_65536_37,#0xdd
      000241 75*05 8A         [24]  696 	mov	(_tick_ui_delay_65536_37 + 1),#0x8a
      000244 75*06 14         [24]  697 	mov	(_tick_ui_delay_65536_37 + 2),#0x14
      000247 75*07 00         [24]  698 	mov	(_tick_ui_delay_65536_37 + 3),#0x00
      00024A                        699 00130$:
      00024A A8*04            [24]  700 	mov	r0,_tick_ui_delay_65536_37
      00024C A9*05            [24]  701 	mov	r1,(_tick_ui_delay_65536_37 + 1)
      00024E AA*06            [24]  702 	mov	r2,(_tick_ui_delay_65536_37 + 2)
      000250 AE*07            [24]  703 	mov	r6,(_tick_ui_delay_65536_37 + 3)
      000252 15*04            [12]  704 	dec	_tick_ui_delay_65536_37
      000254 74 FF            [12]  705 	mov	a,#0xff
      000256 B5*04 0C         [24]  706 	cjne	a,_tick_ui_delay_65536_37,00443$
      000259 15*05            [12]  707 	dec	(_tick_ui_delay_65536_37 + 1)
      00025B B5*05 07         [24]  708 	cjne	a,(_tick_ui_delay_65536_37 + 1),00443$
      00025E 15*06            [12]  709 	dec	(_tick_ui_delay_65536_37 + 2)
      000260 B5*06 02         [24]  710 	cjne	a,(_tick_ui_delay_65536_37 + 2),00443$
      000263 15*07            [12]  711 	dec	(_tick_ui_delay_65536_37 + 3)
      000265                        712 00443$:
      000265 E8               [12]  713 	mov	a,r0
      000266 49               [12]  714 	orl	a,r1
      000267 4A               [12]  715 	orl	a,r2
      000268 4E               [12]  716 	orl	a,r6
      000269 70 DF            [24]  717 	jnz	00130$
                                    718 ;	../UI_Manager/ui.c:122: Changed = CHANGE_SCREEN_X;
      00026B 75*01 FF         [24]  719 	mov	_Changed,#0xff
                                    720 ;	../UI_Manager/ui.c:124: return;
      00026E 22               [24]  721 	ret
      00026F                        722 00134$:
                                    723 ;	../UI_Manager/ui.c:128: if(action == BUTTON_FUN_TIME){
      00026F BF 04 06         [24]  724 	cjne	r7,#0x04,00136$
                                    725 ;	../UI_Manager/ui.c:129: State = IDLE_STATE;
      000272 75*00 00         [24]  726 	mov	_State,#0x00
                                    727 ;	../UI_Manager/ui.c:130: Changed = CHANGE_SCREEN_X;
      000275 75*01 FF         [24]  728 	mov	_Changed,#0xff
      000278                        729 00136$:
                                    730 ;	../UI_Manager/ui.c:135: if(Changed || 
      000278 E5*01            [12]  731 	mov	a,_Changed
      00027A 70 2D            [24]  732 	jnz	00161$
                                    733 ;	../UI_Manager/ui.c:136: action == BUTTON_UP ||
      00027C BF 03 02         [24]  734 	cjne	r7,#0x03,00448$
      00027F 80 28            [24]  735 	sjmp	00161$
      000281                        736 00448$:
                                    737 ;	../UI_Manager/ui.c:137: action == BUTTON_UP_HOLD||
      000281 BF 1E 02         [24]  738 	cjne	r7,#0x1e,00449$
      000284 80 23            [24]  739 	sjmp	00161$
      000286                        740 00449$:
                                    741 ;	../UI_Manager/ui.c:138: action == BUTTON_UP_BURST ||
      000286 BF 1F 02         [24]  742 	cjne	r7,#0x1f,00450$
      000289 80 1E            [24]  743 	sjmp	00161$
      00028B                        744 00450$:
                                    745 ;	../UI_Manager/ui.c:139: action == BUTTON_DOWN ||
      00028B BF 0B 02         [24]  746 	cjne	r7,#0x0b,00451$
      00028E 80 19            [24]  747 	sjmp	00161$
      000290                        748 00451$:
                                    749 ;	../UI_Manager/ui.c:140: action == BUTTON_DOWN_HOLD ||
      000290 BF 6E 02         [24]  750 	cjne	r7,#0x6e,00452$
      000293 80 14            [24]  751 	sjmp	00161$
      000295                        752 00452$:
                                    753 ;	../UI_Manager/ui.c:141: action == BUTTON_DOWN_BURST ||
      000295 BF 6F 02         [24]  754 	cjne	r7,#0x6f,00453$
      000298 80 0F            [24]  755 	sjmp	00161$
      00029A                        756 00453$:
                                    757 ;	../UI_Manager/ui.c:142: action == BUTTON_TIMER ||
      00029A BF 01 02         [24]  758 	cjne	r7,#0x01,00454$
      00029D 80 0A            [24]  759 	sjmp	00161$
      00029F                        760 00454$:
                                    761 ;	../UI_Manager/ui.c:143: action == BUTTON_FUNCTION ||
      00029F BF 02 02         [24]  762 	cjne	r7,#0x02,00455$
      0002A2 80 05            [24]  763 	sjmp	00161$
      0002A4                        764 00455$:
                                    765 ;	../UI_Manager/ui.c:144: State == IDLE_STATE){
      0002A4 E5*00            [12]  766 	mov	a,_State
      0002A6 60 01            [24]  767 	jz	00456$
      0002A8 22               [24]  768 	ret
      0002A9                        769 00456$:
      0002A9                        770 00161$:
                                    771 ;	../UI_Manager/ui.c:146: switch (State)
      0002A9 AE*00            [24]  772 	mov	r6,_State
      0002AB BE 01 03         [24]  773 	cjne	r6,#0x01,00457$
      0002AE 02r03r3D         [24]  774 	ljmp	00138$
      0002B1                        775 00457$:
      0002B1 BE 02 03         [24]  776 	cjne	r6,#0x02,00458$
      0002B4 02r03r47         [24]  777 	ljmp	00140$
      0002B7                        778 00458$:
      0002B7 BE 03 03         [24]  779 	cjne	r6,#0x03,00459$
      0002BA 02r03r42         [24]  780 	ljmp	00139$
      0002BD                        781 00459$:
      0002BD BE 04 03         [24]  782 	cjne	r6,#0x04,00460$
      0002C0 02r03r4C         [24]  783 	ljmp	00141$
      0002C3                        784 00460$:
      0002C3 BE 05 03         [24]  785 	cjne	r6,#0x05,00461$
      0002C6 02r03r51         [24]  786 	ljmp	00142$
      0002C9                        787 00461$:
      0002C9 BE 06 03         [24]  788 	cjne	r6,#0x06,00462$
      0002CC 02r03r56         [24]  789 	ljmp	00146$
      0002CF                        790 00462$:
      0002CF BE 07 03         [24]  791 	cjne	r6,#0x07,00463$
      0002D2 02r03r56         [24]  792 	ljmp	00146$
      0002D5                        793 00463$:
      0002D5 BE 08 03         [24]  794 	cjne	r6,#0x08,00464$
      0002D8 02r03r56         [24]  795 	ljmp	00146$
      0002DB                        796 00464$:
      0002DB BE 09 02         [24]  797 	cjne	r6,#0x09,00465$
      0002DE 80 76            [24]  798 	sjmp	00146$
      0002E0                        799 00465$:
      0002E0 BE 0A 02         [24]  800 	cjne	r6,#0x0a,00466$
      0002E3 80 76            [24]  801 	sjmp	00149$
      0002E5                        802 00466$:
      0002E5 BE 0B 02         [24]  803 	cjne	r6,#0x0b,00467$
      0002E8 80 71            [24]  804 	sjmp	00149$
      0002EA                        805 00467$:
      0002EA BE 0C 02         [24]  806 	cjne	r6,#0x0c,00468$
      0002ED 80 6C            [24]  807 	sjmp	00149$
      0002EF                        808 00468$:
      0002EF BE 0D 02         [24]  809 	cjne	r6,#0x0d,00469$
      0002F2 80 6C            [24]  810 	sjmp	00151$
      0002F4                        811 00469$:
      0002F4 BE 0E 02         [24]  812 	cjne	r6,#0x0e,00470$
      0002F7 80 67            [24]  813 	sjmp	00151$
      0002F9                        814 00470$:
      0002F9 BE 14 02         [24]  815 	cjne	r6,#0x14,00471$
      0002FC 80 67            [24]  816 	sjmp	00152$
      0002FE                        817 00471$:
      0002FE BE 15 02         [24]  818 	cjne	r6,#0x15,00472$
      000301 80 67            [24]  819 	sjmp	00153$
      000303                        820 00472$:
      000303 BE 45 69         [24]  821 	cjne	r6,#0x45,00154$
                                    822 ;	../UI_Manager/ui.c:151: exe_command(CLEAR_DISPLAY);
      000306 90 80 00         [24]  823 	mov	dptr,#0x8000
      000309 12r00r00         [24]  824 	lcall	_exe_command
                                    825 ;	../UI_Manager/ui.c:152: write_string("AtmosFEAR 221B", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      00030C 75*00 10         [24]  826 	mov	_write_string_PARM_2,#0x10
      00030F 75*00 01         [24]  827 	mov	_write_string_PARM_3,#0x01
      000312 75*00 00         [24]  828 	mov	_write_string_PARM_4,#0x00
      000315 75*00 00         [24]  829 	mov	_write_string_PARM_5,#0x00
      000318 90r00r55         [24]  830 	mov	dptr,#___str_6
      00031B 75 F0 80         [24]  831 	mov	b,#0x80
      00031E 12r00r00         [24]  832 	lcall	_write_string
                                    833 ;	../UI_Manager/ui.c:153: write_string("By Blizzard Pro", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      000321 75*00 10         [24]  834 	mov	_write_string_PARM_2,#0x10
      000324 75*00 00         [24]  835 	mov	_write_string_PARM_3,#0x00
      000327 75*00 01         [24]  836 	mov	_write_string_PARM_4,#0x01
      00032A 75*00 00         [24]  837 	mov	_write_string_PARM_5,#0x00
      00032D 90r00r64         [24]  838 	mov	dptr,#___str_7
      000330 75 F0 80         [24]  839 	mov	b,#0x80
      000333 12r00r00         [24]  840 	lcall	_write_string
                                    841 ;	../UI_Manager/ui.c:155: Changed = CHANGE_SCREEN_X;
      000336 75*01 FF         [24]  842 	mov	_Changed,#0xff
                                    843 ;	../UI_Manager/ui.c:156: State = IDLE_STATE;
      000339 75*00 00         [24]  844 	mov	_State,#0x00
                                    845 ;	../UI_Manager/ui.c:158: break;
                                    846 ;	../UI_Manager/ui.c:159: case MANUAL_FOG_POWER_STATE:
      00033C 22               [24]  847 	ret
      00033D                        848 00138$:
                                    849 ;	../UI_Manager/ui.c:160: fogLevelPage(action);
      00033D 8F 82            [24]  850 	mov	dpl,r7
                                    851 ;	../UI_Manager/ui.c:161: break;
                                    852 ;	../UI_Manager/ui.c:162: case MANUAL_FOG_INTERVAL_STATE:
      00033F 02r06r75         [24]  853 	ljmp	_fogLevelPage
      000342                        854 00139$:
                                    855 ;	../UI_Manager/ui.c:163: fogIntervalPage(action);
      000342 8F 82            [24]  856 	mov	dpl,r7
                                    857 ;	../UI_Manager/ui.c:164: break;
                                    858 ;	../UI_Manager/ui.c:165: case MANUAL_FOG_DURATION_STATE:
      000344 02r07rAF         [24]  859 	ljmp	_fogIntervalPage
      000347                        860 00140$:
                                    861 ;	../UI_Manager/ui.c:166: fogDurationPage(action);
      000347 8F 82            [24]  862 	mov	dpl,r7
                                    863 ;	../UI_Manager/ui.c:167: break;
                                    864 ;	../UI_Manager/ui.c:168: case MANUAL_COLOR_MACRO_STATE:
      000349 02r08r5E         [24]  865 	ljmp	_fogDurationPage
      00034C                        866 00141$:
                                    867 ;	../UI_Manager/ui.c:169: macroPage(action);
      00034C 8F 82            [24]  868 	mov	dpl,r7
                                    869 ;	../UI_Manager/ui.c:170: break;
                                    870 ;	../UI_Manager/ui.c:171: case MANUAL_MACRO_SPEED_STATE:
      00034E 02r09r0D         [24]  871 	ljmp	_macroPage
      000351                        872 00142$:
                                    873 ;	../UI_Manager/ui.c:172: macroSpeedPage(action);
      000351 8F 82            [24]  874 	mov	dpl,r7
                                    875 ;	../UI_Manager/ui.c:173: break;
                                    876 ;	../UI_Manager/ui.c:177: case MANUAL_STROBE_STATE:
      000353 02r09rB9         [24]  877 	ljmp	_macroSpeedPage
      000356                        878 00146$:
                                    879 ;	../UI_Manager/ui.c:178: colorPage(action);
      000356 8F 82            [24]  880 	mov	dpl,r7
                                    881 ;	../UI_Manager/ui.c:179: break;
                                    882 ;	../UI_Manager/ui.c:182: case MANUAL_REMOTE_ACTION_6_STATE:
      000358 02r0Ar86         [24]  883 	ljmp	_colorPage
      00035B                        884 00149$:
                                    885 ;	../UI_Manager/ui.c:183: remotePage(action);
      00035B 8F 82            [24]  886 	mov	dpl,r7
                                    887 ;	../UI_Manager/ui.c:184: break;
                                    888 ;	../UI_Manager/ui.c:186: case MANUAL_SAVE_SETTINGS_STATE:
      00035D 02r0Br99         [24]  889 	ljmp	_remotePage
      000360                        890 00151$:
                                    891 ;	../UI_Manager/ui.c:187: saveLoadPage(action);
      000360 8F 82            [24]  892 	mov	dpl,r7
                                    893 ;	../UI_Manager/ui.c:188: break;
                                    894 ;	../UI_Manager/ui.c:189: case DMX_ADDRESS_STATE:
      000362 02r0CrB8         [24]  895 	ljmp	_saveLoadPage
      000365                        896 00152$:
                                    897 ;	../UI_Manager/ui.c:190: dmxAddressPage(action);
      000365 8F 82            [24]  898 	mov	dpl,r7
                                    899 ;	../UI_Manager/ui.c:191: break;
                                    900 ;	../UI_Manager/ui.c:192: case DMX_CHANNEL_MODE_STATE:
      000367 02r0DrD4         [24]  901 	ljmp	_dmxAddressPage
      00036A                        902 00153$:
                                    903 ;	../UI_Manager/ui.c:193: dmxChannelPage(action);
      00036A 8F 82            [24]  904 	mov	dpl,r7
                                    905 ;	../UI_Manager/ui.c:194: break;
                                    906 ;	../UI_Manager/ui.c:195: default: //IDLE state
      00036C 02r0Er58         [24]  907 	ljmp	_dmxChannelPage
      00036F                        908 00154$:
                                    909 ;	../UI_Manager/ui.c:196: idlePage();
      00036F C0 07            [24]  910 	push	ar7
      000371 12r03r8F         [24]  911 	lcall	_idlePage
      000374 D0 07            [24]  912 	pop	ar7
                                    913 ;	../UI_Manager/ui.c:198: if(action == BUTTON_FUNCTION){
      000376 BF 02 09         [24]  914 	cjne	r7,#0x02,00158$
                                    915 ;	../UI_Manager/ui.c:199: set_ui_state(INC, NULL);
      000379 75*0F 00         [24]  916 	mov	_set_ui_state_PARM_2,#0x00
      00037C 75 82 01         [24]  917 	mov	dpl,#0x01
      00037F 02r0ErFA         [24]  918 	ljmp	_set_ui_state
      000382                        919 00158$:
                                    920 ;	../UI_Manager/ui.c:200: } else if(action == BUTTON_TIMER){
      000382 BF 01 09         [24]  921 	cjne	r7,#0x01,00172$
                                    922 ;	../UI_Manager/ui.c:201: set_ui_state(DEC, NULL);
      000385 75*0F 00         [24]  923 	mov	_set_ui_state_PARM_2,#0x00
      000388 75 82 02         [24]  924 	mov	dpl,#0x02
                                    925 ;	../UI_Manager/ui.c:204: }
                                    926 ;	../UI_Manager/ui.c:207: }
      00038B 02r0ErFA         [24]  927 	ljmp	_set_ui_state
      00038E                        928 00172$:
      00038E 22               [24]  929 	ret
                                    930 ;------------------------------------------------------------
                                    931 ;Allocation info for local variables in function 'idlePage'
                                    932 ;------------------------------------------------------------
                                    933 ;timer                     Allocated with name '_idlePage_timer_65536_59'
                                    934 ;intervalOrDuration        Allocated with name '_idlePage_intervalOrDuration_65536_59'
                                    935 ;empty                     Allocated with name '_idlePage_empty_65536_59'
                                    936 ;tock                      Allocated with name '_idlePage_tock_65536_59'
                                    937 ;iconChange                Allocated with name '_idlePage_iconChange_65536_59'
                                    938 ;playing                   Allocated with name '_idlePage_playing_65536_59'
                                    939 ;temp                      Allocated to registers r7 
                                    940 ;------------------------------------------------------------
                                    941 ;	../UI_Manager/ui.c:209: void idlePage(){
                                    942 ;	-----------------------------------------
                                    943 ;	 function idlePage
                                    944 ;	-----------------------------------------
      00038F                        945 _idlePage:
                                    946 ;	../UI_Manager/ui.c:218: if(Changed){
      00038F E5*01            [12]  947 	mov	a,_Changed
      000391 70 03            [24]  948 	jnz	00329$
      000393 02r04r76         [24]  949 	ljmp	00116$
      000396                        950 00329$:
                                    951 ;	../UI_Manager/ui.c:219: exe_command(CLEAR_DISPLAY);
      000396 90 80 00         [24]  952 	mov	dptr,#0x8000
      000399 12r00r00         [24]  953 	lcall	_exe_command
                                    954 ;	../UI_Manager/ui.c:220: Changed = 0x00;
      00039C 75*01 00         [24]  955 	mov	_Changed,#0x00
                                    956 ;	../UI_Manager/ui.c:221: changed = 0xFF;
      00039F 75*02 FF         [24]  957 	mov	_changed,#0xff
                                    958 ;	../UI_Manager/ui.c:222: timer = 0xFF;
      0003A2 75*08 FF         [24]  959 	mov	_idlePage_timer_65536_59,#0xff
                                    960 ;	../UI_Manager/ui.c:223: intervalOrDuration = 0x55; //guaranteed to not be interval or duration
      0003A5 75*09 55         [24]  961 	mov	_idlePage_intervalOrDuration_65536_59,#0x55
                                    962 ;	../UI_Manager/ui.c:226: if(get_fog_fluid_level() == TANK_EMPTY && get_heated()){
      0003A8 E5*00            [12]  963 	mov	a,_Fluid_Level
      0003AA 70 33            [24]  964 	jnz	00102$
      0003AC E5*00            [12]  965 	mov	a,_Heat_Flag
      0003AE 30 E7 2E         [24]  966 	jnb	acc.7,00102$
                                    967 ;	../UI_Manager/ui.c:228: write_string("PC Load Letter", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      0003B1 75*00 10         [24]  968 	mov	_write_string_PARM_2,#0x10
      0003B4 75*00 01         [24]  969 	mov	_write_string_PARM_3,#0x01
      0003B7 75*00 00         [24]  970 	mov	_write_string_PARM_4,#0x00
      0003BA 75*00 00         [24]  971 	mov	_write_string_PARM_5,#0x00
      0003BD 90r00r74         [24]  972 	mov	dptr,#___str_8
      0003C0 75 F0 80         [24]  973 	mov	b,#0x80
      0003C3 12r00r00         [24]  974 	lcall	_write_string
                                    975 ;	../UI_Manager/ui.c:229: write_string("Burst to Refill", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      0003C6 75*00 10         [24]  976 	mov	_write_string_PARM_2,#0x10
      0003C9 75*00 00         [24]  977 	mov	_write_string_PARM_3,#0x00
      0003CC 75*00 01         [24]  978 	mov	_write_string_PARM_4,#0x01
      0003CF 75*00 00         [24]  979 	mov	_write_string_PARM_5,#0x00
      0003D2 90r00r83         [24]  980 	mov	dptr,#___str_9
      0003D5 75 F0 80         [24]  981 	mov	b,#0x80
      0003D8 12r00r00         [24]  982 	lcall	_write_string
                                    983 ;	../UI_Manager/ui.c:231: empty = 0xFF;
      0003DB 75*0A FF         [24]  984 	mov	_idlePage_empty_65536_59,#0xff
                                    985 ;	../UI_Manager/ui.c:233: return;
      0003DE 22               [24]  986 	ret
      0003DF                        987 00102$:
                                    988 ;	../UI_Manager/ui.c:236: if(empty){
      0003DF E5*0A            [12]  989 	mov	a,_idlePage_empty_65536_59
      0003E1 60 0C            [24]  990 	jz	00107$
                                    991 ;	../UI_Manager/ui.c:237: if(get_fog_fluid_level() == TANK_FULL){
      0003E3 74 01            [12]  992 	mov	a,#0x01
      0003E5 B5*00 06         [24]  993 	cjne	a,_Fluid_Level,00105$
                                    994 ;	../UI_Manager/ui.c:238: empty = 0x00;
      0003E8 75*0A 00         [24]  995 	mov	_idlePage_empty_65536_59,#0x00
                                    996 ;	../UI_Manager/ui.c:239: Changed = CHANGE_SCREEN_X;
      0003EB 75*01 FF         [24]  997 	mov	_Changed,#0xff
      0003EE                        998 00105$:
                                    999 ;	../UI_Manager/ui.c:242: return;
      0003EE 22               [24] 1000 	ret
      0003EF                       1001 00107$:
                                   1002 ;	../UI_Manager/ui.c:245: if(get_runtime_data(OP_MODE_INDEX)){ /* Manual Mode */
      0003EF 75 82 10         [24] 1003 	mov	dpl,#0x10
      0003F2 12r00r00         [24] 1004 	lcall	_get_runtime_data
      0003F5 E5 82            [12] 1005 	mov	a,dpl
      0003F7 60 17            [24] 1006 	jz	00113$
                                   1007 ;	../UI_Manager/ui.c:246: write_string("Manual Mode", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      0003F9 75*00 10         [24] 1008 	mov	_write_string_PARM_2,#0x10
      0003FC 75*00 01         [24] 1009 	mov	_write_string_PARM_3,#0x01
      0003FF 75*00 00         [24] 1010 	mov	_write_string_PARM_4,#0x00
      000402 75*00 00         [24] 1011 	mov	_write_string_PARM_5,#0x00
      000405 90r00r93         [24] 1012 	mov	dptr,#___str_10
      000408 75 F0 80         [24] 1013 	mov	b,#0x80
      00040B 12r00r00         [24] 1014 	lcall	_write_string
      00040E 80 66            [24] 1015 	sjmp	00116$
      000410                       1016 00113$:
                                   1017 ;	../UI_Manager/ui.c:249: write_number(get_dmx_address(), 4, LINE_1, NOT_SELECTED);
      000410 12r00r00         [24] 1018 	lcall	_get_dmx_address
      000413 75*00 04         [24] 1019 	mov	_write_number_PARM_2,#0x04
      000416 75*00 01         [24] 1020 	mov	_write_number_PARM_3,#0x01
      000419 75*00 00         [24] 1021 	mov	_write_number_PARM_4,#0x00
      00041C 12r00r00         [24] 1022 	lcall	_write_number
                                   1023 ;	../UI_Manager/ui.c:250: switch (get_runtime_data(MODE_INDEX))
      00041F 75 82 0E         [24] 1024 	mov	dpl,#0x0e
      000422 12r00r00         [24] 1025 	lcall	_get_runtime_data
      000425 AF 82            [24] 1026 	mov	r7,dpl
      000427 BF 01 02         [24] 1027 	cjne	r7,#0x01,00336$
      00042A 80 05            [24] 1028 	sjmp	00108$
      00042C                       1029 00336$:
                                   1030 ;	../UI_Manager/ui.c:252: case OPTION_DMX_MODE_3:
      00042C BF 02 0A         [24] 1031 	cjne	r7,#0x02,00110$
      00042F 80 04            [24] 1032 	sjmp	00109$
      000431                       1033 00108$:
                                   1034 ;	../UI_Manager/ui.c:253: temp = 3;
      000431 7F 03            [12] 1035 	mov	r7,#0x03
                                   1036 ;	../UI_Manager/ui.c:254: break;
                                   1037 ;	../UI_Manager/ui.c:255: case OPTION_DMX_MODE_1: 
      000433 80 06            [24] 1038 	sjmp	00111$
      000435                       1039 00109$:
                                   1040 ;	../UI_Manager/ui.c:256: temp = 1;
      000435 7F 01            [12] 1041 	mov	r7,#0x01
                                   1042 ;	../UI_Manager/ui.c:257: break;
                                   1043 ;	../UI_Manager/ui.c:258: default:
      000437 80 02            [24] 1044 	sjmp	00111$
      000439                       1045 00110$:
                                   1046 ;	../UI_Manager/ui.c:259: temp = 11;
      000439 7F 0B            [12] 1047 	mov	r7,#0x0b
                                   1048 ;	../UI_Manager/ui.c:261: }
      00043B                       1049 00111$:
                                   1050 ;	../UI_Manager/ui.c:262: write_number(temp, 12, LINE_1, NOT_SELECTED);
      00043B 7E 00            [12] 1051 	mov	r6,#0x00
      00043D 75*00 0C         [24] 1052 	mov	_write_number_PARM_2,#0x0c
      000440 75*00 01         [24] 1053 	mov	_write_number_PARM_3,#0x01
                                   1054 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000443 8E*00            [24] 1055 	mov	_write_number_PARM_4,r6
      000445 8F 82            [24] 1056 	mov	dpl,r7
      000447 8E 83            [24] 1057 	mov	dph,r6
      000449 12r00r00         [24] 1058 	lcall	_write_number
                                   1059 ;	../UI_Manager/ui.c:264: write_string("Addr", sizeof("Addr") - 1, 0, LINE_1, NOT_SELECTED);
      00044C 75*00 04         [24] 1060 	mov	_write_string_PARM_2,#0x04
      00044F 75*00 00         [24] 1061 	mov	_write_string_PARM_3,#0x00
      000452 75*00 01         [24] 1062 	mov	_write_string_PARM_4,#0x01
      000455 75*00 00         [24] 1063 	mov	_write_string_PARM_5,#0x00
      000458 90r00r9F         [24] 1064 	mov	dptr,#___str_11
      00045B 75 F0 80         [24] 1065 	mov	b,#0x80
      00045E 12r00r00         [24] 1066 	lcall	_write_string
                                   1067 ;	../UI_Manager/ui.c:265: write_string("Mode", sizeof("Mode") - 1, 9, LINE_1, NOT_SELECTED);
      000461 75*00 04         [24] 1068 	mov	_write_string_PARM_2,#0x04
      000464 75*00 09         [24] 1069 	mov	_write_string_PARM_3,#0x09
      000467 75*00 01         [24] 1070 	mov	_write_string_PARM_4,#0x01
      00046A 75*00 00         [24] 1071 	mov	_write_string_PARM_5,#0x00
      00046D 90r00rA4         [24] 1072 	mov	dptr,#___str_12
      000470 75 F0 80         [24] 1073 	mov	b,#0x80
      000473 12r00r00         [24] 1074 	lcall	_write_string
      000476                       1075 00116$:
                                   1076 ;	../UI_Manager/ui.c:273: tock++;
      000476 05*0B            [12] 1077 	inc	_idlePage_tock_65536_59
                                   1078 ;	../UI_Manager/ui.c:274: if(get_playing() == PLAY){
      000478 74 01            [12] 1079 	mov	a,#0x01
      00047A B5*00 55         [24] 1080 	cjne	a,_Playing,00134$
                                   1081 ;	../UI_Manager/ui.c:275: if(playing == PAUSE){
      00047D E5*0D            [12] 1082 	mov	a,_idlePage_playing_65536_59
                                   1083 ;	../UI_Manager/ui.c:276: iconChange |= PLAY_CHANGE;
      00047F 70 08            [24] 1084 	jnz	00118$
      000481 AE*0C            [24] 1085 	mov	r6,_idlePage_iconChange_65536_59
      000483 FF               [12] 1086 	mov	r7,a
      000484 43 06 20         [24] 1087 	orl	ar6,#0x20
      000487 8E*0C            [24] 1088 	mov	_idlePage_iconChange_65536_59,r6
      000489                       1089 00118$:
                                   1090 ;	../UI_Manager/ui.c:279: if(get_interval_or_duration() == INTERVAL){
      000489 E5*00            [12] 1091 	mov	a,_Interval_Or_Duration
      00048B 70 16            [24] 1092 	jnz	00127$
                                   1093 ;	../UI_Manager/ui.c:281: if(iconChange & PLAY_CHANGE){
      00048D E5*0C            [12] 1094 	mov	a,_idlePage_iconChange_65536_59
      00048F 30 E5 35         [24] 1095 	jnb	acc.5,00128$
                                   1096 ;	../UI_Manager/ui.c:282: write_char(CHAR_PLAY, PLAY_ICON_INDEX, LINE_0);
      000492 75*00 0E         [24] 1097 	mov	_write_char_PARM_2,#0x0e
      000495 75*00 00         [24] 1098 	mov	_write_char_PARM_3,#0x00
      000498 75 82 80         [24] 1099 	mov	dpl,#0x80
      00049B 12r00r00         [24] 1100 	lcall	_write_char
                                   1101 ;	../UI_Manager/ui.c:283: iconChange &= ~PLAY_CHANGE;
      00049E 53*0C DF         [24] 1102 	anl	_idlePage_iconChange_65536_59,#0xdf
      0004A1 80 24            [24] 1103 	sjmp	00128$
      0004A3                       1104 00127$:
                                   1105 ;	../UI_Manager/ui.c:287: if(tock == 0x80 + 55){ //blink if fogging
      0004A3 74 B7            [12] 1106 	mov	a,#0xb7
      0004A5 B5*0B 0E         [24] 1107 	cjne	a,_idlePage_tock_65536_59,00124$
                                   1108 ;	../UI_Manager/ui.c:288: write_char(CHAR_PLAY, PLAY_ICON_INDEX, LINE_0);
      0004A8 75*00 0E         [24] 1109 	mov	_write_char_PARM_2,#0x0e
      0004AB 75*00 00         [24] 1110 	mov	_write_char_PARM_3,#0x00
      0004AE 75 82 80         [24] 1111 	mov	dpl,#0x80
      0004B1 12r00r00         [24] 1112 	lcall	_write_char
      0004B4 80 11            [24] 1113 	sjmp	00128$
      0004B6                       1114 00124$:
                                   1115 ;	../UI_Manager/ui.c:289: } else if(tock == 0x08 + 55){
      0004B6 74 3F            [12] 1116 	mov	a,#0x3f
      0004B8 B5*0B 0C         [24] 1117 	cjne	a,_idlePage_tock_65536_59,00128$
                                   1118 ;	../UI_Manager/ui.c:290: write_char(CHAR_NULL, PLAY_ICON_INDEX, LINE_0);
      0004BB 75*00 0E         [24] 1119 	mov	_write_char_PARM_2,#0x0e
      0004BE 75*00 00         [24] 1120 	mov	_write_char_PARM_3,#0x00
      0004C1 75 82 04         [24] 1121 	mov	dpl,#0x04
      0004C4 12r00r00         [24] 1122 	lcall	_write_char
      0004C7                       1123 00128$:
                                   1124 ;	../UI_Manager/ui.c:293: iconChange |= PAUSE_CHANGE;
      0004C7 AE*0C            [24] 1125 	mov	r6,_idlePage_iconChange_65536_59
      0004C9 7F 00            [12] 1126 	mov	r7,#0x00
      0004CB 43 06 10         [24] 1127 	orl	ar6,#0x10
      0004CE 8E*0C            [24] 1128 	mov	_idlePage_iconChange_65536_59,r6
      0004D0 80 2E            [24] 1129 	sjmp	00135$
      0004D2                       1130 00134$:
                                   1131 ;	../UI_Manager/ui.c:295: if(playing == PLAY){
      0004D2 74 01            [12] 1132 	mov	a,#0x01
      0004D4 B5*0D 09         [24] 1133 	cjne	a,_idlePage_playing_65536_59,00130$
                                   1134 ;	../UI_Manager/ui.c:296: iconChange |= PAUSE_CHANGE;
      0004D7 AE*0C            [24] 1135 	mov	r6,_idlePage_iconChange_65536_59
      0004D9 7F 00            [12] 1136 	mov	r7,#0x00
      0004DB 43 06 10         [24] 1137 	orl	ar6,#0x10
      0004DE 8E*0C            [24] 1138 	mov	_idlePage_iconChange_65536_59,r6
      0004E0                       1139 00130$:
                                   1140 ;	../UI_Manager/ui.c:299: if(iconChange & PAUSE_CHANGE){
      0004E0 E5*0C            [12] 1141 	mov	a,_idlePage_iconChange_65536_59
      0004E2 30 E4 18         [24] 1142 	jnb	acc.4,00132$
                                   1143 ;	../UI_Manager/ui.c:300: write_char(CHAR_NULL, PLAY_ICON_INDEX, LINE_0);
      0004E5 75*00 0E         [24] 1144 	mov	_write_char_PARM_2,#0x0e
      0004E8 75*00 00         [24] 1145 	mov	_write_char_PARM_3,#0x00
      0004EB 75 82 04         [24] 1146 	mov	dpl,#0x04
      0004EE 12r00r00         [24] 1147 	lcall	_write_char
                                   1148 ;	../UI_Manager/ui.c:301: iconChange |= PLAY_CHANGE;
      0004F1 AE*0C            [24] 1149 	mov	r6,_idlePage_iconChange_65536_59
      0004F3 7F 00            [12] 1150 	mov	r7,#0x00
      0004F5 43 06 20         [24] 1151 	orl	ar6,#0x20
      0004F8 8E*0C            [24] 1152 	mov	_idlePage_iconChange_65536_59,r6
                                   1153 ;	../UI_Manager/ui.c:302: iconChange &= ~PAUSE_CHANGE;
      0004FA 53*0C EF         [24] 1154 	anl	_idlePage_iconChange_65536_59,#0xef
      0004FD                       1155 00132$:
                                   1156 ;	../UI_Manager/ui.c:305: playing = PAUSE;
      0004FD 75*0D 00         [24] 1157 	mov	_idlePage_playing_65536_59,#0x00
      000500                       1158 00135$:
                                   1159 ;	../UI_Manager/ui.c:308: if(get_heater_enabled()){
      000500 E5*00            [12] 1160 	mov	a,_Heat_Flag
      000502 20 E4 5E         [24] 1161 	jb	acc.4,00149$
                                   1162 ;	../UI_Manager/ui.c:309: if(get_heated()){
      000505 E5*00            [12] 1163 	mov	a,_Heat_Flag
      000507 30 E7 16         [24] 1164 	jnb	acc.7,00144$
                                   1165 ;	../UI_Manager/ui.c:310: if(iconChange & HEATED_CHANGE){
      00050A E5*0C            [12] 1166 	mov	a,_idlePage_iconChange_65536_59
      00050C 30 E0 49         [24] 1167 	jnb	acc.0,00145$
                                   1168 ;	../UI_Manager/ui.c:311: write_char(CHAR_HEATED, HEAT_ICON_INDEX, LINE_0);
      00050F 75*00 0F         [24] 1169 	mov	_write_char_PARM_2,#0x0f
      000512 75*00 00         [24] 1170 	mov	_write_char_PARM_3,#0x00
      000515 75 82 60         [24] 1171 	mov	dpl,#0x60
      000518 12r00r00         [24] 1172 	lcall	_write_char
                                   1173 ;	../UI_Manager/ui.c:312: iconChange &= ~HEATED_CHANGE;
      00051B 53*0C FE         [24] 1174 	anl	_idlePage_iconChange_65536_59,#0xfe
      00051E 80 38            [24] 1175 	sjmp	00145$
      000520                       1176 00144$:
                                   1177 ;	../UI_Manager/ui.c:315: if(!(tock)){
      000520 E5*0B            [12] 1178 	mov	a,_idlePage_tock_65536_59
      000522 70 2B            [24] 1179 	jnz	00142$
                                   1180 ;	../UI_Manager/ui.c:316: if(iconChange & HEATING_CHANGE){
      000524 E5*0C            [12] 1181 	mov	a,_idlePage_iconChange_65536_59
      000526 30 E1 11         [24] 1182 	jnb	acc.1,00139$
                                   1183 ;	../UI_Manager/ui.c:317: write_char(CHAR_NULL, HEAT_ICON_INDEX, LINE_0);
      000529 75*00 0F         [24] 1184 	mov	_write_char_PARM_2,#0x0f
      00052C 75*00 00         [24] 1185 	mov	_write_char_PARM_3,#0x00
      00052F 75 82 04         [24] 1186 	mov	dpl,#0x04
      000532 12r00r00         [24] 1187 	lcall	_write_char
                                   1188 ;	../UI_Manager/ui.c:318: iconChange &= ~HEATING_CHANGE;
      000535 53*0C FD         [24] 1189 	anl	_idlePage_iconChange_65536_59,#0xfd
      000538 80 15            [24] 1190 	sjmp	00142$
      00053A                       1191 00139$:
                                   1192 ;	../UI_Manager/ui.c:320: write_char(CHAR_HEATING, HEAT_ICON_INDEX, LINE_0);
      00053A 75*00 0F         [24] 1193 	mov	_write_char_PARM_2,#0x0f
      00053D 75*00 00         [24] 1194 	mov	_write_char_PARM_3,#0x00
      000540 75 82 A0         [24] 1195 	mov	dpl,#0xa0
      000543 12r00r00         [24] 1196 	lcall	_write_char
                                   1197 ;	../UI_Manager/ui.c:321: iconChange |= HEATING_CHANGE;
      000546 AE*0C            [24] 1198 	mov	r6,_idlePage_iconChange_65536_59
      000548 7F 00            [12] 1199 	mov	r7,#0x00
      00054A 43 06 02         [24] 1200 	orl	ar6,#0x02
      00054D 8E*0C            [24] 1201 	mov	_idlePage_iconChange_65536_59,r6
      00054F                       1202 00142$:
                                   1203 ;	../UI_Manager/ui.c:324: iconChange |= HEATED_CHANGE;
      00054F AE*0C            [24] 1204 	mov	r6,_idlePage_iconChange_65536_59
      000551 7F 00            [12] 1205 	mov	r7,#0x00
      000553 43 06 01         [24] 1206 	orl	ar6,#0x01
      000556 8E*0C            [24] 1207 	mov	_idlePage_iconChange_65536_59,r6
      000558                       1208 00145$:
                                   1209 ;	../UI_Manager/ui.c:326: iconChange |= HEATER_CHANGE;
      000558 AE*0C            [24] 1210 	mov	r6,_idlePage_iconChange_65536_59
      00055A 7F 00            [12] 1211 	mov	r7,#0x00
      00055C 43 06 08         [24] 1212 	orl	ar6,#0x08
      00055F 8E*0C            [24] 1213 	mov	_idlePage_iconChange_65536_59,r6
      000561 80 17            [24] 1214 	sjmp	00150$
      000563                       1215 00149$:
                                   1216 ;	../UI_Manager/ui.c:328: if(iconChange & HEATER_CHANGE){
      000563 E5*0C            [12] 1217 	mov	a,_idlePage_iconChange_65536_59
      000565 30 E3 0F         [24] 1218 	jnb	acc.3,00147$
                                   1219 ;	../UI_Manager/ui.c:329: write_char(CHAR_HEATER_OFF, HEAT_ICON_INDEX, LINE_0);
      000568 75*00 0F         [24] 1220 	mov	_write_char_PARM_2,#0x0f
      00056B 75*00 00         [24] 1221 	mov	_write_char_PARM_3,#0x00
      00056E 75 82 00         [24] 1222 	mov	dpl,#0x00
      000571 12r00r00         [24] 1223 	lcall	_write_char
                                   1224 ;	../UI_Manager/ui.c:330: iconChange &= ~HEATER_CHANGE;
      000574 53*0C F7         [24] 1225 	anl	_idlePage_iconChange_65536_59,#0xf7
      000577                       1226 00147$:
                                   1227 ;	../UI_Manager/ui.c:332: iconChange |= HEATER_CHANGE | HEATED_CHANGE;
      000577 43*0C 09         [24] 1228 	orl	_idlePage_iconChange_65536_59,#0x09
      00057A                       1229 00150$:
                                   1230 ;	../UI_Manager/ui.c:337: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      00057A 75 82 10         [24] 1231 	mov	dpl,#0x10
      00057D 12r00r00         [24] 1232 	lcall	_get_runtime_data
      000580 E5 82            [12] 1233 	mov	a,dpl
      000582 60 03            [24] 1234 	jz	00356$
      000584 02r06r15         [24] 1235 	ljmp	00168$
      000587                       1236 00356$:
                                   1237 ;	../UI_Manager/ui.c:340: if(has_dmx()){
      000587 E5*00            [12] 1238 	mov	a,_Has_DMX
      000589 60 28            [24] 1239 	jz	00156$
                                   1240 ;	../UI_Manager/ui.c:341: if(changed & DMX_OK_CHANGE){
      00058B E5*02            [12] 1241 	mov	a,_changed
      00058D 30 E7 49         [24] 1242 	jnb	acc.7,00157$
                                   1243 ;	../UI_Manager/ui.c:342: write_string("DMX Ok", sizeof("DMX Ok") - 1, 1, LINE_0, NOT_SELECTED);
      000590 75*00 06         [24] 1244 	mov	_write_string_PARM_2,#0x06
      000593 75*00 01         [24] 1245 	mov	_write_string_PARM_3,#0x01
      000596 75*00 00         [24] 1246 	mov	_write_string_PARM_4,#0x00
      000599 75*00 00         [24] 1247 	mov	_write_string_PARM_5,#0x00
      00059C 90r00rA9         [24] 1248 	mov	dptr,#___str_13
      00059F 75 F0 80         [24] 1249 	mov	b,#0x80
      0005A2 12r00r00         [24] 1250 	lcall	_write_string
                                   1251 ;	../UI_Manager/ui.c:343: changed |= NO_DMX_CHANGE;
      0005A5 AE*02            [24] 1252 	mov	r6,_changed
      0005A7 7F 00            [12] 1253 	mov	r7,#0x00
      0005A9 43 06 40         [24] 1254 	orl	ar6,#0x40
      0005AC 8E*02            [24] 1255 	mov	_changed,r6
                                   1256 ;	../UI_Manager/ui.c:344: changed &= ~DMX_OK_CHANGE;
      0005AE 53*02 7F         [24] 1257 	anl	_changed,#0x7f
      0005B1 80 26            [24] 1258 	sjmp	00157$
      0005B3                       1259 00156$:
                                   1260 ;	../UI_Manager/ui.c:347: if(changed & NO_DMX_CHANGE){
      0005B3 E5*02            [12] 1261 	mov	a,_changed
      0005B5 30 E6 21         [24] 1262 	jnb	acc.6,00157$
                                   1263 ;	../UI_Manager/ui.c:348: write_string("No DMX", sizeof("No DMX") - 1, 1, LINE_0, NOT_SELECTED);
      0005B8 75*00 06         [24] 1264 	mov	_write_string_PARM_2,#0x06
      0005BB 75*00 01         [24] 1265 	mov	_write_string_PARM_3,#0x01
      0005BE 75*00 00         [24] 1266 	mov	_write_string_PARM_4,#0x00
      0005C1 75*00 00         [24] 1267 	mov	_write_string_PARM_5,#0x00
      0005C4 90r00rB0         [24] 1268 	mov	dptr,#___str_14
      0005C7 75 F0 80         [24] 1269 	mov	b,#0x80
      0005CA 12r00r00         [24] 1270 	lcall	_write_string
                                   1271 ;	../UI_Manager/ui.c:349: changed |= DMX_OK_CHANGE;
      0005CD AE*02            [24] 1272 	mov	r6,_changed
      0005CF 7F 00            [12] 1273 	mov	r7,#0x00
      0005D1 43 06 80         [24] 1274 	orl	ar6,#0x80
      0005D4 8E*02            [24] 1275 	mov	_changed,r6
                                   1276 ;	../UI_Manager/ui.c:350: changed &= ~NO_DMX_CHANGE;
      0005D6 53*02 BF         [24] 1277 	anl	_changed,#0xbf
      0005D9                       1278 00157$:
                                   1279 ;	../UI_Manager/ui.c:354: temp = get_timer();
                                   1280 ;	../UI_Manager/ui.c:357: if(timer != temp){
      0005D9 E5*00            [12] 1281 	mov	a,_Timer
      0005DB FF               [12] 1282 	mov	r7,a
      0005DC B5*08 01         [24] 1283 	cjne	a,_idlePage_timer_65536_59,00360$
      0005DF 22               [24] 1284 	ret
      0005E0                       1285 00360$:
                                   1286 ;	../UI_Manager/ui.c:359: write_number(temp, 7, LINE_0, NOT_SELECTED);
      0005E0 8F 05            [24] 1287 	mov	ar5,r7
      0005E2 7E 00            [12] 1288 	mov	r6,#0x00
      0005E4 75*00 07         [24] 1289 	mov	_write_number_PARM_2,#0x07
                                   1290 ;	1-genFromRTrack replaced	mov	_write_number_PARM_3,#0x00
      0005E7 8E*00            [24] 1291 	mov	_write_number_PARM_3,r6
                                   1292 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      0005E9 8E*00            [24] 1293 	mov	_write_number_PARM_4,r6
      0005EB 8D 82            [24] 1294 	mov	dpl,r5
      0005ED 8E 83            [24] 1295 	mov	dph,r6
      0005EF C0 07            [24] 1296 	push	ar7
      0005F1 12r00r00         [24] 1297 	lcall	_write_number
      0005F4 D0 07            [24] 1298 	pop	ar7
                                   1299 ;	../UI_Manager/ui.c:360: write_char((get_interval_or_duration() == INTERVAL) ? CHAR_I : CHAR_D, 11, LINE_0);
      0005F6 E5*00            [12] 1300 	mov	a,_Interval_Or_Duration
      0005F8 70 05            [24] 1301 	jnz	00172$
      0005FA 7D 92            [12] 1302 	mov	r5,#0x92
      0005FC FE               [12] 1303 	mov	r6,a
      0005FD 80 04            [24] 1304 	sjmp	00173$
      0005FF                       1305 00172$:
      0005FF 7D 22            [12] 1306 	mov	r5,#0x22
      000601 7E 00            [12] 1307 	mov	r6,#0x00
      000603                       1308 00173$:
      000603 8D 82            [24] 1309 	mov	dpl,r5
      000605 75*00 0B         [24] 1310 	mov	_write_char_PARM_2,#0x0b
      000608 75*00 00         [24] 1311 	mov	_write_char_PARM_3,#0x00
      00060B C0 07            [24] 1312 	push	ar7
      00060D 12r00r00         [24] 1313 	lcall	_write_char
      000610 D0 07            [24] 1314 	pop	ar7
                                   1315 ;	../UI_Manager/ui.c:362: timer = temp;
      000612 8F*08            [24] 1316 	mov	_idlePage_timer_65536_59,r7
      000614 22               [24] 1317 	ret
      000615                       1318 00168$:
                                   1319 ;	../UI_Manager/ui.c:367: temp = get_interval_or_duration();
                                   1320 ;	../UI_Manager/ui.c:369: if(intervalOrDuration != temp){
      000615 E5*00            [12] 1321 	mov	a,_Interval_Or_Duration
      000617 FF               [12] 1322 	mov	r7,a
      000618 B5*09 02         [24] 1323 	cjne	a,_idlePage_intervalOrDuration_65536_59,00362$
      00061B 80 37            [24] 1324 	sjmp	00164$
      00061D                       1325 00362$:
                                   1326 ;	../UI_Manager/ui.c:370: if(temp == INTERVAL){
      00061D EF               [12] 1327 	mov	a,r7
                                   1328 ;	../UI_Manager/ui.c:371: write_string("Interval", sizeof("Interval"), 0, LINE_1, NOT_SELECTED);
      00061E 70 19            [24] 1329 	jnz	00161$
      000620 75*00 09         [24] 1330 	mov	_write_string_PARM_2,#0x09
      000623 F5*00            [12] 1331 	mov	_write_string_PARM_3,a
      000625 75*00 01         [24] 1332 	mov	_write_string_PARM_4,#0x01
      000628 F5*00            [12] 1333 	mov	_write_string_PARM_5,a
      00062A 90r00rB7         [24] 1334 	mov	dptr,#___str_15
      00062D 75 F0 80         [24] 1335 	mov	b,#0x80
      000630 C0 07            [24] 1336 	push	ar7
      000632 12r00r00         [24] 1337 	lcall	_write_string
      000635 D0 07            [24] 1338 	pop	ar7
      000637 80 19            [24] 1339 	sjmp	00162$
      000639                       1340 00161$:
                                   1341 ;	../UI_Manager/ui.c:373: write_string("Duration", sizeof("Duration"), 0, LINE_1, NOT_SELECTED);
      000639 75*00 09         [24] 1342 	mov	_write_string_PARM_2,#0x09
      00063C 75*00 00         [24] 1343 	mov	_write_string_PARM_3,#0x00
      00063F 75*00 01         [24] 1344 	mov	_write_string_PARM_4,#0x01
      000642 75*00 00         [24] 1345 	mov	_write_string_PARM_5,#0x00
      000645 90r00rC0         [24] 1346 	mov	dptr,#___str_16
      000648 75 F0 80         [24] 1347 	mov	b,#0x80
      00064B C0 07            [24] 1348 	push	ar7
      00064D 12r00r00         [24] 1349 	lcall	_write_string
      000650 D0 07            [24] 1350 	pop	ar7
      000652                       1351 00162$:
                                   1352 ;	../UI_Manager/ui.c:376: intervalOrDuration = temp;
      000652 8F*09            [24] 1353 	mov	_idlePage_intervalOrDuration_65536_59,r7
      000654                       1354 00164$:
                                   1355 ;	../UI_Manager/ui.c:379: temp = get_timer();
                                   1356 ;	../UI_Manager/ui.c:381: if(timer != temp){
      000654 E5*00            [12] 1357 	mov	a,_Timer
      000656 FF               [12] 1358 	mov	r7,a
      000657 B5*08 01         [24] 1359 	cjne	a,_idlePage_timer_65536_59,00364$
      00065A 22               [24] 1360 	ret
      00065B                       1361 00364$:
                                   1362 ;	../UI_Manager/ui.c:383: write_number(temp, NUMBER_END_INDEX-1, LINE_1, NOT_SELECTED);
      00065B 8F 05            [24] 1363 	mov	ar5,r7
      00065D 7E 00            [12] 1364 	mov	r6,#0x00
      00065F 75*00 0B         [24] 1365 	mov	_write_number_PARM_2,#0x0b
      000662 75*00 01         [24] 1366 	mov	_write_number_PARM_3,#0x01
                                   1367 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000665 8E*00            [24] 1368 	mov	_write_number_PARM_4,r6
      000667 8D 82            [24] 1369 	mov	dpl,r5
      000669 8E 83            [24] 1370 	mov	dph,r6
      00066B C0 07            [24] 1371 	push	ar7
      00066D 12r00r00         [24] 1372 	lcall	_write_number
      000670 D0 07            [24] 1373 	pop	ar7
                                   1374 ;	../UI_Manager/ui.c:385: timer = temp;
      000672 8F*08            [24] 1375 	mov	_idlePage_timer_65536_59,r7
                                   1376 ;	../UI_Manager/ui.c:389: }
      000674 22               [24] 1377 	ret
                                   1378 ;------------------------------------------------------------
                                   1379 ;Allocation info for local variables in function 'fogLevelPage'
                                   1380 ;------------------------------------------------------------
                                   1381 ;action                    Allocated to registers r7 
                                   1382 ;------------------------------------------------------------
                                   1383 ;	../UI_Manager/ui.c:391: void fogLevelPage(uint8_t action){
                                   1384 ;	-----------------------------------------
                                   1385 ;	 function fogLevelPage
                                   1386 ;	-----------------------------------------
      000675                       1387 _fogLevelPage:
      000675 AF 82            [24] 1388 	mov	r7,dpl
                                   1389 ;	../UI_Manager/ui.c:393: switch (action)
      000677 BF 01 02         [24] 1390 	cjne	r7,#0x01,00152$
      00067A 80 3A            [24] 1391 	sjmp	00104$
      00067C                       1392 00152$:
      00067C BF 02 02         [24] 1393 	cjne	r7,#0x02,00153$
      00067F 80 2C            [24] 1394 	sjmp	00103$
      000681                       1395 00153$:
      000681 BF 03 02         [24] 1396 	cjne	r7,#0x03,00154$
      000684 80 05            [24] 1397 	sjmp	00101$
      000686                       1398 00154$:
                                   1399 ;	../UI_Manager/ui.c:395: case BUTTON_UP:
      000686 BF 0B 36         [24] 1400 	cjne	r7,#0x0b,00105$
      000689 80 11            [24] 1401 	sjmp	00102$
      00068B                       1402 00101$:
                                   1403 ;	../UI_Manager/ui.c:396: set_runtime_data(FOG_POWER_INDEX, INC, NULL);
      00068B 75*00 01         [24] 1404 	mov	_set_runtime_data_PARM_2,#0x01
      00068E 75*00 00         [24] 1405 	mov	_set_runtime_data_PARM_3,#0x00
      000691 75 82 00         [24] 1406 	mov	dpl,#0x00
      000694 12r00r00         [24] 1407 	lcall	_set_runtime_data
                                   1408 ;	../UI_Manager/ui.c:397: changed = 0xFF;
      000697 75*02 FF         [24] 1409 	mov	_changed,#0xff
                                   1410 ;	../UI_Manager/ui.c:398: break;
                                   1411 ;	../UI_Manager/ui.c:399: case BUTTON_DOWN:
      00069A 80 23            [24] 1412 	sjmp	00105$
      00069C                       1413 00102$:
                                   1414 ;	../UI_Manager/ui.c:400: set_runtime_data(FOG_POWER_INDEX, DEC, NULL);
      00069C 75*00 02         [24] 1415 	mov	_set_runtime_data_PARM_2,#0x02
      00069F 75*00 00         [24] 1416 	mov	_set_runtime_data_PARM_3,#0x00
      0006A2 75 82 00         [24] 1417 	mov	dpl,#0x00
      0006A5 12r00r00         [24] 1418 	lcall	_set_runtime_data
                                   1419 ;	../UI_Manager/ui.c:401: changed = 0xFF;  
      0006A8 75*02 FF         [24] 1420 	mov	_changed,#0xff
                                   1421 ;	../UI_Manager/ui.c:402: break;
                                   1422 ;	../UI_Manager/ui.c:403: case BUTTON_FUNCTION:
      0006AB 80 12            [24] 1423 	sjmp	00105$
      0006AD                       1424 00103$:
                                   1425 ;	../UI_Manager/ui.c:404: set_ui_state(INC, NULL);
      0006AD 75*0F 00         [24] 1426 	mov	_set_ui_state_PARM_2,#0x00
      0006B0 75 82 01         [24] 1427 	mov	dpl,#0x01
                                   1428 ;	../UI_Manager/ui.c:405: return;
      0006B3 02r0ErFA         [24] 1429 	ljmp	_set_ui_state
                                   1430 ;	../UI_Manager/ui.c:406: case BUTTON_TIMER:
      0006B6                       1431 00104$:
                                   1432 ;	../UI_Manager/ui.c:407: set_ui_state(DEC, NULL);
      0006B6 75*0F 00         [24] 1433 	mov	_set_ui_state_PARM_2,#0x00
      0006B9 75 82 02         [24] 1434 	mov	dpl,#0x02
                                   1435 ;	../UI_Manager/ui.c:408: return;
      0006BC 02r0ErFA         [24] 1436 	ljmp	_set_ui_state
                                   1437 ;	../UI_Manager/ui.c:409: }
      0006BF                       1438 00105$:
                                   1439 ;	../UI_Manager/ui.c:411: if(Changed){
      0006BF E5*01            [12] 1440 	mov	a,_Changed
      0006C1 60 21            [24] 1441 	jz	00107$
                                   1442 ;	../UI_Manager/ui.c:412: Changed = 0x00;
      0006C3 75*01 00         [24] 1443 	mov	_Changed,#0x00
                                   1444 ;	../UI_Manager/ui.c:413: changed = 0xFF;
      0006C6 75*02 FF         [24] 1445 	mov	_changed,#0xff
                                   1446 ;	../UI_Manager/ui.c:415: exe_command(CLEAR_DISPLAY);
      0006C9 90 80 00         [24] 1447 	mov	dptr,#0x8000
      0006CC 12r00r00         [24] 1448 	lcall	_exe_command
                                   1449 ;	../UI_Manager/ui.c:417: write_string("Fog Level", sizeof("Fog Level"), 3, LINE_0, NOT_SELECTED);
      0006CF 75*00 0A         [24] 1450 	mov	_write_string_PARM_2,#0x0a
      0006D2 75*00 03         [24] 1451 	mov	_write_string_PARM_3,#0x03
      0006D5 75*00 00         [24] 1452 	mov	_write_string_PARM_4,#0x00
      0006D8 75*00 00         [24] 1453 	mov	_write_string_PARM_5,#0x00
      0006DB 90r00rC9         [24] 1454 	mov	dptr,#___str_17
      0006DE 75 F0 80         [24] 1455 	mov	b,#0x80
      0006E1 12r00r00         [24] 1456 	lcall	_write_string
      0006E4                       1457 00107$:
                                   1458 ;	../UI_Manager/ui.c:421: if(changed){
      0006E4 E5*02            [12] 1459 	mov	a,_changed
      0006E6 70 01            [24] 1460 	jnz	00157$
      0006E8 22               [24] 1461 	ret
      0006E9                       1462 00157$:
                                   1463 ;	../UI_Manager/ui.c:422: changed = 0x00;
      0006E9 75*02 00         [24] 1464 	mov	_changed,#0x00
                                   1465 ;	../UI_Manager/ui.c:424: switch (get_runtime_data(FOG_POWER_INDEX))
      0006EC 75 82 00         [24] 1466 	mov	dpl,#0x00
      0006EF 12r00r00         [24] 1467 	lcall	_get_runtime_data
      0006F2 AF 82            [24] 1468 	mov	r7,dpl
      0006F4 BF 00 02         [24] 1469 	cjne	r7,#0x00,00158$
      0006F7 80 0B            [24] 1470 	sjmp	00108$
      0006F9                       1471 00158$:
      0006F9 BF 01 02         [24] 1472 	cjne	r7,#0x01,00159$
      0006FC 80 33            [24] 1473 	sjmp	00109$
      0006FE                       1474 00159$:
      0006FE BF 02 02         [24] 1475 	cjne	r7,#0x02,00160$
      000701 80 67            [24] 1476 	sjmp	00110$
      000703                       1477 00160$:
      000703 22               [24] 1478 	ret
                                   1479 ;	../UI_Manager/ui.c:426: case OPTION_FOG_LOW:
      000704                       1480 00108$:
                                   1481 ;	../UI_Manager/ui.c:427: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_LOW), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000704 75 82 00         [24] 1482 	mov	dpl,#0x00
      000707 12r0Fr8E         [24] 1483 	lcall	_getString
      00070A AD 82            [24] 1484 	mov	r5,dpl
      00070C AE 83            [24] 1485 	mov	r6,dph
      00070E AF F0            [24] 1486 	mov	r7,b
      000710 75*00 10         [24] 1487 	mov	_write_string_PARM_2,#0x10
      000713 75*00 03         [24] 1488 	mov	_write_string_PARM_3,#0x03
      000716 75*00 01         [24] 1489 	mov	_write_string_PARM_4,#0x01
      000719 75*00 00         [24] 1490 	mov	_write_string_PARM_5,#0x00
      00071C 8D 82            [24] 1491 	mov	dpl,r5
      00071E 8E 83            [24] 1492 	mov	dph,r6
      000720 8F F0            [24] 1493 	mov	b,r7
      000722 12r00r00         [24] 1494 	lcall	_write_string
                                   1495 ;	../UI_Manager/ui.c:428: write_char(CHAR_LVL_1, 12, LINE_1);
      000725 75*00 0C         [24] 1496 	mov	_write_char_PARM_2,#0x0c
      000728 75*00 01         [24] 1497 	mov	_write_char_PARM_3,#0x01
      00072B 75 82 40         [24] 1498 	mov	dpl,#0x40
                                   1499 ;	../UI_Manager/ui.c:429: break;
      00072E 02r00r00         [24] 1500 	ljmp	_write_char
                                   1501 ;	../UI_Manager/ui.c:430: case OPTION_FOG_MEDIUM:
      000731                       1502 00109$:
                                   1503 ;	../UI_Manager/ui.c:431: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_MEDIUM), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000731 75 82 01         [24] 1504 	mov	dpl,#0x01
      000734 12r0Fr8E         [24] 1505 	lcall	_getString
      000737 AD 82            [24] 1506 	mov	r5,dpl
      000739 AE 83            [24] 1507 	mov	r6,dph
      00073B AF F0            [24] 1508 	mov	r7,b
      00073D 75*00 10         [24] 1509 	mov	_write_string_PARM_2,#0x10
      000740 75*00 03         [24] 1510 	mov	_write_string_PARM_3,#0x03
      000743 75*00 01         [24] 1511 	mov	_write_string_PARM_4,#0x01
      000746 75*00 00         [24] 1512 	mov	_write_string_PARM_5,#0x00
      000749 8D 82            [24] 1513 	mov	dpl,r5
      00074B 8E 83            [24] 1514 	mov	dph,r6
      00074D 8F F0            [24] 1515 	mov	b,r7
      00074F 12r00r00         [24] 1516 	lcall	_write_string
                                   1517 ;	../UI_Manager/ui.c:432: write_char(CHAR_LVL_1, 12, LINE_1);
      000752 75*00 0C         [24] 1518 	mov	_write_char_PARM_2,#0x0c
      000755 75*00 01         [24] 1519 	mov	_write_char_PARM_3,#0x01
      000758 75 82 40         [24] 1520 	mov	dpl,#0x40
      00075B 12r00r00         [24] 1521 	lcall	_write_char
                                   1522 ;	../UI_Manager/ui.c:433: write_char(CHAR_LVL_2, 13, LINE_1);
      00075E 75*00 0D         [24] 1523 	mov	_write_char_PARM_2,#0x0d
      000761 75*00 01         [24] 1524 	mov	_write_char_PARM_3,#0x01
      000764 75 82 C0         [24] 1525 	mov	dpl,#0xc0
                                   1526 ;	../UI_Manager/ui.c:434: break;
                                   1527 ;	../UI_Manager/ui.c:435: case OPTION_FOG_HIGH:
      000767 02r00r00         [24] 1528 	ljmp	_write_char
      00076A                       1529 00110$:
                                   1530 ;	../UI_Manager/ui.c:436: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_HIGH), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      00076A 75 82 02         [24] 1531 	mov	dpl,#0x02
      00076D 12r0Fr8E         [24] 1532 	lcall	_getString
      000770 AD 82            [24] 1533 	mov	r5,dpl
      000772 AE 83            [24] 1534 	mov	r6,dph
      000774 AF F0            [24] 1535 	mov	r7,b
      000776 75*00 10         [24] 1536 	mov	_write_string_PARM_2,#0x10
      000779 75*00 03         [24] 1537 	mov	_write_string_PARM_3,#0x03
      00077C 75*00 01         [24] 1538 	mov	_write_string_PARM_4,#0x01
      00077F 75*00 00         [24] 1539 	mov	_write_string_PARM_5,#0x00
      000782 8D 82            [24] 1540 	mov	dpl,r5
      000784 8E 83            [24] 1541 	mov	dph,r6
      000786 8F F0            [24] 1542 	mov	b,r7
      000788 12r00r00         [24] 1543 	lcall	_write_string
                                   1544 ;	../UI_Manager/ui.c:437: write_char(CHAR_LVL_1, 12, LINE_1);
      00078B 75*00 0C         [24] 1545 	mov	_write_char_PARM_2,#0x0c
      00078E 75*00 01         [24] 1546 	mov	_write_char_PARM_3,#0x01
      000791 75 82 40         [24] 1547 	mov	dpl,#0x40
      000794 12r00r00         [24] 1548 	lcall	_write_char
                                   1549 ;	../UI_Manager/ui.c:438: write_char(CHAR_LVL_2, 13, LINE_1);
      000797 75*00 0D         [24] 1550 	mov	_write_char_PARM_2,#0x0d
      00079A 75*00 01         [24] 1551 	mov	_write_char_PARM_3,#0x01
      00079D 75 82 C0         [24] 1552 	mov	dpl,#0xc0
      0007A0 12r00r00         [24] 1553 	lcall	_write_char
                                   1554 ;	../UI_Manager/ui.c:439: write_char(CHAR_LVL_3, 14, LINE_1);
      0007A3 75*00 0E         [24] 1555 	mov	_write_char_PARM_2,#0x0e
      0007A6 75*00 01         [24] 1556 	mov	_write_char_PARM_3,#0x01
      0007A9 75 82 20         [24] 1557 	mov	dpl,#0x20
                                   1558 ;	../UI_Manager/ui.c:441: }
                                   1559 ;	../UI_Manager/ui.c:444: }
      0007AC 02r00r00         [24] 1560 	ljmp	_write_char
                                   1561 ;------------------------------------------------------------
                                   1562 ;Allocation info for local variables in function 'fogIntervalPage'
                                   1563 ;------------------------------------------------------------
                                   1564 ;action                    Allocated to registers r7 
                                   1565 ;------------------------------------------------------------
                                   1566 ;	../UI_Manager/ui.c:446: void fogIntervalPage(uint8_t action){
                                   1567 ;	-----------------------------------------
                                   1568 ;	 function fogIntervalPage
                                   1569 ;	-----------------------------------------
      0007AF                       1570 _fogIntervalPage:
      0007AF AF 82            [24] 1571 	mov	r7,dpl
                                   1572 ;	../UI_Manager/ui.c:448: switch (action)
      0007B1 BF 01 02         [24] 1573 	cjne	r7,#0x01,00146$
      0007B4 80 44            [24] 1574 	sjmp	00106$
      0007B6                       1575 00146$:
      0007B6 BF 02 02         [24] 1576 	cjne	r7,#0x02,00147$
      0007B9 80 36            [24] 1577 	sjmp	00105$
      0007BB                       1578 00147$:
      0007BB BF 03 02         [24] 1579 	cjne	r7,#0x03,00148$
      0007BE 80 0F            [24] 1580 	sjmp	00102$
      0007C0                       1581 00148$:
      0007C0 BF 0B 02         [24] 1582 	cjne	r7,#0x0b,00149$
      0007C3 80 1B            [24] 1583 	sjmp	00104$
      0007C5                       1584 00149$:
      0007C5 BF 1F 02         [24] 1585 	cjne	r7,#0x1f,00150$
      0007C8 80 05            [24] 1586 	sjmp	00102$
      0007CA                       1587 00150$:
                                   1588 ;	../UI_Manager/ui.c:451: case BUTTON_UP:
      0007CA BF 6F 36         [24] 1589 	cjne	r7,#0x6f,00107$
      0007CD 80 11            [24] 1590 	sjmp	00104$
      0007CF                       1591 00102$:
                                   1592 ;	../UI_Manager/ui.c:452: set_runtime_data(FOG_INTERVAL_INDEX, INC, NULL);
      0007CF 75*00 01         [24] 1593 	mov	_set_runtime_data_PARM_2,#0x01
      0007D2 75*00 00         [24] 1594 	mov	_set_runtime_data_PARM_3,#0x00
      0007D5 75 82 02         [24] 1595 	mov	dpl,#0x02
      0007D8 12r00r00         [24] 1596 	lcall	_set_runtime_data
                                   1597 ;	../UI_Manager/ui.c:453: changed = 0xFF;
      0007DB 75*02 FF         [24] 1598 	mov	_changed,#0xff
                                   1599 ;	../UI_Manager/ui.c:454: break;
                                   1600 ;	../UI_Manager/ui.c:456: case BUTTON_DOWN:
      0007DE 80 23            [24] 1601 	sjmp	00107$
      0007E0                       1602 00104$:
                                   1603 ;	../UI_Manager/ui.c:457: set_runtime_data(FOG_INTERVAL_INDEX, DEC, NULL);
      0007E0 75*00 02         [24] 1604 	mov	_set_runtime_data_PARM_2,#0x02
      0007E3 75*00 00         [24] 1605 	mov	_set_runtime_data_PARM_3,#0x00
      0007E6 75 82 02         [24] 1606 	mov	dpl,#0x02
      0007E9 12r00r00         [24] 1607 	lcall	_set_runtime_data
                                   1608 ;	../UI_Manager/ui.c:458: changed = 0xFF;  
      0007EC 75*02 FF         [24] 1609 	mov	_changed,#0xff
                                   1610 ;	../UI_Manager/ui.c:459: break;
                                   1611 ;	../UI_Manager/ui.c:460: case BUTTON_FUNCTION:
      0007EF 80 12            [24] 1612 	sjmp	00107$
      0007F1                       1613 00105$:
                                   1614 ;	../UI_Manager/ui.c:461: set_ui_state(INC, NULL);
      0007F1 75*0F 00         [24] 1615 	mov	_set_ui_state_PARM_2,#0x00
      0007F4 75 82 01         [24] 1616 	mov	dpl,#0x01
                                   1617 ;	../UI_Manager/ui.c:462: return;
                                   1618 ;	../UI_Manager/ui.c:463: case BUTTON_TIMER:
      0007F7 02r0ErFA         [24] 1619 	ljmp	_set_ui_state
      0007FA                       1620 00106$:
                                   1621 ;	../UI_Manager/ui.c:464: set_ui_state(DEC, NULL);
      0007FA 75*0F 00         [24] 1622 	mov	_set_ui_state_PARM_2,#0x00
      0007FD 75 82 02         [24] 1623 	mov	dpl,#0x02
                                   1624 ;	../UI_Manager/ui.c:465: return;
                                   1625 ;	../UI_Manager/ui.c:466: }
      000800 02r0ErFA         [24] 1626 	ljmp	_set_ui_state
      000803                       1627 00107$:
                                   1628 ;	../UI_Manager/ui.c:468: if(Changed){
      000803 E5*01            [12] 1629 	mov	a,_Changed
      000805 60 36            [24] 1630 	jz	00109$
                                   1631 ;	../UI_Manager/ui.c:469: Changed = 0x00;
      000807 75*01 00         [24] 1632 	mov	_Changed,#0x00
                                   1633 ;	../UI_Manager/ui.c:470: changed = 0xFF;
      00080A 75*02 FF         [24] 1634 	mov	_changed,#0xff
                                   1635 ;	../UI_Manager/ui.c:472: exe_command(CLEAR_DISPLAY);
      00080D 90 80 00         [24] 1636 	mov	dptr,#0x8000
      000810 12r00r00         [24] 1637 	lcall	_exe_command
                                   1638 ;	../UI_Manager/ui.c:474: write_string("Fog Interval", sizeof("Fog Interval"), 2, LINE_0, NOT_SELECTED);
      000813 75*00 0D         [24] 1639 	mov	_write_string_PARM_2,#0x0d
      000816 75*00 02         [24] 1640 	mov	_write_string_PARM_3,#0x02
      000819 75*00 00         [24] 1641 	mov	_write_string_PARM_4,#0x00
      00081C 75*00 00         [24] 1642 	mov	_write_string_PARM_5,#0x00
      00081F 90r00rD3         [24] 1643 	mov	dptr,#___str_18
      000822 75 F0 80         [24] 1644 	mov	b,#0x80
      000825 12r00r00         [24] 1645 	lcall	_write_string
                                   1646 ;	../UI_Manager/ui.c:475: write_string("Seconds", sizeof("Seconds"), 7, LINE_1, NOT_SELECTED);
      000828 75*00 08         [24] 1647 	mov	_write_string_PARM_2,#0x08
      00082B 75*00 07         [24] 1648 	mov	_write_string_PARM_3,#0x07
      00082E 75*00 01         [24] 1649 	mov	_write_string_PARM_4,#0x01
      000831 75*00 00         [24] 1650 	mov	_write_string_PARM_5,#0x00
      000834 90r00rE0         [24] 1651 	mov	dptr,#___str_19
      000837 75 F0 80         [24] 1652 	mov	b,#0x80
      00083A 12r00r00         [24] 1653 	lcall	_write_string
      00083D                       1654 00109$:
                                   1655 ;	../UI_Manager/ui.c:479: if(changed){
      00083D E5*02            [12] 1656 	mov	a,_changed
      00083F 60 1C            [24] 1657 	jz	00112$
                                   1658 ;	../UI_Manager/ui.c:480: changed = 0x00;
      000841 75*02 00         [24] 1659 	mov	_changed,#0x00
                                   1660 ;	../UI_Manager/ui.c:482: write_number(get_runtime_data(FOG_INTERVAL_INDEX), 1, LINE_1, NOT_SELECTED);
      000844 75 82 02         [24] 1661 	mov	dpl,#0x02
      000847 12r00r00         [24] 1662 	lcall	_get_runtime_data
      00084A AF 82            [24] 1663 	mov	r7,dpl
      00084C 7E 00            [12] 1664 	mov	r6,#0x00
      00084E 75*00 01         [24] 1665 	mov	_write_number_PARM_2,#0x01
      000851 75*00 01         [24] 1666 	mov	_write_number_PARM_3,#0x01
                                   1667 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000854 8E*00            [24] 1668 	mov	_write_number_PARM_4,r6
      000856 8F 82            [24] 1669 	mov	dpl,r7
      000858 8E 83            [24] 1670 	mov	dph,r6
                                   1671 ;	../UI_Manager/ui.c:487: }
      00085A 02r00r00         [24] 1672 	ljmp	_write_number
      00085D                       1673 00112$:
      00085D 22               [24] 1674 	ret
                                   1675 ;------------------------------------------------------------
                                   1676 ;Allocation info for local variables in function 'fogDurationPage'
                                   1677 ;------------------------------------------------------------
                                   1678 ;action                    Allocated to registers r7 
                                   1679 ;------------------------------------------------------------
                                   1680 ;	../UI_Manager/ui.c:489: void fogDurationPage(uint8_t action){
                                   1681 ;	-----------------------------------------
                                   1682 ;	 function fogDurationPage
                                   1683 ;	-----------------------------------------
      00085E                       1684 _fogDurationPage:
      00085E AF 82            [24] 1685 	mov	r7,dpl
                                   1686 ;	../UI_Manager/ui.c:491: switch (action)
      000860 BF 01 02         [24] 1687 	cjne	r7,#0x01,00146$
      000863 80 44            [24] 1688 	sjmp	00106$
      000865                       1689 00146$:
      000865 BF 02 02         [24] 1690 	cjne	r7,#0x02,00147$
      000868 80 36            [24] 1691 	sjmp	00105$
      00086A                       1692 00147$:
      00086A BF 03 02         [24] 1693 	cjne	r7,#0x03,00148$
      00086D 80 0F            [24] 1694 	sjmp	00102$
      00086F                       1695 00148$:
      00086F BF 0B 02         [24] 1696 	cjne	r7,#0x0b,00149$
      000872 80 1B            [24] 1697 	sjmp	00104$
      000874                       1698 00149$:
      000874 BF 1F 02         [24] 1699 	cjne	r7,#0x1f,00150$
      000877 80 05            [24] 1700 	sjmp	00102$
      000879                       1701 00150$:
                                   1702 ;	../UI_Manager/ui.c:494: case BUTTON_UP:
      000879 BF 6F 36         [24] 1703 	cjne	r7,#0x6f,00107$
      00087C 80 11            [24] 1704 	sjmp	00104$
      00087E                       1705 00102$:
                                   1706 ;	../UI_Manager/ui.c:495: set_runtime_data(FOG_DURATION_INDEX, INC, NULL);
      00087E 75*00 01         [24] 1707 	mov	_set_runtime_data_PARM_2,#0x01
      000881 75*00 00         [24] 1708 	mov	_set_runtime_data_PARM_3,#0x00
      000884 75 82 01         [24] 1709 	mov	dpl,#0x01
      000887 12r00r00         [24] 1710 	lcall	_set_runtime_data
                                   1711 ;	../UI_Manager/ui.c:496: changed = 0xFF;
      00088A 75*02 FF         [24] 1712 	mov	_changed,#0xff
                                   1713 ;	../UI_Manager/ui.c:497: break;
                                   1714 ;	../UI_Manager/ui.c:499: case BUTTON_DOWN:
      00088D 80 23            [24] 1715 	sjmp	00107$
      00088F                       1716 00104$:
                                   1717 ;	../UI_Manager/ui.c:500: set_runtime_data(FOG_DURATION_INDEX, DEC, NULL);
      00088F 75*00 02         [24] 1718 	mov	_set_runtime_data_PARM_2,#0x02
      000892 75*00 00         [24] 1719 	mov	_set_runtime_data_PARM_3,#0x00
      000895 75 82 01         [24] 1720 	mov	dpl,#0x01
      000898 12r00r00         [24] 1721 	lcall	_set_runtime_data
                                   1722 ;	../UI_Manager/ui.c:501: changed = 0xFF;  
      00089B 75*02 FF         [24] 1723 	mov	_changed,#0xff
                                   1724 ;	../UI_Manager/ui.c:502: break;
                                   1725 ;	../UI_Manager/ui.c:503: case BUTTON_FUNCTION:
      00089E 80 12            [24] 1726 	sjmp	00107$
      0008A0                       1727 00105$:
                                   1728 ;	../UI_Manager/ui.c:504: set_ui_state(INC, NULL);
      0008A0 75*0F 00         [24] 1729 	mov	_set_ui_state_PARM_2,#0x00
      0008A3 75 82 01         [24] 1730 	mov	dpl,#0x01
                                   1731 ;	../UI_Manager/ui.c:505: return;
                                   1732 ;	../UI_Manager/ui.c:506: case BUTTON_TIMER:
      0008A6 02r0ErFA         [24] 1733 	ljmp	_set_ui_state
      0008A9                       1734 00106$:
                                   1735 ;	../UI_Manager/ui.c:507: set_ui_state(DEC, NULL);
      0008A9 75*0F 00         [24] 1736 	mov	_set_ui_state_PARM_2,#0x00
      0008AC 75 82 02         [24] 1737 	mov	dpl,#0x02
                                   1738 ;	../UI_Manager/ui.c:508: return;
                                   1739 ;	../UI_Manager/ui.c:509: }
      0008AF 02r0ErFA         [24] 1740 	ljmp	_set_ui_state
      0008B2                       1741 00107$:
                                   1742 ;	../UI_Manager/ui.c:511: if(Changed){
      0008B2 E5*01            [12] 1743 	mov	a,_Changed
      0008B4 60 36            [24] 1744 	jz	00109$
                                   1745 ;	../UI_Manager/ui.c:512: Changed = 0x00;
      0008B6 75*01 00         [24] 1746 	mov	_Changed,#0x00
                                   1747 ;	../UI_Manager/ui.c:513: changed = 0xFF;
      0008B9 75*02 FF         [24] 1748 	mov	_changed,#0xff
                                   1749 ;	../UI_Manager/ui.c:515: exe_command(CLEAR_DISPLAY);
      0008BC 90 80 00         [24] 1750 	mov	dptr,#0x8000
      0008BF 12r00r00         [24] 1751 	lcall	_exe_command
                                   1752 ;	../UI_Manager/ui.c:517: write_string("Fog Duration", sizeof("Fog Duration"), 2, LINE_0, NOT_SELECTED);
      0008C2 75*00 0D         [24] 1753 	mov	_write_string_PARM_2,#0x0d
      0008C5 75*00 02         [24] 1754 	mov	_write_string_PARM_3,#0x02
      0008C8 75*00 00         [24] 1755 	mov	_write_string_PARM_4,#0x00
      0008CB 75*00 00         [24] 1756 	mov	_write_string_PARM_5,#0x00
      0008CE 90r00rE8         [24] 1757 	mov	dptr,#___str_20
      0008D1 75 F0 80         [24] 1758 	mov	b,#0x80
      0008D4 12r00r00         [24] 1759 	lcall	_write_string
                                   1760 ;	../UI_Manager/ui.c:518: write_string("Seconds", sizeof("Seconds"), 7, LINE_1, NOT_SELECTED);
      0008D7 75*00 08         [24] 1761 	mov	_write_string_PARM_2,#0x08
      0008DA 75*00 07         [24] 1762 	mov	_write_string_PARM_3,#0x07
      0008DD 75*00 01         [24] 1763 	mov	_write_string_PARM_4,#0x01
      0008E0 75*00 00         [24] 1764 	mov	_write_string_PARM_5,#0x00
      0008E3 90r00rE0         [24] 1765 	mov	dptr,#___str_19
      0008E6 75 F0 80         [24] 1766 	mov	b,#0x80
      0008E9 12r00r00         [24] 1767 	lcall	_write_string
      0008EC                       1768 00109$:
                                   1769 ;	../UI_Manager/ui.c:522: if(changed){
      0008EC E5*02            [12] 1770 	mov	a,_changed
      0008EE 60 1C            [24] 1771 	jz	00112$
                                   1772 ;	../UI_Manager/ui.c:523: changed = 0x00;
      0008F0 75*02 00         [24] 1773 	mov	_changed,#0x00
                                   1774 ;	../UI_Manager/ui.c:525: write_number(get_runtime_data(FOG_DURATION_INDEX), 1, LINE_1, NOT_SELECTED);
      0008F3 75 82 01         [24] 1775 	mov	dpl,#0x01
      0008F6 12r00r00         [24] 1776 	lcall	_get_runtime_data
      0008F9 AF 82            [24] 1777 	mov	r7,dpl
      0008FB 7E 00            [12] 1778 	mov	r6,#0x00
      0008FD 75*00 01         [24] 1779 	mov	_write_number_PARM_2,#0x01
      000900 75*00 01         [24] 1780 	mov	_write_number_PARM_3,#0x01
                                   1781 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000903 8E*00            [24] 1782 	mov	_write_number_PARM_4,r6
      000905 8F 82            [24] 1783 	mov	dpl,r7
      000907 8E 83            [24] 1784 	mov	dph,r6
                                   1785 ;	../UI_Manager/ui.c:528: }
      000909 02r00r00         [24] 1786 	ljmp	_write_number
      00090C                       1787 00112$:
      00090C 22               [24] 1788 	ret
                                   1789 ;------------------------------------------------------------
                                   1790 ;Allocation info for local variables in function 'macroPage'
                                   1791 ;------------------------------------------------------------
                                   1792 ;action                    Allocated to registers r7 
                                   1793 ;------------------------------------------------------------
                                   1794 ;	../UI_Manager/ui.c:530: void macroPage(uint8_t action){
                                   1795 ;	-----------------------------------------
                                   1796 ;	 function macroPage
                                   1797 ;	-----------------------------------------
      00090D                       1798 _macroPage:
      00090D AF 82            [24] 1799 	mov	r7,dpl
                                   1800 ;	../UI_Manager/ui.c:532: switch (action)
      00090F BF 01 02         [24] 1801 	cjne	r7,#0x01,00146$
      000912 80 44            [24] 1802 	sjmp	00106$
      000914                       1803 00146$:
      000914 BF 02 02         [24] 1804 	cjne	r7,#0x02,00147$
      000917 80 36            [24] 1805 	sjmp	00105$
      000919                       1806 00147$:
      000919 BF 03 02         [24] 1807 	cjne	r7,#0x03,00148$
      00091C 80 0F            [24] 1808 	sjmp	00102$
      00091E                       1809 00148$:
      00091E BF 0B 02         [24] 1810 	cjne	r7,#0x0b,00149$
      000921 80 1B            [24] 1811 	sjmp	00104$
      000923                       1812 00149$:
      000923 BF 1F 02         [24] 1813 	cjne	r7,#0x1f,00150$
      000926 80 05            [24] 1814 	sjmp	00102$
      000928                       1815 00150$:
                                   1816 ;	../UI_Manager/ui.c:535: case BUTTON_UP:
      000928 BF 6F 36         [24] 1817 	cjne	r7,#0x6f,00107$
      00092B 80 11            [24] 1818 	sjmp	00104$
      00092D                       1819 00102$:
                                   1820 ;	../UI_Manager/ui.c:536: set_runtime_data(MACRO_INDEX, INC, NULL);
      00092D 75*00 01         [24] 1821 	mov	_set_runtime_data_PARM_2,#0x01
      000930 75*00 00         [24] 1822 	mov	_set_runtime_data_PARM_3,#0x00
      000933 75 82 03         [24] 1823 	mov	dpl,#0x03
      000936 12r00r00         [24] 1824 	lcall	_set_runtime_data
                                   1825 ;	../UI_Manager/ui.c:537: changed = 0xFF;
      000939 75*02 FF         [24] 1826 	mov	_changed,#0xff
                                   1827 ;	../UI_Manager/ui.c:538: break;
                                   1828 ;	../UI_Manager/ui.c:540: case BUTTON_DOWN:
      00093C 80 23            [24] 1829 	sjmp	00107$
      00093E                       1830 00104$:
                                   1831 ;	../UI_Manager/ui.c:541: set_runtime_data(MACRO_INDEX, DEC, NULL);
      00093E 75*00 02         [24] 1832 	mov	_set_runtime_data_PARM_2,#0x02
      000941 75*00 00         [24] 1833 	mov	_set_runtime_data_PARM_3,#0x00
      000944 75 82 03         [24] 1834 	mov	dpl,#0x03
      000947 12r00r00         [24] 1835 	lcall	_set_runtime_data
                                   1836 ;	../UI_Manager/ui.c:542: changed = 0xFF;  
      00094A 75*02 FF         [24] 1837 	mov	_changed,#0xff
                                   1838 ;	../UI_Manager/ui.c:543: break;
                                   1839 ;	../UI_Manager/ui.c:544: case BUTTON_FUNCTION:
      00094D 80 12            [24] 1840 	sjmp	00107$
      00094F                       1841 00105$:
                                   1842 ;	../UI_Manager/ui.c:545: set_ui_state(INC, NULL);
      00094F 75*0F 00         [24] 1843 	mov	_set_ui_state_PARM_2,#0x00
      000952 75 82 01         [24] 1844 	mov	dpl,#0x01
                                   1845 ;	../UI_Manager/ui.c:546: return;
                                   1846 ;	../UI_Manager/ui.c:547: case BUTTON_TIMER:
      000955 02r0ErFA         [24] 1847 	ljmp	_set_ui_state
      000958                       1848 00106$:
                                   1849 ;	../UI_Manager/ui.c:548: set_ui_state(DEC, NULL);
      000958 75*0F 00         [24] 1850 	mov	_set_ui_state_PARM_2,#0x00
      00095B 75 82 02         [24] 1851 	mov	dpl,#0x02
                                   1852 ;	../UI_Manager/ui.c:549: return;
                                   1853 ;	../UI_Manager/ui.c:550: }
      00095E 02r0ErFA         [24] 1854 	ljmp	_set_ui_state
      000961                       1855 00107$:
                                   1856 ;	../UI_Manager/ui.c:552: if(Changed){
      000961 E5*01            [12] 1857 	mov	a,_Changed
      000963 60 21            [24] 1858 	jz	00109$
                                   1859 ;	../UI_Manager/ui.c:553: Changed = 0x00;
      000965 75*01 00         [24] 1860 	mov	_Changed,#0x00
                                   1861 ;	../UI_Manager/ui.c:554: changed = 0xFF;
      000968 75*02 FF         [24] 1862 	mov	_changed,#0xff
                                   1863 ;	../UI_Manager/ui.c:556: exe_command(CLEAR_DISPLAY);
      00096B 90 80 00         [24] 1864 	mov	dptr,#0x8000
      00096E 12r00r00         [24] 1865 	lcall	_exe_command
                                   1866 ;	../UI_Manager/ui.c:558: write_string("Macros", sizeof("Macros"), 4, LINE_0, NOT_SELECTED);
      000971 75*00 07         [24] 1867 	mov	_write_string_PARM_2,#0x07
      000974 75*00 04         [24] 1868 	mov	_write_string_PARM_3,#0x04
      000977 75*00 00         [24] 1869 	mov	_write_string_PARM_4,#0x00
      00097A 75*00 00         [24] 1870 	mov	_write_string_PARM_5,#0x00
      00097D 90r00rF5         [24] 1871 	mov	dptr,#___str_21
      000980 75 F0 80         [24] 1872 	mov	b,#0x80
      000983 12r00r00         [24] 1873 	lcall	_write_string
      000986                       1874 00109$:
                                   1875 ;	../UI_Manager/ui.c:562: if(changed){
      000986 E5*02            [12] 1876 	mov	a,_changed
      000988 60 2E            [24] 1877 	jz	00112$
                                   1878 ;	../UI_Manager/ui.c:563: changed = 0x00;
      00098A 75*02 00         [24] 1879 	mov	_changed,#0x00
                                   1880 ;	../UI_Manager/ui.c:565: write_string(getString(get_runtime_data(MACRO_INDEX) + MACRO_STRING_OFFSET), LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      00098D 75 82 03         [24] 1881 	mov	dpl,#0x03
      000990 12r00r00         [24] 1882 	lcall	_get_runtime_data
      000993 AF 82            [24] 1883 	mov	r7,dpl
      000995 74 14            [12] 1884 	mov	a,#0x14
      000997 2F               [12] 1885 	add	a,r7
      000998 F5 82            [12] 1886 	mov	dpl,a
      00099A 12r0Fr8E         [24] 1887 	lcall	_getString
      00099D AD 82            [24] 1888 	mov	r5,dpl
      00099F AE 83            [24] 1889 	mov	r6,dph
      0009A1 AF F0            [24] 1890 	mov	r7,b
      0009A3 75*00 10         [24] 1891 	mov	_write_string_PARM_2,#0x10
      0009A6 75*00 06         [24] 1892 	mov	_write_string_PARM_3,#0x06
      0009A9 75*00 01         [24] 1893 	mov	_write_string_PARM_4,#0x01
      0009AC 75*00 00         [24] 1894 	mov	_write_string_PARM_5,#0x00
      0009AF 8D 82            [24] 1895 	mov	dpl,r5
      0009B1 8E 83            [24] 1896 	mov	dph,r6
      0009B3 8F F0            [24] 1897 	mov	b,r7
                                   1898 ;	../UI_Manager/ui.c:568: }
      0009B5 02r00r00         [24] 1899 	ljmp	_write_string
      0009B8                       1900 00112$:
      0009B8 22               [24] 1901 	ret
                                   1902 ;------------------------------------------------------------
                                   1903 ;Allocation info for local variables in function 'macroSpeedPage'
                                   1904 ;------------------------------------------------------------
                                   1905 ;action                    Allocated to registers r7 
                                   1906 ;------------------------------------------------------------
                                   1907 ;	../UI_Manager/ui.c:570: void macroSpeedPage(uint8_t action){
                                   1908 ;	-----------------------------------------
                                   1909 ;	 function macroSpeedPage
                                   1910 ;	-----------------------------------------
      0009B9                       1911 _macroSpeedPage:
      0009B9 AF 82            [24] 1912 	mov	r7,dpl
                                   1913 ;	../UI_Manager/ui.c:572: switch (action)
      0009BB BF 01 02         [24] 1914 	cjne	r7,#0x01,00153$
      0009BE 80 44            [24] 1915 	sjmp	00106$
      0009C0                       1916 00153$:
      0009C0 BF 02 02         [24] 1917 	cjne	r7,#0x02,00154$
      0009C3 80 36            [24] 1918 	sjmp	00105$
      0009C5                       1919 00154$:
      0009C5 BF 03 02         [24] 1920 	cjne	r7,#0x03,00155$
      0009C8 80 0F            [24] 1921 	sjmp	00102$
      0009CA                       1922 00155$:
      0009CA BF 0B 02         [24] 1923 	cjne	r7,#0x0b,00156$
      0009CD 80 1B            [24] 1924 	sjmp	00104$
      0009CF                       1925 00156$:
      0009CF BF 1F 02         [24] 1926 	cjne	r7,#0x1f,00157$
      0009D2 80 05            [24] 1927 	sjmp	00102$
      0009D4                       1928 00157$:
                                   1929 ;	../UI_Manager/ui.c:575: case BUTTON_UP:
      0009D4 BF 6F 36         [24] 1930 	cjne	r7,#0x6f,00107$
      0009D7 80 11            [24] 1931 	sjmp	00104$
      0009D9                       1932 00102$:
                                   1933 ;	../UI_Manager/ui.c:576: set_runtime_data(MACRO_SPEED_INDEX, INC, NULL);
      0009D9 75*00 01         [24] 1934 	mov	_set_runtime_data_PARM_2,#0x01
      0009DC 75*00 00         [24] 1935 	mov	_set_runtime_data_PARM_3,#0x00
      0009DF 75 82 04         [24] 1936 	mov	dpl,#0x04
      0009E2 12r00r00         [24] 1937 	lcall	_set_runtime_data
                                   1938 ;	../UI_Manager/ui.c:577: changed = 0xFF;
      0009E5 75*02 FF         [24] 1939 	mov	_changed,#0xff
                                   1940 ;	../UI_Manager/ui.c:578: break;
                                   1941 ;	../UI_Manager/ui.c:580: case BUTTON_DOWN:
      0009E8 80 23            [24] 1942 	sjmp	00107$
      0009EA                       1943 00104$:
                                   1944 ;	../UI_Manager/ui.c:581: set_runtime_data(MACRO_SPEED_INDEX, DEC, NULL);
      0009EA 75*00 02         [24] 1945 	mov	_set_runtime_data_PARM_2,#0x02
      0009ED 75*00 00         [24] 1946 	mov	_set_runtime_data_PARM_3,#0x00
      0009F0 75 82 04         [24] 1947 	mov	dpl,#0x04
      0009F3 12r00r00         [24] 1948 	lcall	_set_runtime_data
                                   1949 ;	../UI_Manager/ui.c:582: changed = 0xFF;  
      0009F6 75*02 FF         [24] 1950 	mov	_changed,#0xff
                                   1951 ;	../UI_Manager/ui.c:583: break;
                                   1952 ;	../UI_Manager/ui.c:584: case BUTTON_FUNCTION:
      0009F9 80 12            [24] 1953 	sjmp	00107$
      0009FB                       1954 00105$:
                                   1955 ;	../UI_Manager/ui.c:585: set_ui_state(INC, NULL);
      0009FB 75*0F 00         [24] 1956 	mov	_set_ui_state_PARM_2,#0x00
      0009FE 75 82 01         [24] 1957 	mov	dpl,#0x01
                                   1958 ;	../UI_Manager/ui.c:586: return;
      000A01 02r0ErFA         [24] 1959 	ljmp	_set_ui_state
                                   1960 ;	../UI_Manager/ui.c:587: case BUTTON_TIMER:
      000A04                       1961 00106$:
                                   1962 ;	../UI_Manager/ui.c:588: set_ui_state(DEC, NULL);
      000A04 75*0F 00         [24] 1963 	mov	_set_ui_state_PARM_2,#0x00
      000A07 75 82 02         [24] 1964 	mov	dpl,#0x02
                                   1965 ;	../UI_Manager/ui.c:589: return;
      000A0A 02r0ErFA         [24] 1966 	ljmp	_set_ui_state
                                   1967 ;	../UI_Manager/ui.c:590: }
      000A0D                       1968 00107$:
                                   1969 ;	../UI_Manager/ui.c:592: if(Changed){
      000A0D E5*01            [12] 1970 	mov	a,_Changed
      000A0F 60 21            [24] 1971 	jz	00109$
                                   1972 ;	../UI_Manager/ui.c:593: Changed = 0x00;
      000A11 75*01 00         [24] 1973 	mov	_Changed,#0x00
                                   1974 ;	../UI_Manager/ui.c:594: changed = 0xFF;
      000A14 75*02 FF         [24] 1975 	mov	_changed,#0xff
                                   1976 ;	../UI_Manager/ui.c:596: exe_command(CLEAR_DISPLAY);
      000A17 90 80 00         [24] 1977 	mov	dptr,#0x8000
      000A1A 12r00r00         [24] 1978 	lcall	_exe_command
                                   1979 ;	../UI_Manager/ui.c:598: write_string("Macro Speed", sizeof("Macro Speed"), 3, LINE_0, NOT_SELECTED);
      000A1D 75*00 0C         [24] 1980 	mov	_write_string_PARM_2,#0x0c
      000A20 75*00 03         [24] 1981 	mov	_write_string_PARM_3,#0x03
      000A23 75*00 00         [24] 1982 	mov	_write_string_PARM_4,#0x00
      000A26 75*00 00         [24] 1983 	mov	_write_string_PARM_5,#0x00
      000A29 90r00rFC         [24] 1984 	mov	dptr,#___str_22
      000A2C 75 F0 80         [24] 1985 	mov	b,#0x80
      000A2F 12r00r00         [24] 1986 	lcall	_write_string
      000A32                       1987 00109$:
                                   1988 ;	../UI_Manager/ui.c:602: if(changed){
      000A32 E5*02            [12] 1989 	mov	a,_changed
      000A34 60 4F            [24] 1990 	jz	00115$
                                   1991 ;	../UI_Manager/ui.c:603: changed = 0x00;
      000A36 75*02 00         [24] 1992 	mov	_changed,#0x00
                                   1993 ;	../UI_Manager/ui.c:605: if(get_runtime_data(MACRO_SPEED_INDEX) == 0){
      000A39 75 82 04         [24] 1994 	mov	dpl,#0x04
      000A3C 12r00r00         [24] 1995 	lcall	_get_runtime_data
      000A3F E5 82            [12] 1996 	mov	a,dpl
                                   1997 ;	../UI_Manager/ui.c:606: write_string("Off", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000A41 70 14            [24] 1998 	jnz	00111$
      000A43 75*00 10         [24] 1999 	mov	_write_string_PARM_2,#0x10
      000A46 75*00 06         [24] 2000 	mov	_write_string_PARM_3,#0x06
      000A49 75*00 01         [24] 2001 	mov	_write_string_PARM_4,#0x01
      000A4C F5*00            [12] 2002 	mov	_write_string_PARM_5,a
      000A4E 90r01r08         [24] 2003 	mov	dptr,#___str_23
      000A51 75 F0 80         [24] 2004 	mov	b,#0x80
      000A54 02r00r00         [24] 2005 	ljmp	_write_string
      000A57                       2006 00111$:
                                   2007 ;	../UI_Manager/ui.c:608: write_string("", LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000A57 75*00 10         [24] 2008 	mov	_write_string_PARM_2,#0x10
      000A5A 75*00 03         [24] 2009 	mov	_write_string_PARM_3,#0x03
      000A5D 75*00 01         [24] 2010 	mov	_write_string_PARM_4,#0x01
      000A60 75*00 00         [24] 2011 	mov	_write_string_PARM_5,#0x00
      000A63 90r01r0C         [24] 2012 	mov	dptr,#___str_24
      000A66 75 F0 80         [24] 2013 	mov	b,#0x80
      000A69 12r00r00         [24] 2014 	lcall	_write_string
                                   2015 ;	../UI_Manager/ui.c:609: write_number(get_runtime_data(MACRO_SPEED_INDEX), 5, LINE_1, NOT_SELECTED);
      000A6C 75 82 04         [24] 2016 	mov	dpl,#0x04
      000A6F 12r00r00         [24] 2017 	lcall	_get_runtime_data
      000A72 AF 82            [24] 2018 	mov	r7,dpl
      000A74 7E 00            [12] 2019 	mov	r6,#0x00
      000A76 75*00 05         [24] 2020 	mov	_write_number_PARM_2,#0x05
      000A79 75*00 01         [24] 2021 	mov	_write_number_PARM_3,#0x01
                                   2022 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000A7C 8E*00            [24] 2023 	mov	_write_number_PARM_4,r6
      000A7E 8F 82            [24] 2024 	mov	dpl,r7
      000A80 8E 83            [24] 2025 	mov	dph,r6
                                   2026 ;	../UI_Manager/ui.c:613: }
      000A82 02r00r00         [24] 2027 	ljmp	_write_number
      000A85                       2028 00115$:
      000A85 22               [24] 2029 	ret
                                   2030 ;------------------------------------------------------------
                                   2031 ;Allocation info for local variables in function 'colorPage'
                                   2032 ;------------------------------------------------------------
                                   2033 ;action                    Allocated to registers r7 
                                   2034 ;index                     Allocated to registers r6 
                                   2035 ;------------------------------------------------------------
                                   2036 ;	../UI_Manager/ui.c:615: void colorPage(uint8_t action){
                                   2037 ;	-----------------------------------------
                                   2038 ;	 function colorPage
                                   2039 ;	-----------------------------------------
      000A86                       2040 _colorPage:
      000A86 AF 82            [24] 2041 	mov	r7,dpl
                                   2042 ;	../UI_Manager/ui.c:616: uint8_t index = 0;
      000A88 7E 00            [12] 2043 	mov	r6,#0x00
                                   2044 ;	../UI_Manager/ui.c:618: switch (State)
      000A8A AD*00            [24] 2045 	mov	r5,_State
      000A8C BD 06 02         [24] 2046 	cjne	r5,#0x06,00174$
      000A8F 80 0F            [24] 2047 	sjmp	00101$
      000A91                       2048 00174$:
      000A91 BD 07 02         [24] 2049 	cjne	r5,#0x07,00175$
      000A94 80 0E            [24] 2050 	sjmp	00102$
      000A96                       2051 00175$:
      000A96 BD 08 02         [24] 2052 	cjne	r5,#0x08,00176$
      000A99 80 0D            [24] 2053 	sjmp	00103$
      000A9B                       2054 00176$:
                                   2055 ;	../UI_Manager/ui.c:620: case MANUAL_RED_STATE:
      000A9B BD 09 10         [24] 2056 	cjne	r5,#0x09,00105$
      000A9E 80 0C            [24] 2057 	sjmp	00104$
      000AA0                       2058 00101$:
                                   2059 ;	../UI_Manager/ui.c:621: index = RED_INDEX;
      000AA0 7E 05            [12] 2060 	mov	r6,#0x05
                                   2061 ;	../UI_Manager/ui.c:622: break;
                                   2062 ;	../UI_Manager/ui.c:623: case MANUAL_GREEN_STATE:
      000AA2 80 0A            [24] 2063 	sjmp	00105$
      000AA4                       2064 00102$:
                                   2065 ;	../UI_Manager/ui.c:624: index = GREEN_INDEX;
      000AA4 7E 06            [12] 2066 	mov	r6,#0x06
                                   2067 ;	../UI_Manager/ui.c:625: break;
                                   2068 ;	../UI_Manager/ui.c:626: case MANUAL_BLUE_STATE:
      000AA6 80 06            [24] 2069 	sjmp	00105$
      000AA8                       2070 00103$:
                                   2071 ;	../UI_Manager/ui.c:627: index = BLUE_INDEX;
      000AA8 7E 07            [12] 2072 	mov	r6,#0x07
                                   2073 ;	../UI_Manager/ui.c:628: break;
                                   2074 ;	../UI_Manager/ui.c:629: case MANUAL_STROBE_STATE:
      000AAA 80 02            [24] 2075 	sjmp	00105$
      000AAC                       2076 00104$:
                                   2077 ;	../UI_Manager/ui.c:630: index = STROBE_INDEX;
      000AAC 7E 08            [12] 2078 	mov	r6,#0x08
                                   2079 ;	../UI_Manager/ui.c:632: }
      000AAE                       2080 00105$:
                                   2081 ;	../UI_Manager/ui.c:634: switch (action)
      000AAE BF 01 02         [24] 2082 	cjne	r7,#0x01,00178$
      000AB1 80 4A            [24] 2083 	sjmp	00111$
      000AB3                       2084 00178$:
      000AB3 BF 02 02         [24] 2085 	cjne	r7,#0x02,00179$
      000AB6 80 3C            [24] 2086 	sjmp	00110$
      000AB8                       2087 00179$:
      000AB8 BF 03 02         [24] 2088 	cjne	r7,#0x03,00180$
      000ABB 80 0F            [24] 2089 	sjmp	00107$
      000ABD                       2090 00180$:
      000ABD BF 0B 02         [24] 2091 	cjne	r7,#0x0b,00181$
      000AC0 80 1E            [24] 2092 	sjmp	00109$
      000AC2                       2093 00181$:
      000AC2 BF 1F 02         [24] 2094 	cjne	r7,#0x1f,00182$
      000AC5 80 05            [24] 2095 	sjmp	00107$
      000AC7                       2096 00182$:
                                   2097 ;	../UI_Manager/ui.c:637: case BUTTON_UP:
      000AC7 BF 6F 3C         [24] 2098 	cjne	r7,#0x6f,00112$
      000ACA 80 14            [24] 2099 	sjmp	00109$
      000ACC                       2100 00107$:
                                   2101 ;	../UI_Manager/ui.c:638: set_runtime_data(index, INC, NULL);
      000ACC 75*00 01         [24] 2102 	mov	_set_runtime_data_PARM_2,#0x01
      000ACF 75*00 00         [24] 2103 	mov	_set_runtime_data_PARM_3,#0x00
      000AD2 8E 82            [24] 2104 	mov	dpl,r6
      000AD4 C0 06            [24] 2105 	push	ar6
      000AD6 12r00r00         [24] 2106 	lcall	_set_runtime_data
      000AD9 D0 06            [24] 2107 	pop	ar6
                                   2108 ;	../UI_Manager/ui.c:639: changed = 0xFF;
      000ADB 75*02 FF         [24] 2109 	mov	_changed,#0xff
                                   2110 ;	../UI_Manager/ui.c:640: break;
                                   2111 ;	../UI_Manager/ui.c:642: case BUTTON_DOWN:
      000ADE 80 26            [24] 2112 	sjmp	00112$
      000AE0                       2113 00109$:
                                   2114 ;	../UI_Manager/ui.c:643: set_runtime_data(index, DEC, NULL);
      000AE0 75*00 02         [24] 2115 	mov	_set_runtime_data_PARM_2,#0x02
      000AE3 75*00 00         [24] 2116 	mov	_set_runtime_data_PARM_3,#0x00
      000AE6 8E 82            [24] 2117 	mov	dpl,r6
      000AE8 C0 06            [24] 2118 	push	ar6
      000AEA 12r00r00         [24] 2119 	lcall	_set_runtime_data
      000AED D0 06            [24] 2120 	pop	ar6
                                   2121 ;	../UI_Manager/ui.c:644: changed = 0xFF;  
      000AEF 75*02 FF         [24] 2122 	mov	_changed,#0xff
                                   2123 ;	../UI_Manager/ui.c:645: break;
                                   2124 ;	../UI_Manager/ui.c:646: case BUTTON_FUNCTION:
      000AF2 80 12            [24] 2125 	sjmp	00112$
      000AF4                       2126 00110$:
                                   2127 ;	../UI_Manager/ui.c:647: set_ui_state(INC, NULL);
      000AF4 75*0F 00         [24] 2128 	mov	_set_ui_state_PARM_2,#0x00
      000AF7 75 82 01         [24] 2129 	mov	dpl,#0x01
                                   2130 ;	../UI_Manager/ui.c:648: return;
      000AFA 02r0ErFA         [24] 2131 	ljmp	_set_ui_state
                                   2132 ;	../UI_Manager/ui.c:649: case BUTTON_TIMER:
      000AFD                       2133 00111$:
                                   2134 ;	../UI_Manager/ui.c:650: set_ui_state(DEC, NULL);
      000AFD 75*0F 00         [24] 2135 	mov	_set_ui_state_PARM_2,#0x00
      000B00 75 82 02         [24] 2136 	mov	dpl,#0x02
                                   2137 ;	../UI_Manager/ui.c:651: return;
      000B03 02r0ErFA         [24] 2138 	ljmp	_set_ui_state
                                   2139 ;	../UI_Manager/ui.c:652: }
      000B06                       2140 00112$:
                                   2141 ;	../UI_Manager/ui.c:654: if(Changed){
      000B06 E5*01            [12] 2142 	mov	a,_Changed
      000B08 60 35            [24] 2143 	jz	00114$
                                   2144 ;	../UI_Manager/ui.c:655: Changed = 0x00;
      000B0A 75*01 00         [24] 2145 	mov	_Changed,#0x00
                                   2146 ;	../UI_Manager/ui.c:656: changed = 0xFF;
      000B0D 75*02 FF         [24] 2147 	mov	_changed,#0xff
                                   2148 ;	../UI_Manager/ui.c:658: exe_command(CLEAR_DISPLAY);
      000B10 90 80 00         [24] 2149 	mov	dptr,#0x8000
      000B13 C0 06            [24] 2150 	push	ar6
      000B15 12r00r00         [24] 2151 	lcall	_exe_command
                                   2152 ;	../UI_Manager/ui.c:660: write_string(getString(COLOR_STRING_OFFSET + State), LINE_LENGTH, 3, LINE_0, NOT_SELECTED);
      000B18 AF*00            [24] 2153 	mov	r7,_State
      000B1A 74 C8            [12] 2154 	mov	a,#0xc8
      000B1C 2F               [12] 2155 	add	a,r7
      000B1D F5 82            [12] 2156 	mov	dpl,a
      000B1F 12r0Fr8E         [24] 2157 	lcall	_getString
      000B22 AC 82            [24] 2158 	mov	r4,dpl
      000B24 AD 83            [24] 2159 	mov	r5,dph
      000B26 AF F0            [24] 2160 	mov	r7,b
      000B28 75*00 10         [24] 2161 	mov	_write_string_PARM_2,#0x10
      000B2B 75*00 03         [24] 2162 	mov	_write_string_PARM_3,#0x03
      000B2E 75*00 00         [24] 2163 	mov	_write_string_PARM_4,#0x00
      000B31 75*00 00         [24] 2164 	mov	_write_string_PARM_5,#0x00
      000B34 8C 82            [24] 2165 	mov	dpl,r4
      000B36 8D 83            [24] 2166 	mov	dph,r5
      000B38 8F F0            [24] 2167 	mov	b,r7
      000B3A 12r00r00         [24] 2168 	lcall	_write_string
      000B3D D0 06            [24] 2169 	pop	ar6
      000B3F                       2170 00114$:
                                   2171 ;	../UI_Manager/ui.c:664: if(changed){
      000B3F E5*02            [12] 2172 	mov	a,_changed
      000B41 60 55            [24] 2173 	jz	00120$
                                   2174 ;	../UI_Manager/ui.c:665: changed = 0x00;
      000B43 75*02 00         [24] 2175 	mov	_changed,#0x00
                                   2176 ;	../UI_Manager/ui.c:667: if(get_runtime_data(index) == 0){
      000B46 8E 82            [24] 2177 	mov	dpl,r6
      000B48 C0 06            [24] 2178 	push	ar6
      000B4A 12r00r00         [24] 2179 	lcall	_get_runtime_data
      000B4D E5 82            [12] 2180 	mov	a,dpl
      000B4F D0 06            [24] 2181 	pop	ar6
                                   2182 ;	../UI_Manager/ui.c:668: write_string("Off", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000B51 70 14            [24] 2183 	jnz	00116$
      000B53 75*00 10         [24] 2184 	mov	_write_string_PARM_2,#0x10
      000B56 75*00 06         [24] 2185 	mov	_write_string_PARM_3,#0x06
      000B59 75*00 01         [24] 2186 	mov	_write_string_PARM_4,#0x01
      000B5C F5*00            [12] 2187 	mov	_write_string_PARM_5,a
      000B5E 90r01r08         [24] 2188 	mov	dptr,#___str_23
      000B61 75 F0 80         [24] 2189 	mov	b,#0x80
      000B64 02r00r00         [24] 2190 	ljmp	_write_string
      000B67                       2191 00116$:
                                   2192 ;	../UI_Manager/ui.c:670: write_string("", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      000B67 75*00 10         [24] 2193 	mov	_write_string_PARM_2,#0x10
      000B6A 75*00 00         [24] 2194 	mov	_write_string_PARM_3,#0x00
      000B6D 75*00 01         [24] 2195 	mov	_write_string_PARM_4,#0x01
      000B70 75*00 00         [24] 2196 	mov	_write_string_PARM_5,#0x00
      000B73 90r01r0C         [24] 2197 	mov	dptr,#___str_24
      000B76 75 F0 80         [24] 2198 	mov	b,#0x80
      000B79 C0 06            [24] 2199 	push	ar6
      000B7B 12r00r00         [24] 2200 	lcall	_write_string
      000B7E D0 06            [24] 2201 	pop	ar6
                                   2202 ;	../UI_Manager/ui.c:671: write_number(get_runtime_data(index), 6, LINE_1, NOT_SELECTED);
      000B80 8E 82            [24] 2203 	mov	dpl,r6
      000B82 12r00r00         [24] 2204 	lcall	_get_runtime_data
      000B85 AF 82            [24] 2205 	mov	r7,dpl
      000B87 7E 00            [12] 2206 	mov	r6,#0x00
      000B89 75*00 06         [24] 2207 	mov	_write_number_PARM_2,#0x06
      000B8C 75*00 01         [24] 2208 	mov	_write_number_PARM_3,#0x01
                                   2209 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000B8F 8E*00            [24] 2210 	mov	_write_number_PARM_4,r6
      000B91 8F 82            [24] 2211 	mov	dpl,r7
      000B93 8E 83            [24] 2212 	mov	dph,r6
                                   2213 ;	../UI_Manager/ui.c:674: }
      000B95 02r00r00         [24] 2214 	ljmp	_write_number
      000B98                       2215 00120$:
      000B98 22               [24] 2216 	ret
                                   2217 ;------------------------------------------------------------
                                   2218 ;Allocation info for local variables in function 'remotePage'
                                   2219 ;------------------------------------------------------------
                                   2220 ;action                    Allocated to registers r7 
                                   2221 ;remoteNumber              Allocated to registers r6 
                                   2222 ;index                     Allocated to registers r5 
                                   2223 ;------------------------------------------------------------
                                   2224 ;	../UI_Manager/ui.c:676: void remotePage(uint8_t action){
                                   2225 ;	-----------------------------------------
                                   2226 ;	 function remotePage
                                   2227 ;	-----------------------------------------
      000B99                       2228 _remotePage:
      000B99 AF 82            [24] 2229 	mov	r7,dpl
                                   2230 ;	../UI_Manager/ui.c:677: uint8_t remoteNumber = 0;
      000B9B 7E 00            [12] 2231 	mov	r6,#0x00
                                   2232 ;	../UI_Manager/ui.c:678: uint8_t index = 0;
      000B9D 7D 00            [12] 2233 	mov	r5,#0x00
                                   2234 ;	../UI_Manager/ui.c:680: switch (State)
      000B9F AC*00            [24] 2235 	mov	r4,_State
      000BA1 BC 0A 02         [24] 2236 	cjne	r4,#0x0a,00168$
      000BA4 80 0A            [24] 2237 	sjmp	00101$
      000BA6                       2238 00168$:
      000BA6 BC 0B 02         [24] 2239 	cjne	r4,#0x0b,00169$
      000BA9 80 0B            [24] 2240 	sjmp	00102$
      000BAB                       2241 00169$:
                                   2242 ;	../UI_Manager/ui.c:682: case MANUAL_REMOTE_ACTION_4_STATE:
      000BAB BC 0C 12         [24] 2243 	cjne	r4,#0x0c,00104$
      000BAE 80 0C            [24] 2244 	sjmp	00103$
      000BB0                       2245 00101$:
                                   2246 ;	../UI_Manager/ui.c:683: index = R4_INDEX;
      000BB0 7D 09            [12] 2247 	mov	r5,#0x09
                                   2248 ;	../UI_Manager/ui.c:684: remoteNumber = 4;
      000BB2 7E 04            [12] 2249 	mov	r6,#0x04
                                   2250 ;	../UI_Manager/ui.c:685: break;
                                   2251 ;	../UI_Manager/ui.c:686: case MANUAL_REMOTE_ACTION_5_STATE:
      000BB4 80 0A            [24] 2252 	sjmp	00104$
      000BB6                       2253 00102$:
                                   2254 ;	../UI_Manager/ui.c:687: index = R5_INDEX;
      000BB6 7D 0A            [12] 2255 	mov	r5,#0x0a
                                   2256 ;	../UI_Manager/ui.c:688: remoteNumber = 5;
      000BB8 7E 05            [12] 2257 	mov	r6,#0x05
                                   2258 ;	../UI_Manager/ui.c:689: break;
                                   2259 ;	../UI_Manager/ui.c:690: case MANUAL_REMOTE_ACTION_6_STATE:
      000BBA 80 04            [24] 2260 	sjmp	00104$
      000BBC                       2261 00103$:
                                   2262 ;	../UI_Manager/ui.c:691: index = R6_INDEX;
      000BBC 7D 0B            [12] 2263 	mov	r5,#0x0b
                                   2264 ;	../UI_Manager/ui.c:692: remoteNumber = 6;
      000BBE 7E 06            [12] 2265 	mov	r6,#0x06
                                   2266 ;	../UI_Manager/ui.c:694: }
      000BC0                       2267 00104$:
                                   2268 ;	../UI_Manager/ui.c:696: switch (action)
      000BC0 BF 01 02         [24] 2269 	cjne	r7,#0x01,00171$
      000BC3 80 48            [24] 2270 	sjmp	00108$
      000BC5                       2271 00171$:
      000BC5 BF 02 02         [24] 2272 	cjne	r7,#0x02,00172$
      000BC8 80 3A            [24] 2273 	sjmp	00107$
      000BCA                       2274 00172$:
      000BCA BF 03 02         [24] 2275 	cjne	r7,#0x03,00173$
      000BCD 80 05            [24] 2276 	sjmp	00105$
      000BCF                       2277 00173$:
                                   2278 ;	../UI_Manager/ui.c:698: case BUTTON_UP:
      000BCF BF 0B 44         [24] 2279 	cjne	r7,#0x0b,00109$
      000BD2 80 18            [24] 2280 	sjmp	00106$
      000BD4                       2281 00105$:
                                   2282 ;	../UI_Manager/ui.c:699: set_runtime_data(index, INC, NULL);
      000BD4 75*00 01         [24] 2283 	mov	_set_runtime_data_PARM_2,#0x01
      000BD7 75*00 00         [24] 2284 	mov	_set_runtime_data_PARM_3,#0x00
      000BDA 8D 82            [24] 2285 	mov	dpl,r5
      000BDC C0 06            [24] 2286 	push	ar6
      000BDE C0 05            [24] 2287 	push	ar5
      000BE0 12r00r00         [24] 2288 	lcall	_set_runtime_data
      000BE3 D0 05            [24] 2289 	pop	ar5
      000BE5 D0 06            [24] 2290 	pop	ar6
                                   2291 ;	../UI_Manager/ui.c:700: changed = 0xFF;
      000BE7 75*02 FF         [24] 2292 	mov	_changed,#0xff
                                   2293 ;	../UI_Manager/ui.c:701: break;
                                   2294 ;	../UI_Manager/ui.c:702: case BUTTON_DOWN:
      000BEA 80 2A            [24] 2295 	sjmp	00109$
      000BEC                       2296 00106$:
                                   2297 ;	../UI_Manager/ui.c:703: set_runtime_data(index, DEC, NULL);
      000BEC 75*00 02         [24] 2298 	mov	_set_runtime_data_PARM_2,#0x02
      000BEF 75*00 00         [24] 2299 	mov	_set_runtime_data_PARM_3,#0x00
      000BF2 8D 82            [24] 2300 	mov	dpl,r5
      000BF4 C0 06            [24] 2301 	push	ar6
      000BF6 C0 05            [24] 2302 	push	ar5
      000BF8 12r00r00         [24] 2303 	lcall	_set_runtime_data
      000BFB D0 05            [24] 2304 	pop	ar5
      000BFD D0 06            [24] 2305 	pop	ar6
                                   2306 ;	../UI_Manager/ui.c:704: changed = 0xFF;  
      000BFF 75*02 FF         [24] 2307 	mov	_changed,#0xff
                                   2308 ;	../UI_Manager/ui.c:705: break;
                                   2309 ;	../UI_Manager/ui.c:706: case BUTTON_FUNCTION:
      000C02 80 12            [24] 2310 	sjmp	00109$
      000C04                       2311 00107$:
                                   2312 ;	../UI_Manager/ui.c:707: set_ui_state(INC, NULL);
      000C04 75*0F 00         [24] 2313 	mov	_set_ui_state_PARM_2,#0x00
      000C07 75 82 01         [24] 2314 	mov	dpl,#0x01
                                   2315 ;	../UI_Manager/ui.c:708: return;
      000C0A 02r0ErFA         [24] 2316 	ljmp	_set_ui_state
                                   2317 ;	../UI_Manager/ui.c:709: case BUTTON_TIMER:
      000C0D                       2318 00108$:
                                   2319 ;	../UI_Manager/ui.c:710: set_ui_state(DEC, NULL);
      000C0D 75*0F 00         [24] 2320 	mov	_set_ui_state_PARM_2,#0x00
      000C10 75 82 02         [24] 2321 	mov	dpl,#0x02
                                   2322 ;	../UI_Manager/ui.c:711: return;
      000C13 02r0ErFA         [24] 2323 	ljmp	_set_ui_state
                                   2324 ;	../UI_Manager/ui.c:712: }
      000C16                       2325 00109$:
                                   2326 ;	../UI_Manager/ui.c:714: if(Changed){
      000C16 E5*01            [12] 2327 	mov	a,_Changed
      000C18 60 6C            [24] 2328 	jz	00115$
                                   2329 ;	../UI_Manager/ui.c:715: Changed = 0x00;
      000C1A 75*01 00         [24] 2330 	mov	_Changed,#0x00
                                   2331 ;	../UI_Manager/ui.c:716: changed = 0xFF;
      000C1D 75*02 FF         [24] 2332 	mov	_changed,#0xff
                                   2333 ;	../UI_Manager/ui.c:718: exe_command(CLEAR_DISPLAY);
      000C20 90 80 00         [24] 2334 	mov	dptr,#0x8000
      000C23 C0 06            [24] 2335 	push	ar6
      000C25 C0 05            [24] 2336 	push	ar5
      000C27 12r00r00         [24] 2337 	lcall	_exe_command
                                   2338 ;	../UI_Manager/ui.c:720: write_string("Remote X Action", sizeof("Remote X Action"), 1, LINE_0, NOT_SELECTED);
      000C2A 75*00 10         [24] 2339 	mov	_write_string_PARM_2,#0x10
      000C2D 75*00 01         [24] 2340 	mov	_write_string_PARM_3,#0x01
      000C30 75*00 00         [24] 2341 	mov	_write_string_PARM_4,#0x00
      000C33 75*00 00         [24] 2342 	mov	_write_string_PARM_5,#0x00
      000C36 90r01r0D         [24] 2343 	mov	dptr,#___str_25
      000C39 75 F0 80         [24] 2344 	mov	b,#0x80
      000C3C 12r00r00         [24] 2345 	lcall	_write_string
      000C3F D0 05            [24] 2346 	pop	ar5
      000C41 D0 06            [24] 2347 	pop	ar6
                                   2348 ;	../UI_Manager/ui.c:721: switch (remoteNumber)
      000C43 BE 04 02         [24] 2349 	cjne	r6,#0x04,00176$
      000C46 80 0A            [24] 2350 	sjmp	00110$
      000C48                       2351 00176$:
      000C48 BE 05 02         [24] 2352 	cjne	r6,#0x05,00177$
      000C4B 80 17            [24] 2353 	sjmp	00111$
      000C4D                       2354 00177$:
                                   2355 ;	../UI_Manager/ui.c:723: case 4:
      000C4D BE 06 36         [24] 2356 	cjne	r6,#0x06,00115$
      000C50 80 24            [24] 2357 	sjmp	00112$
      000C52                       2358 00110$:
                                   2359 ;	../UI_Manager/ui.c:724: write_char(CHAR_4, 8, LINE_0);
      000C52 75*00 08         [24] 2360 	mov	_write_char_PARM_2,#0x08
      000C55 75*00 00         [24] 2361 	mov	_write_char_PARM_3,#0x00
      000C58 75 82 2C         [24] 2362 	mov	dpl,#0x2c
      000C5B C0 05            [24] 2363 	push	ar5
      000C5D 12r00r00         [24] 2364 	lcall	_write_char
      000C60 D0 05            [24] 2365 	pop	ar5
                                   2366 ;	../UI_Manager/ui.c:725: break;
                                   2367 ;	../UI_Manager/ui.c:726: case 5:
      000C62 80 22            [24] 2368 	sjmp	00115$
      000C64                       2369 00111$:
                                   2370 ;	../UI_Manager/ui.c:727: write_char(CHAR_5, 8, LINE_0);
      000C64 75*00 08         [24] 2371 	mov	_write_char_PARM_2,#0x08
      000C67 75*00 00         [24] 2372 	mov	_write_char_PARM_3,#0x00
      000C6A 75 82 AC         [24] 2373 	mov	dpl,#0xac
      000C6D C0 05            [24] 2374 	push	ar5
      000C6F 12r00r00         [24] 2375 	lcall	_write_char
      000C72 D0 05            [24] 2376 	pop	ar5
                                   2377 ;	../UI_Manager/ui.c:728: break;
                                   2378 ;	../UI_Manager/ui.c:729: case 6:
      000C74 80 10            [24] 2379 	sjmp	00115$
      000C76                       2380 00112$:
                                   2381 ;	../UI_Manager/ui.c:730: write_char(CHAR_6, 8, LINE_0);
      000C76 75*00 08         [24] 2382 	mov	_write_char_PARM_2,#0x08
      000C79 75*00 00         [24] 2383 	mov	_write_char_PARM_3,#0x00
      000C7C 75 82 6C         [24] 2384 	mov	dpl,#0x6c
      000C7F C0 05            [24] 2385 	push	ar5
      000C81 12r00r00         [24] 2386 	lcall	_write_char
      000C84 D0 05            [24] 2387 	pop	ar5
                                   2388 ;	../UI_Manager/ui.c:732: }
      000C86                       2389 00115$:
                                   2390 ;	../UI_Manager/ui.c:735: if(changed){
      000C86 E5*02            [12] 2391 	mov	a,_changed
      000C88 60 2D            [24] 2392 	jz	00118$
                                   2393 ;	../UI_Manager/ui.c:736: changed = 0x00;
      000C8A 75*02 00         [24] 2394 	mov	_changed,#0x00
                                   2395 ;	../UI_Manager/ui.c:737: write_string(getString(get_runtime_data(index) + WIRELESS_ACTION_STRING_OFFSET), LINE_LENGTH, 2, LINE_1, NOT_SELECTED);  
      000C8D 8D 82            [24] 2396 	mov	dpl,r5
      000C8F 12r00r00         [24] 2397 	lcall	_get_runtime_data
      000C92 AF 82            [24] 2398 	mov	r7,dpl
      000C94 74 3C            [12] 2399 	mov	a,#0x3c
      000C96 2F               [12] 2400 	add	a,r7
      000C97 F5 82            [12] 2401 	mov	dpl,a
      000C99 12r0Fr8E         [24] 2402 	lcall	_getString
      000C9C AD 82            [24] 2403 	mov	r5,dpl
      000C9E AE 83            [24] 2404 	mov	r6,dph
      000CA0 AF F0            [24] 2405 	mov	r7,b
      000CA2 75*00 10         [24] 2406 	mov	_write_string_PARM_2,#0x10
      000CA5 75*00 02         [24] 2407 	mov	_write_string_PARM_3,#0x02
      000CA8 75*00 01         [24] 2408 	mov	_write_string_PARM_4,#0x01
      000CAB 75*00 00         [24] 2409 	mov	_write_string_PARM_5,#0x00
      000CAE 8D 82            [24] 2410 	mov	dpl,r5
      000CB0 8E 83            [24] 2411 	mov	dph,r6
      000CB2 8F F0            [24] 2412 	mov	b,r7
                                   2413 ;	../UI_Manager/ui.c:739: }
      000CB4 02r00r00         [24] 2414 	ljmp	_write_string
      000CB7                       2415 00118$:
      000CB7 22               [24] 2416 	ret
                                   2417 ;------------------------------------------------------------
                                   2418 ;Allocation info for local variables in function 'saveLoadPage'
                                   2419 ;------------------------------------------------------------
                                   2420 ;slot                      Allocated with name '_saveLoadPage_slot_65536_141'
                                   2421 ;action                    Allocated to registers r7 
                                   2422 ;------------------------------------------------------------
                                   2423 ;	../UI_Manager/ui.c:741: void saveLoadPage(uint8_t action){
                                   2424 ;	-----------------------------------------
                                   2425 ;	 function saveLoadPage
                                   2426 ;	-----------------------------------------
      000CB8                       2427 _saveLoadPage:
      000CB8 AF 82            [24] 2428 	mov	r7,dpl
                                   2429 ;	../UI_Manager/ui.c:744: switch (action)
      000CBA BF 01 03         [24] 2430 	cjne	r7,#0x01,00161$
      000CBD 02r0Dr57         [24] 2431 	ljmp	00108$
      000CC0                       2432 00161$:
      000CC0 BF 02 03         [24] 2433 	cjne	r7,#0x02,00162$
      000CC3 02r0Dr4E         [24] 2434 	ljmp	00107$
      000CC6                       2435 00162$:
      000CC6 BF 03 03         [24] 2436 	cjne	r7,#0x03,00163$
      000CC9 02r0Dr40         [24] 2437 	ljmp	00105$
      000CCC                       2438 00163$:
      000CCC BF 0B 03         [24] 2439 	cjne	r7,#0x0b,00164$
      000CCF 02r0Dr47         [24] 2440 	ljmp	00106$
      000CD2                       2441 00164$:
      000CD2 BF 1E 02         [24] 2442 	cjne	r7,#0x1e,00165$
      000CD5 80 03            [24] 2443 	sjmp	00166$
      000CD7                       2444 00165$:
      000CD7 02r0Dr60         [24] 2445 	ljmp	00109$
      000CDA                       2446 00166$:
                                   2447 ;	../UI_Manager/ui.c:747: save_load_settings(slot % (SLOT_COUNT - 1), (State == MANUAL_SAVE_SETTINGS_STATE) ? SAVE : LOAD);
      000CDA 75 F0 03         [24] 2448 	mov	b,#0x03
      000CDD E5*0E            [12] 2449 	mov	a,_saveLoadPage_slot_65536_141
      000CDF 84               [48] 2450 	div	ab
      000CE0 AF F0            [24] 2451 	mov	r7,b
      000CE2 74 0D            [12] 2452 	mov	a,#0x0d
      000CE4 B5*00 06         [24] 2453 	cjne	a,_State,00119$
      000CE7 7D 01            [12] 2454 	mov	r5,#0x01
      000CE9 7E 00            [12] 2455 	mov	r6,#0x00
      000CEB 80 04            [24] 2456 	sjmp	00120$
      000CED                       2457 00119$:
      000CED 7D 00            [12] 2458 	mov	r5,#0x00
      000CEF 7E 00            [12] 2459 	mov	r6,#0x00
      000CF1                       2460 00120$:
      000CF1 8D*00            [24] 2461 	mov	_save_load_settings_PARM_2,r5
      000CF3 8F 82            [24] 2462 	mov	dpl,r7
      000CF5 12r00r00         [24] 2463 	lcall	_save_load_settings
                                   2464 ;	../UI_Manager/ui.c:748: write_string("", LINE_LENGTH, 0, LINE_1, NOT_SELECTED); 
      000CF8 75*00 10         [24] 2465 	mov	_write_string_PARM_2,#0x10
      000CFB 75*00 00         [24] 2466 	mov	_write_string_PARM_3,#0x00
      000CFE 75*00 01         [24] 2467 	mov	_write_string_PARM_4,#0x01
      000D01 75*00 00         [24] 2468 	mov	_write_string_PARM_5,#0x00
      000D04 90r01r0C         [24] 2469 	mov	dptr,#___str_24
      000D07 75 F0 80         [24] 2470 	mov	b,#0x80
      000D0A 12r00r00         [24] 2471 	lcall	_write_string
                                   2472 ;	../UI_Manager/ui.c:750: if(State == MANUAL_SAVE_SETTINGS_STATE){
      000D0D 74 0D            [12] 2473 	mov	a,#0x0d
      000D0F B5*00 17         [24] 2474 	cjne	a,_State,00103$
                                   2475 ;	../UI_Manager/ui.c:751: write_string("Saved!", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000D12 75*00 10         [24] 2476 	mov	_write_string_PARM_2,#0x10
      000D15 75*00 06         [24] 2477 	mov	_write_string_PARM_3,#0x06
      000D18 75*00 01         [24] 2478 	mov	_write_string_PARM_4,#0x01
      000D1B 75*00 00         [24] 2479 	mov	_write_string_PARM_5,#0x00
      000D1E 90r01r1D         [24] 2480 	mov	dptr,#___str_26
      000D21 75 F0 80         [24] 2481 	mov	b,#0x80
      000D24 12r00r00         [24] 2482 	lcall	_write_string
      000D27 80 37            [24] 2483 	sjmp	00109$
      000D29                       2484 00103$:
                                   2485 ;	../UI_Manager/ui.c:753: write_string("Loaded!", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000D29 75*00 10         [24] 2486 	mov	_write_string_PARM_2,#0x10
      000D2C 75*00 06         [24] 2487 	mov	_write_string_PARM_3,#0x06
      000D2F 75*00 01         [24] 2488 	mov	_write_string_PARM_4,#0x01
      000D32 75*00 00         [24] 2489 	mov	_write_string_PARM_5,#0x00
      000D35 90r01r24         [24] 2490 	mov	dptr,#___str_27
      000D38 75 F0 80         [24] 2491 	mov	b,#0x80
      000D3B 12r00r00         [24] 2492 	lcall	_write_string
                                   2493 ;	../UI_Manager/ui.c:755: break;
                                   2494 ;	../UI_Manager/ui.c:756: case BUTTON_UP:
      000D3E 80 20            [24] 2495 	sjmp	00109$
      000D40                       2496 00105$:
                                   2497 ;	../UI_Manager/ui.c:757: slot++;
      000D40 05*0E            [12] 2498 	inc	_saveLoadPage_slot_65536_141
                                   2499 ;	../UI_Manager/ui.c:758: changed = 0xFF;
      000D42 75*02 FF         [24] 2500 	mov	_changed,#0xff
                                   2501 ;	../UI_Manager/ui.c:759: break;
                                   2502 ;	../UI_Manager/ui.c:760: case BUTTON_DOWN:
      000D45 80 19            [24] 2503 	sjmp	00109$
      000D47                       2504 00106$:
                                   2505 ;	../UI_Manager/ui.c:761: slot--;
      000D47 15*0E            [12] 2506 	dec	_saveLoadPage_slot_65536_141
                                   2507 ;	../UI_Manager/ui.c:762: changed = 0xFF;  
      000D49 75*02 FF         [24] 2508 	mov	_changed,#0xff
                                   2509 ;	../UI_Manager/ui.c:763: break;
                                   2510 ;	../UI_Manager/ui.c:764: case BUTTON_FUNCTION:
      000D4C 80 12            [24] 2511 	sjmp	00109$
      000D4E                       2512 00107$:
                                   2513 ;	../UI_Manager/ui.c:765: set_ui_state(INC, NULL);
      000D4E 75*0F 00         [24] 2514 	mov	_set_ui_state_PARM_2,#0x00
      000D51 75 82 01         [24] 2515 	mov	dpl,#0x01
                                   2516 ;	../UI_Manager/ui.c:766: return;
      000D54 02r0ErFA         [24] 2517 	ljmp	_set_ui_state
                                   2518 ;	../UI_Manager/ui.c:767: case BUTTON_TIMER:
      000D57                       2519 00108$:
                                   2520 ;	../UI_Manager/ui.c:768: set_ui_state(DEC, NULL);
      000D57 75*0F 00         [24] 2521 	mov	_set_ui_state_PARM_2,#0x00
      000D5A 75 82 02         [24] 2522 	mov	dpl,#0x02
                                   2523 ;	../UI_Manager/ui.c:769: return;
      000D5D 02r0ErFA         [24] 2524 	ljmp	_set_ui_state
                                   2525 ;	../UI_Manager/ui.c:770: }
      000D60                       2526 00109$:
                                   2527 ;	../UI_Manager/ui.c:772: if(Changed){
      000D60 E5*01            [12] 2528 	mov	a,_Changed
      000D62 60 3D            [24] 2529 	jz	00114$
                                   2530 ;	../UI_Manager/ui.c:773: Changed = 0x00;
      000D64 75*01 00         [24] 2531 	mov	_Changed,#0x00
                                   2532 ;	../UI_Manager/ui.c:774: changed = 0xFF;
      000D67 75*02 FF         [24] 2533 	mov	_changed,#0xff
                                   2534 ;	../UI_Manager/ui.c:776: exe_command(CLEAR_DISPLAY);
      000D6A 90 80 00         [24] 2535 	mov	dptr,#0x8000
      000D6D 12r00r00         [24] 2536 	lcall	_exe_command
                                   2537 ;	../UI_Manager/ui.c:778: if(State == MANUAL_SAVE_SETTINGS_STATE){
      000D70 74 0D            [12] 2538 	mov	a,#0x0d
      000D72 B5*00 17         [24] 2539 	cjne	a,_State,00111$
                                   2540 ;	../UI_Manager/ui.c:779: write_string("Save Settings", sizeof("Save Settings"), 2, LINE_0, NOT_SELECTED);
      000D75 75*00 0E         [24] 2541 	mov	_write_string_PARM_2,#0x0e
      000D78 75*00 02         [24] 2542 	mov	_write_string_PARM_3,#0x02
      000D7B 75*00 00         [24] 2543 	mov	_write_string_PARM_4,#0x00
      000D7E 75*00 00         [24] 2544 	mov	_write_string_PARM_5,#0x00
      000D81 90r01r2C         [24] 2545 	mov	dptr,#___str_28
      000D84 75 F0 80         [24] 2546 	mov	b,#0x80
      000D87 12r00r00         [24] 2547 	lcall	_write_string
      000D8A 80 15            [24] 2548 	sjmp	00114$
      000D8C                       2549 00111$:
                                   2550 ;	../UI_Manager/ui.c:781: write_string("Load Settings", sizeof("Load Settings"), 2, LINE_0, NOT_SELECTED);
      000D8C 75*00 0E         [24] 2551 	mov	_write_string_PARM_2,#0x0e
      000D8F 75*00 02         [24] 2552 	mov	_write_string_PARM_3,#0x02
      000D92 75*00 00         [24] 2553 	mov	_write_string_PARM_4,#0x00
      000D95 75*00 00         [24] 2554 	mov	_write_string_PARM_5,#0x00
      000D98 90r01r3A         [24] 2555 	mov	dptr,#___str_29
      000D9B 75 F0 80         [24] 2556 	mov	b,#0x80
      000D9E 12r00r00         [24] 2557 	lcall	_write_string
      000DA1                       2558 00114$:
                                   2559 ;	../UI_Manager/ui.c:786: if(changed){
      000DA1 E5*02            [12] 2560 	mov	a,_changed
      000DA3 60 2E            [24] 2561 	jz	00117$
                                   2562 ;	../UI_Manager/ui.c:787: changed = 0x00;
      000DA5 75*02 00         [24] 2563 	mov	_changed,#0x00
                                   2564 ;	../UI_Manager/ui.c:788: write_string(getString((slot % (SLOT_COUNT - 1)) + SAVE_LOAD_STRING_OFFSET), LINE_LENGTH, 4, LINE_1, NOT_SELECTED);  
      000DA8 75 F0 03         [24] 2565 	mov	b,#0x03
      000DAB E5*0E            [12] 2566 	mov	a,_saveLoadPage_slot_65536_141
      000DAD 84               [48] 2567 	div	ab
      000DAE AF F0            [24] 2568 	mov	r7,b
      000DB0 74 50            [12] 2569 	mov	a,#0x50
      000DB2 2F               [12] 2570 	add	a,r7
      000DB3 F5 82            [12] 2571 	mov	dpl,a
      000DB5 12r0Fr8E         [24] 2572 	lcall	_getString
      000DB8 AD 82            [24] 2573 	mov	r5,dpl
      000DBA AE 83            [24] 2574 	mov	r6,dph
      000DBC AF F0            [24] 2575 	mov	r7,b
      000DBE 75*00 10         [24] 2576 	mov	_write_string_PARM_2,#0x10
      000DC1 75*00 04         [24] 2577 	mov	_write_string_PARM_3,#0x04
      000DC4 75*00 01         [24] 2578 	mov	_write_string_PARM_4,#0x01
      000DC7 75*00 00         [24] 2579 	mov	_write_string_PARM_5,#0x00
      000DCA 8D 82            [24] 2580 	mov	dpl,r5
      000DCC 8E 83            [24] 2581 	mov	dph,r6
      000DCE 8F F0            [24] 2582 	mov	b,r7
                                   2583 ;	../UI_Manager/ui.c:791: }
      000DD0 02r00r00         [24] 2584 	ljmp	_write_string
      000DD3                       2585 00117$:
      000DD3 22               [24] 2586 	ret
                                   2587 ;------------------------------------------------------------
                                   2588 ;Allocation info for local variables in function 'dmxAddressPage'
                                   2589 ;------------------------------------------------------------
                                   2590 ;action                    Allocated to registers r7 
                                   2591 ;------------------------------------------------------------
                                   2592 ;	../UI_Manager/ui.c:793: void dmxAddressPage(uint8_t action){
                                   2593 ;	-----------------------------------------
                                   2594 ;	 function dmxAddressPage
                                   2595 ;	-----------------------------------------
      000DD4                       2596 _dmxAddressPage:
      000DD4 AF 82            [24] 2597 	mov	r7,dpl
                                   2598 ;	../UI_Manager/ui.c:795: switch (action)
      000DD6 BF 01 02         [24] 2599 	cjne	r7,#0x01,00146$
      000DD9 80 38            [24] 2600 	sjmp	00106$
      000DDB                       2601 00146$:
      000DDB BF 02 02         [24] 2602 	cjne	r7,#0x02,00147$
      000DDE 80 2A            [24] 2603 	sjmp	00105$
      000DE0                       2604 00147$:
      000DE0 BF 03 02         [24] 2605 	cjne	r7,#0x03,00148$
      000DE3 80 0F            [24] 2606 	sjmp	00102$
      000DE5                       2607 00148$:
      000DE5 BF 0B 02         [24] 2608 	cjne	r7,#0x0b,00149$
      000DE8 80 15            [24] 2609 	sjmp	00104$
      000DEA                       2610 00149$:
      000DEA BF 1F 02         [24] 2611 	cjne	r7,#0x1f,00150$
      000DED 80 05            [24] 2612 	sjmp	00102$
      000DEF                       2613 00150$:
                                   2614 ;	../UI_Manager/ui.c:798: case BUTTON_UP:
      000DEF BF 6F 2A         [24] 2615 	cjne	r7,#0x6f,00107$
      000DF2 80 0B            [24] 2616 	sjmp	00104$
      000DF4                       2617 00102$:
                                   2618 ;	../UI_Manager/ui.c:799: set_dmx_address(INC);
      000DF4 75 82 01         [24] 2619 	mov	dpl,#0x01
      000DF7 12r00r00         [24] 2620 	lcall	_set_dmx_address
                                   2621 ;	../UI_Manager/ui.c:800: changed = 0xFF;
      000DFA 75*02 FF         [24] 2622 	mov	_changed,#0xff
                                   2623 ;	../UI_Manager/ui.c:801: break;
                                   2624 ;	../UI_Manager/ui.c:803: case BUTTON_DOWN:
      000DFD 80 1D            [24] 2625 	sjmp	00107$
      000DFF                       2626 00104$:
                                   2627 ;	../UI_Manager/ui.c:804: set_dmx_address(DEC);
      000DFF 75 82 02         [24] 2628 	mov	dpl,#0x02
      000E02 12r00r00         [24] 2629 	lcall	_set_dmx_address
                                   2630 ;	../UI_Manager/ui.c:805: changed = 0xFF;  
      000E05 75*02 FF         [24] 2631 	mov	_changed,#0xff
                                   2632 ;	../UI_Manager/ui.c:806: break;
                                   2633 ;	../UI_Manager/ui.c:807: case BUTTON_FUNCTION:
      000E08 80 12            [24] 2634 	sjmp	00107$
      000E0A                       2635 00105$:
                                   2636 ;	../UI_Manager/ui.c:808: set_ui_state(INC, NULL);
      000E0A 75*0F 00         [24] 2637 	mov	_set_ui_state_PARM_2,#0x00
      000E0D 75 82 01         [24] 2638 	mov	dpl,#0x01
                                   2639 ;	../UI_Manager/ui.c:809: return;
                                   2640 ;	../UI_Manager/ui.c:810: case BUTTON_TIMER:
      000E10 02r0ErFA         [24] 2641 	ljmp	_set_ui_state
      000E13                       2642 00106$:
                                   2643 ;	../UI_Manager/ui.c:811: set_ui_state(DEC, NULL);
      000E13 75*0F 00         [24] 2644 	mov	_set_ui_state_PARM_2,#0x00
      000E16 75 82 02         [24] 2645 	mov	dpl,#0x02
                                   2646 ;	../UI_Manager/ui.c:812: return;
                                   2647 ;	../UI_Manager/ui.c:813: }
      000E19 02r0ErFA         [24] 2648 	ljmp	_set_ui_state
      000E1C                       2649 00107$:
                                   2650 ;	../UI_Manager/ui.c:815: if(Changed){
      000E1C E5*01            [12] 2651 	mov	a,_Changed
      000E1E 60 21            [24] 2652 	jz	00109$
                                   2653 ;	../UI_Manager/ui.c:816: Changed = 0x00;
      000E20 75*01 00         [24] 2654 	mov	_Changed,#0x00
                                   2655 ;	../UI_Manager/ui.c:817: changed = 0xFF;
      000E23 75*02 FF         [24] 2656 	mov	_changed,#0xff
                                   2657 ;	../UI_Manager/ui.c:819: exe_command(CLEAR_DISPLAY);
      000E26 90 80 00         [24] 2658 	mov	dptr,#0x8000
      000E29 12r00r00         [24] 2659 	lcall	_exe_command
                                   2660 ;	../UI_Manager/ui.c:821: write_string("DMX Address", sizeof("DMX Address"), 2, LINE_0, NOT_SELECTED);
      000E2C 75*00 0C         [24] 2661 	mov	_write_string_PARM_2,#0x0c
      000E2F 75*00 02         [24] 2662 	mov	_write_string_PARM_3,#0x02
      000E32 75*00 00         [24] 2663 	mov	_write_string_PARM_4,#0x00
      000E35 75*00 00         [24] 2664 	mov	_write_string_PARM_5,#0x00
      000E38 90r01r48         [24] 2665 	mov	dptr,#___str_30
      000E3B 75 F0 80         [24] 2666 	mov	b,#0x80
      000E3E 12r00r00         [24] 2667 	lcall	_write_string
      000E41                       2668 00109$:
                                   2669 ;	../UI_Manager/ui.c:824: if(changed){
      000E41 E5*02            [12] 2670 	mov	a,_changed
      000E43 60 12            [24] 2671 	jz	00112$
                                   2672 ;	../UI_Manager/ui.c:825: changed = 0x00;
      000E45 75*02 00         [24] 2673 	mov	_changed,#0x00
                                   2674 ;	../UI_Manager/ui.c:827: write_number(get_dmx_address(), 4, LINE_1, NOT_SELECTED);
      000E48 12r00r00         [24] 2675 	lcall	_get_dmx_address
      000E4B 75*00 04         [24] 2676 	mov	_write_number_PARM_2,#0x04
      000E4E 75*00 01         [24] 2677 	mov	_write_number_PARM_3,#0x01
      000E51 75*00 00         [24] 2678 	mov	_write_number_PARM_4,#0x00
                                   2679 ;	../UI_Manager/ui.c:830: }
      000E54 02r00r00         [24] 2680 	ljmp	_write_number
      000E57                       2681 00112$:
      000E57 22               [24] 2682 	ret
                                   2683 ;------------------------------------------------------------
                                   2684 ;Allocation info for local variables in function 'dmxChannelPage'
                                   2685 ;------------------------------------------------------------
                                   2686 ;action                    Allocated to registers r7 
                                   2687 ;------------------------------------------------------------
                                   2688 ;	../UI_Manager/ui.c:832: void dmxChannelPage(uint8_t action){
                                   2689 ;	-----------------------------------------
                                   2690 ;	 function dmxChannelPage
                                   2691 ;	-----------------------------------------
      000E58                       2692 _dmxChannelPage:
      000E58 AF 82            [24] 2693 	mov	r7,dpl
                                   2694 ;	../UI_Manager/ui.c:834: switch (action)
      000E5A BF 01 02         [24] 2695 	cjne	r7,#0x01,00136$
      000E5D 80 3A            [24] 2696 	sjmp	00104$
      000E5F                       2697 00136$:
      000E5F BF 02 02         [24] 2698 	cjne	r7,#0x02,00137$
      000E62 80 2C            [24] 2699 	sjmp	00103$
      000E64                       2700 00137$:
      000E64 BF 03 02         [24] 2701 	cjne	r7,#0x03,00138$
      000E67 80 05            [24] 2702 	sjmp	00101$
      000E69                       2703 00138$:
                                   2704 ;	../UI_Manager/ui.c:836: case BUTTON_UP:
      000E69 BF 0B 36         [24] 2705 	cjne	r7,#0x0b,00105$
      000E6C 80 11            [24] 2706 	sjmp	00102$
      000E6E                       2707 00101$:
                                   2708 ;	../UI_Manager/ui.c:837: set_runtime_data(MODE_INDEX, INC, NULL);
      000E6E 75*00 01         [24] 2709 	mov	_set_runtime_data_PARM_2,#0x01
      000E71 75*00 00         [24] 2710 	mov	_set_runtime_data_PARM_3,#0x00
      000E74 75 82 0E         [24] 2711 	mov	dpl,#0x0e
      000E77 12r00r00         [24] 2712 	lcall	_set_runtime_data
                                   2713 ;	../UI_Manager/ui.c:838: changed = 0xFF;
      000E7A 75*02 FF         [24] 2714 	mov	_changed,#0xff
                                   2715 ;	../UI_Manager/ui.c:839: break;
                                   2716 ;	../UI_Manager/ui.c:840: case BUTTON_DOWN:
      000E7D 80 23            [24] 2717 	sjmp	00105$
      000E7F                       2718 00102$:
                                   2719 ;	../UI_Manager/ui.c:841: set_runtime_data(MODE_INDEX, DEC, NULL);
      000E7F 75*00 02         [24] 2720 	mov	_set_runtime_data_PARM_2,#0x02
      000E82 75*00 00         [24] 2721 	mov	_set_runtime_data_PARM_3,#0x00
      000E85 75 82 0E         [24] 2722 	mov	dpl,#0x0e
      000E88 12r00r00         [24] 2723 	lcall	_set_runtime_data
                                   2724 ;	../UI_Manager/ui.c:842: changed = 0xFF;  
      000E8B 75*02 FF         [24] 2725 	mov	_changed,#0xff
                                   2726 ;	../UI_Manager/ui.c:843: break;
                                   2727 ;	../UI_Manager/ui.c:844: case BUTTON_FUNCTION:
      000E8E 80 12            [24] 2728 	sjmp	00105$
      000E90                       2729 00103$:
                                   2730 ;	../UI_Manager/ui.c:845: set_ui_state(INC, NULL);
      000E90 75*0F 00         [24] 2731 	mov	_set_ui_state_PARM_2,#0x00
      000E93 75 82 01         [24] 2732 	mov	dpl,#0x01
                                   2733 ;	../UI_Manager/ui.c:846: return;
                                   2734 ;	../UI_Manager/ui.c:847: case BUTTON_TIMER:
      000E96 02r0ErFA         [24] 2735 	ljmp	_set_ui_state
      000E99                       2736 00104$:
                                   2737 ;	../UI_Manager/ui.c:848: set_ui_state(DEC, NULL);
      000E99 75*0F 00         [24] 2738 	mov	_set_ui_state_PARM_2,#0x00
      000E9C 75 82 02         [24] 2739 	mov	dpl,#0x02
                                   2740 ;	../UI_Manager/ui.c:849: return;
                                   2741 ;	../UI_Manager/ui.c:850: }
      000E9F 02r0ErFA         [24] 2742 	ljmp	_set_ui_state
      000EA2                       2743 00105$:
                                   2744 ;	../UI_Manager/ui.c:852: if(Changed){
      000EA2 E5*01            [12] 2745 	mov	a,_Changed
      000EA4 60 21            [24] 2746 	jz	00107$
                                   2747 ;	../UI_Manager/ui.c:853: Changed = 0x00;
      000EA6 75*01 00         [24] 2748 	mov	_Changed,#0x00
                                   2749 ;	../UI_Manager/ui.c:854: changed = 0xFF;
      000EA9 75*02 FF         [24] 2750 	mov	_changed,#0xff
                                   2751 ;	../UI_Manager/ui.c:856: exe_command(CLEAR_DISPLAY);
      000EAC 90 80 00         [24] 2752 	mov	dptr,#0x8000
      000EAF 12r00r00         [24] 2753 	lcall	_exe_command
                                   2754 ;	../UI_Manager/ui.c:858: write_string("DMX Channel Mode", sizeof("DMX Channel Mode"), 0, LINE_0, NOT_SELECTED);
      000EB2 75*00 11         [24] 2755 	mov	_write_string_PARM_2,#0x11
      000EB5 75*00 00         [24] 2756 	mov	_write_string_PARM_3,#0x00
      000EB8 75*00 00         [24] 2757 	mov	_write_string_PARM_4,#0x00
      000EBB 75*00 00         [24] 2758 	mov	_write_string_PARM_5,#0x00
      000EBE 90r01r54         [24] 2759 	mov	dptr,#___str_31
      000EC1 75 F0 80         [24] 2760 	mov	b,#0x80
      000EC4 12r00r00         [24] 2761 	lcall	_write_string
      000EC7                       2762 00107$:
                                   2763 ;	../UI_Manager/ui.c:861: if(changed){
      000EC7 E5*02            [12] 2764 	mov	a,_changed
      000EC9 60 2E            [24] 2765 	jz	00110$
                                   2766 ;	../UI_Manager/ui.c:862: changed = 0x00;
      000ECB 75*02 00         [24] 2767 	mov	_changed,#0x00
                                   2768 ;	../UI_Manager/ui.c:864: write_string(getString(get_runtime_data(MODE_INDEX) + DMX_STRING_OFFSET), LINE_LENGTH, 1, LINE_1, NOT_SELECTED);
      000ECE 75 82 0E         [24] 2769 	mov	dpl,#0x0e
      000ED1 12r00r00         [24] 2770 	lcall	_get_runtime_data
      000ED4 AF 82            [24] 2771 	mov	r7,dpl
      000ED6 74 64            [12] 2772 	mov	a,#0x64
      000ED8 2F               [12] 2773 	add	a,r7
      000ED9 F5 82            [12] 2774 	mov	dpl,a
      000EDB 12r0Fr8E         [24] 2775 	lcall	_getString
      000EDE AD 82            [24] 2776 	mov	r5,dpl
      000EE0 AE 83            [24] 2777 	mov	r6,dph
      000EE2 AF F0            [24] 2778 	mov	r7,b
      000EE4 75*00 10         [24] 2779 	mov	_write_string_PARM_2,#0x10
      000EE7 75*00 01         [24] 2780 	mov	_write_string_PARM_3,#0x01
      000EEA 75*00 01         [24] 2781 	mov	_write_string_PARM_4,#0x01
      000EED 75*00 00         [24] 2782 	mov	_write_string_PARM_5,#0x00
      000EF0 8D 82            [24] 2783 	mov	dpl,r5
      000EF2 8E 83            [24] 2784 	mov	dph,r6
      000EF4 8F F0            [24] 2785 	mov	b,r7
                                   2786 ;	../UI_Manager/ui.c:867: }
      000EF6 02r00r00         [24] 2787 	ljmp	_write_string
      000EF9                       2788 00110$:
      000EF9 22               [24] 2789 	ret
                                   2790 ;------------------------------------------------------------
                                   2791 ;Allocation info for local variables in function 'set_ui_state'
                                   2792 ;------------------------------------------------------------
                                   2793 ;state                     Allocated with name '_set_ui_state_PARM_2'
                                   2794 ;inc                       Allocated to registers r7 
                                   2795 ;------------------------------------------------------------
                                   2796 ;	../UI_Manager/ui.c:869: void set_ui_state(uint8_t inc, uint8_t state){
                                   2797 ;	-----------------------------------------
                                   2798 ;	 function set_ui_state
                                   2799 ;	-----------------------------------------
      000EFA                       2800 _set_ui_state:
      000EFA AF 82            [24] 2801 	mov	r7,dpl
                                   2802 ;	../UI_Manager/ui.c:870: Changed = CHANGE_SCREEN_X;
      000EFC 75*01 FF         [24] 2803 	mov	_Changed,#0xff
                                   2804 ;	../UI_Manager/ui.c:872: switch (inc)
      000EFF BF 01 02         [24] 2805 	cjne	r7,#0x01,00187$
      000F02 80 3D            [24] 2806 	sjmp	00115$
      000F04                       2807 00187$:
      000F04 BF 02 6A         [24] 2808 	cjne	r7,#0x02,00127$
                                   2809 ;	../UI_Manager/ui.c:875: state = State;
      000F07 85*00*0F         [24] 2810 	mov	_set_ui_state_PARM_2,_State
                                   2811 ;	../UI_Manager/ui.c:876: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      000F0A 75 82 10         [24] 2812 	mov	dpl,#0x10
      000F0D 12r00r00         [24] 2813 	lcall	_get_runtime_data
      000F10 E5 82            [12] 2814 	mov	a,dpl
      000F12 70 17            [24] 2815 	jnz	00113$
                                   2816 ;	../UI_Manager/ui.c:877: if(state == IDLE_STATE){
      000F14 E5*0F            [12] 2817 	mov	a,_set_ui_state_PARM_2
      000F16 70 06            [24] 2818 	jnz	00105$
                                   2819 ;	../UI_Manager/ui.c:878: state = DMX_STATE_LOW;
      000F18 75*0F 14         [24] 2820 	mov	_set_ui_state_PARM_2,#0x14
      000F1B 02r0Fr86         [24] 2821 	ljmp	00132$
      000F1E                       2822 00105$:
                                   2823 ;	../UI_Manager/ui.c:879: } else if(++state > DMX_STATE_HIGH){
      000F1E 05*0F            [12] 2824 	inc	_set_ui_state_PARM_2
      000F20 E5*0F            [12] 2825 	mov	a,_set_ui_state_PARM_2
      000F22 24 EA            [12] 2826 	add	a,#0xff - 0x15
      000F24 50 60            [24] 2827 	jnc	00132$
                                   2828 ;	../UI_Manager/ui.c:880: state = IDLE_STATE;
      000F26 75*0F 00         [24] 2829 	mov	_set_ui_state_PARM_2,#0x00
      000F29 80 5B            [24] 2830 	sjmp	00132$
      000F2B                       2831 00113$:
                                   2832 ;	../UI_Manager/ui.c:883: if(state == IDLE_STATE){
      000F2B E5*0F            [12] 2833 	mov	a,_set_ui_state_PARM_2
      000F2D 70 05            [24] 2834 	jnz	00110$
                                   2835 ;	../UI_Manager/ui.c:884: state = IDLE_STATE + 1; 
      000F2F 75*0F 01         [24] 2836 	mov	_set_ui_state_PARM_2,#0x01
      000F32 80 52            [24] 2837 	sjmp	00132$
      000F34                       2838 00110$:
                                   2839 ;	../UI_Manager/ui.c:885: } else if(++state > MANUAL_STATE_HIGH){
      000F34 05*0F            [12] 2840 	inc	_set_ui_state_PARM_2
      000F36 E5*0F            [12] 2841 	mov	a,_set_ui_state_PARM_2
      000F38 24 F1            [12] 2842 	add	a,#0xff - 0x0e
      000F3A 50 4A            [24] 2843 	jnc	00132$
                                   2844 ;	../UI_Manager/ui.c:886: state = IDLE_STATE;
      000F3C 75*0F 00         [24] 2845 	mov	_set_ui_state_PARM_2,#0x00
                                   2846 ;	../UI_Manager/ui.c:889: break;
                                   2847 ;	../UI_Manager/ui.c:890: case INC:
      000F3F 80 45            [24] 2848 	sjmp	00132$
      000F41                       2849 00115$:
                                   2850 ;	../UI_Manager/ui.c:891: state = State;
      000F41 85*00*0F         [24] 2851 	mov	_set_ui_state_PARM_2,_State
                                   2852 ;	../UI_Manager/ui.c:892: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      000F44 75 82 10         [24] 2853 	mov	dpl,#0x10
      000F47 12r00r00         [24] 2854 	lcall	_get_runtime_data
      000F4A E5 82            [12] 2855 	mov	a,dpl
      000F4C 70 16            [24] 2856 	jnz	00125$
                                   2857 ;	../UI_Manager/ui.c:893: if(state == IDLE_STATE){
      000F4E E5*0F            [12] 2858 	mov	a,_set_ui_state_PARM_2
      000F50 70 05            [24] 2859 	jnz	00119$
                                   2860 ;	../UI_Manager/ui.c:894: state = DMX_STATE_HIGH;
      000F52 75*0F 15         [24] 2861 	mov	_set_ui_state_PARM_2,#0x15
      000F55 80 2F            [24] 2862 	sjmp	00132$
      000F57                       2863 00119$:
                                   2864 ;	../UI_Manager/ui.c:895: } else if(--state < DMX_STATE_LOW){
      000F57 15*0F            [12] 2865 	dec	_set_ui_state_PARM_2
      000F59 74 EC            [12] 2866 	mov	a,#0x100 - 0x14
      000F5B 25*0F            [12] 2867 	add	a,_set_ui_state_PARM_2
      000F5D 40 27            [24] 2868 	jc	00132$
                                   2869 ;	../UI_Manager/ui.c:896: state = IDLE_STATE;
      000F5F 75*0F 00         [24] 2870 	mov	_set_ui_state_PARM_2,#0x00
      000F62 80 22            [24] 2871 	sjmp	00132$
      000F64                       2872 00125$:
                                   2873 ;	../UI_Manager/ui.c:899: if(state == IDLE_STATE){
      000F64 E5*0F            [12] 2874 	mov	a,_set_ui_state_PARM_2
      000F66 70 05            [24] 2875 	jnz	00122$
                                   2876 ;	../UI_Manager/ui.c:900: state = MANUAL_STATE_HIGH; 
      000F68 75*0F 0E         [24] 2877 	mov	_set_ui_state_PARM_2,#0x0e
      000F6B 80 19            [24] 2878 	sjmp	00132$
      000F6D                       2879 00122$:
                                   2880 ;	../UI_Manager/ui.c:902: state--;
      000F6D 15*0F            [12] 2881 	dec	_set_ui_state_PARM_2
                                   2882 ;	../UI_Manager/ui.c:905: break;
                                   2883 ;	../UI_Manager/ui.c:906: default: 
      000F6F 80 15            [24] 2884 	sjmp	00132$
      000F71                       2885 00127$:
                                   2886 ;	../UI_Manager/ui.c:907: if(state <= MANUAL_STATE_HIGH || (state >= DMX_STATE_LOW && state <= DMX_STATE_HIGH)){
      000F71 E5*0F            [12] 2887 	mov	a,_set_ui_state_PARM_2
      000F73 24 F1            [12] 2888 	add	a,#0xff - 0x0e
      000F75 50 0C            [24] 2889 	jnc	00128$
      000F77 74 EC            [12] 2890 	mov	a,#0x100 - 0x14
      000F79 25*0F            [12] 2891 	add	a,_set_ui_state_PARM_2
      000F7B 50 09            [24] 2892 	jnc	00132$
      000F7D E5*0F            [12] 2893 	mov	a,_set_ui_state_PARM_2
      000F7F 24 EA            [12] 2894 	add	a,#0xff - 0x15
      000F81 40 03            [24] 2895 	jc	00132$
      000F83                       2896 00128$:
                                   2897 ;	../UI_Manager/ui.c:908: state = IDLE_STATE;
      000F83 75*0F 00         [24] 2898 	mov	_set_ui_state_PARM_2,#0x00
                                   2899 ;	../UI_Manager/ui.c:911: }
      000F86                       2900 00132$:
                                   2901 ;	../UI_Manager/ui.c:913: State = state;
      000F86 85*0F*00         [24] 2902 	mov	_State,_set_ui_state_PARM_2
                                   2903 ;	../UI_Manager/ui.c:914: }
      000F89 22               [24] 2904 	ret
                                   2905 ;------------------------------------------------------------
                                   2906 ;Allocation info for local variables in function 'get_ui_state'
                                   2907 ;------------------------------------------------------------
                                   2908 ;	../UI_Manager/ui.c:916: uint8_t get_ui_state(){
                                   2909 ;	-----------------------------------------
                                   2910 ;	 function get_ui_state
                                   2911 ;	-----------------------------------------
      000F8A                       2912 _get_ui_state:
                                   2913 ;	../UI_Manager/ui.c:917: return State;
      000F8A 85*00 82         [24] 2914 	mov	dpl,_State
                                   2915 ;	../UI_Manager/ui.c:918: }
      000F8D 22               [24] 2916 	ret
                                   2917 ;------------------------------------------------------------
                                   2918 ;Allocation info for local variables in function 'getString'
                                   2919 ;------------------------------------------------------------
                                   2920 ;index                     Allocated to registers r7 
                                   2921 ;------------------------------------------------------------
                                   2922 ;	../UI_Manager/ui.c:920: char* getString(uint8_t index){
                                   2923 ;	-----------------------------------------
                                   2924 ;	 function getString
                                   2925 ;	-----------------------------------------
      000F8E                       2926 _getString:
      000F8E AF 82            [24] 2927 	mov	r7,dpl
                                   2928 ;	../UI_Manager/ui.c:921: switch (index)
      000F90 8F 06            [24] 2929 	mov	ar6,r7
      000F92 BE 00 03         [24] 2930 	cjne	r6,#0x00,00299$
      000F95 02r10r7F         [24] 2931 	ljmp	00101$
      000F98                       2932 00299$:
      000F98 BE 01 03         [24] 2933 	cjne	r6,#0x01,00300$
      000F9B 02r10r86         [24] 2934 	ljmp	00102$
      000F9E                       2935 00300$:
      000F9E BF 02 03         [24] 2936 	cjne	r7,#0x02,00301$
      000FA1 02r10r8D         [24] 2937 	ljmp	00103$
      000FA4                       2938 00301$:
      000FA4 BF 14 03         [24] 2939 	cjne	r7,#0x14,00302$
      000FA7 02r10r94         [24] 2940 	ljmp	00104$
      000FAA                       2941 00302$:
      000FAA BF 15 03         [24] 2942 	cjne	r7,#0x15,00303$
      000FAD 02r10r9B         [24] 2943 	ljmp	00105$
      000FB0                       2944 00303$:
      000FB0 BF 16 03         [24] 2945 	cjne	r7,#0x16,00304$
      000FB3 02r10rA2         [24] 2946 	ljmp	00106$
      000FB6                       2947 00304$:
      000FB6 BF 17 03         [24] 2948 	cjne	r7,#0x17,00305$
      000FB9 02r10rA9         [24] 2949 	ljmp	00107$
      000FBC                       2950 00305$:
      000FBC BF 18 03         [24] 2951 	cjne	r7,#0x18,00306$
      000FBF 02r10rB7         [24] 2952 	ljmp	00109$
      000FC2                       2953 00306$:
      000FC2 BF 19 03         [24] 2954 	cjne	r7,#0x19,00307$
      000FC5 02r10rBE         [24] 2955 	ljmp	00110$
      000FC8                       2956 00307$:
      000FC8 BF 1A 03         [24] 2957 	cjne	r7,#0x1a,00308$
      000FCB 02r10rB0         [24] 2958 	ljmp	00108$
      000FCE                       2959 00308$:
      000FCE BF 28 03         [24] 2960 	cjne	r7,#0x28,00309$
      000FD1 02r11r66         [24] 2961 	ljmp	00134$
      000FD4                       2962 00309$:
      000FD4 BF 29 03         [24] 2963 	cjne	r7,#0x29,00310$
      000FD7 02r11r6D         [24] 2964 	ljmp	00135$
      000FDA                       2965 00310$:
      000FDA BF 2A 03         [24] 2966 	cjne	r7,#0x2a,00311$
      000FDD 02r11r74         [24] 2967 	ljmp	00136$
      000FE0                       2968 00311$:
      000FE0 BF 2B 03         [24] 2969 	cjne	r7,#0x2b,00312$
      000FE3 02r11r7B         [24] 2970 	ljmp	00137$
      000FE6                       2971 00312$:
      000FE6 BF 2C 03         [24] 2972 	cjne	r7,#0x2c,00313$
      000FE9 02r11r82         [24] 2973 	ljmp	00138$
      000FEC                       2974 00313$:
      000FEC BF 2D 03         [24] 2975 	cjne	r7,#0x2d,00314$
      000FEF 02r11r89         [24] 2976 	ljmp	00139$
      000FF2                       2977 00314$:
      000FF2 BF 3C 03         [24] 2978 	cjne	r7,#0x3c,00315$
      000FF5 02r10rE1         [24] 2979 	ljmp	00115$
      000FF8                       2980 00315$:
      000FF8 BF 3D 03         [24] 2981 	cjne	r7,#0x3d,00316$
      000FFB 02r10rE8         [24] 2982 	ljmp	00116$
      000FFE                       2983 00316$:
      000FFE BF 3E 03         [24] 2984 	cjne	r7,#0x3e,00317$
      001001 02r10rEF         [24] 2985 	ljmp	00117$
      001004                       2986 00317$:
      001004 BF 3F 03         [24] 2987 	cjne	r7,#0x3f,00318$
      001007 02r10rF6         [24] 2988 	ljmp	00118$
      00100A                       2989 00318$:
      00100A BF 40 03         [24] 2990 	cjne	r7,#0x40,00319$
      00100D 02r10rFD         [24] 2991 	ljmp	00119$
      001010                       2992 00319$:
      001010 BF 41 03         [24] 2993 	cjne	r7,#0x41,00320$
      001013 02r11r04         [24] 2994 	ljmp	00120$
      001016                       2995 00320$:
      001016 BF 42 03         [24] 2996 	cjne	r7,#0x42,00321$
      001019 02r11r0B         [24] 2997 	ljmp	00121$
      00101C                       2998 00321$:
      00101C BF 43 03         [24] 2999 	cjne	r7,#0x43,00322$
      00101F 02r11r12         [24] 3000 	ljmp	00122$
      001022                       3001 00322$:
      001022 BF 44 03         [24] 3002 	cjne	r7,#0x44,00323$
      001025 02r11r19         [24] 3003 	ljmp	00123$
      001028                       3004 00323$:
      001028 BF 45 03         [24] 3005 	cjne	r7,#0x45,00324$
      00102B 02r11r20         [24] 3006 	ljmp	00124$
      00102E                       3007 00324$:
      00102E BF 46 03         [24] 3008 	cjne	r7,#0x46,00325$
      001031 02r11r27         [24] 3009 	ljmp	00125$
      001034                       3010 00325$:
      001034 BF 47 03         [24] 3011 	cjne	r7,#0x47,00326$
      001037 02r11r2E         [24] 3012 	ljmp	00126$
      00103A                       3013 00326$:
      00103A BF 48 03         [24] 3014 	cjne	r7,#0x48,00327$
      00103D 02r11r35         [24] 3015 	ljmp	00127$
      001040                       3016 00327$:
      001040 BF 50 03         [24] 3017 	cjne	r7,#0x50,00328$
      001043 02r11r3C         [24] 3018 	ljmp	00128$
      001046                       3019 00328$:
      001046 BF 51 03         [24] 3020 	cjne	r7,#0x51,00329$
      001049 02r11r43         [24] 3021 	ljmp	00129$
      00104C                       3022 00329$:
      00104C BF 52 03         [24] 3023 	cjne	r7,#0x52,00330$
      00104F 02r11r4A         [24] 3024 	ljmp	00130$
      001052                       3025 00330$:
      001052 BF 64 03         [24] 3026 	cjne	r7,#0x64,00331$
      001055 02r11r51         [24] 3027 	ljmp	00131$
      001058                       3028 00331$:
      001058 BF 65 03         [24] 3029 	cjne	r7,#0x65,00332$
      00105B 02r11r58         [24] 3030 	ljmp	00132$
      00105E                       3031 00332$:
      00105E BF 66 03         [24] 3032 	cjne	r7,#0x66,00333$
      001061 02r11r5F         [24] 3033 	ljmp	00133$
      001064                       3034 00333$:
      001064 BF CE 03         [24] 3035 	cjne	r7,#0xce,00334$
      001067 02r10rC5         [24] 3036 	ljmp	00111$
      00106A                       3037 00334$:
      00106A BF CF 03         [24] 3038 	cjne	r7,#0xcf,00335$
      00106D 02r10rCC         [24] 3039 	ljmp	00112$
      001070                       3040 00335$:
      001070 BF D0 03         [24] 3041 	cjne	r7,#0xd0,00336$
      001073 02r10rD3         [24] 3042 	ljmp	00113$
      001076                       3043 00336$:
      001076 BF D1 03         [24] 3044 	cjne	r7,#0xd1,00337$
      001079 02r10rDA         [24] 3045 	ljmp	00114$
      00107C                       3046 00337$:
      00107C 02r11r90         [24] 3047 	ljmp	00140$
                                   3048 ;	../UI_Manager/ui.c:923: case POWER_STRING_OFFSET + OPTION_FOG_LOW:
      00107F                       3049 00101$:
                                   3050 ;	../UI_Manager/ui.c:924: return "Wimpy";
      00107F 90r01r65         [24] 3051 	mov	dptr,#___str_32
      001082 75 F0 80         [24] 3052 	mov	b,#0x80
      001085 22               [24] 3053 	ret
                                   3054 ;	../UI_Manager/ui.c:925: case POWER_STRING_OFFSET + OPTION_FOG_MEDIUM:
      001086                       3055 00102$:
                                   3056 ;	../UI_Manager/ui.c:926: return "Mild";
      001086 90r01r6B         [24] 3057 	mov	dptr,#___str_33
      001089 75 F0 80         [24] 3058 	mov	b,#0x80
      00108C 22               [24] 3059 	ret
                                   3060 ;	../UI_Manager/ui.c:927: case POWER_STRING_OFFSET + OPTION_FOG_HIGH:
      00108D                       3061 00103$:
                                   3062 ;	../UI_Manager/ui.c:928: return "Blazin";
      00108D 90r01r70         [24] 3063 	mov	dptr,#___str_34
      001090 75 F0 80         [24] 3064 	mov	b,#0x80
      001093 22               [24] 3065 	ret
                                   3066 ;	../UI_Manager/ui.c:930: case MACRO_STRING_OFFSET + OPTION_MACRO_NONE:
      001094                       3067 00104$:
                                   3068 ;	../UI_Manager/ui.c:931: return "Off";
      001094 90r01r08         [24] 3069 	mov	dptr,#___str_23
      001097 75 F0 80         [24] 3070 	mov	b,#0x80
      00109A 22               [24] 3071 	ret
                                   3072 ;	../UI_Manager/ui.c:932: case MACRO_STRING_OFFSET + OPTION_MACRO_RAINBOW_DMX:
      00109B                       3073 00105$:
                                   3074 ;	../UI_Manager/ui.c:933: return "Rainbow";
      00109B 90r01r77         [24] 3075 	mov	dptr,#___str_35
      00109E 75 F0 80         [24] 3076 	mov	b,#0x80
      0010A1 22               [24] 3077 	ret
                                   3078 ;	../UI_Manager/ui.c:934: case MACRO_STRING_OFFSET + OPTION_MACRO_FIRE_DMX:
      0010A2                       3079 00106$:
                                   3080 ;	../UI_Manager/ui.c:935: return "Fire";
      0010A2 90r01r7F         [24] 3081 	mov	dptr,#___str_36
      0010A5 75 F0 80         [24] 3082 	mov	b,#0x80
      0010A8 22               [24] 3083 	ret
                                   3084 ;	../UI_Manager/ui.c:936: case MACRO_STRING_OFFSET + OPTION_MACRO_WATER_DMX:
      0010A9                       3085 00107$:
                                   3086 ;	../UI_Manager/ui.c:937: return "Water";
      0010A9 90r01r84         [24] 3087 	mov	dptr,#___str_37
      0010AC 75 F0 80         [24] 3088 	mov	b,#0x80
      0010AF 22               [24] 3089 	ret
                                   3090 ;	../UI_Manager/ui.c:938: case MACRO_STRING_OFFSET + OPTION_MACRO_STORM_DMX:
      0010B0                       3091 00108$:
                                   3092 ;	../UI_Manager/ui.c:939: return "Storm";
      0010B0 90r01r8A         [24] 3093 	mov	dptr,#___str_38
      0010B3 75 F0 80         [24] 3094 	mov	b,#0x80
      0010B6 22               [24] 3095 	ret
                                   3096 ;	../UI_Manager/ui.c:940: case MACRO_STRING_OFFSET + OPTION_MACRO_ACID_DMX:
      0010B7                       3097 00109$:
                                   3098 ;	../UI_Manager/ui.c:941: return "Acid";
      0010B7 90r01r90         [24] 3099 	mov	dptr,#___str_39
      0010BA 75 F0 80         [24] 3100 	mov	b,#0x80
      0010BD 22               [24] 3101 	ret
                                   3102 ;	../UI_Manager/ui.c:942: case MACRO_STRING_OFFSET + OPTION_MACRO_ETHER_DMX:
      0010BE                       3103 00110$:
                                   3104 ;	../UI_Manager/ui.c:943: return "Ether";
      0010BE 90r01r95         [24] 3105 	mov	dptr,#___str_40
      0010C1 75 F0 80         [24] 3106 	mov	b,#0x80
      0010C4 22               [24] 3107 	ret
                                   3108 ;	../UI_Manager/ui.c:945: case COLOR_STRING_OFFSET + MANUAL_RED_STATE:
      0010C5                       3109 00111$:
                                   3110 ;	../UI_Manager/ui.c:946: return "Red Level";
      0010C5 90r01r9B         [24] 3111 	mov	dptr,#___str_41
      0010C8 75 F0 80         [24] 3112 	mov	b,#0x80
      0010CB 22               [24] 3113 	ret
                                   3114 ;	../UI_Manager/ui.c:947: case COLOR_STRING_OFFSET + MANUAL_GREEN_STATE:
      0010CC                       3115 00112$:
                                   3116 ;	../UI_Manager/ui.c:948: return "Green Level";
      0010CC 90r01rA5         [24] 3117 	mov	dptr,#___str_42
      0010CF 75 F0 80         [24] 3118 	mov	b,#0x80
      0010D2 22               [24] 3119 	ret
                                   3120 ;	../UI_Manager/ui.c:949: case COLOR_STRING_OFFSET + MANUAL_BLUE_STATE:
      0010D3                       3121 00113$:
                                   3122 ;	../UI_Manager/ui.c:950: return "Blue Level";
      0010D3 90r01rB1         [24] 3123 	mov	dptr,#___str_43
      0010D6 75 F0 80         [24] 3124 	mov	b,#0x80
      0010D9 22               [24] 3125 	ret
                                   3126 ;	../UI_Manager/ui.c:951: case COLOR_STRING_OFFSET + MANUAL_STROBE_STATE:
      0010DA                       3127 00114$:
                                   3128 ;	../UI_Manager/ui.c:952: return "Strobe Level";
      0010DA 90r01rBC         [24] 3129 	mov	dptr,#___str_44
      0010DD 75 F0 80         [24] 3130 	mov	b,#0x80
      0010E0 22               [24] 3131 	ret
                                   3132 ;	../UI_Manager/ui.c:954: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACITON_NONE:
      0010E1                       3133 00115$:
                                   3134 ;	../UI_Manager/ui.c:955: return "No Action";
      0010E1 90r01rC9         [24] 3135 	mov	dptr,#___str_45
      0010E4 75 F0 80         [24] 3136 	mov	b,#0x80
      0010E7 22               [24] 3137 	ret
                                   3138 ;	../UI_Manager/ui.c:956: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_CHOOSE_MACRO:
      0010E8                       3139 00116$:
                                   3140 ;	../UI_Manager/ui.c:957: return "Choose Macro";
      0010E8 90r01rD3         [24] 3141 	mov	dptr,#___str_46
      0010EB 75 F0 80         [24] 3142 	mov	b,#0x80
      0010EE 22               [24] 3143 	ret
                                   3144 ;	../UI_Manager/ui.c:958: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_RED:
      0010EF                       3145 00117$:
                                   3146 ;	../UI_Manager/ui.c:959: return "Red";
      0010EF 90r01rE0         [24] 3147 	mov	dptr,#___str_47
      0010F2 75 F0 80         [24] 3148 	mov	b,#0x80
      0010F5 22               [24] 3149 	ret
                                   3150 ;	../UI_Manager/ui.c:960: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_YELLOW:
      0010F6                       3151 00118$:
                                   3152 ;	../UI_Manager/ui.c:961: return "Yellow";
      0010F6 90r01rE4         [24] 3153 	mov	dptr,#___str_48
      0010F9 75 F0 80         [24] 3154 	mov	b,#0x80
      0010FC 22               [24] 3155 	ret
                                   3156 ;	../UI_Manager/ui.c:962: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_GREEN:
      0010FD                       3157 00119$:
                                   3158 ;	../UI_Manager/ui.c:963: return "Green";
      0010FD 90r01rEB         [24] 3159 	mov	dptr,#___str_49
      001100 75 F0 80         [24] 3160 	mov	b,#0x80
      001103 22               [24] 3161 	ret
                                   3162 ;	../UI_Manager/ui.c:964: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_CYAN:
      001104                       3163 00120$:
                                   3164 ;	../UI_Manager/ui.c:965: return "Cyan";
      001104 90r01rF1         [24] 3165 	mov	dptr,#___str_50
      001107 75 F0 80         [24] 3166 	mov	b,#0x80
      00110A 22               [24] 3167 	ret
                                   3168 ;	../UI_Manager/ui.c:966: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_BLUE:
      00110B                       3169 00121$:
                                   3170 ;	../UI_Manager/ui.c:967: return "Blue";
      00110B 90r01rF6         [24] 3171 	mov	dptr,#___str_51
      00110E 75 F0 80         [24] 3172 	mov	b,#0x80
      001111 22               [24] 3173 	ret
                                   3174 ;	../UI_Manager/ui.c:968: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_MAGENTA:
      001112                       3175 00122$:
                                   3176 ;	../UI_Manager/ui.c:969: return "Magenta";
      001112 90r01rFB         [24] 3177 	mov	dptr,#___str_52
      001115 75 F0 80         [24] 3178 	mov	b,#0x80
      001118 22               [24] 3179 	ret
                                   3180 ;	../UI_Manager/ui.c:970: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_SLOW:
      001119                       3181 00123$:
                                   3182 ;	../UI_Manager/ui.c:971: return "Strobe Slow";
      001119 90r02r03         [24] 3183 	mov	dptr,#___str_53
      00111C 75 F0 80         [24] 3184 	mov	b,#0x80
      00111F 22               [24] 3185 	ret
                                   3186 ;	../UI_Manager/ui.c:972: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_MEDIUM:
      001120                       3187 00124$:
                                   3188 ;	../UI_Manager/ui.c:973: return "Strobe Medium";
      001120 90r02r0F         [24] 3189 	mov	dptr,#___str_54
      001123 75 F0 80         [24] 3190 	mov	b,#0x80
      001126 22               [24] 3191 	ret
                                   3192 ;	../UI_Manager/ui.c:974: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_FAST:
      001127                       3193 00125$:
                                   3194 ;	../UI_Manager/ui.c:975: return "Strobe Fast";
      001127 90r02r1D         [24] 3195 	mov	dptr,#___str_55
      00112A 75 F0 80         [24] 3196 	mov	b,#0x80
      00112D 22               [24] 3197 	ret
                                   3198 ;	../UI_Manager/ui.c:976: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_BLACKOUT:
      00112E                       3199 00126$:
                                   3200 ;	../UI_Manager/ui.c:977: return "Blackout";
      00112E 90r02r29         [24] 3201 	mov	dptr,#___str_56
      001131 75 F0 80         [24] 3202 	mov	b,#0x80
      001134 22               [24] 3203 	ret
                                   3204 ;	../UI_Manager/ui.c:978: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_WHITEOUT:
      001135                       3205 00127$:
                                   3206 ;	../UI_Manager/ui.c:979: return "Whiteout";         
      001135 90r02r32         [24] 3207 	mov	dptr,#___str_57
      001138 75 F0 80         [24] 3208 	mov	b,#0x80
      00113B 22               [24] 3209 	ret
                                   3210 ;	../UI_Manager/ui.c:981: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_1: 
      00113C                       3211 00128$:
                                   3212 ;	../UI_Manager/ui.c:982: return "Slot 1";   
      00113C 90r02r3B         [24] 3213 	mov	dptr,#___str_58
      00113F 75 F0 80         [24] 3214 	mov	b,#0x80
      001142 22               [24] 3215 	ret
                                   3216 ;	../UI_Manager/ui.c:983: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_2: 
      001143                       3217 00129$:
                                   3218 ;	../UI_Manager/ui.c:984: return "Slot 2";   
      001143 90r02r42         [24] 3219 	mov	dptr,#___str_59
      001146 75 F0 80         [24] 3220 	mov	b,#0x80
      001149 22               [24] 3221 	ret
                                   3222 ;	../UI_Manager/ui.c:985: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_3: 
      00114A                       3223 00130$:
                                   3224 ;	../UI_Manager/ui.c:986: return "Slot 3"; 
      00114A 90r02r49         [24] 3225 	mov	dptr,#___str_60
      00114D 75 F0 80         [24] 3226 	mov	b,#0x80
                                   3227 ;	../UI_Manager/ui.c:988: case DMX_STRING_OFFSET + OPTION_DMX_MODE_11: 
      001150 22               [24] 3228 	ret
      001151                       3229 00131$:
                                   3230 ;	../UI_Manager/ui.c:989: return "11 All";     
      001151 90r02r50         [24] 3231 	mov	dptr,#___str_61
      001154 75 F0 80         [24] 3232 	mov	b,#0x80
                                   3233 ;	../UI_Manager/ui.c:990: case DMX_STRING_OFFSET + OPTION_DMX_MODE_3: 
      001157 22               [24] 3234 	ret
      001158                       3235 00132$:
                                   3236 ;	../UI_Manager/ui.c:991: return " 3 Fog + Macro";   
      001158 90r02r57         [24] 3237 	mov	dptr,#___str_62
      00115B 75 F0 80         [24] 3238 	mov	b,#0x80
                                   3239 ;	../UI_Manager/ui.c:992: case DMX_STRING_OFFSET + OPTION_DMX_MODE_1: 
      00115E 22               [24] 3240 	ret
      00115F                       3241 00133$:
                                   3242 ;	../UI_Manager/ui.c:993: return " 1 Fog";    
      00115F 90r02r66         [24] 3243 	mov	dptr,#___str_63
      001162 75 F0 80         [24] 3244 	mov	b,#0x80
                                   3245 ;	../UI_Manager/ui.c:995: case SECRET_STRING_OFFSET + 0:
      001165 22               [24] 3246 	ret
      001166                       3247 00134$:
                                   3248 ;	../UI_Manager/ui.c:996: return "0x486F6C6D6573";
      001166 90r02r6D         [24] 3249 	mov	dptr,#___str_64
      001169 75 F0 80         [24] 3250 	mov	b,#0x80
                                   3251 ;	../UI_Manager/ui.c:997: case SECRET_STRING_OFFSET + 1:
      00116C 22               [24] 3252 	ret
      00116D                       3253 00135$:
                                   3254 ;	../UI_Manager/ui.c:998: return "& 576174736F6E";
      00116D 90r02r7C         [24] 3255 	mov	dptr,#___str_65
      001170 75 F0 80         [24] 3256 	mov	b,#0x80
                                   3257 ;	../UI_Manager/ui.c:999: case SECRET_STRING_OFFSET + 2:
      001173 22               [24] 3258 	ret
      001174                       3259 00136$:
                                   3260 ;	../UI_Manager/ui.c:1000: return "626F74684F776E41";
      001174 90r02r8B         [24] 3261 	mov	dptr,#___str_66
      001177 75 F0 80         [24] 3262 	mov	b,#0x80
                                   3263 ;	../UI_Manager/ui.c:1001: case SECRET_STRING_OFFSET + 3:
      00117A 22               [24] 3264 	ret
      00117B                       3265 00137$:
                                   3266 ;	../UI_Manager/ui.c:1002: return "536E6F7762616C6C";
      00117B 90r02r9C         [24] 3267 	mov	dptr,#___str_67
      00117E 75 F0 80         [24] 3268 	mov	b,#0x80
                                   3269 ;	../UI_Manager/ui.c:1003: case SECRET_STRING_OFFSET + 4:
      001181 22               [24] 3270 	ret
      001182                       3271 00138$:
                                   3272 ;	../UI_Manager/ui.c:1004: return "4D6F726961727479";
      001182 90r02rAD         [24] 3273 	mov	dptr,#___str_68
      001185 75 F0 80         [24] 3274 	mov	b,#0x80
                                   3275 ;	../UI_Manager/ui.c:1005: case SECRET_STRING_OFFSET + 5:
      001188 22               [24] 3276 	ret
      001189                       3277 00139$:
                                   3278 ;	../UI_Manager/ui.c:1006: return "646F65734E6F74 ;";
      001189 90r02rBE         [24] 3279 	mov	dptr,#___str_69
      00118C 75 F0 80         [24] 3280 	mov	b,#0x80
                                   3281 ;	../UI_Manager/ui.c:1007: }
      00118F 22               [24] 3282 	ret
      001190                       3283 00140$:
                                   3284 ;	../UI_Manager/ui.c:1009: return 0;
      001190 90 00 00         [24] 3285 	mov	dptr,#0x0000
      001193 75 F0 00         [24] 3286 	mov	b,#0x00
                                   3287 ;	../UI_Manager/ui.c:1010: }
      001196 22               [24] 3288 	ret
                                   3289 	.area CSEG    (CODE)
                                   3290 	.area CONST   (CODE)
      000000                       3291 ___str_0:
      000000 54 61 6E 6B 20 4C 69  3292 	.ascii "Tank Lights Off"
             67 68 74 73 20 4F 66
             66
      00000F 00                    3293 	.db 0x00
      000010                       3294 ___str_1:
      000010 54 61 6E 6B 20 4C 69  3295 	.ascii "Tank Lights On"
             67 68 74 73 20 4F 6E
      00001E 00                    3296 	.db 0x00
      00001F                       3297 ___str_2:
      00001F 46 75 6E 2B 4D 61 6E  3298 	.ascii "Fun+Man to Undo"
             20 74 6F 20 55 6E 64
             6F
      00002E 00                    3299 	.db 0x00
      00002F                       3300 ___str_3:
      00002F 48 65 61 74 65 72 20  3301 	.ascii "Heater Off"
             4F 66 66
      000039 00                    3302 	.db 0x00
      00003A                       3303 ___str_4:
      00003A 48 65 61 74 65 72 20  3304 	.ascii "Heater On"
             4F 6E
      000043 00                    3305 	.db 0x00
      000044                       3306 ___str_5:
      000044 42 75 72 73 74 2B 55  3307 	.ascii "Burst+Up to Undo"
             70 20 74 6F 20 55 6E
             64 6F
      000054 00                    3308 	.db 0x00
      000055                       3309 ___str_6:
      000055 41 74 6D 6F 73 46 45  3310 	.ascii "AtmosFEAR 221B"
             41 52 20 32 32 31 42
      000063 00                    3311 	.db 0x00
      000064                       3312 ___str_7:
      000064 42 79 20 42 6C 69 7A  3313 	.ascii "By Blizzard Pro"
             7A 61 72 64 20 50 72
             6F
      000073 00                    3314 	.db 0x00
      000074                       3315 ___str_8:
      000074 50 43 20 4C 6F 61 64  3316 	.ascii "PC Load Letter"
             20 4C 65 74 74 65 72
      000082 00                    3317 	.db 0x00
      000083                       3318 ___str_9:
      000083 42 75 72 73 74 20 74  3319 	.ascii "Burst to Refill"
             6F 20 52 65 66 69 6C
             6C
      000092 00                    3320 	.db 0x00
      000093                       3321 ___str_10:
      000093 4D 61 6E 75 61 6C 20  3322 	.ascii "Manual Mode"
             4D 6F 64 65
      00009E 00                    3323 	.db 0x00
      00009F                       3324 ___str_11:
      00009F 41 64 64 72           3325 	.ascii "Addr"
      0000A3 00                    3326 	.db 0x00
      0000A4                       3327 ___str_12:
      0000A4 4D 6F 64 65           3328 	.ascii "Mode"
      0000A8 00                    3329 	.db 0x00
      0000A9                       3330 ___str_13:
      0000A9 44 4D 58 20 4F 6B     3331 	.ascii "DMX Ok"
      0000AF 00                    3332 	.db 0x00
      0000B0                       3333 ___str_14:
      0000B0 4E 6F 20 44 4D 58     3334 	.ascii "No DMX"
      0000B6 00                    3335 	.db 0x00
      0000B7                       3336 ___str_15:
      0000B7 49 6E 74 65 72 76 61  3337 	.ascii "Interval"
             6C
      0000BF 00                    3338 	.db 0x00
      0000C0                       3339 ___str_16:
      0000C0 44 75 72 61 74 69 6F  3340 	.ascii "Duration"
             6E
      0000C8 00                    3341 	.db 0x00
      0000C9                       3342 ___str_17:
      0000C9 46 6F 67 20 4C 65 76  3343 	.ascii "Fog Level"
             65 6C
      0000D2 00                    3344 	.db 0x00
      0000D3                       3345 ___str_18:
      0000D3 46 6F 67 20 49 6E 74  3346 	.ascii "Fog Interval"
             65 72 76 61 6C
      0000DF 00                    3347 	.db 0x00
      0000E0                       3348 ___str_19:
      0000E0 53 65 63 6F 6E 64 73  3349 	.ascii "Seconds"
      0000E7 00                    3350 	.db 0x00
      0000E8                       3351 ___str_20:
      0000E8 46 6F 67 20 44 75 72  3352 	.ascii "Fog Duration"
             61 74 69 6F 6E
      0000F4 00                    3353 	.db 0x00
      0000F5                       3354 ___str_21:
      0000F5 4D 61 63 72 6F 73     3355 	.ascii "Macros"
      0000FB 00                    3356 	.db 0x00
      0000FC                       3357 ___str_22:
      0000FC 4D 61 63 72 6F 20 53  3358 	.ascii "Macro Speed"
             70 65 65 64
      000107 00                    3359 	.db 0x00
      000108                       3360 ___str_23:
      000108 4F 66 66              3361 	.ascii "Off"
      00010B 00                    3362 	.db 0x00
      00010C                       3363 ___str_24:
      00010C 00                    3364 	.db 0x00
      00010D                       3365 ___str_25:
      00010D 52 65 6D 6F 74 65 20  3366 	.ascii "Remote X Action"
             58 20 41 63 74 69 6F
             6E
      00011C 00                    3367 	.db 0x00
      00011D                       3368 ___str_26:
      00011D 53 61 76 65 64 21     3369 	.ascii "Saved!"
      000123 00                    3370 	.db 0x00
      000124                       3371 ___str_27:
      000124 4C 6F 61 64 65 64 21  3372 	.ascii "Loaded!"
      00012B 00                    3373 	.db 0x00
      00012C                       3374 ___str_28:
      00012C 53 61 76 65 20 53 65  3375 	.ascii "Save Settings"
             74 74 69 6E 67 73
      000139 00                    3376 	.db 0x00
      00013A                       3377 ___str_29:
      00013A 4C 6F 61 64 20 53 65  3378 	.ascii "Load Settings"
             74 74 69 6E 67 73
      000147 00                    3379 	.db 0x00
      000148                       3380 ___str_30:
      000148 44 4D 58 20 41 64 64  3381 	.ascii "DMX Address"
             72 65 73 73
      000153 00                    3382 	.db 0x00
      000154                       3383 ___str_31:
      000154 44 4D 58 20 43 68 61  3384 	.ascii "DMX Channel Mode"
             6E 6E 65 6C 20 4D 6F
             64 65
      000164 00                    3385 	.db 0x00
      000165                       3386 ___str_32:
      000165 57 69 6D 70 79        3387 	.ascii "Wimpy"
      00016A 00                    3388 	.db 0x00
      00016B                       3389 ___str_33:
      00016B 4D 69 6C 64           3390 	.ascii "Mild"
      00016F 00                    3391 	.db 0x00
      000170                       3392 ___str_34:
      000170 42 6C 61 7A 69 6E     3393 	.ascii "Blazin"
      000176 00                    3394 	.db 0x00
      000177                       3395 ___str_35:
      000177 52 61 69 6E 62 6F 77  3396 	.ascii "Rainbow"
      00017E 00                    3397 	.db 0x00
      00017F                       3398 ___str_36:
      00017F 46 69 72 65           3399 	.ascii "Fire"
      000183 00                    3400 	.db 0x00
      000184                       3401 ___str_37:
      000184 57 61 74 65 72        3402 	.ascii "Water"
      000189 00                    3403 	.db 0x00
      00018A                       3404 ___str_38:
      00018A 53 74 6F 72 6D        3405 	.ascii "Storm"
      00018F 00                    3406 	.db 0x00
      000190                       3407 ___str_39:
      000190 41 63 69 64           3408 	.ascii "Acid"
      000194 00                    3409 	.db 0x00
      000195                       3410 ___str_40:
      000195 45 74 68 65 72        3411 	.ascii "Ether"
      00019A 00                    3412 	.db 0x00
      00019B                       3413 ___str_41:
      00019B 52 65 64 20 4C 65 76  3414 	.ascii "Red Level"
             65 6C
      0001A4 00                    3415 	.db 0x00
      0001A5                       3416 ___str_42:
      0001A5 47 72 65 65 6E 20 4C  3417 	.ascii "Green Level"
             65 76 65 6C
      0001B0 00                    3418 	.db 0x00
      0001B1                       3419 ___str_43:
      0001B1 42 6C 75 65 20 4C 65  3420 	.ascii "Blue Level"
             76 65 6C
      0001BB 00                    3421 	.db 0x00
      0001BC                       3422 ___str_44:
      0001BC 53 74 72 6F 62 65 20  3423 	.ascii "Strobe Level"
             4C 65 76 65 6C
      0001C8 00                    3424 	.db 0x00
      0001C9                       3425 ___str_45:
      0001C9 4E 6F 20 41 63 74 69  3426 	.ascii "No Action"
             6F 6E
      0001D2 00                    3427 	.db 0x00
      0001D3                       3428 ___str_46:
      0001D3 43 68 6F 6F 73 65 20  3429 	.ascii "Choose Macro"
             4D 61 63 72 6F
      0001DF 00                    3430 	.db 0x00
      0001E0                       3431 ___str_47:
      0001E0 52 65 64              3432 	.ascii "Red"
      0001E3 00                    3433 	.db 0x00
      0001E4                       3434 ___str_48:
      0001E4 59 65 6C 6C 6F 77     3435 	.ascii "Yellow"
      0001EA 00                    3436 	.db 0x00
      0001EB                       3437 ___str_49:
      0001EB 47 72 65 65 6E        3438 	.ascii "Green"
      0001F0 00                    3439 	.db 0x00
      0001F1                       3440 ___str_50:
      0001F1 43 79 61 6E           3441 	.ascii "Cyan"
      0001F5 00                    3442 	.db 0x00
      0001F6                       3443 ___str_51:
      0001F6 42 6C 75 65           3444 	.ascii "Blue"
      0001FA 00                    3445 	.db 0x00
      0001FB                       3446 ___str_52:
      0001FB 4D 61 67 65 6E 74 61  3447 	.ascii "Magenta"
      000202 00                    3448 	.db 0x00
      000203                       3449 ___str_53:
      000203 53 74 72 6F 62 65 20  3450 	.ascii "Strobe Slow"
             53 6C 6F 77
      00020E 00                    3451 	.db 0x00
      00020F                       3452 ___str_54:
      00020F 53 74 72 6F 62 65 20  3453 	.ascii "Strobe Medium"
             4D 65 64 69 75 6D
      00021C 00                    3454 	.db 0x00
      00021D                       3455 ___str_55:
      00021D 53 74 72 6F 62 65 20  3456 	.ascii "Strobe Fast"
             46 61 73 74
      000228 00                    3457 	.db 0x00
      000229                       3458 ___str_56:
      000229 42 6C 61 63 6B 6F 75  3459 	.ascii "Blackout"
             74
      000231 00                    3460 	.db 0x00
      000232                       3461 ___str_57:
      000232 57 68 69 74 65 6F 75  3462 	.ascii "Whiteout"
             74
      00023A 00                    3463 	.db 0x00
      00023B                       3464 ___str_58:
      00023B 53 6C 6F 74 20 31     3465 	.ascii "Slot 1"
      000241 00                    3466 	.db 0x00
      000242                       3467 ___str_59:
      000242 53 6C 6F 74 20 32     3468 	.ascii "Slot 2"
      000248 00                    3469 	.db 0x00
      000249                       3470 ___str_60:
      000249 53 6C 6F 74 20 33     3471 	.ascii "Slot 3"
      00024F 00                    3472 	.db 0x00
      000250                       3473 ___str_61:
      000250 31 31 20 41 6C 6C     3474 	.ascii "11 All"
      000256 00                    3475 	.db 0x00
      000257                       3476 ___str_62:
      000257 20 33 20 46 6F 67 20  3477 	.ascii " 3 Fog + Macro"
             2B 20 4D 61 63 72 6F
      000265 00                    3478 	.db 0x00
      000266                       3479 ___str_63:
      000266 20 31 20 46 6F 67     3480 	.ascii " 1 Fog"
      00026C 00                    3481 	.db 0x00
      00026D                       3482 ___str_64:
      00026D 30 78 34 38 36 46 36  3483 	.ascii "0x486F6C6D6573"
             43 36 44 36 35 37 33
      00027B 00                    3484 	.db 0x00
      00027C                       3485 ___str_65:
      00027C 26 20 35 37 36 31 37  3486 	.ascii "& 576174736F6E"
             34 37 33 36 46 36 45
      00028A 00                    3487 	.db 0x00
      00028B                       3488 ___str_66:
      00028B 36 32 36 46 37 34 36  3489 	.ascii "626F74684F776E41"
             38 34 46 37 37 36 45
             34 31
      00029B 00                    3490 	.db 0x00
      00029C                       3491 ___str_67:
      00029C 35 33 36 45 36 46 37  3492 	.ascii "536E6F7762616C6C"
             37 36 32 36 31 36 43
             36 43
      0002AC 00                    3493 	.db 0x00
      0002AD                       3494 ___str_68:
      0002AD 34 44 36 46 37 32 36  3495 	.ascii "4D6F726961727479"
             39 36 31 37 32 37 34
             37 39
      0002BD 00                    3496 	.db 0x00
      0002BE                       3497 ___str_69:
      0002BE 36 34 36 46 36 35 37  3498 	.ascii "646F65734E6F74 ;"
             33 34 45 36 46 37 34
             20 3B
      0002CE 00                    3499 	.db 0x00
                                   3500 	.area XINIT   (CODE)
                                   3501 	.area CABS    (ABS,CODE)
