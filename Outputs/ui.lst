                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ui
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _exe_command
                                     12 	.globl _write_char
                                     13 	.globl _write_number
                                     14 	.globl _write_string
                                     15 	.globl _get_button_action
                                     16 	.globl _power_heater
                                     17 	.globl _power_pump
                                     18 	.globl _tick_fogger
                                     19 	.globl _set_dmx_address
                                     20 	.globl _get_dmx_address
                                     21 	.globl _set_runtime_data
                                     22 	.globl _get_runtime_data
                                     23 	.globl _save_load_settings
                                     24 	.globl _CPRL2
                                     25 	.globl _CT2
                                     26 	.globl _TR2
                                     27 	.globl _EXEN2
                                     28 	.globl _TCLK
                                     29 	.globl _RCLK
                                     30 	.globl _REN
                                     31 	.globl _SM2
                                     32 	.globl _SM1
                                     33 	.globl _SM0
                                     34 	.globl _RCK
                                     35 	.globl _SER
                                     36 	.globl _SCK
                                     37 	.globl _RI
                                     38 	.globl _ES
                                     39 	.globl _ET0
                                     40 	.globl _EA
                                     41 	.globl _P3_7
                                     42 	.globl _P3_6
                                     43 	.globl _P3_5
                                     44 	.globl _P3_4
                                     45 	.globl _P3_3
                                     46 	.globl _P3_2
                                     47 	.globl _P3_1
                                     48 	.globl _P3_0
                                     49 	.globl _P2_7
                                     50 	.globl _P2_6
                                     51 	.globl _P2_5
                                     52 	.globl _P2_4
                                     53 	.globl _P2_3
                                     54 	.globl _P2_2
                                     55 	.globl _P2_1
                                     56 	.globl _P2_0
                                     57 	.globl _P1_7
                                     58 	.globl _P1_6
                                     59 	.globl _P1_5
                                     60 	.globl _P1_4
                                     61 	.globl _P1_3
                                     62 	.globl _P1_2
                                     63 	.globl _P1_1
                                     64 	.globl _P1_0
                                     65 	.globl _P0_7
                                     66 	.globl _P0_6
                                     67 	.globl _P0_5
                                     68 	.globl _P0_4
                                     69 	.globl _P0_3
                                     70 	.globl _P0_2
                                     71 	.globl _P0_1
                                     72 	.globl _P0_0
                                     73 	.globl _IAP_ADRH
                                     74 	.globl _IAP_ADRL
                                     75 	.globl _IAPEN
                                     76 	.globl _TH0
                                     77 	.globl _TL0
                                     78 	.globl _CKCON
                                     79 	.globl _TMOD
                                     80 	.globl _TCON
                                     81 	.globl _PWMDATA17L
                                     82 	.globl _PWMDATA17H
                                     83 	.globl _PWMDATA14L
                                     84 	.globl _PWMDATA14H
                                     85 	.globl _PWMDATA11L
                                     86 	.globl _PWMDATA11H
                                     87 	.globl _PWM_EA2
                                     88 	.globl _PWM_EA1
                                     89 	.globl _SBUF
                                     90 	.globl _TL3
                                     91 	.globl _TH3
                                     92 	.globl _T2CON
                                     93 	.globl _RCAP2H
                                     94 	.globl _RCAP2L
                                     95 	.globl _SCON
                                     96 	.globl _P1_OPT
                                     97 	.globl _ADCVAL2
                                     98 	.globl _ADCVAL1
                                     99 	.globl _ADCSEL
                                    100 	.globl _EXIF
                                    101 	.globl _EIE
                                    102 	.globl _IE
                                    103 	.globl _P3
                                    104 	.globl _P2
                                    105 	.globl _P1
                                    106 	.globl _P0
                                    107 	.globl _PCLKSEL
                                    108 	.globl _CHIPCON
                                    109 	.globl _tick_ui
                                    110 	.globl _idlePage
                                    111 	.globl _fogLevelPage
                                    112 	.globl _fogIntervalPage
                                    113 	.globl _fogDurationPage
                                    114 	.globl _macroPage
                                    115 	.globl _macroSpeedPage
                                    116 	.globl _colorPage
                                    117 	.globl _remotePage
                                    118 	.globl _saveLoadPage
                                    119 	.globl _dmxAddressPage
                                    120 	.globl _dmxChannelPage
                                    121 	.globl _set_ui_state
                                    122 	.globl _get_ui_state
                                    123 	.globl _getString
                                    124 ;--------------------------------------------------------
                                    125 ; special function registers
                                    126 ;--------------------------------------------------------
                                    127 	.area RSEG    (ABS,DATA)
      000000                        128 	.org 0x0000
                           0000BF   129 _CHIPCON	=	0x00bf
                           0000B7   130 _PCLKSEL	=	0x00b7
                           000080   131 _P0	=	0x0080
                           000090   132 _P1	=	0x0090
                           0000A0   133 _P2	=	0x00a0
                           0000B0   134 _P3	=	0x00b0
                           0000A8   135 _IE	=	0x00a8
                           0000E8   136 _EIE	=	0x00e8
                           000091   137 _EXIF	=	0x0091
                           0000DA   138 _ADCSEL	=	0x00da
                           0000DB   139 _ADCVAL1	=	0x00db
                           0000DC   140 _ADCVAL2	=	0x00dc
                           0000D9   141 _P1_OPT	=	0x00d9
                           000098   142 _SCON	=	0x0098
                           0000CA   143 _RCAP2L	=	0x00ca
                           0000CB   144 _RCAP2H	=	0x00cb
                           0000C8   145 _T2CON	=	0x00c8
                           00009B   146 _TH3	=	0x009b
                           00009A   147 _TL3	=	0x009a
                           000099   148 _SBUF	=	0x0099
                           0000D3   149 _PWM_EA1	=	0x00d3
                           0000D4   150 _PWM_EA2	=	0x00d4
                           0000BD   151 _PWMDATA11H	=	0x00bd
                           0000BE   152 _PWMDATA11L	=	0x00be
                           0000B5   153 _PWMDATA14H	=	0x00b5
                           0000B6   154 _PWMDATA14L	=	0x00b6
                           0000AD   155 _PWMDATA17H	=	0x00ad
                           0000AE   156 _PWMDATA17L	=	0x00ae
                           000088   157 _TCON	=	0x0088
                           000089   158 _TMOD	=	0x0089
                           00008E   159 _CKCON	=	0x008e
                           00008A   160 _TL0	=	0x008a
                           00008C   161 _TH0	=	0x008c
                           0000E4   162 _IAPEN	=	0x00e4
                           0000E5   163 _IAP_ADRL	=	0x00e5
                           0000E6   164 _IAP_ADRH	=	0x00e6
                                    165 ;--------------------------------------------------------
                                    166 ; special function bits
                                    167 ;--------------------------------------------------------
                                    168 	.area RSEG    (ABS,DATA)
      000000                        169 	.org 0x0000
                           000080   170 _P0_0	=	0x0080
                           000081   171 _P0_1	=	0x0081
                           000082   172 _P0_2	=	0x0082
                           000083   173 _P0_3	=	0x0083
                           000084   174 _P0_4	=	0x0084
                           000085   175 _P0_5	=	0x0085
                           000086   176 _P0_6	=	0x0086
                           000087   177 _P0_7	=	0x0087
                           000090   178 _P1_0	=	0x0090
                           000091   179 _P1_1	=	0x0091
                           000092   180 _P1_2	=	0x0092
                           000093   181 _P1_3	=	0x0093
                           000094   182 _P1_4	=	0x0094
                           000095   183 _P1_5	=	0x0095
                           000096   184 _P1_6	=	0x0096
                           000097   185 _P1_7	=	0x0097
                           0000A0   186 _P2_0	=	0x00a0
                           0000A1   187 _P2_1	=	0x00a1
                           0000A2   188 _P2_2	=	0x00a2
                           0000A3   189 _P2_3	=	0x00a3
                           0000A4   190 _P2_4	=	0x00a4
                           0000A5   191 _P2_5	=	0x00a5
                           0000A6   192 _P2_6	=	0x00a6
                           0000A7   193 _P2_7	=	0x00a7
                           0000B0   194 _P3_0	=	0x00b0
                           0000B1   195 _P3_1	=	0x00b1
                           0000B2   196 _P3_2	=	0x00b2
                           0000B3   197 _P3_3	=	0x00b3
                           0000B4   198 _P3_4	=	0x00b4
                           0000B5   199 _P3_5	=	0x00b5
                           0000B6   200 _P3_6	=	0x00b6
                           0000B7   201 _P3_7	=	0x00b7
                           0000AF   202 _EA	=	0x00af
                           0000A9   203 _ET0	=	0x00a9
                           0000AC   204 _ES	=	0x00ac
                           000098   205 _RI	=	0x0098
                           000093   206 _SCK	=	0x0093
                           000095   207 _SER	=	0x0095
                           000092   208 _RCK	=	0x0092
                           00009F   209 _SM0	=	0x009f
                           00009E   210 _SM1	=	0x009e
                           00009D   211 _SM2	=	0x009d
                           00009C   212 _REN	=	0x009c
                           0000CD   213 _RCLK	=	0x00cd
                           0000CC   214 _TCLK	=	0x00cc
                           0000CB   215 _EXEN2	=	0x00cb
                           0000CA   216 _TR2	=	0x00ca
                           0000C9   217 _CT2	=	0x00c9
                           0000C8   218 _CPRL2	=	0x00c8
                                    219 ;--------------------------------------------------------
                                    220 ; overlayable register banks
                                    221 ;--------------------------------------------------------
                                    222 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        223 	.ds 8
                                    224 ;--------------------------------------------------------
                                    225 ; internal ram data
                                    226 ;--------------------------------------------------------
                                    227 	.area DSEG    (DATA)
      000000                        228 _State:
      000000                        229 	.ds 1
      000001                        230 _Changed:
      000001                        231 	.ds 1
      000002                        232 _changed:
      000002                        233 	.ds 1
      000003                        234 _tick_ui_bursting_65536_37:
      000003                        235 	.ds 1
      000004                        236 _idlePage_timer_65536_59:
      000004                        237 	.ds 1
      000005                        238 _idlePage_intervalOrDuration_65536_59:
      000005                        239 	.ds 1
      000006                        240 _idlePage_empty_65536_59:
      000006                        241 	.ds 1
      000007                        242 _idlePage_tock_65536_59:
      000007                        243 	.ds 1
      000008                        244 _idlePage_iconChange_65536_59:
      000008                        245 	.ds 1
      000009                        246 _idlePage_playing_65536_59:
      000009                        247 	.ds 1
      00000A                        248 _saveLoadPage_slot_65536_142:
      00000A                        249 	.ds 1
                                    250 ;--------------------------------------------------------
                                    251 ; overlayable items in internal ram 
                                    252 ;--------------------------------------------------------
                                    253 ;--------------------------------------------------------
                                    254 ; indirectly addressable internal ram data
                                    255 ;--------------------------------------------------------
                                    256 	.area ISEG    (DATA)
                                    257 ;--------------------------------------------------------
                                    258 ; absolute internal ram data
                                    259 ;--------------------------------------------------------
                                    260 	.area IABS    (ABS,DATA)
                                    261 	.area IABS    (ABS,DATA)
                                    262 ;--------------------------------------------------------
                                    263 ; bit data
                                    264 ;--------------------------------------------------------
                                    265 	.area BSEG    (BIT)
                                    266 ;--------------------------------------------------------
                                    267 ; paged external ram data
                                    268 ;--------------------------------------------------------
                                    269 	.area PSEG    (PAG,XDATA)
                                    270 ;--------------------------------------------------------
                                    271 ; external ram data
                                    272 ;--------------------------------------------------------
                                    273 	.area XSEG    (XDATA)
                                    274 ;--------------------------------------------------------
                                    275 ; absolute external ram data
                                    276 ;--------------------------------------------------------
                                    277 	.area XABS    (ABS,XDATA)
                                    278 ;--------------------------------------------------------
                                    279 ; external initialized ram data
                                    280 ;--------------------------------------------------------
                                    281 	.area XISEG   (XDATA)
                                    282 	.area HOME    (CODE)
                                    283 	.area GSINIT0 (CODE)
                                    284 	.area GSINIT1 (CODE)
                                    285 	.area GSINIT2 (CODE)
                                    286 	.area GSINIT3 (CODE)
                                    287 	.area GSINIT4 (CODE)
                                    288 	.area GSINIT5 (CODE)
                                    289 	.area GSINIT  (CODE)
                                    290 	.area GSFINAL (CODE)
                                    291 	.area CSEG    (CODE)
                                    292 ;--------------------------------------------------------
                                    293 ; global & static initialisations
                                    294 ;--------------------------------------------------------
                                    295 	.area HOME    (CODE)
                                    296 	.area GSINIT  (CODE)
                                    297 	.area GSFINAL (CODE)
                                    298 	.area GSINIT  (CODE)
                                    299 ;------------------------------------------------------------
                                    300 ;Allocation info for local variables in function 'tick_ui'
                                    301 ;------------------------------------------------------------
                                    302 ;action                    Allocated to registers r7 
                                    303 ;ss                        Allocated to registers r6 
                                    304 ;delay                     Allocated to stack - _bp +1
                                    305 ;bursting                  Allocated with name '_tick_ui_bursting_65536_37'
                                    306 ;------------------------------------------------------------
                                    307 ;	../UI_Manager/ui.c:17: static uint8_t bursting = 0;
      000000 75*03 00         [24]  308 	mov	_tick_ui_bursting_65536_37,#0x00
                                    309 ;------------------------------------------------------------
                                    310 ;Allocation info for local variables in function 'idlePage'
                                    311 ;------------------------------------------------------------
                                    312 ;temp                      Allocated to registers r7 
                                    313 ;timer                     Allocated with name '_idlePage_timer_65536_59'
                                    314 ;intervalOrDuration        Allocated with name '_idlePage_intervalOrDuration_65536_59'
                                    315 ;empty                     Allocated with name '_idlePage_empty_65536_59'
                                    316 ;tock                      Allocated with name '_idlePage_tock_65536_59'
                                    317 ;iconChange                Allocated with name '_idlePage_iconChange_65536_59'
                                    318 ;playing                   Allocated with name '_idlePage_playing_65536_59'
                                    319 ;------------------------------------------------------------
                                    320 ;	../UI_Manager/ui.c:210: static uint8_t timer = 0;
      000003 75*04 00         [24]  321 	mov	_idlePage_timer_65536_59,#0x00
                                    322 ;	../UI_Manager/ui.c:212: static uint8_t empty = 0x00;
      000006 75*06 00         [24]  323 	mov	_idlePage_empty_65536_59,#0x00
                                    324 ;	../UI_Manager/ui.c:213: static uint8_t tock = 0x00;
      000009 75*07 00         [24]  325 	mov	_idlePage_tock_65536_59,#0x00
                                    326 ;	../UI_Manager/ui.c:214: static uint8_t iconChange = 0x00;
      00000C 75*08 00         [24]  327 	mov	_idlePage_iconChange_65536_59,#0x00
                                    328 ;	../UI_Manager/ui.c:215: static uint8_t playing = PAUSE;
      00000F 75*09 00         [24]  329 	mov	_idlePage_playing_65536_59,#0x00
                                    330 ;------------------------------------------------------------
                                    331 ;Allocation info for local variables in function 'saveLoadPage'
                                    332 ;------------------------------------------------------------
                                    333 ;action                    Allocated to registers r7 
                                    334 ;slot                      Allocated with name '_saveLoadPage_slot_65536_142'
                                    335 ;------------------------------------------------------------
                                    336 ;	../UI_Manager/ui.c:747: static uint8_t slot = 0;
      000012 75*0A 00         [24]  337 	mov	_saveLoadPage_slot_65536_142,#0x00
                                    338 ;	../UI_Manager/ui.c:12: static volatile uint8_t State = WELCOME_STATE;
      000015 75*00 45         [24]  339 	mov	_State,#0x45
                                    340 ;	../UI_Manager/ui.c:13: static volatile uint8_t Changed = CHANGE_SCREEN_X;
      000018 75*01 FF         [24]  341 	mov	_Changed,#0xff
                                    342 ;	../UI_Manager/ui.c:14: static volatile uint8_t changed = CHANGE_SCREEN_X;
      00001B 75*02 FF         [24]  343 	mov	_changed,#0xff
                                    344 ;--------------------------------------------------------
                                    345 ; Home
                                    346 ;--------------------------------------------------------
                                    347 	.area HOME    (CODE)
                                    348 	.area HOME    (CODE)
                                    349 ;--------------------------------------------------------
                                    350 ; code
                                    351 ;--------------------------------------------------------
                                    352 	.area CSEG    (CODE)
                                    353 ;------------------------------------------------------------
                                    354 ;Allocation info for local variables in function 'tick_ui'
                                    355 ;------------------------------------------------------------
                                    356 ;action                    Allocated to registers r7 
                                    357 ;ss                        Allocated to registers r6 
                                    358 ;delay                     Allocated to stack - _bp +1
                                    359 ;bursting                  Allocated with name '_tick_ui_bursting_65536_37'
                                    360 ;------------------------------------------------------------
                                    361 ;	../UI_Manager/ui.c:16: void tick_ui(void){
                                    362 ;	-----------------------------------------
                                    363 ;	 function tick_ui
                                    364 ;	-----------------------------------------
      000000                        365 _tick_ui:
                           000007   366 	ar7 = 0x07
                           000006   367 	ar6 = 0x06
                           000005   368 	ar5 = 0x05
                           000004   369 	ar4 = 0x04
                           000003   370 	ar3 = 0x03
                           000002   371 	ar2 = 0x02
                           000001   372 	ar1 = 0x01
                           000000   373 	ar0 = 0x00
      000000 C0*00            [24]  374 	push	_bp
      000002 E5 81            [12]  375 	mov	a,sp
      000004 F5*00            [12]  376 	mov	_bp,a
      000006 24 04            [12]  377 	add	a,#0x04
      000008 F5 81            [12]  378 	mov	sp,a
                                    379 ;	../UI_Manager/ui.c:18: uint8_t action = get_button_action();
      00000A 12r00r00         [24]  380 	lcall	_get_button_action
      00000D AF 82            [24]  381 	mov	r7,dpl
                                    382 ;	../UI_Manager/ui.c:24: if(action == BUTTON_BURST || action == BUTTON_MAN_BURST){
      00000F E4               [12]  383 	clr	a
      000010 BF 05 01         [24]  384 	cjne	r7,#0x05,00416$
      000013 04               [12]  385 	inc	a
      000014                        386 00416$:
      000014 FE               [12]  387 	mov	r6,a
      000015 70 03            [24]  388 	jnz	00103$
      000017 BF 0A 21         [24]  389 	cjne	r7,#0x0a,00104$
      00001A                        390 00103$:
                                    391 ;	../UI_Manager/ui.c:25: power_pump(action == (BUTTON_BURST) ? PUMP_OVERRIDE : PUMP_MASTER_OVERRIDE);
      00001A EE               [12]  392 	mov	a,r6
      00001B 60 06            [24]  393 	jz	00174$
      00001D 7D 02            [12]  394 	mov	r5,#0x02
      00001F 7E 00            [12]  395 	mov	r6,#0x00
      000021 80 04            [24]  396 	sjmp	00175$
      000023                        397 00174$:
      000023 7D 03            [12]  398 	mov	r5,#0x03
      000025 7E 00            [12]  399 	mov	r6,#0x00
      000027                        400 00175$:
      000027 8D 82            [24]  401 	mov	dpl,r5
      000029 C0 07            [24]  402 	push	ar7
      00002B 12r00r00         [24]  403 	lcall	_power_pump
      00002E D0 07            [24]  404 	pop	ar7
                                    405 ;	../UI_Manager/ui.c:26: bursting |= BURSTING;
      000030 AD*03            [24]  406 	mov	r5,_tick_ui_bursting_65536_37
      000032 7E 00            [12]  407 	mov	r6,#0x00
      000034 43 05 80         [24]  408 	orl	ar5,#0x80
      000037 8D*03            [24]  409 	mov	_tick_ui_bursting_65536_37,r5
      000039 80 12            [24]  410 	sjmp	00105$
      00003B                        411 00104$:
                                    412 ;	../UI_Manager/ui.c:27: } else if(bursting & BURSTING){
      00003B E5*03            [12]  413 	mov	a,_tick_ui_bursting_65536_37
      00003D 30 E7 0D         [24]  414 	jnb	acc.7,00105$
                                    415 ;	../UI_Manager/ui.c:28: power_pump(PUMP_OFF);
      000040 75 82 00         [24]  416 	mov	dpl,#0x00
      000043 C0 07            [24]  417 	push	ar7
      000045 12r00r00         [24]  418 	lcall	_power_pump
      000048 D0 07            [24]  419 	pop	ar7
                                    420 ;	../UI_Manager/ui.c:29: bursting &= ~BURSTING;
      00004A 53*03 7F         [24]  421 	anl	_tick_ui_bursting_65536_37,#0x7f
      00004D                        422 00105$:
                                    423 ;	../UI_Manager/ui.c:33: if(action == BUTTON_MANUAL){
      00004D BF 08 38         [24]  424 	cjne	r7,#0x08,00108$
                                    425 ;	../UI_Manager/ui.c:34: set_runtime_data(OP_MODE_INDEX, VALUE, (get_runtime_data(OP_MODE_INDEX) == MODE_MANUAL) ? MODE_DMX : MODE_MANUAL);
      000050 75 82 10         [24]  426 	mov	dpl,#0x10
      000053 C0 07            [24]  427 	push	ar7
      000055 12r00r00         [24]  428 	lcall	_get_runtime_data
      000058 AE 82            [24]  429 	mov	r6,dpl
      00005A D0 07            [24]  430 	pop	ar7
      00005C BE 80 06         [24]  431 	cjne	r6,#0x80,00176$
      00005F 7D 00            [12]  432 	mov	r5,#0x00
      000061 7E 00            [12]  433 	mov	r6,#0x00
      000063 80 04            [24]  434 	sjmp	00177$
      000065                        435 00176$:
      000065 7D 80            [12]  436 	mov	r5,#0x80
      000067 7E 00            [12]  437 	mov	r6,#0x00
      000069                        438 00177$:
      000069 C0 07            [24]  439 	push	ar7
      00006B C0 05            [24]  440 	push	ar5
      00006D E4               [12]  441 	clr	a
      00006E C0 E0            [24]  442 	push	acc
      000070 75 82 10         [24]  443 	mov	dpl,#0x10
      000073 12r00r00         [24]  444 	lcall	_set_runtime_data
      000076 15 81            [12]  445 	dec	sp
      000078 15 81            [12]  446 	dec	sp
                                    447 ;	../UI_Manager/ui.c:36: State = IDLE_STATE;
      00007A 75*00 00         [24]  448 	mov	_State,#0x00
                                    449 ;	../UI_Manager/ui.c:37: Changed = CHANGE_SCREEN_X;
      00007D 75*01 FF         [24]  450 	mov	_Changed,#0xff
                                    451 ;	../UI_Manager/ui.c:39: set_playing(RESET);
      000080 75*00 02         [24]  452 	mov	_Playing,#0x02
                                    453 ;	../UI_Manager/ui.c:41: tick_fogger();
      000083 12r00r00         [24]  454 	lcall	_tick_fogger
      000086 D0 07            [24]  455 	pop	ar7
      000088                        456 00108$:
                                    457 ;	../UI_Manager/ui.c:46: if(action == BUTTON_TIMER_HOLD){
      000088 BF C8 13         [24]  458 	cjne	r7,#0xc8,00113$
                                    459 ;	../UI_Manager/ui.c:47: if(get_playing() == PLAY){
      00008B 74 01            [12]  460 	mov	a,#0x01
      00008D B5*00 05         [24]  461 	cjne	a,_Playing,00110$
                                    462 ;	../UI_Manager/ui.c:48: set_playing(RESET);
      000090 75*00 02         [24]  463 	mov	_Playing,#0x02
      000093 80 03            [24]  464 	sjmp	00111$
      000095                        465 00110$:
                                    466 ;	../UI_Manager/ui.c:50: set_playing(PLAY);
      000095 75*00 01         [24]  467 	mov	_Playing,#0x01
      000098                        468 00111$:
                                    469 ;	../UI_Manager/ui.c:53: tick_fogger();
      000098 12r00r00         [24]  470 	lcall	_tick_fogger
                                    471 ;	../UI_Manager/ui.c:55: return;
      00009B 02r04r30         [24]  472 	ljmp	00172$
      00009E                        473 00113$:
                                    474 ;	../UI_Manager/ui.c:59: if(action == BUTTON_FUN_MAN){
      00009E BF 09 02         [24]  475 	cjne	r7,#0x09,00431$
      0000A1 80 03            [24]  476 	sjmp	00432$
      0000A3                        477 00431$:
      0000A3 02r01r5C         [24]  478 	ljmp	00121$
      0000A6                        479 00432$:
                                    480 ;	../UI_Manager/ui.c:60: set_runtime_data(TANK_LIGHTS_INDEX, VALUE, ~get_runtime_data(TANK_LIGHTS_INDEX));
      0000A6 75 82 0F         [24]  481 	mov	dpl,#0x0f
      0000A9 12r00r00         [24]  482 	lcall	_get_runtime_data
      0000AC E5 82            [12]  483 	mov	a,dpl
      0000AE F4               [12]  484 	cpl	a
      0000AF FE               [12]  485 	mov	r6,a
      0000B0 C0 06            [24]  486 	push	ar6
      0000B2 E4               [12]  487 	clr	a
      0000B3 C0 E0            [24]  488 	push	acc
      0000B5 75 82 0F         [24]  489 	mov	dpl,#0x0f
      0000B8 12r00r00         [24]  490 	lcall	_set_runtime_data
      0000BB 15 81            [12]  491 	dec	sp
      0000BD 15 81            [12]  492 	dec	sp
                                    493 ;	../UI_Manager/ui.c:62: exe_command(CLEAR_DISPLAY);
      0000BF 90 80 00         [24]  494 	mov	dptr,#0x8000
      0000C2 12r00r00         [24]  495 	lcall	_exe_command
                                    496 ;	../UI_Manager/ui.c:63: if(get_runtime_data(TANK_LIGHTS_INDEX)){
      0000C5 75 82 0F         [24]  497 	mov	dpl,#0x0f
      0000C8 12r00r00         [24]  498 	lcall	_get_runtime_data
      0000CB E5 82            [12]  499 	mov	a,dpl
      0000CD 60 1C            [24]  500 	jz	00115$
                                    501 ;	../UI_Manager/ui.c:64: write_string("Tank Lights Off", 15, 0, LINE_0, NOT_SELECTED);
      0000CF E4               [12]  502 	clr	a
      0000D0 C0 E0            [24]  503 	push	acc
      0000D2 C0 E0            [24]  504 	push	acc
      0000D4 C0 E0            [24]  505 	push	acc
      0000D6 74 0F            [12]  506 	mov	a,#0x0f
      0000D8 C0 E0            [24]  507 	push	acc
      0000DA 90r00r00         [24]  508 	mov	dptr,#___str_0
      0000DD 75 F0 80         [24]  509 	mov	b,#0x80
      0000E0 12r00r00         [24]  510 	lcall	_write_string
      0000E3 E5 81            [12]  511 	mov	a,sp
      0000E5 24 FC            [12]  512 	add	a,#0xfc
      0000E7 F5 81            [12]  513 	mov	sp,a
      0000E9 80 1A            [24]  514 	sjmp	00116$
      0000EB                        515 00115$:
                                    516 ;	../UI_Manager/ui.c:66: write_string("Tank Lights On", 15, 0, LINE_0, NOT_SELECTED);
      0000EB E4               [12]  517 	clr	a
      0000EC C0 E0            [24]  518 	push	acc
      0000EE C0 E0            [24]  519 	push	acc
      0000F0 C0 E0            [24]  520 	push	acc
      0000F2 74 0F            [12]  521 	mov	a,#0x0f
      0000F4 C0 E0            [24]  522 	push	acc
      0000F6 90r00r10         [24]  523 	mov	dptr,#___str_1
      0000F9 75 F0 80         [24]  524 	mov	b,#0x80
      0000FC 12r00r00         [24]  525 	lcall	_write_string
      0000FF E5 81            [12]  526 	mov	a,sp
      000101 24 FC            [12]  527 	add	a,#0xfc
      000103 F5 81            [12]  528 	mov	sp,a
      000105                        529 00116$:
                                    530 ;	../UI_Manager/ui.c:69: write_string("Fun+Man to Undo", 15, 0, LINE_1, NOT_SELECTED);
      000105 E4               [12]  531 	clr	a
      000106 C0 E0            [24]  532 	push	acc
      000108 04               [12]  533 	inc	a
      000109 C0 E0            [24]  534 	push	acc
      00010B E4               [12]  535 	clr	a
      00010C C0 E0            [24]  536 	push	acc
      00010E 74 0F            [12]  537 	mov	a,#0x0f
      000110 C0 E0            [24]  538 	push	acc
      000112 90r00r1F         [24]  539 	mov	dptr,#___str_2
      000115 75 F0 80         [24]  540 	mov	b,#0x80
      000118 12r00r00         [24]  541 	lcall	_write_string
      00011B E5 81            [12]  542 	mov	a,sp
      00011D 24 FC            [12]  543 	add	a,#0xfc
      00011F F5 81            [12]  544 	mov	sp,a
                                    545 ;	../UI_Manager/ui.c:73: while(delay--){ ;; }
      000121 A8*00            [24]  546 	mov	r0,_bp
      000123 08               [12]  547 	inc	r0
      000124 76 B5            [12]  548 	mov	@r0,#0xb5
      000126 08               [12]  549 	inc	r0
      000127 76 D8            [12]  550 	mov	@r0,#0xd8
      000129 08               [12]  551 	inc	r0
      00012A 76 07            [12]  552 	mov	@r0,#0x07
      00012C 08               [12]  553 	inc	r0
      00012D 76 00            [12]  554 	mov	@r0,#0x00
      00012F                        555 00117$:
      00012F A8*00            [24]  556 	mov	r0,_bp
      000131 08               [12]  557 	inc	r0
      000132 86 02            [24]  558 	mov	ar2,@r0
      000134 08               [12]  559 	inc	r0
      000135 86 04            [24]  560 	mov	ar4,@r0
      000137 08               [12]  561 	inc	r0
      000138 86 05            [24]  562 	mov	ar5,@r0
      00013A 08               [12]  563 	inc	r0
      00013B 86 06            [24]  564 	mov	ar6,@r0
      00013D A8*00            [24]  565 	mov	r0,_bp
      00013F 08               [12]  566 	inc	r0
      000140 16               [12]  567 	dec	@r0
      000141 B6 FF 0C         [24]  568 	cjne	@r0,#0xff,00434$
      000144 08               [12]  569 	inc	r0
      000145 16               [12]  570 	dec	@r0
      000146 B6 FF 07         [24]  571 	cjne	@r0,#0xff,00434$
      000149 08               [12]  572 	inc	r0
      00014A 16               [12]  573 	dec	@r0
      00014B B6 FF 02         [24]  574 	cjne	@r0,#0xff,00434$
      00014E 08               [12]  575 	inc	r0
      00014F 16               [12]  576 	dec	@r0
      000150                        577 00434$:
      000150 EA               [12]  578 	mov	a,r2
      000151 4C               [12]  579 	orl	a,r4
      000152 4D               [12]  580 	orl	a,r5
      000153 4E               [12]  581 	orl	a,r6
      000154 70 D9            [24]  582 	jnz	00117$
                                    583 ;	../UI_Manager/ui.c:75: Changed = CHANGE_SCREEN_X;
      000156 75*01 FF         [24]  584 	mov	_Changed,#0xff
                                    585 ;	../UI_Manager/ui.c:77: return;
      000159 02r04r30         [24]  586 	ljmp	00172$
      00015C                        587 00121$:
                                    588 ;	../UI_Manager/ui.c:81: if(action == BUTTON_BURST_UP){
      00015C BF 07 02         [24]  589 	cjne	r7,#0x07,00436$
      00015F 80 03            [24]  590 	sjmp	00437$
      000161                        591 00436$:
      000161 02r02r0C         [24]  592 	ljmp	00129$
      000164                        593 00437$:
                                    594 ;	../UI_Manager/ui.c:83: exe_command(CLEAR_DISPLAY);
      000164 90 80 00         [24]  595 	mov	dptr,#0x8000
      000167 12r00r00         [24]  596 	lcall	_exe_command
                                    597 ;	../UI_Manager/ui.c:84: if(get_heater_enabled()){
      00016A E5*00            [12]  598 	mov	a,_Heat_Flag
      00016C 20 E4 24         [24]  599 	jb	acc.4,00123$
                                    600 ;	../UI_Manager/ui.c:85: write_string("Heater Off", 15, 2, LINE_0, NOT_SELECTED);
      00016F E4               [12]  601 	clr	a
      000170 C0 E0            [24]  602 	push	acc
      000172 C0 E0            [24]  603 	push	acc
      000174 74 02            [12]  604 	mov	a,#0x02
      000176 C0 E0            [24]  605 	push	acc
      000178 74 0F            [12]  606 	mov	a,#0x0f
      00017A C0 E0            [24]  607 	push	acc
      00017C 90r00r2F         [24]  608 	mov	dptr,#___str_3
      00017F 75 F0 80         [24]  609 	mov	b,#0x80
      000182 12r00r00         [24]  610 	lcall	_write_string
      000185 E5 81            [12]  611 	mov	a,sp
      000187 24 FC            [12]  612 	add	a,#0xfc
      000189 F5 81            [12]  613 	mov	sp,a
                                    614 ;	../UI_Manager/ui.c:86: power_heater(HEATER_DISABLE);
      00018B 75 82 01         [24]  615 	mov	dpl,#0x01
      00018E 12r00r00         [24]  616 	lcall	_power_heater
      000191 80 22            [24]  617 	sjmp	00124$
      000193                        618 00123$:
                                    619 ;	../UI_Manager/ui.c:88: write_string("Heater On", 15, 2, LINE_0, NOT_SELECTED);
      000193 E4               [12]  620 	clr	a
      000194 C0 E0            [24]  621 	push	acc
      000196 C0 E0            [24]  622 	push	acc
      000198 74 02            [12]  623 	mov	a,#0x02
      00019A C0 E0            [24]  624 	push	acc
      00019C 74 0F            [12]  625 	mov	a,#0x0f
      00019E C0 E0            [24]  626 	push	acc
      0001A0 90r00r3A         [24]  627 	mov	dptr,#___str_4
      0001A3 75 F0 80         [24]  628 	mov	b,#0x80
      0001A6 12r00r00         [24]  629 	lcall	_write_string
      0001A9 E5 81            [12]  630 	mov	a,sp
      0001AB 24 FC            [12]  631 	add	a,#0xfc
      0001AD F5 81            [12]  632 	mov	sp,a
                                    633 ;	../UI_Manager/ui.c:89: power_heater(HEATER_ENABLE);
      0001AF 75 82 00         [24]  634 	mov	dpl,#0x00
      0001B2 12r00r00         [24]  635 	lcall	_power_heater
      0001B5                        636 00124$:
                                    637 ;	../UI_Manager/ui.c:92: write_string("Burst+Up to Undo", 16, 0, LINE_1, NOT_SELECTED);
      0001B5 E4               [12]  638 	clr	a
      0001B6 C0 E0            [24]  639 	push	acc
      0001B8 04               [12]  640 	inc	a
      0001B9 C0 E0            [24]  641 	push	acc
      0001BB E4               [12]  642 	clr	a
      0001BC C0 E0            [24]  643 	push	acc
      0001BE 74 10            [12]  644 	mov	a,#0x10
      0001C0 C0 E0            [24]  645 	push	acc
      0001C2 90r00r44         [24]  646 	mov	dptr,#___str_5
      0001C5 75 F0 80         [24]  647 	mov	b,#0x80
      0001C8 12r00r00         [24]  648 	lcall	_write_string
      0001CB E5 81            [12]  649 	mov	a,sp
      0001CD 24 FC            [12]  650 	add	a,#0xfc
      0001CF F5 81            [12]  651 	mov	sp,a
                                    652 ;	../UI_Manager/ui.c:96: while(delay--){ ;; }
      0001D1 A8*00            [24]  653 	mov	r0,_bp
      0001D3 08               [12]  654 	inc	r0
      0001D4 76 B5            [12]  655 	mov	@r0,#0xb5
      0001D6 08               [12]  656 	inc	r0
      0001D7 76 D8            [12]  657 	mov	@r0,#0xd8
      0001D9 08               [12]  658 	inc	r0
      0001DA 76 07            [12]  659 	mov	@r0,#0x07
      0001DC 08               [12]  660 	inc	r0
      0001DD 76 00            [12]  661 	mov	@r0,#0x00
      0001DF                        662 00125$:
      0001DF A8*00            [24]  663 	mov	r0,_bp
      0001E1 08               [12]  664 	inc	r0
      0001E2 86 02            [24]  665 	mov	ar2,@r0
      0001E4 08               [12]  666 	inc	r0
      0001E5 86 04            [24]  667 	mov	ar4,@r0
      0001E7 08               [12]  668 	inc	r0
      0001E8 86 05            [24]  669 	mov	ar5,@r0
      0001EA 08               [12]  670 	inc	r0
      0001EB 86 06            [24]  671 	mov	ar6,@r0
      0001ED A8*00            [24]  672 	mov	r0,_bp
      0001EF 08               [12]  673 	inc	r0
      0001F0 16               [12]  674 	dec	@r0
      0001F1 B6 FF 0C         [24]  675 	cjne	@r0,#0xff,00439$
      0001F4 08               [12]  676 	inc	r0
      0001F5 16               [12]  677 	dec	@r0
      0001F6 B6 FF 07         [24]  678 	cjne	@r0,#0xff,00439$
      0001F9 08               [12]  679 	inc	r0
      0001FA 16               [12]  680 	dec	@r0
      0001FB B6 FF 02         [24]  681 	cjne	@r0,#0xff,00439$
      0001FE 08               [12]  682 	inc	r0
      0001FF 16               [12]  683 	dec	@r0
      000200                        684 00439$:
      000200 EA               [12]  685 	mov	a,r2
      000201 4C               [12]  686 	orl	a,r4
      000202 4D               [12]  687 	orl	a,r5
      000203 4E               [12]  688 	orl	a,r6
      000204 70 D9            [24]  689 	jnz	00125$
                                    690 ;	../UI_Manager/ui.c:98: Changed = CHANGE_SCREEN_X;
      000206 75*01 FF         [24]  691 	mov	_Changed,#0xff
                                    692 ;	../UI_Manager/ui.c:100: return;
      000209 02r04r30         [24]  693 	ljmp	00172$
      00020C                        694 00129$:
                                    695 ;	../UI_Manager/ui.c:104: if(action == BUTTON_FUN_BURST){
      00020C BF 06 02         [24]  696 	cjne	r7,#0x06,00441$
      00020F 80 03            [24]  697 	sjmp	00442$
      000211                        698 00441$:
      000211 02r02rDB         [24]  699 	ljmp	00134$
      000214                        700 00442$:
                                    701 ;	../UI_Manager/ui.c:106: ss = bursting & ~BURSTING;
      000214 74 7F            [12]  702 	mov	a,#0x7f
      000216 55*03            [12]  703 	anl	a,_tick_ui_bursting_65536_37
      000218 FE               [12]  704 	mov	r6,a
                                    705 ;	../UI_Manager/ui.c:108: exe_command(CLEAR_DISPLAY);
      000219 90 80 00         [24]  706 	mov	dptr,#0x8000
      00021C C0 06            [24]  707 	push	ar6
      00021E 12r00r00         [24]  708 	lcall	_exe_command
      000221 D0 06            [24]  709 	pop	ar6
                                    710 ;	../UI_Manager/ui.c:110: write_string(getString(SECRET_STRING_OFFSET + (ss % 3)*2), LINE_LENGTH, 0, LINE_0, NOT_SELECTED);
      000223 8E 04            [24]  711 	mov	ar4,r6
      000225 7D 00            [12]  712 	mov	r5,#0x00
      000227 C0 06            [24]  713 	push	ar6
      000229 74 03            [12]  714 	mov	a,#0x03
      00022B C0 E0            [24]  715 	push	acc
      00022D E4               [12]  716 	clr	a
      00022E C0 E0            [24]  717 	push	acc
      000230 8C 82            [24]  718 	mov	dpl,r4
      000232 8D 83            [24]  719 	mov	dph,r5
      000234 12r00r00         [24]  720 	lcall	__modsint
      000237 AC 82            [24]  721 	mov	r4,dpl
      000239 15 81            [12]  722 	dec	sp
      00023B 15 81            [12]  723 	dec	sp
      00023D EC               [12]  724 	mov	a,r4
      00023E 2C               [12]  725 	add	a,r4
      00023F FC               [12]  726 	mov	r4,a
      000240 24 28            [12]  727 	add	a,#0x28
      000242 F5 82            [12]  728 	mov	dpl,a
      000244 C0 04            [24]  729 	push	ar4
      000246 12r13r23         [24]  730 	lcall	_getString
      000249 AA 82            [24]  731 	mov	r2,dpl
      00024B AB 83            [24]  732 	mov	r3,dph
      00024D AD F0            [24]  733 	mov	r5,b
      00024F E4               [12]  734 	clr	a
      000250 C0 E0            [24]  735 	push	acc
      000252 C0 E0            [24]  736 	push	acc
      000254 C0 E0            [24]  737 	push	acc
      000256 74 10            [12]  738 	mov	a,#0x10
      000258 C0 E0            [24]  739 	push	acc
      00025A 8A 82            [24]  740 	mov	dpl,r2
      00025C 8B 83            [24]  741 	mov	dph,r3
      00025E 8D F0            [24]  742 	mov	b,r5
      000260 12r00r00         [24]  743 	lcall	_write_string
      000263 E5 81            [12]  744 	mov	a,sp
      000265 24 FC            [12]  745 	add	a,#0xfc
      000267 F5 81            [12]  746 	mov	sp,a
      000269 D0 04            [24]  747 	pop	ar4
                                    748 ;	../UI_Manager/ui.c:111: write_string(getString(SECRET_STRING_OFFSET + (ss % 3)*2 + 1), LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      00026B 74 29            [12]  749 	mov	a,#0x29
      00026D 2C               [12]  750 	add	a,r4
      00026E F5 82            [12]  751 	mov	dpl,a
      000270 12r13r23         [24]  752 	lcall	_getString
      000273 AB 82            [24]  753 	mov	r3,dpl
      000275 AC 83            [24]  754 	mov	r4,dph
      000277 AD F0            [24]  755 	mov	r5,b
      000279 E4               [12]  756 	clr	a
      00027A C0 E0            [24]  757 	push	acc
      00027C 04               [12]  758 	inc	a
      00027D C0 E0            [24]  759 	push	acc
      00027F E4               [12]  760 	clr	a
      000280 C0 E0            [24]  761 	push	acc
      000282 74 10            [12]  762 	mov	a,#0x10
      000284 C0 E0            [24]  763 	push	acc
      000286 8B 82            [24]  764 	mov	dpl,r3
      000288 8C 83            [24]  765 	mov	dph,r4
      00028A 8D F0            [24]  766 	mov	b,r5
      00028C 12r00r00         [24]  767 	lcall	_write_string
      00028F E5 81            [12]  768 	mov	a,sp
      000291 24 FC            [12]  769 	add	a,#0xfc
      000293 F5 81            [12]  770 	mov	sp,a
      000295 D0 06            [24]  771 	pop	ar6
                                    772 ;	../UI_Manager/ui.c:113: ss++;
      000297 0E               [12]  773 	inc	r6
                                    774 ;	../UI_Manager/ui.c:115: bursting &= BURSTING;
      000298 53*03 80         [24]  775 	anl	_tick_ui_bursting_65536_37,#0x80
                                    776 ;	../UI_Manager/ui.c:116: bursting |= (ss & ~BURSTING);
      00029B 74 7F            [12]  777 	mov	a,#0x7f
      00029D 5E               [12]  778 	anl	a,r6
      00029E 42*03            [12]  779 	orl	_tick_ui_bursting_65536_37,a
                                    780 ;	../UI_Manager/ui.c:120: while(delay--){ ;; }
      0002A0 A8*00            [24]  781 	mov	r0,_bp
      0002A2 08               [12]  782 	inc	r0
      0002A3 76 DD            [12]  783 	mov	@r0,#0xdd
      0002A5 08               [12]  784 	inc	r0
      0002A6 76 8A            [12]  785 	mov	@r0,#0x8a
      0002A8 08               [12]  786 	inc	r0
      0002A9 76 14            [12]  787 	mov	@r0,#0x14
      0002AB 08               [12]  788 	inc	r0
      0002AC 76 00            [12]  789 	mov	@r0,#0x00
      0002AE                        790 00130$:
      0002AE A8*00            [24]  791 	mov	r0,_bp
      0002B0 08               [12]  792 	inc	r0
      0002B1 86 02            [24]  793 	mov	ar2,@r0
      0002B3 08               [12]  794 	inc	r0
      0002B4 86 04            [24]  795 	mov	ar4,@r0
      0002B6 08               [12]  796 	inc	r0
      0002B7 86 05            [24]  797 	mov	ar5,@r0
      0002B9 08               [12]  798 	inc	r0
      0002BA 86 06            [24]  799 	mov	ar6,@r0
      0002BC A8*00            [24]  800 	mov	r0,_bp
      0002BE 08               [12]  801 	inc	r0
      0002BF 16               [12]  802 	dec	@r0
      0002C0 B6 FF 0C         [24]  803 	cjne	@r0,#0xff,00443$
      0002C3 08               [12]  804 	inc	r0
      0002C4 16               [12]  805 	dec	@r0
      0002C5 B6 FF 07         [24]  806 	cjne	@r0,#0xff,00443$
      0002C8 08               [12]  807 	inc	r0
      0002C9 16               [12]  808 	dec	@r0
      0002CA B6 FF 02         [24]  809 	cjne	@r0,#0xff,00443$
      0002CD 08               [12]  810 	inc	r0
      0002CE 16               [12]  811 	dec	@r0
      0002CF                        812 00443$:
      0002CF EA               [12]  813 	mov	a,r2
      0002D0 4C               [12]  814 	orl	a,r4
      0002D1 4D               [12]  815 	orl	a,r5
      0002D2 4E               [12]  816 	orl	a,r6
      0002D3 70 D9            [24]  817 	jnz	00130$
                                    818 ;	../UI_Manager/ui.c:122: Changed = CHANGE_SCREEN_X;
      0002D5 75*01 FF         [24]  819 	mov	_Changed,#0xff
                                    820 ;	../UI_Manager/ui.c:124: return;
      0002D8 02r04r30         [24]  821 	ljmp	00172$
      0002DB                        822 00134$:
                                    823 ;	../UI_Manager/ui.c:128: if(action == BUTTON_FUN_TIME){
      0002DB BF 04 06         [24]  824 	cjne	r7,#0x04,00136$
                                    825 ;	../UI_Manager/ui.c:129: State = IDLE_STATE;
      0002DE 75*00 00         [24]  826 	mov	_State,#0x00
                                    827 ;	../UI_Manager/ui.c:130: Changed = CHANGE_SCREEN_X;
      0002E1 75*01 FF         [24]  828 	mov	_Changed,#0xff
      0002E4                        829 00136$:
                                    830 ;	../UI_Manager/ui.c:135: if(Changed || 
      0002E4 E5*01            [12]  831 	mov	a,_Changed
      0002E6 70 2F            [24]  832 	jnz	00161$
                                    833 ;	../UI_Manager/ui.c:136: action == BUTTON_UP ||
      0002E8 BF 03 02         [24]  834 	cjne	r7,#0x03,00448$
      0002EB 80 2A            [24]  835 	sjmp	00161$
      0002ED                        836 00448$:
                                    837 ;	../UI_Manager/ui.c:137: action == BUTTON_UP_HOLD||
      0002ED BF 1E 02         [24]  838 	cjne	r7,#0x1e,00449$
      0002F0 80 25            [24]  839 	sjmp	00161$
      0002F2                        840 00449$:
                                    841 ;	../UI_Manager/ui.c:138: action == BUTTON_UP_BURST ||
      0002F2 BF 1F 02         [24]  842 	cjne	r7,#0x1f,00450$
      0002F5 80 20            [24]  843 	sjmp	00161$
      0002F7                        844 00450$:
                                    845 ;	../UI_Manager/ui.c:139: action == BUTTON_DOWN ||
      0002F7 BF 0B 02         [24]  846 	cjne	r7,#0x0b,00451$
      0002FA 80 1B            [24]  847 	sjmp	00161$
      0002FC                        848 00451$:
                                    849 ;	../UI_Manager/ui.c:140: action == BUTTON_DOWN_HOLD ||
      0002FC BF 6E 02         [24]  850 	cjne	r7,#0x6e,00452$
      0002FF 80 16            [24]  851 	sjmp	00161$
      000301                        852 00452$:
                                    853 ;	../UI_Manager/ui.c:141: action == BUTTON_DOWN_BURST ||
      000301 BF 6F 02         [24]  854 	cjne	r7,#0x6f,00453$
      000304 80 11            [24]  855 	sjmp	00161$
      000306                        856 00453$:
                                    857 ;	../UI_Manager/ui.c:142: action == BUTTON_TIMER ||
      000306 BF 01 02         [24]  858 	cjne	r7,#0x01,00454$
      000309 80 0C            [24]  859 	sjmp	00161$
      00030B                        860 00454$:
                                    861 ;	../UI_Manager/ui.c:143: action == BUTTON_FUNCTION ||
      00030B BF 02 02         [24]  862 	cjne	r7,#0x02,00455$
      00030E 80 07            [24]  863 	sjmp	00161$
      000310                        864 00455$:
                                    865 ;	../UI_Manager/ui.c:144: State == IDLE_STATE){
      000310 E5*00            [12]  866 	mov	a,_State
      000312 60 03            [24]  867 	jz	00456$
      000314 02r04r30         [24]  868 	ljmp	00172$
      000317                        869 00456$:
      000317                        870 00161$:
                                    871 ;	../UI_Manager/ui.c:146: switch (State)
      000317 AE*00            [24]  872 	mov	r6,_State
      000319 BE 01 03         [24]  873 	cjne	r6,#0x01,00457$
      00031C 02r03rC5         [24]  874 	ljmp	00138$
      00031F                        875 00457$:
      00031F BE 02 03         [24]  876 	cjne	r6,#0x02,00458$
      000322 02r03rD3         [24]  877 	ljmp	00140$
      000325                        878 00458$:
      000325 BE 03 03         [24]  879 	cjne	r6,#0x03,00459$
      000328 02r03rCC         [24]  880 	ljmp	00139$
      00032B                        881 00459$:
      00032B BE 04 03         [24]  882 	cjne	r6,#0x04,00460$
      00032E 02r03rDA         [24]  883 	ljmp	00141$
      000331                        884 00460$:
      000331 BE 05 03         [24]  885 	cjne	r6,#0x05,00461$
      000334 02r03rE1         [24]  886 	ljmp	00142$
      000337                        887 00461$:
      000337 BE 06 03         [24]  888 	cjne	r6,#0x06,00462$
      00033A 02r03rE8         [24]  889 	ljmp	00146$
      00033D                        890 00462$:
      00033D BE 07 03         [24]  891 	cjne	r6,#0x07,00463$
      000340 02r03rE8         [24]  892 	ljmp	00146$
      000343                        893 00463$:
      000343 BE 08 03         [24]  894 	cjne	r6,#0x08,00464$
      000346 02r03rE8         [24]  895 	ljmp	00146$
      000349                        896 00464$:
      000349 BE 09 03         [24]  897 	cjne	r6,#0x09,00465$
      00034C 02r03rE8         [24]  898 	ljmp	00146$
      00034F                        899 00465$:
      00034F BE 0A 03         [24]  900 	cjne	r6,#0x0a,00466$
      000352 02r03rEF         [24]  901 	ljmp	00149$
      000355                        902 00466$:
      000355 BE 0B 03         [24]  903 	cjne	r6,#0x0b,00467$
      000358 02r03rEF         [24]  904 	ljmp	00149$
      00035B                        905 00467$:
      00035B BE 0C 03         [24]  906 	cjne	r6,#0x0c,00468$
      00035E 02r03rEF         [24]  907 	ljmp	00149$
      000361                        908 00468$:
      000361 BE 0D 03         [24]  909 	cjne	r6,#0x0d,00469$
      000364 02r03rF6         [24]  910 	ljmp	00151$
      000367                        911 00469$:
      000367 BE 0E 03         [24]  912 	cjne	r6,#0x0e,00470$
      00036A 02r03rF6         [24]  913 	ljmp	00151$
      00036D                        914 00470$:
      00036D BE 14 03         [24]  915 	cjne	r6,#0x14,00471$
      000370 02r03rFD         [24]  916 	ljmp	00152$
      000373                        917 00471$:
      000373 BE 15 03         [24]  918 	cjne	r6,#0x15,00472$
      000376 02r04r04         [24]  919 	ljmp	00153$
      000379                        920 00472$:
      000379 BE 45 02         [24]  921 	cjne	r6,#0x45,00473$
      00037C 80 03            [24]  922 	sjmp	00474$
      00037E                        923 00473$:
      00037E 02r04r0B         [24]  924 	ljmp	00154$
      000381                        925 00474$:
                                    926 ;	../UI_Manager/ui.c:151: exe_command(CLEAR_DISPLAY);
      000381 90 80 00         [24]  927 	mov	dptr,#0x8000
      000384 12r00r00         [24]  928 	lcall	_exe_command
                                    929 ;	../UI_Manager/ui.c:152: write_string("AtmosFEAR 221B", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      000387 E4               [12]  930 	clr	a
      000388 C0 E0            [24]  931 	push	acc
      00038A C0 E0            [24]  932 	push	acc
      00038C 04               [12]  933 	inc	a
      00038D C0 E0            [24]  934 	push	acc
      00038F C4               [12]  935 	swap	a
      000390 C0 E0            [24]  936 	push	acc
      000392 90r00r55         [24]  937 	mov	dptr,#___str_6
      000395 75 F0 80         [24]  938 	mov	b,#0x80
      000398 12r00r00         [24]  939 	lcall	_write_string
      00039B E5 81            [12]  940 	mov	a,sp
      00039D 24 FC            [12]  941 	add	a,#0xfc
      00039F F5 81            [12]  942 	mov	sp,a
                                    943 ;	../UI_Manager/ui.c:153: write_string("By Blizzard Pro", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      0003A1 E4               [12]  944 	clr	a
      0003A2 C0 E0            [24]  945 	push	acc
      0003A4 04               [12]  946 	inc	a
      0003A5 C0 E0            [24]  947 	push	acc
      0003A7 E4               [12]  948 	clr	a
      0003A8 C0 E0            [24]  949 	push	acc
      0003AA 74 10            [12]  950 	mov	a,#0x10
      0003AC C0 E0            [24]  951 	push	acc
      0003AE 90r00r64         [24]  952 	mov	dptr,#___str_7
      0003B1 75 F0 80         [24]  953 	mov	b,#0x80
      0003B4 12r00r00         [24]  954 	lcall	_write_string
      0003B7 E5 81            [12]  955 	mov	a,sp
      0003B9 24 FC            [12]  956 	add	a,#0xfc
      0003BB F5 81            [12]  957 	mov	sp,a
                                    958 ;	../UI_Manager/ui.c:155: Changed = CHANGE_SCREEN_X;
      0003BD 75*01 FF         [24]  959 	mov	_Changed,#0xff
                                    960 ;	../UI_Manager/ui.c:156: State = IDLE_STATE;
      0003C0 75*00 00         [24]  961 	mov	_State,#0x00
                                    962 ;	../UI_Manager/ui.c:158: break;
                                    963 ;	../UI_Manager/ui.c:159: case MANUAL_FOG_POWER_STATE:
      0003C3 80 6B            [24]  964 	sjmp	00172$
      0003C5                        965 00138$:
                                    966 ;	../UI_Manager/ui.c:160: fogLevelPage(action);
      0003C5 8F 82            [24]  967 	mov	dpl,r7
      0003C7 12r07rF0         [24]  968 	lcall	_fogLevelPage
                                    969 ;	../UI_Manager/ui.c:161: break;
                                    970 ;	../UI_Manager/ui.c:162: case MANUAL_FOG_INTERVAL_STATE:
      0003CA 80 64            [24]  971 	sjmp	00172$
      0003CC                        972 00139$:
                                    973 ;	../UI_Manager/ui.c:163: fogIntervalPage(action);
      0003CC 8F 82            [24]  974 	mov	dpl,r7
      0003CE 12r09r80         [24]  975 	lcall	_fogIntervalPage
                                    976 ;	../UI_Manager/ui.c:164: break;
                                    977 ;	../UI_Manager/ui.c:165: case MANUAL_FOG_DURATION_STATE:
      0003D1 80 5D            [24]  978 	sjmp	00172$
      0003D3                        979 00140$:
                                    980 ;	../UI_Manager/ui.c:166: fogDurationPage(action);
      0003D3 8F 82            [24]  981 	mov	dpl,r7
      0003D5 12r0Ar51         [24]  982 	lcall	_fogDurationPage
                                    983 ;	../UI_Manager/ui.c:167: break;
                                    984 ;	../UI_Manager/ui.c:168: case MANUAL_COLOR_MACRO_STATE:
      0003D8 80 56            [24]  985 	sjmp	00172$
      0003DA                        986 00141$:
                                    987 ;	../UI_Manager/ui.c:169: macroPage(action);
      0003DA 8F 82            [24]  988 	mov	dpl,r7
      0003DC 12r0Br22         [24]  989 	lcall	_macroPage
                                    990 ;	../UI_Manager/ui.c:170: break;
                                    991 ;	../UI_Manager/ui.c:171: case MANUAL_MACRO_SPEED_STATE:
      0003DF 80 4F            [24]  992 	sjmp	00172$
      0003E1                        993 00142$:
                                    994 ;	../UI_Manager/ui.c:172: macroSpeedPage(action);
      0003E1 8F 82            [24]  995 	mov	dpl,r7
      0003E3 12r0BrEC         [24]  996 	lcall	_macroSpeedPage
                                    997 ;	../UI_Manager/ui.c:173: break;
                                    998 ;	../UI_Manager/ui.c:177: case MANUAL_STROBE_STATE:
      0003E6 80 48            [24]  999 	sjmp	00172$
      0003E8                       1000 00146$:
                                   1001 ;	../UI_Manager/ui.c:178: colorPage(action);
      0003E8 8F 82            [24] 1002 	mov	dpl,r7
      0003EA 12r0CrE7         [24] 1003 	lcall	_colorPage
                                   1004 ;	../UI_Manager/ui.c:179: break;
                                   1005 ;	../UI_Manager/ui.c:182: case MANUAL_REMOTE_ACTION_6_STATE:
      0003ED 80 41            [24] 1006 	sjmp	00172$
      0003EF                       1007 00149$:
                                   1008 ;	../UI_Manager/ui.c:183: remotePage(action);
      0003EF 8F 82            [24] 1009 	mov	dpl,r7
      0003F1 12r0Er27         [24] 1010 	lcall	_remotePage
                                   1011 ;	../UI_Manager/ui.c:184: break;
                                   1012 ;	../UI_Manager/ui.c:186: case MANUAL_SAVE_SETTINGS_STATE:
      0003F4 80 3A            [24] 1013 	sjmp	00172$
      0003F6                       1014 00151$:
                                   1015 ;	../UI_Manager/ui.c:187: saveLoadPage(action);
      0003F6 8F 82            [24] 1016 	mov	dpl,r7
      0003F8 12r0Fr73         [24] 1017 	lcall	_saveLoadPage
                                   1018 ;	../UI_Manager/ui.c:188: break;
                                   1019 ;	../UI_Manager/ui.c:189: case DMX_ADDRESS_STATE:
      0003FB 80 33            [24] 1020 	sjmp	00172$
      0003FD                       1021 00152$:
                                   1022 ;	../UI_Manager/ui.c:190: dmxAddressPage(action);
      0003FD 8F 82            [24] 1023 	mov	dpl,r7
      0003FF 12r10rC3         [24] 1024 	lcall	_dmxAddressPage
                                   1025 ;	../UI_Manager/ui.c:191: break;
                                   1026 ;	../UI_Manager/ui.c:192: case DMX_CHANNEL_MODE_STATE:
      000402 80 2C            [24] 1027 	sjmp	00172$
      000404                       1028 00153$:
                                   1029 ;	../UI_Manager/ui.c:193: dmxChannelPage(action);
      000404 8F 82            [24] 1030 	mov	dpl,r7
      000406 12r11r5B         [24] 1031 	lcall	_dmxChannelPage
                                   1032 ;	../UI_Manager/ui.c:194: break;
                                   1033 ;	../UI_Manager/ui.c:195: default: //IDLE state
      000409 80 25            [24] 1034 	sjmp	00172$
      00040B                       1035 00154$:
                                   1036 ;	../UI_Manager/ui.c:196: idlePage();
      00040B C0 07            [24] 1037 	push	ar7
      00040D 12r04r36         [24] 1038 	lcall	_idlePage
      000410 D0 07            [24] 1039 	pop	ar7
                                   1040 ;	../UI_Manager/ui.c:198: if(action == BUTTON_FUNCTION){
      000412 BF 02 0D         [24] 1041 	cjne	r7,#0x02,00158$
                                   1042 ;	../UI_Manager/ui.c:199: set_ui_state(INC, NULL);
      000415 E4               [12] 1043 	clr	a
      000416 C0 E0            [24] 1044 	push	acc
      000418 75 82 01         [24] 1045 	mov	dpl,#0x01
      00041B 12r12r16         [24] 1046 	lcall	_set_ui_state
      00041E 15 81            [12] 1047 	dec	sp
      000420 80 0E            [24] 1048 	sjmp	00172$
      000422                       1049 00158$:
                                   1050 ;	../UI_Manager/ui.c:200: } else if(action == BUTTON_TIMER){
      000422 BF 01 0B         [24] 1051 	cjne	r7,#0x01,00172$
                                   1052 ;	../UI_Manager/ui.c:201: set_ui_state(DEC, NULL);
      000425 E4               [12] 1053 	clr	a
      000426 C0 E0            [24] 1054 	push	acc
      000428 75 82 02         [24] 1055 	mov	dpl,#0x02
      00042B 12r12r16         [24] 1056 	lcall	_set_ui_state
      00042E 15 81            [12] 1057 	dec	sp
                                   1058 ;	../UI_Manager/ui.c:204: }
      000430                       1059 00172$:
                                   1060 ;	../UI_Manager/ui.c:207: }
      000430 85*00 81         [24] 1061 	mov	sp,_bp
      000433 D0*00            [24] 1062 	pop	_bp
      000435 22               [24] 1063 	ret
                                   1064 ;------------------------------------------------------------
                                   1065 ;Allocation info for local variables in function 'idlePage'
                                   1066 ;------------------------------------------------------------
                                   1067 ;temp                      Allocated to registers r7 
                                   1068 ;timer                     Allocated with name '_idlePage_timer_65536_59'
                                   1069 ;intervalOrDuration        Allocated with name '_idlePage_intervalOrDuration_65536_59'
                                   1070 ;empty                     Allocated with name '_idlePage_empty_65536_59'
                                   1071 ;tock                      Allocated with name '_idlePage_tock_65536_59'
                                   1072 ;iconChange                Allocated with name '_idlePage_iconChange_65536_59'
                                   1073 ;playing                   Allocated with name '_idlePage_playing_65536_59'
                                   1074 ;------------------------------------------------------------
                                   1075 ;	../UI_Manager/ui.c:209: void idlePage(){
                                   1076 ;	-----------------------------------------
                                   1077 ;	 function idlePage
                                   1078 ;	-----------------------------------------
      000436                       1079 _idlePage:
                                   1080 ;	../UI_Manager/ui.c:218: if(empty){
      000436 E5*06            [12] 1081 	mov	a,_idlePage_empty_65536_59
      000438 60 50            [24] 1082 	jz	00107$
                                   1083 ;	../UI_Manager/ui.c:219: if(get_fog_fluid_level() == TANK_FULL){
      00043A 74 01            [12] 1084 	mov	a,#0x01
      00043C B5*00 07         [24] 1085 	cjne	a,_Fluid_Level,00104$
                                   1086 ;	../UI_Manager/ui.c:220: empty = 0x00;
      00043F 75*06 00         [24] 1087 	mov	_idlePage_empty_65536_59,#0x00
                                   1088 ;	../UI_Manager/ui.c:221: Changed = CHANGE_SCREEN_X;
      000442 75*01 FF         [24] 1089 	mov	_Changed,#0xff
      000445 22               [24] 1090 	ret
      000446                       1091 00104$:
                                   1092 ;	../UI_Manager/ui.c:222: } else if(Changed){
      000446 E5*01            [12] 1093 	mov	a,_Changed
      000448 60 3F            [24] 1094 	jz	00105$
                                   1095 ;	../UI_Manager/ui.c:223: Changed = 0x00;
      00044A 75*01 00         [24] 1096 	mov	_Changed,#0x00
                                   1097 ;	../UI_Manager/ui.c:224: exe_command(CLEAR_DISPLAY);
      00044D 90 80 00         [24] 1098 	mov	dptr,#0x8000
      000450 12r00r00         [24] 1099 	lcall	_exe_command
                                   1100 ;	../UI_Manager/ui.c:225: write_string("PC Load Letter", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      000453 E4               [12] 1101 	clr	a
      000454 C0 E0            [24] 1102 	push	acc
      000456 C0 E0            [24] 1103 	push	acc
      000458 04               [12] 1104 	inc	a
      000459 C0 E0            [24] 1105 	push	acc
      00045B C4               [12] 1106 	swap	a
      00045C C0 E0            [24] 1107 	push	acc
      00045E 90r00r74         [24] 1108 	mov	dptr,#___str_8
      000461 75 F0 80         [24] 1109 	mov	b,#0x80
      000464 12r00r00         [24] 1110 	lcall	_write_string
      000467 E5 81            [12] 1111 	mov	a,sp
      000469 24 FC            [12] 1112 	add	a,#0xfc
      00046B F5 81            [12] 1113 	mov	sp,a
                                   1114 ;	../UI_Manager/ui.c:226: write_string("Burst to Refill", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      00046D E4               [12] 1115 	clr	a
      00046E C0 E0            [24] 1116 	push	acc
      000470 04               [12] 1117 	inc	a
      000471 C0 E0            [24] 1118 	push	acc
      000473 E4               [12] 1119 	clr	a
      000474 C0 E0            [24] 1120 	push	acc
      000476 74 10            [12] 1121 	mov	a,#0x10
      000478 C0 E0            [24] 1122 	push	acc
      00047A 90r00r83         [24] 1123 	mov	dptr,#___str_9
      00047D 75 F0 80         [24] 1124 	mov	b,#0x80
      000480 12r00r00         [24] 1125 	lcall	_write_string
      000483 E5 81            [12] 1126 	mov	a,sp
      000485 24 FC            [12] 1127 	add	a,#0xfc
      000487 F5 81            [12] 1128 	mov	sp,a
      000489                       1129 00105$:
                                   1130 ;	../UI_Manager/ui.c:229: return;
      000489 22               [24] 1131 	ret
      00048A                       1132 00107$:
                                   1133 ;	../UI_Manager/ui.c:233: if(get_fog_fluid_level() == TANK_EMPTY && get_heated() == HEATED){
      00048A E5*00            [12] 1134 	mov	a,_Fluid_Level
      00048C 70 47            [24] 1135 	jnz	00109$
      00048E AE*00            [24] 1136 	mov	r6,_Heat_Flag
      000490 53 06 80         [24] 1137 	anl	ar6,#0x80
      000493 7F 00            [12] 1138 	mov	r7,#0x00
      000495 BE 80 3D         [24] 1139 	cjne	r6,#0x80,00109$
      000498 BF 00 3A         [24] 1140 	cjne	r7,#0x00,00109$
                                   1141 ;	../UI_Manager/ui.c:235: write_string("PC Load Letter", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      00049B E4               [12] 1142 	clr	a
      00049C C0 E0            [24] 1143 	push	acc
      00049E C0 E0            [24] 1144 	push	acc
      0004A0 04               [12] 1145 	inc	a
      0004A1 C0 E0            [24] 1146 	push	acc
      0004A3 C4               [12] 1147 	swap	a
      0004A4 C0 E0            [24] 1148 	push	acc
      0004A6 90r00r74         [24] 1149 	mov	dptr,#___str_8
      0004A9 75 F0 80         [24] 1150 	mov	b,#0x80
      0004AC 12r00r00         [24] 1151 	lcall	_write_string
      0004AF E5 81            [12] 1152 	mov	a,sp
      0004B1 24 FC            [12] 1153 	add	a,#0xfc
      0004B3 F5 81            [12] 1154 	mov	sp,a
                                   1155 ;	../UI_Manager/ui.c:236: write_string("Burst to Refill", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      0004B5 E4               [12] 1156 	clr	a
      0004B6 C0 E0            [24] 1157 	push	acc
      0004B8 04               [12] 1158 	inc	a
      0004B9 C0 E0            [24] 1159 	push	acc
      0004BB E4               [12] 1160 	clr	a
      0004BC C0 E0            [24] 1161 	push	acc
      0004BE 74 10            [12] 1162 	mov	a,#0x10
      0004C0 C0 E0            [24] 1163 	push	acc
      0004C2 90r00r83         [24] 1164 	mov	dptr,#___str_9
      0004C5 75 F0 80         [24] 1165 	mov	b,#0x80
      0004C8 12r00r00         [24] 1166 	lcall	_write_string
      0004CB E5 81            [12] 1167 	mov	a,sp
      0004CD 24 FC            [12] 1168 	add	a,#0xfc
      0004CF F5 81            [12] 1169 	mov	sp,a
                                   1170 ;	../UI_Manager/ui.c:238: empty = 0xFF;
      0004D1 75*06 FF         [24] 1171 	mov	_idlePage_empty_65536_59,#0xff
                                   1172 ;	../UI_Manager/ui.c:240: return;
      0004D4 22               [24] 1173 	ret
      0004D5                       1174 00109$:
                                   1175 ;	../UI_Manager/ui.c:243: if(Changed){
      0004D5 E5*01            [12] 1176 	mov	a,_Changed
      0004D7 70 03            [24] 1177 	jnz	00344$
      0004D9 02r05r98         [24] 1178 	ljmp	00119$
      0004DC                       1179 00344$:
                                   1180 ;	../UI_Manager/ui.c:244: exe_command(CLEAR_DISPLAY);
      0004DC 90 80 00         [24] 1181 	mov	dptr,#0x8000
      0004DF 12r00r00         [24] 1182 	lcall	_exe_command
                                   1183 ;	../UI_Manager/ui.c:245: Changed = 0x00;
      0004E2 75*01 00         [24] 1184 	mov	_Changed,#0x00
                                   1185 ;	../UI_Manager/ui.c:246: changed = 0xFF;
      0004E5 75*02 FF         [24] 1186 	mov	_changed,#0xff
                                   1187 ;	../UI_Manager/ui.c:247: timer = 0xFF;
      0004E8 75*04 FF         [24] 1188 	mov	_idlePage_timer_65536_59,#0xff
                                   1189 ;	../UI_Manager/ui.c:248: intervalOrDuration = 0x55; //guaranteed to not be interval or duration
      0004EB 75*05 55         [24] 1190 	mov	_idlePage_intervalOrDuration_65536_59,#0x55
                                   1191 ;	../UI_Manager/ui.c:250: if(get_runtime_data(OP_MODE_INDEX)){ /* Manual Mode */
      0004EE 75 82 10         [24] 1192 	mov	dpl,#0x10
      0004F1 12r00r00         [24] 1193 	lcall	_get_runtime_data
      0004F4 E5 82            [12] 1194 	mov	a,dpl
      0004F6 60 1D            [24] 1195 	jz	00116$
                                   1196 ;	../UI_Manager/ui.c:251: write_string("Manual Mode", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      0004F8 E4               [12] 1197 	clr	a
      0004F9 C0 E0            [24] 1198 	push	acc
      0004FB C0 E0            [24] 1199 	push	acc
      0004FD 04               [12] 1200 	inc	a
      0004FE C0 E0            [24] 1201 	push	acc
      000500 C4               [12] 1202 	swap	a
      000501 C0 E0            [24] 1203 	push	acc
      000503 90r00r93         [24] 1204 	mov	dptr,#___str_10
      000506 75 F0 80         [24] 1205 	mov	b,#0x80
      000509 12r00r00         [24] 1206 	lcall	_write_string
      00050C E5 81            [12] 1207 	mov	a,sp
      00050E 24 FC            [12] 1208 	add	a,#0xfc
      000510 F5 81            [12] 1209 	mov	sp,a
      000512 02r05r98         [24] 1210 	ljmp	00119$
      000515                       1211 00116$:
                                   1212 ;	../UI_Manager/ui.c:254: write_number(get_dmx_address(), 4, LINE_1, NOT_SELECTED);
      000515 12r00r00         [24] 1213 	lcall	_get_dmx_address
      000518 E4               [12] 1214 	clr	a
      000519 C0 E0            [24] 1215 	push	acc
      00051B 04               [12] 1216 	inc	a
      00051C C0 E0            [24] 1217 	push	acc
      00051E 74 04            [12] 1218 	mov	a,#0x04
      000520 C0 E0            [24] 1219 	push	acc
      000522 12r00r00         [24] 1220 	lcall	_write_number
      000525 15 81            [12] 1221 	dec	sp
      000527 15 81            [12] 1222 	dec	sp
      000529 15 81            [12] 1223 	dec	sp
                                   1224 ;	../UI_Manager/ui.c:255: switch (get_runtime_data(MODE_INDEX))
      00052B 75 82 0E         [24] 1225 	mov	dpl,#0x0e
      00052E 12r00r00         [24] 1226 	lcall	_get_runtime_data
      000531 AF 82            [24] 1227 	mov	r7,dpl
      000533 BF 01 02         [24] 1228 	cjne	r7,#0x01,00346$
      000536 80 05            [24] 1229 	sjmp	00111$
      000538                       1230 00346$:
                                   1231 ;	../UI_Manager/ui.c:257: case OPTION_DMX_MODE_3:
      000538 BF 02 0A         [24] 1232 	cjne	r7,#0x02,00113$
      00053B 80 04            [24] 1233 	sjmp	00112$
      00053D                       1234 00111$:
                                   1235 ;	../UI_Manager/ui.c:258: temp = 3;
      00053D 7F 03            [12] 1236 	mov	r7,#0x03
                                   1237 ;	../UI_Manager/ui.c:259: break;
                                   1238 ;	../UI_Manager/ui.c:260: case OPTION_DMX_MODE_1: 
      00053F 80 06            [24] 1239 	sjmp	00114$
      000541                       1240 00112$:
                                   1241 ;	../UI_Manager/ui.c:261: temp = 1;
      000541 7F 01            [12] 1242 	mov	r7,#0x01
                                   1243 ;	../UI_Manager/ui.c:262: break;
                                   1244 ;	../UI_Manager/ui.c:263: default:
      000543 80 02            [24] 1245 	sjmp	00114$
      000545                       1246 00113$:
                                   1247 ;	../UI_Manager/ui.c:264: temp = 11;
      000545 7F 0B            [12] 1248 	mov	r7,#0x0b
                                   1249 ;	../UI_Manager/ui.c:266: }
      000547                       1250 00114$:
                                   1251 ;	../UI_Manager/ui.c:267: write_number(temp, 12, LINE_1, NOT_SELECTED);
      000547 E4               [12] 1252 	clr	a
      000548 FE               [12] 1253 	mov	r6,a
      000549 C0 E0            [24] 1254 	push	acc
      00054B 04               [12] 1255 	inc	a
      00054C C0 E0            [24] 1256 	push	acc
      00054E 74 0C            [12] 1257 	mov	a,#0x0c
      000550 C0 E0            [24] 1258 	push	acc
      000552 8F 82            [24] 1259 	mov	dpl,r7
      000554 8E 83            [24] 1260 	mov	dph,r6
      000556 12r00r00         [24] 1261 	lcall	_write_number
      000559 15 81            [12] 1262 	dec	sp
      00055B 15 81            [12] 1263 	dec	sp
      00055D 15 81            [12] 1264 	dec	sp
                                   1265 ;	../UI_Manager/ui.c:269: write_string("Addr", sizeof("Addr") - 1, 0, LINE_1, NOT_SELECTED);
      00055F E4               [12] 1266 	clr	a
      000560 C0 E0            [24] 1267 	push	acc
      000562 04               [12] 1268 	inc	a
      000563 C0 E0            [24] 1269 	push	acc
      000565 E4               [12] 1270 	clr	a
      000566 C0 E0            [24] 1271 	push	acc
      000568 74 04            [12] 1272 	mov	a,#0x04
      00056A C0 E0            [24] 1273 	push	acc
      00056C 90r00r9F         [24] 1274 	mov	dptr,#___str_11
      00056F 75 F0 80         [24] 1275 	mov	b,#0x80
      000572 12r00r00         [24] 1276 	lcall	_write_string
      000575 E5 81            [12] 1277 	mov	a,sp
      000577 24 FC            [12] 1278 	add	a,#0xfc
      000579 F5 81            [12] 1279 	mov	sp,a
                                   1280 ;	../UI_Manager/ui.c:270: write_string("Mode", sizeof("Mode") - 1, 9, LINE_1, NOT_SELECTED);
      00057B E4               [12] 1281 	clr	a
      00057C C0 E0            [24] 1282 	push	acc
      00057E 04               [12] 1283 	inc	a
      00057F C0 E0            [24] 1284 	push	acc
      000581 74 09            [12] 1285 	mov	a,#0x09
      000583 C0 E0            [24] 1286 	push	acc
      000585 74 04            [12] 1287 	mov	a,#0x04
      000587 C0 E0            [24] 1288 	push	acc
      000589 90r00rA4         [24] 1289 	mov	dptr,#___str_12
      00058C 75 F0 80         [24] 1290 	mov	b,#0x80
      00058F 12r00r00         [24] 1291 	lcall	_write_string
      000592 E5 81            [12] 1292 	mov	a,sp
      000594 24 FC            [12] 1293 	add	a,#0xfc
      000596 F5 81            [12] 1294 	mov	sp,a
      000598                       1295 00119$:
                                   1296 ;	../UI_Manager/ui.c:278: tock++;
      000598 05*07            [12] 1297 	inc	_idlePage_tock_65536_59
                                   1298 ;	../UI_Manager/ui.c:279: if(get_playing() == PLAY){
      00059A 74 01            [12] 1299 	mov	a,#0x01
      00059C B5*00 64         [24] 1300 	cjne	a,_Playing,00137$
                                   1301 ;	../UI_Manager/ui.c:280: if(playing == PAUSE){
      00059F E5*09            [12] 1302 	mov	a,_idlePage_playing_65536_59
                                   1303 ;	../UI_Manager/ui.c:281: iconChange |= PLAY_CHANGE;
      0005A1 70 08            [24] 1304 	jnz	00121$
      0005A3 AE*08            [24] 1305 	mov	r6,_idlePage_iconChange_65536_59
      0005A5 FF               [12] 1306 	mov	r7,a
      0005A6 43 06 20         [24] 1307 	orl	ar6,#0x20
      0005A9 8E*08            [24] 1308 	mov	_idlePage_iconChange_65536_59,r6
      0005AB                       1309 00121$:
                                   1310 ;	../UI_Manager/ui.c:284: if(get_interval_or_duration() == INTERVAL){
      0005AB E5*00            [12] 1311 	mov	a,_Interval_Or_Duration
      0005AD 70 1B            [24] 1312 	jnz	00130$
                                   1313 ;	../UI_Manager/ui.c:286: if(iconChange & PLAY_CHANGE){
      0005AF E5*08            [12] 1314 	mov	a,_idlePage_iconChange_65536_59
      0005B1 30 E5 44         [24] 1315 	jnb	acc.5,00131$
                                   1316 ;	../UI_Manager/ui.c:287: write_char(CHAR_PLAY, PLAY_ICON_INDEX, LINE_0);
      0005B4 E4               [12] 1317 	clr	a
      0005B5 C0 E0            [24] 1318 	push	acc
      0005B7 74 0E            [12] 1319 	mov	a,#0x0e
      0005B9 C0 E0            [24] 1320 	push	acc
      0005BB 75 82 80         [24] 1321 	mov	dpl,#0x80
      0005BE 12r00r00         [24] 1322 	lcall	_write_char
      0005C1 15 81            [12] 1323 	dec	sp
      0005C3 15 81            [12] 1324 	dec	sp
                                   1325 ;	../UI_Manager/ui.c:288: iconChange &= ~PLAY_CHANGE;
      0005C5 53*08 DF         [24] 1326 	anl	_idlePage_iconChange_65536_59,#0xdf
      0005C8 80 2E            [24] 1327 	sjmp	00131$
      0005CA                       1328 00130$:
                                   1329 ;	../UI_Manager/ui.c:292: if(tock == 0x80 + 55){ //blink if fogging
      0005CA 74 B7            [12] 1330 	mov	a,#0xb7
      0005CC B5*07 13         [24] 1331 	cjne	a,_idlePage_tock_65536_59,00127$
                                   1332 ;	../UI_Manager/ui.c:293: write_char(CHAR_PLAY, PLAY_ICON_INDEX, LINE_0);
      0005CF E4               [12] 1333 	clr	a
      0005D0 C0 E0            [24] 1334 	push	acc
      0005D2 74 0E            [12] 1335 	mov	a,#0x0e
      0005D4 C0 E0            [24] 1336 	push	acc
      0005D6 75 82 80         [24] 1337 	mov	dpl,#0x80
      0005D9 12r00r00         [24] 1338 	lcall	_write_char
      0005DC 15 81            [12] 1339 	dec	sp
      0005DE 15 81            [12] 1340 	dec	sp
      0005E0 80 16            [24] 1341 	sjmp	00131$
      0005E2                       1342 00127$:
                                   1343 ;	../UI_Manager/ui.c:294: } else if(tock == 0x08 + 55){
      0005E2 74 3F            [12] 1344 	mov	a,#0x3f
      0005E4 B5*07 11         [24] 1345 	cjne	a,_idlePage_tock_65536_59,00131$
                                   1346 ;	../UI_Manager/ui.c:295: write_char(CHAR_NULL, PLAY_ICON_INDEX, LINE_0);
      0005E7 E4               [12] 1347 	clr	a
      0005E8 C0 E0            [24] 1348 	push	acc
      0005EA 74 0E            [12] 1349 	mov	a,#0x0e
      0005EC C0 E0            [24] 1350 	push	acc
      0005EE 75 82 04         [24] 1351 	mov	dpl,#0x04
      0005F1 12r00r00         [24] 1352 	lcall	_write_char
      0005F4 15 81            [12] 1353 	dec	sp
      0005F6 15 81            [12] 1354 	dec	sp
      0005F8                       1355 00131$:
                                   1356 ;	../UI_Manager/ui.c:298: iconChange |= PAUSE_CHANGE;
      0005F8 AE*08            [24] 1357 	mov	r6,_idlePage_iconChange_65536_59
      0005FA 7F 00            [12] 1358 	mov	r7,#0x00
      0005FC 43 06 10         [24] 1359 	orl	ar6,#0x10
      0005FF 8E*08            [24] 1360 	mov	_idlePage_iconChange_65536_59,r6
      000601 80 33            [24] 1361 	sjmp	00138$
      000603                       1362 00137$:
                                   1363 ;	../UI_Manager/ui.c:300: if(playing == PLAY){
      000603 74 01            [12] 1364 	mov	a,#0x01
      000605 B5*09 09         [24] 1365 	cjne	a,_idlePage_playing_65536_59,00133$
                                   1366 ;	../UI_Manager/ui.c:301: iconChange |= PAUSE_CHANGE;
      000608 AE*08            [24] 1367 	mov	r6,_idlePage_iconChange_65536_59
      00060A 7F 00            [12] 1368 	mov	r7,#0x00
      00060C 43 06 10         [24] 1369 	orl	ar6,#0x10
      00060F 8E*08            [24] 1370 	mov	_idlePage_iconChange_65536_59,r6
      000611                       1371 00133$:
                                   1372 ;	../UI_Manager/ui.c:304: if(iconChange & PAUSE_CHANGE){
      000611 E5*08            [12] 1373 	mov	a,_idlePage_iconChange_65536_59
      000613 30 E4 1D         [24] 1374 	jnb	acc.4,00135$
                                   1375 ;	../UI_Manager/ui.c:305: write_char(CHAR_NULL, PLAY_ICON_INDEX, LINE_0);
      000616 E4               [12] 1376 	clr	a
      000617 C0 E0            [24] 1377 	push	acc
      000619 74 0E            [12] 1378 	mov	a,#0x0e
      00061B C0 E0            [24] 1379 	push	acc
      00061D 75 82 04         [24] 1380 	mov	dpl,#0x04
      000620 12r00r00         [24] 1381 	lcall	_write_char
      000623 15 81            [12] 1382 	dec	sp
      000625 15 81            [12] 1383 	dec	sp
                                   1384 ;	../UI_Manager/ui.c:306: iconChange |= PLAY_CHANGE;
      000627 AE*08            [24] 1385 	mov	r6,_idlePage_iconChange_65536_59
      000629 7F 00            [12] 1386 	mov	r7,#0x00
      00062B 43 06 20         [24] 1387 	orl	ar6,#0x20
      00062E 8E*08            [24] 1388 	mov	_idlePage_iconChange_65536_59,r6
                                   1389 ;	../UI_Manager/ui.c:307: iconChange &= ~PAUSE_CHANGE;
      000630 53*08 EF         [24] 1390 	anl	_idlePage_iconChange_65536_59,#0xef
      000633                       1391 00135$:
                                   1392 ;	../UI_Manager/ui.c:310: playing = PAUSE;
      000633 75*09 00         [24] 1393 	mov	_idlePage_playing_65536_59,#0x00
      000636                       1394 00138$:
                                   1395 ;	../UI_Manager/ui.c:313: if(get_heater_enabled()){
      000636 E5*00            [12] 1396 	mov	a,_Heat_Flag
      000638 20 E4 6D         [24] 1397 	jb	acc.4,00152$
                                   1398 ;	../UI_Manager/ui.c:314: if(get_heated()){
      00063B E5*00            [12] 1399 	mov	a,_Heat_Flag
      00063D 30 E7 1B         [24] 1400 	jnb	acc.7,00147$
                                   1401 ;	../UI_Manager/ui.c:315: if(iconChange & HEATED_CHANGE){
      000640 E5*08            [12] 1402 	mov	a,_idlePage_iconChange_65536_59
      000642 30 E0 58         [24] 1403 	jnb	acc.0,00148$
                                   1404 ;	../UI_Manager/ui.c:316: write_char(CHAR_HEATED, HEAT_ICON_INDEX, LINE_0);
      000645 E4               [12] 1405 	clr	a
      000646 C0 E0            [24] 1406 	push	acc
      000648 74 0F            [12] 1407 	mov	a,#0x0f
      00064A C0 E0            [24] 1408 	push	acc
      00064C 75 82 60         [24] 1409 	mov	dpl,#0x60
      00064F 12r00r00         [24] 1410 	lcall	_write_char
      000652 15 81            [12] 1411 	dec	sp
      000654 15 81            [12] 1412 	dec	sp
                                   1413 ;	../UI_Manager/ui.c:317: iconChange &= ~HEATED_CHANGE;
      000656 53*08 FE         [24] 1414 	anl	_idlePage_iconChange_65536_59,#0xfe
      000659 80 42            [24] 1415 	sjmp	00148$
      00065B                       1416 00147$:
                                   1417 ;	../UI_Manager/ui.c:320: if(!(tock)){
      00065B E5*07            [12] 1418 	mov	a,_idlePage_tock_65536_59
      00065D 70 35            [24] 1419 	jnz	00145$
                                   1420 ;	../UI_Manager/ui.c:321: if(iconChange & HEATING_CHANGE){
      00065F E5*08            [12] 1421 	mov	a,_idlePage_iconChange_65536_59
      000661 30 E1 16         [24] 1422 	jnb	acc.1,00142$
                                   1423 ;	../UI_Manager/ui.c:322: write_char(CHAR_NULL, HEAT_ICON_INDEX, LINE_0);
      000664 E4               [12] 1424 	clr	a
      000665 C0 E0            [24] 1425 	push	acc
      000667 74 0F            [12] 1426 	mov	a,#0x0f
      000669 C0 E0            [24] 1427 	push	acc
      00066B 75 82 04         [24] 1428 	mov	dpl,#0x04
      00066E 12r00r00         [24] 1429 	lcall	_write_char
      000671 15 81            [12] 1430 	dec	sp
      000673 15 81            [12] 1431 	dec	sp
                                   1432 ;	../UI_Manager/ui.c:323: iconChange &= ~HEATING_CHANGE;
      000675 53*08 FD         [24] 1433 	anl	_idlePage_iconChange_65536_59,#0xfd
      000678 80 1A            [24] 1434 	sjmp	00145$
      00067A                       1435 00142$:
                                   1436 ;	../UI_Manager/ui.c:325: write_char(CHAR_HEATING, HEAT_ICON_INDEX, LINE_0);
      00067A E4               [12] 1437 	clr	a
      00067B C0 E0            [24] 1438 	push	acc
      00067D 74 0F            [12] 1439 	mov	a,#0x0f
      00067F C0 E0            [24] 1440 	push	acc
      000681 75 82 A0         [24] 1441 	mov	dpl,#0xa0
      000684 12r00r00         [24] 1442 	lcall	_write_char
      000687 15 81            [12] 1443 	dec	sp
      000689 15 81            [12] 1444 	dec	sp
                                   1445 ;	../UI_Manager/ui.c:326: iconChange |= HEATING_CHANGE;
      00068B AE*08            [24] 1446 	mov	r6,_idlePage_iconChange_65536_59
      00068D 7F 00            [12] 1447 	mov	r7,#0x00
      00068F 43 06 02         [24] 1448 	orl	ar6,#0x02
      000692 8E*08            [24] 1449 	mov	_idlePage_iconChange_65536_59,r6
      000694                       1450 00145$:
                                   1451 ;	../UI_Manager/ui.c:329: iconChange |= HEATED_CHANGE;
      000694 AE*08            [24] 1452 	mov	r6,_idlePage_iconChange_65536_59
      000696 7F 00            [12] 1453 	mov	r7,#0x00
      000698 43 06 01         [24] 1454 	orl	ar6,#0x01
      00069B 8E*08            [24] 1455 	mov	_idlePage_iconChange_65536_59,r6
      00069D                       1456 00148$:
                                   1457 ;	../UI_Manager/ui.c:331: iconChange |= HEATER_CHANGE;
      00069D AE*08            [24] 1458 	mov	r6,_idlePage_iconChange_65536_59
      00069F 7F 00            [12] 1459 	mov	r7,#0x00
      0006A1 43 06 08         [24] 1460 	orl	ar6,#0x08
      0006A4 8E*08            [24] 1461 	mov	_idlePage_iconChange_65536_59,r6
      0006A6 80 1C            [24] 1462 	sjmp	00153$
      0006A8                       1463 00152$:
                                   1464 ;	../UI_Manager/ui.c:333: if(iconChange & HEATER_CHANGE){
      0006A8 E5*08            [12] 1465 	mov	a,_idlePage_iconChange_65536_59
      0006AA 30 E3 14         [24] 1466 	jnb	acc.3,00150$
                                   1467 ;	../UI_Manager/ui.c:334: write_char(CHAR_HEATER_OFF, HEAT_ICON_INDEX, LINE_0);
      0006AD E4               [12] 1468 	clr	a
      0006AE C0 E0            [24] 1469 	push	acc
      0006B0 74 0F            [12] 1470 	mov	a,#0x0f
      0006B2 C0 E0            [24] 1471 	push	acc
      0006B4 75 82 00         [24] 1472 	mov	dpl,#0x00
      0006B7 12r00r00         [24] 1473 	lcall	_write_char
      0006BA 15 81            [12] 1474 	dec	sp
      0006BC 15 81            [12] 1475 	dec	sp
                                   1476 ;	../UI_Manager/ui.c:335: iconChange &= ~HEATER_CHANGE;
      0006BE 53*08 F7         [24] 1477 	anl	_idlePage_iconChange_65536_59,#0xf7
      0006C1                       1478 00150$:
                                   1479 ;	../UI_Manager/ui.c:337: iconChange |= HEATER_CHANGE | HEATED_CHANGE;
      0006C1 43*08 09         [24] 1480 	orl	_idlePage_iconChange_65536_59,#0x09
      0006C4                       1481 00153$:
                                   1482 ;	../UI_Manager/ui.c:342: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      0006C4 75 82 10         [24] 1483 	mov	dpl,#0x10
      0006C7 12r00r00         [24] 1484 	lcall	_get_runtime_data
      0006CA E5 82            [12] 1485 	mov	a,dpl
      0006CC 60 03            [24] 1486 	jz	00366$
      0006CE 02r07r78         [24] 1487 	ljmp	00171$
      0006D1                       1488 00366$:
                                   1489 ;	../UI_Manager/ui.c:345: if(has_dmx()){
      0006D1 E5*00            [12] 1490 	mov	a,_Has_DMX
      0006D3 60 2E            [24] 1491 	jz	00159$
                                   1492 ;	../UI_Manager/ui.c:346: if(changed & DMX_OK_CHANGE){
      0006D5 E5*02            [12] 1493 	mov	a,_changed
      0006D7 30 E7 55         [24] 1494 	jnb	acc.7,00160$
                                   1495 ;	../UI_Manager/ui.c:347: write_string("DMX Ok", sizeof("DMX Ok") - 1, 1, LINE_0, NOT_SELECTED);
      0006DA E4               [12] 1496 	clr	a
      0006DB C0 E0            [24] 1497 	push	acc
      0006DD C0 E0            [24] 1498 	push	acc
      0006DF 04               [12] 1499 	inc	a
      0006E0 C0 E0            [24] 1500 	push	acc
      0006E2 74 06            [12] 1501 	mov	a,#0x06
      0006E4 C0 E0            [24] 1502 	push	acc
      0006E6 90r00rA9         [24] 1503 	mov	dptr,#___str_13
      0006E9 75 F0 80         [24] 1504 	mov	b,#0x80
      0006EC 12r00r00         [24] 1505 	lcall	_write_string
      0006EF E5 81            [12] 1506 	mov	a,sp
      0006F1 24 FC            [12] 1507 	add	a,#0xfc
      0006F3 F5 81            [12] 1508 	mov	sp,a
                                   1509 ;	../UI_Manager/ui.c:348: changed |= NO_DMX_CHANGE;
      0006F5 AE*02            [24] 1510 	mov	r6,_changed
      0006F7 7F 00            [12] 1511 	mov	r7,#0x00
      0006F9 43 06 40         [24] 1512 	orl	ar6,#0x40
      0006FC 8E*02            [24] 1513 	mov	_changed,r6
                                   1514 ;	../UI_Manager/ui.c:349: changed &= ~DMX_OK_CHANGE;
      0006FE 53*02 7F         [24] 1515 	anl	_changed,#0x7f
      000701 80 2C            [24] 1516 	sjmp	00160$
      000703                       1517 00159$:
                                   1518 ;	../UI_Manager/ui.c:352: if(changed & NO_DMX_CHANGE){
      000703 E5*02            [12] 1519 	mov	a,_changed
      000705 30 E6 27         [24] 1520 	jnb	acc.6,00160$
                                   1521 ;	../UI_Manager/ui.c:353: write_string("No DMX", sizeof("No DMX") - 1, 1, LINE_0, NOT_SELECTED);
      000708 E4               [12] 1522 	clr	a
      000709 C0 E0            [24] 1523 	push	acc
      00070B C0 E0            [24] 1524 	push	acc
      00070D 04               [12] 1525 	inc	a
      00070E C0 E0            [24] 1526 	push	acc
      000710 74 06            [12] 1527 	mov	a,#0x06
      000712 C0 E0            [24] 1528 	push	acc
      000714 90r00rB0         [24] 1529 	mov	dptr,#___str_14
      000717 75 F0 80         [24] 1530 	mov	b,#0x80
      00071A 12r00r00         [24] 1531 	lcall	_write_string
      00071D E5 81            [12] 1532 	mov	a,sp
      00071F 24 FC            [12] 1533 	add	a,#0xfc
      000721 F5 81            [12] 1534 	mov	sp,a
                                   1535 ;	../UI_Manager/ui.c:354: changed |= DMX_OK_CHANGE;
      000723 AE*02            [24] 1536 	mov	r6,_changed
      000725 7F 00            [12] 1537 	mov	r7,#0x00
      000727 43 06 80         [24] 1538 	orl	ar6,#0x80
      00072A 8E*02            [24] 1539 	mov	_changed,r6
                                   1540 ;	../UI_Manager/ui.c:355: changed &= ~NO_DMX_CHANGE;
      00072C 53*02 BF         [24] 1541 	anl	_changed,#0xbf
      00072F                       1542 00160$:
                                   1543 ;	../UI_Manager/ui.c:359: temp = get_timer();
                                   1544 ;	../UI_Manager/ui.c:362: if(timer != temp){
      00072F E5*00            [12] 1545 	mov	a,_Timer
      000731 FF               [12] 1546 	mov	r7,a
      000732 B5*04 01         [24] 1547 	cjne	a,_idlePage_timer_65536_59,00370$
      000735 22               [24] 1548 	ret
      000736                       1549 00370$:
                                   1550 ;	../UI_Manager/ui.c:364: write_number(temp, 7, LINE_0, NOT_SELECTED);
      000736 8F 05            [24] 1551 	mov	ar5,r7
      000738 7E 00            [12] 1552 	mov	r6,#0x00
      00073A C0 07            [24] 1553 	push	ar7
      00073C E4               [12] 1554 	clr	a
      00073D C0 E0            [24] 1555 	push	acc
      00073F C0 E0            [24] 1556 	push	acc
      000741 74 07            [12] 1557 	mov	a,#0x07
      000743 C0 E0            [24] 1558 	push	acc
      000745 8D 82            [24] 1559 	mov	dpl,r5
      000747 8E 83            [24] 1560 	mov	dph,r6
      000749 12r00r00         [24] 1561 	lcall	_write_number
      00074C 15 81            [12] 1562 	dec	sp
      00074E 15 81            [12] 1563 	dec	sp
      000750 15 81            [12] 1564 	dec	sp
      000752 D0 07            [24] 1565 	pop	ar7
                                   1566 ;	../UI_Manager/ui.c:365: write_char((get_interval_or_duration() == INTERVAL) ? CHAR_I : CHAR_D, 11, LINE_0);
      000754 E5*00            [12] 1567 	mov	a,_Interval_Or_Duration
      000756 70 05            [24] 1568 	jnz	00175$
      000758 7D 92            [12] 1569 	mov	r5,#0x92
      00075A FE               [12] 1570 	mov	r6,a
      00075B 80 04            [24] 1571 	sjmp	00176$
      00075D                       1572 00175$:
      00075D 7D 22            [12] 1573 	mov	r5,#0x22
      00075F 7E 00            [12] 1574 	mov	r6,#0x00
      000761                       1575 00176$:
      000761 8D 82            [24] 1576 	mov	dpl,r5
      000763 C0 07            [24] 1577 	push	ar7
      000765 E4               [12] 1578 	clr	a
      000766 C0 E0            [24] 1579 	push	acc
      000768 74 0B            [12] 1580 	mov	a,#0x0b
      00076A C0 E0            [24] 1581 	push	acc
      00076C 12r00r00         [24] 1582 	lcall	_write_char
      00076F 15 81            [12] 1583 	dec	sp
      000771 15 81            [12] 1584 	dec	sp
      000773 D0 07            [24] 1585 	pop	ar7
                                   1586 ;	../UI_Manager/ui.c:367: timer = temp;
      000775 8F*04            [24] 1587 	mov	_idlePage_timer_65536_59,r7
      000777 22               [24] 1588 	ret
      000778                       1589 00171$:
                                   1590 ;	../UI_Manager/ui.c:372: temp = get_interval_or_duration();
                                   1591 ;	../UI_Manager/ui.c:374: if(intervalOrDuration != temp){
      000778 E5*00            [12] 1592 	mov	a,_Interval_Or_Duration
      00077A FF               [12] 1593 	mov	r7,a
      00077B B5*05 02         [24] 1594 	cjne	a,_idlePage_intervalOrDuration_65536_59,00372$
      00077E 80 47            [24] 1595 	sjmp	00167$
      000780                       1596 00372$:
                                   1597 ;	../UI_Manager/ui.c:375: if(temp == INTERVAL){
      000780 EF               [12] 1598 	mov	a,r7
      000781 70 22            [24] 1599 	jnz	00164$
                                   1600 ;	../UI_Manager/ui.c:376: write_string("Interval", sizeof("Interval"), 0, LINE_1, NOT_SELECTED);
      000783 C0 07            [24] 1601 	push	ar7
      000785 E4               [12] 1602 	clr	a
      000786 C0 E0            [24] 1603 	push	acc
      000788 04               [12] 1604 	inc	a
      000789 C0 E0            [24] 1605 	push	acc
      00078B E4               [12] 1606 	clr	a
      00078C C0 E0            [24] 1607 	push	acc
      00078E 74 09            [12] 1608 	mov	a,#0x09
      000790 C0 E0            [24] 1609 	push	acc
      000792 90r00rB7         [24] 1610 	mov	dptr,#___str_15
      000795 75 F0 80         [24] 1611 	mov	b,#0x80
      000798 12r00r00         [24] 1612 	lcall	_write_string
      00079B E5 81            [12] 1613 	mov	a,sp
      00079D 24 FC            [12] 1614 	add	a,#0xfc
      00079F F5 81            [12] 1615 	mov	sp,a
      0007A1 D0 07            [24] 1616 	pop	ar7
      0007A3 80 20            [24] 1617 	sjmp	00165$
      0007A5                       1618 00164$:
                                   1619 ;	../UI_Manager/ui.c:378: write_string("Duration", sizeof("Duration"), 0, LINE_1, NOT_SELECTED);
      0007A5 C0 07            [24] 1620 	push	ar7
      0007A7 E4               [12] 1621 	clr	a
      0007A8 C0 E0            [24] 1622 	push	acc
      0007AA 04               [12] 1623 	inc	a
      0007AB C0 E0            [24] 1624 	push	acc
      0007AD E4               [12] 1625 	clr	a
      0007AE C0 E0            [24] 1626 	push	acc
      0007B0 74 09            [12] 1627 	mov	a,#0x09
      0007B2 C0 E0            [24] 1628 	push	acc
      0007B4 90r00rC0         [24] 1629 	mov	dptr,#___str_16
      0007B7 75 F0 80         [24] 1630 	mov	b,#0x80
      0007BA 12r00r00         [24] 1631 	lcall	_write_string
      0007BD E5 81            [12] 1632 	mov	a,sp
      0007BF 24 FC            [12] 1633 	add	a,#0xfc
      0007C1 F5 81            [12] 1634 	mov	sp,a
      0007C3 D0 07            [24] 1635 	pop	ar7
      0007C5                       1636 00165$:
                                   1637 ;	../UI_Manager/ui.c:381: intervalOrDuration = temp;
      0007C5 8F*05            [24] 1638 	mov	_idlePage_intervalOrDuration_65536_59,r7
      0007C7                       1639 00167$:
                                   1640 ;	../UI_Manager/ui.c:384: temp = get_timer();
                                   1641 ;	../UI_Manager/ui.c:386: if(timer != temp){
      0007C7 E5*00            [12] 1642 	mov	a,_Timer
      0007C9 FF               [12] 1643 	mov	r7,a
      0007CA B5*04 01         [24] 1644 	cjne	a,_idlePage_timer_65536_59,00374$
      0007CD 22               [24] 1645 	ret
      0007CE                       1646 00374$:
                                   1647 ;	../UI_Manager/ui.c:388: write_number(temp, NUMBER_END_INDEX-1, LINE_1, NOT_SELECTED);
      0007CE 8F 05            [24] 1648 	mov	ar5,r7
      0007D0 7E 00            [12] 1649 	mov	r6,#0x00
      0007D2 C0 07            [24] 1650 	push	ar7
      0007D4 E4               [12] 1651 	clr	a
      0007D5 C0 E0            [24] 1652 	push	acc
      0007D7 04               [12] 1653 	inc	a
      0007D8 C0 E0            [24] 1654 	push	acc
      0007DA 74 0B            [12] 1655 	mov	a,#0x0b
      0007DC C0 E0            [24] 1656 	push	acc
      0007DE 8D 82            [24] 1657 	mov	dpl,r5
      0007E0 8E 83            [24] 1658 	mov	dph,r6
      0007E2 12r00r00         [24] 1659 	lcall	_write_number
      0007E5 15 81            [12] 1660 	dec	sp
      0007E7 15 81            [12] 1661 	dec	sp
      0007E9 15 81            [12] 1662 	dec	sp
      0007EB D0 07            [24] 1663 	pop	ar7
                                   1664 ;	../UI_Manager/ui.c:390: timer = temp;
      0007ED 8F*04            [24] 1665 	mov	_idlePage_timer_65536_59,r7
                                   1666 ;	../UI_Manager/ui.c:394: }
      0007EF 22               [24] 1667 	ret
                                   1668 ;------------------------------------------------------------
                                   1669 ;Allocation info for local variables in function 'fogLevelPage'
                                   1670 ;------------------------------------------------------------
                                   1671 ;action                    Allocated to registers r7 
                                   1672 ;------------------------------------------------------------
                                   1673 ;	../UI_Manager/ui.c:396: void fogLevelPage(uint8_t action){
                                   1674 ;	-----------------------------------------
                                   1675 ;	 function fogLevelPage
                                   1676 ;	-----------------------------------------
      0007F0                       1677 _fogLevelPage:
      0007F0 AF 82            [24] 1678 	mov	r7,dpl
                                   1679 ;	../UI_Manager/ui.c:398: switch (action)
      0007F2 BF 01 02         [24] 1680 	cjne	r7,#0x01,00152$
      0007F5 80 46            [24] 1681 	sjmp	00104$
      0007F7                       1682 00152$:
      0007F7 BF 02 02         [24] 1683 	cjne	r7,#0x02,00153$
      0007FA 80 35            [24] 1684 	sjmp	00103$
      0007FC                       1685 00153$:
      0007FC BF 03 02         [24] 1686 	cjne	r7,#0x03,00154$
      0007FF 80 05            [24] 1687 	sjmp	00101$
      000801                       1688 00154$:
                                   1689 ;	../UI_Manager/ui.c:400: case BUTTON_UP:
      000801 BF 0B 45         [24] 1690 	cjne	r7,#0x0b,00105$
      000804 80 15            [24] 1691 	sjmp	00102$
      000806                       1692 00101$:
                                   1693 ;	../UI_Manager/ui.c:401: set_runtime_data(FOG_POWER_INDEX, INC, NULL);
      000806 E4               [12] 1694 	clr	a
      000807 C0 E0            [24] 1695 	push	acc
      000809 04               [12] 1696 	inc	a
      00080A C0 E0            [24] 1697 	push	acc
      00080C 75 82 00         [24] 1698 	mov	dpl,#0x00
      00080F 12r00r00         [24] 1699 	lcall	_set_runtime_data
      000812 15 81            [12] 1700 	dec	sp
      000814 15 81            [12] 1701 	dec	sp
                                   1702 ;	../UI_Manager/ui.c:402: changed = 0xFF;
      000816 75*02 FF         [24] 1703 	mov	_changed,#0xff
                                   1704 ;	../UI_Manager/ui.c:403: break;
                                   1705 ;	../UI_Manager/ui.c:404: case BUTTON_DOWN:
      000819 80 2E            [24] 1706 	sjmp	00105$
      00081B                       1707 00102$:
                                   1708 ;	../UI_Manager/ui.c:405: set_runtime_data(FOG_POWER_INDEX, DEC, NULL);
      00081B E4               [12] 1709 	clr	a
      00081C C0 E0            [24] 1710 	push	acc
      00081E 74 02            [12] 1711 	mov	a,#0x02
      000820 C0 E0            [24] 1712 	push	acc
      000822 75 82 00         [24] 1713 	mov	dpl,#0x00
      000825 12r00r00         [24] 1714 	lcall	_set_runtime_data
      000828 15 81            [12] 1715 	dec	sp
      00082A 15 81            [12] 1716 	dec	sp
                                   1717 ;	../UI_Manager/ui.c:406: changed = 0xFF;  
      00082C 75*02 FF         [24] 1718 	mov	_changed,#0xff
                                   1719 ;	../UI_Manager/ui.c:407: break;
                                   1720 ;	../UI_Manager/ui.c:408: case BUTTON_FUNCTION:
      00082F 80 18            [24] 1721 	sjmp	00105$
      000831                       1722 00103$:
                                   1723 ;	../UI_Manager/ui.c:409: set_ui_state(INC, NULL);
      000831 E4               [12] 1724 	clr	a
      000832 C0 E0            [24] 1725 	push	acc
      000834 75 82 01         [24] 1726 	mov	dpl,#0x01
      000837 12r12r16         [24] 1727 	lcall	_set_ui_state
      00083A 15 81            [12] 1728 	dec	sp
                                   1729 ;	../UI_Manager/ui.c:410: return;
      00083C 22               [24] 1730 	ret
                                   1731 ;	../UI_Manager/ui.c:411: case BUTTON_TIMER:
      00083D                       1732 00104$:
                                   1733 ;	../UI_Manager/ui.c:412: set_ui_state(DEC, NULL);
      00083D E4               [12] 1734 	clr	a
      00083E C0 E0            [24] 1735 	push	acc
      000840 75 82 02         [24] 1736 	mov	dpl,#0x02
      000843 12r12r16         [24] 1737 	lcall	_set_ui_state
      000846 15 81            [12] 1738 	dec	sp
                                   1739 ;	../UI_Manager/ui.c:413: return;
      000848 22               [24] 1740 	ret
                                   1741 ;	../UI_Manager/ui.c:414: }
      000849                       1742 00105$:
                                   1743 ;	../UI_Manager/ui.c:416: if(Changed){
      000849 E5*01            [12] 1744 	mov	a,_Changed
      00084B 60 28            [24] 1745 	jz	00107$
                                   1746 ;	../UI_Manager/ui.c:417: Changed = 0x00;
      00084D 75*01 00         [24] 1747 	mov	_Changed,#0x00
                                   1748 ;	../UI_Manager/ui.c:418: changed = 0xFF;
      000850 75*02 FF         [24] 1749 	mov	_changed,#0xff
                                   1750 ;	../UI_Manager/ui.c:420: exe_command(CLEAR_DISPLAY);
      000853 90 80 00         [24] 1751 	mov	dptr,#0x8000
      000856 12r00r00         [24] 1752 	lcall	_exe_command
                                   1753 ;	../UI_Manager/ui.c:422: write_string("Fog Level", sizeof("Fog Level"), 3, LINE_0, NOT_SELECTED);
      000859 E4               [12] 1754 	clr	a
      00085A C0 E0            [24] 1755 	push	acc
      00085C C0 E0            [24] 1756 	push	acc
      00085E 74 03            [12] 1757 	mov	a,#0x03
      000860 C0 E0            [24] 1758 	push	acc
      000862 74 0A            [12] 1759 	mov	a,#0x0a
      000864 C0 E0            [24] 1760 	push	acc
      000866 90r00rC9         [24] 1761 	mov	dptr,#___str_17
      000869 75 F0 80         [24] 1762 	mov	b,#0x80
      00086C 12r00r00         [24] 1763 	lcall	_write_string
      00086F E5 81            [12] 1764 	mov	a,sp
      000871 24 FC            [12] 1765 	add	a,#0xfc
      000873 F5 81            [12] 1766 	mov	sp,a
      000875                       1767 00107$:
                                   1768 ;	../UI_Manager/ui.c:426: if(changed){
      000875 E5*02            [12] 1769 	mov	a,_changed
      000877 70 01            [24] 1770 	jnz	00157$
      000879 22               [24] 1771 	ret
      00087A                       1772 00157$:
                                   1773 ;	../UI_Manager/ui.c:427: changed = 0x00;
      00087A 75*02 00         [24] 1774 	mov	_changed,#0x00
                                   1775 ;	../UI_Manager/ui.c:429: switch (get_runtime_data(FOG_POWER_INDEX))
      00087D 75 82 00         [24] 1776 	mov	dpl,#0x00
      000880 12r00r00         [24] 1777 	lcall	_get_runtime_data
      000883 AF 82            [24] 1778 	mov	r7,dpl
      000885 BF 00 02         [24] 1779 	cjne	r7,#0x00,00158$
      000888 80 0C            [24] 1780 	sjmp	00108$
      00088A                       1781 00158$:
      00088A BF 01 02         [24] 1782 	cjne	r7,#0x01,00159$
      00088D 80 43            [24] 1783 	sjmp	00109$
      00088F                       1784 00159$:
      00088F BF 02 03         [24] 1785 	cjne	r7,#0x02,00160$
      000892 02r09r20         [24] 1786 	ljmp	00110$
      000895                       1787 00160$:
      000895 22               [24] 1788 	ret
                                   1789 ;	../UI_Manager/ui.c:431: case OPTION_FOG_LOW:
      000896                       1790 00108$:
                                   1791 ;	../UI_Manager/ui.c:432: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_LOW), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000896 75 82 00         [24] 1792 	mov	dpl,#0x00
      000899 12r13r23         [24] 1793 	lcall	_getString
      00089C AD 82            [24] 1794 	mov	r5,dpl
      00089E AE 83            [24] 1795 	mov	r6,dph
      0008A0 AF F0            [24] 1796 	mov	r7,b
      0008A2 E4               [12] 1797 	clr	a
      0008A3 C0 E0            [24] 1798 	push	acc
      0008A5 04               [12] 1799 	inc	a
      0008A6 C0 E0            [24] 1800 	push	acc
      0008A8 74 03            [12] 1801 	mov	a,#0x03
      0008AA C0 E0            [24] 1802 	push	acc
      0008AC 74 10            [12] 1803 	mov	a,#0x10
      0008AE C0 E0            [24] 1804 	push	acc
      0008B0 8D 82            [24] 1805 	mov	dpl,r5
      0008B2 8E 83            [24] 1806 	mov	dph,r6
      0008B4 8F F0            [24] 1807 	mov	b,r7
      0008B6 12r00r00         [24] 1808 	lcall	_write_string
      0008B9 E5 81            [12] 1809 	mov	a,sp
      0008BB 24 FC            [12] 1810 	add	a,#0xfc
      0008BD F5 81            [12] 1811 	mov	sp,a
                                   1812 ;	../UI_Manager/ui.c:433: write_char(CHAR_LVL_1, 12, LINE_1);
      0008BF 74 01            [12] 1813 	mov	a,#0x01
      0008C1 C0 E0            [24] 1814 	push	acc
      0008C3 74 0C            [12] 1815 	mov	a,#0x0c
      0008C5 C0 E0            [24] 1816 	push	acc
      0008C7 75 82 40         [24] 1817 	mov	dpl,#0x40
      0008CA 12r00r00         [24] 1818 	lcall	_write_char
      0008CD 15 81            [12] 1819 	dec	sp
      0008CF 15 81            [12] 1820 	dec	sp
                                   1821 ;	../UI_Manager/ui.c:434: break;
      0008D1 22               [24] 1822 	ret
                                   1823 ;	../UI_Manager/ui.c:435: case OPTION_FOG_MEDIUM:
      0008D2                       1824 00109$:
                                   1825 ;	../UI_Manager/ui.c:436: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_MEDIUM), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      0008D2 75 82 01         [24] 1826 	mov	dpl,#0x01
      0008D5 12r13r23         [24] 1827 	lcall	_getString
      0008D8 AD 82            [24] 1828 	mov	r5,dpl
      0008DA AE 83            [24] 1829 	mov	r6,dph
      0008DC AF F0            [24] 1830 	mov	r7,b
      0008DE E4               [12] 1831 	clr	a
      0008DF C0 E0            [24] 1832 	push	acc
      0008E1 04               [12] 1833 	inc	a
      0008E2 C0 E0            [24] 1834 	push	acc
      0008E4 74 03            [12] 1835 	mov	a,#0x03
      0008E6 C0 E0            [24] 1836 	push	acc
      0008E8 74 10            [12] 1837 	mov	a,#0x10
      0008EA C0 E0            [24] 1838 	push	acc
      0008EC 8D 82            [24] 1839 	mov	dpl,r5
      0008EE 8E 83            [24] 1840 	mov	dph,r6
      0008F0 8F F0            [24] 1841 	mov	b,r7
      0008F2 12r00r00         [24] 1842 	lcall	_write_string
      0008F5 E5 81            [12] 1843 	mov	a,sp
      0008F7 24 FC            [12] 1844 	add	a,#0xfc
      0008F9 F5 81            [12] 1845 	mov	sp,a
                                   1846 ;	../UI_Manager/ui.c:437: write_char(CHAR_LVL_1, 12, LINE_1);
      0008FB 74 01            [12] 1847 	mov	a,#0x01
      0008FD C0 E0            [24] 1848 	push	acc
      0008FF 74 0C            [12] 1849 	mov	a,#0x0c
      000901 C0 E0            [24] 1850 	push	acc
      000903 75 82 40         [24] 1851 	mov	dpl,#0x40
      000906 12r00r00         [24] 1852 	lcall	_write_char
      000909 15 81            [12] 1853 	dec	sp
      00090B 15 81            [12] 1854 	dec	sp
                                   1855 ;	../UI_Manager/ui.c:438: write_char(CHAR_LVL_2, 13, LINE_1);
      00090D 74 01            [12] 1856 	mov	a,#0x01
      00090F C0 E0            [24] 1857 	push	acc
      000911 74 0D            [12] 1858 	mov	a,#0x0d
      000913 C0 E0            [24] 1859 	push	acc
      000915 75 82 C0         [24] 1860 	mov	dpl,#0xc0
      000918 12r00r00         [24] 1861 	lcall	_write_char
      00091B 15 81            [12] 1862 	dec	sp
      00091D 15 81            [12] 1863 	dec	sp
                                   1864 ;	../UI_Manager/ui.c:439: break;
                                   1865 ;	../UI_Manager/ui.c:440: case OPTION_FOG_HIGH:
      00091F 22               [24] 1866 	ret
      000920                       1867 00110$:
                                   1868 ;	../UI_Manager/ui.c:441: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_HIGH), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000920 75 82 02         [24] 1869 	mov	dpl,#0x02
      000923 12r13r23         [24] 1870 	lcall	_getString
      000926 AD 82            [24] 1871 	mov	r5,dpl
      000928 AE 83            [24] 1872 	mov	r6,dph
      00092A AF F0            [24] 1873 	mov	r7,b
      00092C E4               [12] 1874 	clr	a
      00092D C0 E0            [24] 1875 	push	acc
      00092F 04               [12] 1876 	inc	a
      000930 C0 E0            [24] 1877 	push	acc
      000932 74 03            [12] 1878 	mov	a,#0x03
      000934 C0 E0            [24] 1879 	push	acc
      000936 74 10            [12] 1880 	mov	a,#0x10
      000938 C0 E0            [24] 1881 	push	acc
      00093A 8D 82            [24] 1882 	mov	dpl,r5
      00093C 8E 83            [24] 1883 	mov	dph,r6
      00093E 8F F0            [24] 1884 	mov	b,r7
      000940 12r00r00         [24] 1885 	lcall	_write_string
      000943 E5 81            [12] 1886 	mov	a,sp
      000945 24 FC            [12] 1887 	add	a,#0xfc
      000947 F5 81            [12] 1888 	mov	sp,a
                                   1889 ;	../UI_Manager/ui.c:442: write_char(CHAR_LVL_1, 12, LINE_1);
      000949 74 01            [12] 1890 	mov	a,#0x01
      00094B C0 E0            [24] 1891 	push	acc
      00094D 74 0C            [12] 1892 	mov	a,#0x0c
      00094F C0 E0            [24] 1893 	push	acc
      000951 75 82 40         [24] 1894 	mov	dpl,#0x40
      000954 12r00r00         [24] 1895 	lcall	_write_char
      000957 15 81            [12] 1896 	dec	sp
      000959 15 81            [12] 1897 	dec	sp
                                   1898 ;	../UI_Manager/ui.c:443: write_char(CHAR_LVL_2, 13, LINE_1);
      00095B 74 01            [12] 1899 	mov	a,#0x01
      00095D C0 E0            [24] 1900 	push	acc
      00095F 74 0D            [12] 1901 	mov	a,#0x0d
      000961 C0 E0            [24] 1902 	push	acc
      000963 75 82 C0         [24] 1903 	mov	dpl,#0xc0
      000966 12r00r00         [24] 1904 	lcall	_write_char
      000969 15 81            [12] 1905 	dec	sp
      00096B 15 81            [12] 1906 	dec	sp
                                   1907 ;	../UI_Manager/ui.c:444: write_char(CHAR_LVL_3, 14, LINE_1);
      00096D 74 01            [12] 1908 	mov	a,#0x01
      00096F C0 E0            [24] 1909 	push	acc
      000971 74 0E            [12] 1910 	mov	a,#0x0e
      000973 C0 E0            [24] 1911 	push	acc
      000975 75 82 20         [24] 1912 	mov	dpl,#0x20
      000978 12r00r00         [24] 1913 	lcall	_write_char
      00097B 15 81            [12] 1914 	dec	sp
      00097D 15 81            [12] 1915 	dec	sp
                                   1916 ;	../UI_Manager/ui.c:446: }
                                   1917 ;	../UI_Manager/ui.c:449: }
      00097F 22               [24] 1918 	ret
                                   1919 ;------------------------------------------------------------
                                   1920 ;Allocation info for local variables in function 'fogIntervalPage'
                                   1921 ;------------------------------------------------------------
                                   1922 ;action                    Allocated to registers r7 
                                   1923 ;------------------------------------------------------------
                                   1924 ;	../UI_Manager/ui.c:451: void fogIntervalPage(uint8_t action){
                                   1925 ;	-----------------------------------------
                                   1926 ;	 function fogIntervalPage
                                   1927 ;	-----------------------------------------
      000980                       1928 _fogIntervalPage:
      000980 AF 82            [24] 1929 	mov	r7,dpl
                                   1930 ;	../UI_Manager/ui.c:453: switch (action)
      000982 BF 01 02         [24] 1931 	cjne	r7,#0x01,00146$
      000985 80 50            [24] 1932 	sjmp	00106$
      000987                       1933 00146$:
      000987 BF 02 02         [24] 1934 	cjne	r7,#0x02,00147$
      00098A 80 3F            [24] 1935 	sjmp	00105$
      00098C                       1936 00147$:
      00098C BF 03 02         [24] 1937 	cjne	r7,#0x03,00148$
      00098F 80 0F            [24] 1938 	sjmp	00102$
      000991                       1939 00148$:
      000991 BF 0B 02         [24] 1940 	cjne	r7,#0x0b,00149$
      000994 80 1F            [24] 1941 	sjmp	00104$
      000996                       1942 00149$:
      000996 BF 1F 02         [24] 1943 	cjne	r7,#0x1f,00150$
      000999 80 05            [24] 1944 	sjmp	00102$
      00099B                       1945 00150$:
                                   1946 ;	../UI_Manager/ui.c:456: case BUTTON_UP:
      00099B BF 6F 45         [24] 1947 	cjne	r7,#0x6f,00107$
      00099E 80 15            [24] 1948 	sjmp	00104$
      0009A0                       1949 00102$:
                                   1950 ;	../UI_Manager/ui.c:457: set_runtime_data(FOG_INTERVAL_INDEX, INC, NULL);
      0009A0 E4               [12] 1951 	clr	a
      0009A1 C0 E0            [24] 1952 	push	acc
      0009A3 04               [12] 1953 	inc	a
      0009A4 C0 E0            [24] 1954 	push	acc
      0009A6 75 82 02         [24] 1955 	mov	dpl,#0x02
      0009A9 12r00r00         [24] 1956 	lcall	_set_runtime_data
      0009AC 15 81            [12] 1957 	dec	sp
      0009AE 15 81            [12] 1958 	dec	sp
                                   1959 ;	../UI_Manager/ui.c:458: changed = 0xFF;
      0009B0 75*02 FF         [24] 1960 	mov	_changed,#0xff
                                   1961 ;	../UI_Manager/ui.c:459: break;
                                   1962 ;	../UI_Manager/ui.c:461: case BUTTON_DOWN:
      0009B3 80 2E            [24] 1963 	sjmp	00107$
      0009B5                       1964 00104$:
                                   1965 ;	../UI_Manager/ui.c:462: set_runtime_data(FOG_INTERVAL_INDEX, DEC, NULL);
      0009B5 E4               [12] 1966 	clr	a
      0009B6 C0 E0            [24] 1967 	push	acc
      0009B8 74 02            [12] 1968 	mov	a,#0x02
      0009BA C0 E0            [24] 1969 	push	acc
      0009BC 75 82 02         [24] 1970 	mov	dpl,#0x02
      0009BF 12r00r00         [24] 1971 	lcall	_set_runtime_data
      0009C2 15 81            [12] 1972 	dec	sp
      0009C4 15 81            [12] 1973 	dec	sp
                                   1974 ;	../UI_Manager/ui.c:463: changed = 0xFF;  
      0009C6 75*02 FF         [24] 1975 	mov	_changed,#0xff
                                   1976 ;	../UI_Manager/ui.c:464: break;
                                   1977 ;	../UI_Manager/ui.c:465: case BUTTON_FUNCTION:
      0009C9 80 18            [24] 1978 	sjmp	00107$
      0009CB                       1979 00105$:
                                   1980 ;	../UI_Manager/ui.c:466: set_ui_state(INC, NULL);
      0009CB E4               [12] 1981 	clr	a
      0009CC C0 E0            [24] 1982 	push	acc
      0009CE 75 82 01         [24] 1983 	mov	dpl,#0x01
      0009D1 12r12r16         [24] 1984 	lcall	_set_ui_state
      0009D4 15 81            [12] 1985 	dec	sp
                                   1986 ;	../UI_Manager/ui.c:467: return;
      0009D6 22               [24] 1987 	ret
                                   1988 ;	../UI_Manager/ui.c:468: case BUTTON_TIMER:
      0009D7                       1989 00106$:
                                   1990 ;	../UI_Manager/ui.c:469: set_ui_state(DEC, NULL);
      0009D7 E4               [12] 1991 	clr	a
      0009D8 C0 E0            [24] 1992 	push	acc
      0009DA 75 82 02         [24] 1993 	mov	dpl,#0x02
      0009DD 12r12r16         [24] 1994 	lcall	_set_ui_state
      0009E0 15 81            [12] 1995 	dec	sp
                                   1996 ;	../UI_Manager/ui.c:470: return;
                                   1997 ;	../UI_Manager/ui.c:471: }
      0009E2 22               [24] 1998 	ret
      0009E3                       1999 00107$:
                                   2000 ;	../UI_Manager/ui.c:473: if(Changed){
      0009E3 E5*01            [12] 2001 	mov	a,_Changed
      0009E5 60 44            [24] 2002 	jz	00109$
                                   2003 ;	../UI_Manager/ui.c:474: Changed = 0x00;
      0009E7 75*01 00         [24] 2004 	mov	_Changed,#0x00
                                   2005 ;	../UI_Manager/ui.c:475: changed = 0xFF;
      0009EA 75*02 FF         [24] 2006 	mov	_changed,#0xff
                                   2007 ;	../UI_Manager/ui.c:477: exe_command(CLEAR_DISPLAY);
      0009ED 90 80 00         [24] 2008 	mov	dptr,#0x8000
      0009F0 12r00r00         [24] 2009 	lcall	_exe_command
                                   2010 ;	../UI_Manager/ui.c:479: write_string("Fog Interval", sizeof("Fog Interval"), 2, LINE_0, NOT_SELECTED);
      0009F3 E4               [12] 2011 	clr	a
      0009F4 C0 E0            [24] 2012 	push	acc
      0009F6 C0 E0            [24] 2013 	push	acc
      0009F8 74 02            [12] 2014 	mov	a,#0x02
      0009FA C0 E0            [24] 2015 	push	acc
      0009FC 74 0D            [12] 2016 	mov	a,#0x0d
      0009FE C0 E0            [24] 2017 	push	acc
      000A00 90r00rD3         [24] 2018 	mov	dptr,#___str_18
      000A03 75 F0 80         [24] 2019 	mov	b,#0x80
      000A06 12r00r00         [24] 2020 	lcall	_write_string
      000A09 E5 81            [12] 2021 	mov	a,sp
      000A0B 24 FC            [12] 2022 	add	a,#0xfc
      000A0D F5 81            [12] 2023 	mov	sp,a
                                   2024 ;	../UI_Manager/ui.c:480: write_string("Seconds", sizeof("Seconds"), 7, LINE_1, NOT_SELECTED);
      000A0F E4               [12] 2025 	clr	a
      000A10 C0 E0            [24] 2026 	push	acc
      000A12 04               [12] 2027 	inc	a
      000A13 C0 E0            [24] 2028 	push	acc
      000A15 74 07            [12] 2029 	mov	a,#0x07
      000A17 C0 E0            [24] 2030 	push	acc
      000A19 04               [12] 2031 	inc	a
      000A1A C0 E0            [24] 2032 	push	acc
      000A1C 90r00rE0         [24] 2033 	mov	dptr,#___str_19
      000A1F 75 F0 80         [24] 2034 	mov	b,#0x80
      000A22 12r00r00         [24] 2035 	lcall	_write_string
      000A25 E5 81            [12] 2036 	mov	a,sp
      000A27 24 FC            [12] 2037 	add	a,#0xfc
      000A29 F5 81            [12] 2038 	mov	sp,a
      000A2B                       2039 00109$:
                                   2040 ;	../UI_Manager/ui.c:484: if(changed){
      000A2B E5*02            [12] 2041 	mov	a,_changed
      000A2D 60 21            [24] 2042 	jz	00112$
                                   2043 ;	../UI_Manager/ui.c:485: changed = 0x00;
      000A2F 75*02 00         [24] 2044 	mov	_changed,#0x00
                                   2045 ;	../UI_Manager/ui.c:487: write_number(get_runtime_data(FOG_INTERVAL_INDEX), 1, LINE_1, NOT_SELECTED);
      000A32 75 82 02         [24] 2046 	mov	dpl,#0x02
      000A35 12r00r00         [24] 2047 	lcall	_get_runtime_data
      000A38 AF 82            [24] 2048 	mov	r7,dpl
      000A3A E4               [12] 2049 	clr	a
      000A3B FE               [12] 2050 	mov	r6,a
      000A3C C0 E0            [24] 2051 	push	acc
      000A3E 04               [12] 2052 	inc	a
      000A3F C0 E0            [24] 2053 	push	acc
      000A41 C0 E0            [24] 2054 	push	acc
      000A43 8F 82            [24] 2055 	mov	dpl,r7
      000A45 8E 83            [24] 2056 	mov	dph,r6
      000A47 12r00r00         [24] 2057 	lcall	_write_number
      000A4A 15 81            [12] 2058 	dec	sp
      000A4C 15 81            [12] 2059 	dec	sp
      000A4E 15 81            [12] 2060 	dec	sp
      000A50                       2061 00112$:
                                   2062 ;	../UI_Manager/ui.c:492: }
      000A50 22               [24] 2063 	ret
                                   2064 ;------------------------------------------------------------
                                   2065 ;Allocation info for local variables in function 'fogDurationPage'
                                   2066 ;------------------------------------------------------------
                                   2067 ;action                    Allocated to registers r7 
                                   2068 ;------------------------------------------------------------
                                   2069 ;	../UI_Manager/ui.c:494: void fogDurationPage(uint8_t action){
                                   2070 ;	-----------------------------------------
                                   2071 ;	 function fogDurationPage
                                   2072 ;	-----------------------------------------
      000A51                       2073 _fogDurationPage:
      000A51 AF 82            [24] 2074 	mov	r7,dpl
                                   2075 ;	../UI_Manager/ui.c:496: switch (action)
      000A53 BF 01 02         [24] 2076 	cjne	r7,#0x01,00146$
      000A56 80 50            [24] 2077 	sjmp	00106$
      000A58                       2078 00146$:
      000A58 BF 02 02         [24] 2079 	cjne	r7,#0x02,00147$
      000A5B 80 3F            [24] 2080 	sjmp	00105$
      000A5D                       2081 00147$:
      000A5D BF 03 02         [24] 2082 	cjne	r7,#0x03,00148$
      000A60 80 0F            [24] 2083 	sjmp	00102$
      000A62                       2084 00148$:
      000A62 BF 0B 02         [24] 2085 	cjne	r7,#0x0b,00149$
      000A65 80 1F            [24] 2086 	sjmp	00104$
      000A67                       2087 00149$:
      000A67 BF 1F 02         [24] 2088 	cjne	r7,#0x1f,00150$
      000A6A 80 05            [24] 2089 	sjmp	00102$
      000A6C                       2090 00150$:
                                   2091 ;	../UI_Manager/ui.c:499: case BUTTON_UP:
      000A6C BF 6F 45         [24] 2092 	cjne	r7,#0x6f,00107$
      000A6F 80 15            [24] 2093 	sjmp	00104$
      000A71                       2094 00102$:
                                   2095 ;	../UI_Manager/ui.c:500: set_runtime_data(FOG_DURATION_INDEX, INC, NULL);
      000A71 E4               [12] 2096 	clr	a
      000A72 C0 E0            [24] 2097 	push	acc
      000A74 04               [12] 2098 	inc	a
      000A75 C0 E0            [24] 2099 	push	acc
      000A77 75 82 01         [24] 2100 	mov	dpl,#0x01
      000A7A 12r00r00         [24] 2101 	lcall	_set_runtime_data
      000A7D 15 81            [12] 2102 	dec	sp
      000A7F 15 81            [12] 2103 	dec	sp
                                   2104 ;	../UI_Manager/ui.c:501: changed = 0xFF;
      000A81 75*02 FF         [24] 2105 	mov	_changed,#0xff
                                   2106 ;	../UI_Manager/ui.c:502: break;
                                   2107 ;	../UI_Manager/ui.c:504: case BUTTON_DOWN:
      000A84 80 2E            [24] 2108 	sjmp	00107$
      000A86                       2109 00104$:
                                   2110 ;	../UI_Manager/ui.c:505: set_runtime_data(FOG_DURATION_INDEX, DEC, NULL);
      000A86 E4               [12] 2111 	clr	a
      000A87 C0 E0            [24] 2112 	push	acc
      000A89 74 02            [12] 2113 	mov	a,#0x02
      000A8B C0 E0            [24] 2114 	push	acc
      000A8D 75 82 01         [24] 2115 	mov	dpl,#0x01
      000A90 12r00r00         [24] 2116 	lcall	_set_runtime_data
      000A93 15 81            [12] 2117 	dec	sp
      000A95 15 81            [12] 2118 	dec	sp
                                   2119 ;	../UI_Manager/ui.c:506: changed = 0xFF;  
      000A97 75*02 FF         [24] 2120 	mov	_changed,#0xff
                                   2121 ;	../UI_Manager/ui.c:507: break;
                                   2122 ;	../UI_Manager/ui.c:508: case BUTTON_FUNCTION:
      000A9A 80 18            [24] 2123 	sjmp	00107$
      000A9C                       2124 00105$:
                                   2125 ;	../UI_Manager/ui.c:509: set_ui_state(INC, NULL);
      000A9C E4               [12] 2126 	clr	a
      000A9D C0 E0            [24] 2127 	push	acc
      000A9F 75 82 01         [24] 2128 	mov	dpl,#0x01
      000AA2 12r12r16         [24] 2129 	lcall	_set_ui_state
      000AA5 15 81            [12] 2130 	dec	sp
                                   2131 ;	../UI_Manager/ui.c:510: return;
      000AA7 22               [24] 2132 	ret
                                   2133 ;	../UI_Manager/ui.c:511: case BUTTON_TIMER:
      000AA8                       2134 00106$:
                                   2135 ;	../UI_Manager/ui.c:512: set_ui_state(DEC, NULL);
      000AA8 E4               [12] 2136 	clr	a
      000AA9 C0 E0            [24] 2137 	push	acc
      000AAB 75 82 02         [24] 2138 	mov	dpl,#0x02
      000AAE 12r12r16         [24] 2139 	lcall	_set_ui_state
      000AB1 15 81            [12] 2140 	dec	sp
                                   2141 ;	../UI_Manager/ui.c:513: return;
                                   2142 ;	../UI_Manager/ui.c:514: }
      000AB3 22               [24] 2143 	ret
      000AB4                       2144 00107$:
                                   2145 ;	../UI_Manager/ui.c:516: if(Changed){
      000AB4 E5*01            [12] 2146 	mov	a,_Changed
      000AB6 60 44            [24] 2147 	jz	00109$
                                   2148 ;	../UI_Manager/ui.c:517: Changed = 0x00;
      000AB8 75*01 00         [24] 2149 	mov	_Changed,#0x00
                                   2150 ;	../UI_Manager/ui.c:518: changed = 0xFF;
      000ABB 75*02 FF         [24] 2151 	mov	_changed,#0xff
                                   2152 ;	../UI_Manager/ui.c:520: exe_command(CLEAR_DISPLAY);
      000ABE 90 80 00         [24] 2153 	mov	dptr,#0x8000
      000AC1 12r00r00         [24] 2154 	lcall	_exe_command
                                   2155 ;	../UI_Manager/ui.c:522: write_string("Fog Duration", sizeof("Fog Duration"), 2, LINE_0, NOT_SELECTED);
      000AC4 E4               [12] 2156 	clr	a
      000AC5 C0 E0            [24] 2157 	push	acc
      000AC7 C0 E0            [24] 2158 	push	acc
      000AC9 74 02            [12] 2159 	mov	a,#0x02
      000ACB C0 E0            [24] 2160 	push	acc
      000ACD 74 0D            [12] 2161 	mov	a,#0x0d
      000ACF C0 E0            [24] 2162 	push	acc
      000AD1 90r00rE8         [24] 2163 	mov	dptr,#___str_20
      000AD4 75 F0 80         [24] 2164 	mov	b,#0x80
      000AD7 12r00r00         [24] 2165 	lcall	_write_string
      000ADA E5 81            [12] 2166 	mov	a,sp
      000ADC 24 FC            [12] 2167 	add	a,#0xfc
      000ADE F5 81            [12] 2168 	mov	sp,a
                                   2169 ;	../UI_Manager/ui.c:523: write_string("Seconds", sizeof("Seconds"), 7, LINE_1, NOT_SELECTED);
      000AE0 E4               [12] 2170 	clr	a
      000AE1 C0 E0            [24] 2171 	push	acc
      000AE3 04               [12] 2172 	inc	a
      000AE4 C0 E0            [24] 2173 	push	acc
      000AE6 74 07            [12] 2174 	mov	a,#0x07
      000AE8 C0 E0            [24] 2175 	push	acc
      000AEA 04               [12] 2176 	inc	a
      000AEB C0 E0            [24] 2177 	push	acc
      000AED 90r00rE0         [24] 2178 	mov	dptr,#___str_19
      000AF0 75 F0 80         [24] 2179 	mov	b,#0x80
      000AF3 12r00r00         [24] 2180 	lcall	_write_string
      000AF6 E5 81            [12] 2181 	mov	a,sp
      000AF8 24 FC            [12] 2182 	add	a,#0xfc
      000AFA F5 81            [12] 2183 	mov	sp,a
      000AFC                       2184 00109$:
                                   2185 ;	../UI_Manager/ui.c:527: if(changed){
      000AFC E5*02            [12] 2186 	mov	a,_changed
      000AFE 60 21            [24] 2187 	jz	00112$
                                   2188 ;	../UI_Manager/ui.c:528: changed = 0x00;
      000B00 75*02 00         [24] 2189 	mov	_changed,#0x00
                                   2190 ;	../UI_Manager/ui.c:530: write_number(get_runtime_data(FOG_DURATION_INDEX), 1, LINE_1, NOT_SELECTED);
      000B03 75 82 01         [24] 2191 	mov	dpl,#0x01
      000B06 12r00r00         [24] 2192 	lcall	_get_runtime_data
      000B09 AF 82            [24] 2193 	mov	r7,dpl
      000B0B E4               [12] 2194 	clr	a
      000B0C FE               [12] 2195 	mov	r6,a
      000B0D C0 E0            [24] 2196 	push	acc
      000B0F 04               [12] 2197 	inc	a
      000B10 C0 E0            [24] 2198 	push	acc
      000B12 C0 E0            [24] 2199 	push	acc
      000B14 8F 82            [24] 2200 	mov	dpl,r7
      000B16 8E 83            [24] 2201 	mov	dph,r6
      000B18 12r00r00         [24] 2202 	lcall	_write_number
      000B1B 15 81            [12] 2203 	dec	sp
      000B1D 15 81            [12] 2204 	dec	sp
      000B1F 15 81            [12] 2205 	dec	sp
      000B21                       2206 00112$:
                                   2207 ;	../UI_Manager/ui.c:533: }
      000B21 22               [24] 2208 	ret
                                   2209 ;------------------------------------------------------------
                                   2210 ;Allocation info for local variables in function 'macroPage'
                                   2211 ;------------------------------------------------------------
                                   2212 ;action                    Allocated to registers r7 
                                   2213 ;------------------------------------------------------------
                                   2214 ;	../UI_Manager/ui.c:535: void macroPage(uint8_t action){
                                   2215 ;	-----------------------------------------
                                   2216 ;	 function macroPage
                                   2217 ;	-----------------------------------------
      000B22                       2218 _macroPage:
      000B22 AF 82            [24] 2219 	mov	r7,dpl
                                   2220 ;	../UI_Manager/ui.c:537: switch (action)
      000B24 BF 01 02         [24] 2221 	cjne	r7,#0x01,00146$
      000B27 80 50            [24] 2222 	sjmp	00106$
      000B29                       2223 00146$:
      000B29 BF 02 02         [24] 2224 	cjne	r7,#0x02,00147$
      000B2C 80 3F            [24] 2225 	sjmp	00105$
      000B2E                       2226 00147$:
      000B2E BF 03 02         [24] 2227 	cjne	r7,#0x03,00148$
      000B31 80 0F            [24] 2228 	sjmp	00102$
      000B33                       2229 00148$:
      000B33 BF 0B 02         [24] 2230 	cjne	r7,#0x0b,00149$
      000B36 80 1F            [24] 2231 	sjmp	00104$
      000B38                       2232 00149$:
      000B38 BF 1F 02         [24] 2233 	cjne	r7,#0x1f,00150$
      000B3B 80 05            [24] 2234 	sjmp	00102$
      000B3D                       2235 00150$:
                                   2236 ;	../UI_Manager/ui.c:540: case BUTTON_UP:
      000B3D BF 6F 45         [24] 2237 	cjne	r7,#0x6f,00107$
      000B40 80 15            [24] 2238 	sjmp	00104$
      000B42                       2239 00102$:
                                   2240 ;	../UI_Manager/ui.c:541: set_runtime_data(MACRO_INDEX, INC, NULL);
      000B42 E4               [12] 2241 	clr	a
      000B43 C0 E0            [24] 2242 	push	acc
      000B45 04               [12] 2243 	inc	a
      000B46 C0 E0            [24] 2244 	push	acc
      000B48 75 82 03         [24] 2245 	mov	dpl,#0x03
      000B4B 12r00r00         [24] 2246 	lcall	_set_runtime_data
      000B4E 15 81            [12] 2247 	dec	sp
      000B50 15 81            [12] 2248 	dec	sp
                                   2249 ;	../UI_Manager/ui.c:542: changed = 0xFF;
      000B52 75*02 FF         [24] 2250 	mov	_changed,#0xff
                                   2251 ;	../UI_Manager/ui.c:543: break;
                                   2252 ;	../UI_Manager/ui.c:545: case BUTTON_DOWN:
      000B55 80 2E            [24] 2253 	sjmp	00107$
      000B57                       2254 00104$:
                                   2255 ;	../UI_Manager/ui.c:546: set_runtime_data(MACRO_INDEX, DEC, NULL);
      000B57 E4               [12] 2256 	clr	a
      000B58 C0 E0            [24] 2257 	push	acc
      000B5A 74 02            [12] 2258 	mov	a,#0x02
      000B5C C0 E0            [24] 2259 	push	acc
      000B5E 75 82 03         [24] 2260 	mov	dpl,#0x03
      000B61 12r00r00         [24] 2261 	lcall	_set_runtime_data
      000B64 15 81            [12] 2262 	dec	sp
      000B66 15 81            [12] 2263 	dec	sp
                                   2264 ;	../UI_Manager/ui.c:547: changed = 0xFF;  
      000B68 75*02 FF         [24] 2265 	mov	_changed,#0xff
                                   2266 ;	../UI_Manager/ui.c:548: break;
                                   2267 ;	../UI_Manager/ui.c:549: case BUTTON_FUNCTION:
      000B6B 80 18            [24] 2268 	sjmp	00107$
      000B6D                       2269 00105$:
                                   2270 ;	../UI_Manager/ui.c:550: set_ui_state(INC, NULL);
      000B6D E4               [12] 2271 	clr	a
      000B6E C0 E0            [24] 2272 	push	acc
      000B70 75 82 01         [24] 2273 	mov	dpl,#0x01
      000B73 12r12r16         [24] 2274 	lcall	_set_ui_state
      000B76 15 81            [12] 2275 	dec	sp
                                   2276 ;	../UI_Manager/ui.c:551: return;
      000B78 22               [24] 2277 	ret
                                   2278 ;	../UI_Manager/ui.c:552: case BUTTON_TIMER:
      000B79                       2279 00106$:
                                   2280 ;	../UI_Manager/ui.c:553: set_ui_state(DEC, NULL);
      000B79 E4               [12] 2281 	clr	a
      000B7A C0 E0            [24] 2282 	push	acc
      000B7C 75 82 02         [24] 2283 	mov	dpl,#0x02
      000B7F 12r12r16         [24] 2284 	lcall	_set_ui_state
      000B82 15 81            [12] 2285 	dec	sp
                                   2286 ;	../UI_Manager/ui.c:554: return;
                                   2287 ;	../UI_Manager/ui.c:555: }
      000B84 22               [24] 2288 	ret
      000B85                       2289 00107$:
                                   2290 ;	../UI_Manager/ui.c:557: if(Changed){
      000B85 E5*01            [12] 2291 	mov	a,_Changed
      000B87 60 28            [24] 2292 	jz	00109$
                                   2293 ;	../UI_Manager/ui.c:558: Changed = 0x00;
      000B89 75*01 00         [24] 2294 	mov	_Changed,#0x00
                                   2295 ;	../UI_Manager/ui.c:559: changed = 0xFF;
      000B8C 75*02 FF         [24] 2296 	mov	_changed,#0xff
                                   2297 ;	../UI_Manager/ui.c:561: exe_command(CLEAR_DISPLAY);
      000B8F 90 80 00         [24] 2298 	mov	dptr,#0x8000
      000B92 12r00r00         [24] 2299 	lcall	_exe_command
                                   2300 ;	../UI_Manager/ui.c:563: write_string("Macros", sizeof("Macros"), 4, LINE_0, NOT_SELECTED);
      000B95 E4               [12] 2301 	clr	a
      000B96 C0 E0            [24] 2302 	push	acc
      000B98 C0 E0            [24] 2303 	push	acc
      000B9A 74 04            [12] 2304 	mov	a,#0x04
      000B9C C0 E0            [24] 2305 	push	acc
      000B9E 74 07            [12] 2306 	mov	a,#0x07
      000BA0 C0 E0            [24] 2307 	push	acc
      000BA2 90r00rF5         [24] 2308 	mov	dptr,#___str_21
      000BA5 75 F0 80         [24] 2309 	mov	b,#0x80
      000BA8 12r00r00         [24] 2310 	lcall	_write_string
      000BAB E5 81            [12] 2311 	mov	a,sp
      000BAD 24 FC            [12] 2312 	add	a,#0xfc
      000BAF F5 81            [12] 2313 	mov	sp,a
      000BB1                       2314 00109$:
                                   2315 ;	../UI_Manager/ui.c:567: if(changed){
      000BB1 E5*02            [12] 2316 	mov	a,_changed
      000BB3 60 36            [24] 2317 	jz	00112$
                                   2318 ;	../UI_Manager/ui.c:568: changed = 0x00;
      000BB5 75*02 00         [24] 2319 	mov	_changed,#0x00
                                   2320 ;	../UI_Manager/ui.c:570: write_string(getString(get_runtime_data(MACRO_INDEX) + MACRO_STRING_OFFSET), LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000BB8 75 82 03         [24] 2321 	mov	dpl,#0x03
      000BBB 12r00r00         [24] 2322 	lcall	_get_runtime_data
      000BBE AF 82            [24] 2323 	mov	r7,dpl
      000BC0 74 14            [12] 2324 	mov	a,#0x14
      000BC2 2F               [12] 2325 	add	a,r7
      000BC3 F5 82            [12] 2326 	mov	dpl,a
      000BC5 12r13r23         [24] 2327 	lcall	_getString
      000BC8 AD 82            [24] 2328 	mov	r5,dpl
      000BCA AE 83            [24] 2329 	mov	r6,dph
      000BCC AF F0            [24] 2330 	mov	r7,b
      000BCE E4               [12] 2331 	clr	a
      000BCF C0 E0            [24] 2332 	push	acc
      000BD1 04               [12] 2333 	inc	a
      000BD2 C0 E0            [24] 2334 	push	acc
      000BD4 74 06            [12] 2335 	mov	a,#0x06
      000BD6 C0 E0            [24] 2336 	push	acc
      000BD8 74 10            [12] 2337 	mov	a,#0x10
      000BDA C0 E0            [24] 2338 	push	acc
      000BDC 8D 82            [24] 2339 	mov	dpl,r5
      000BDE 8E 83            [24] 2340 	mov	dph,r6
      000BE0 8F F0            [24] 2341 	mov	b,r7
      000BE2 12r00r00         [24] 2342 	lcall	_write_string
      000BE5 E5 81            [12] 2343 	mov	a,sp
      000BE7 24 FC            [12] 2344 	add	a,#0xfc
      000BE9 F5 81            [12] 2345 	mov	sp,a
      000BEB                       2346 00112$:
                                   2347 ;	../UI_Manager/ui.c:573: }
      000BEB 22               [24] 2348 	ret
                                   2349 ;------------------------------------------------------------
                                   2350 ;Allocation info for local variables in function 'macroSpeedPage'
                                   2351 ;------------------------------------------------------------
                                   2352 ;action                    Allocated to registers r7 
                                   2353 ;------------------------------------------------------------
                                   2354 ;	../UI_Manager/ui.c:575: void macroSpeedPage(uint8_t action){
                                   2355 ;	-----------------------------------------
                                   2356 ;	 function macroSpeedPage
                                   2357 ;	-----------------------------------------
      000BEC                       2358 _macroSpeedPage:
      000BEC AF 82            [24] 2359 	mov	r7,dpl
                                   2360 ;	../UI_Manager/ui.c:577: switch (action)
      000BEE BF 01 02         [24] 2361 	cjne	r7,#0x01,00153$
      000BF1 80 50            [24] 2362 	sjmp	00106$
      000BF3                       2363 00153$:
      000BF3 BF 02 02         [24] 2364 	cjne	r7,#0x02,00154$
      000BF6 80 3F            [24] 2365 	sjmp	00105$
      000BF8                       2366 00154$:
      000BF8 BF 03 02         [24] 2367 	cjne	r7,#0x03,00155$
      000BFB 80 0F            [24] 2368 	sjmp	00102$
      000BFD                       2369 00155$:
      000BFD BF 0B 02         [24] 2370 	cjne	r7,#0x0b,00156$
      000C00 80 1F            [24] 2371 	sjmp	00104$
      000C02                       2372 00156$:
      000C02 BF 1F 02         [24] 2373 	cjne	r7,#0x1f,00157$
      000C05 80 05            [24] 2374 	sjmp	00102$
      000C07                       2375 00157$:
                                   2376 ;	../UI_Manager/ui.c:580: case BUTTON_UP:
      000C07 BF 6F 45         [24] 2377 	cjne	r7,#0x6f,00107$
      000C0A 80 15            [24] 2378 	sjmp	00104$
      000C0C                       2379 00102$:
                                   2380 ;	../UI_Manager/ui.c:581: set_runtime_data(MACRO_SPEED_INDEX, INC, NULL);
      000C0C E4               [12] 2381 	clr	a
      000C0D C0 E0            [24] 2382 	push	acc
      000C0F 04               [12] 2383 	inc	a
      000C10 C0 E0            [24] 2384 	push	acc
      000C12 75 82 04         [24] 2385 	mov	dpl,#0x04
      000C15 12r00r00         [24] 2386 	lcall	_set_runtime_data
      000C18 15 81            [12] 2387 	dec	sp
      000C1A 15 81            [12] 2388 	dec	sp
                                   2389 ;	../UI_Manager/ui.c:582: changed = 0xFF;
      000C1C 75*02 FF         [24] 2390 	mov	_changed,#0xff
                                   2391 ;	../UI_Manager/ui.c:583: break;
                                   2392 ;	../UI_Manager/ui.c:585: case BUTTON_DOWN:
      000C1F 80 2E            [24] 2393 	sjmp	00107$
      000C21                       2394 00104$:
                                   2395 ;	../UI_Manager/ui.c:586: set_runtime_data(MACRO_SPEED_INDEX, DEC, NULL);
      000C21 E4               [12] 2396 	clr	a
      000C22 C0 E0            [24] 2397 	push	acc
      000C24 74 02            [12] 2398 	mov	a,#0x02
      000C26 C0 E0            [24] 2399 	push	acc
      000C28 75 82 04         [24] 2400 	mov	dpl,#0x04
      000C2B 12r00r00         [24] 2401 	lcall	_set_runtime_data
      000C2E 15 81            [12] 2402 	dec	sp
      000C30 15 81            [12] 2403 	dec	sp
                                   2404 ;	../UI_Manager/ui.c:587: changed = 0xFF;  
      000C32 75*02 FF         [24] 2405 	mov	_changed,#0xff
                                   2406 ;	../UI_Manager/ui.c:588: break;
                                   2407 ;	../UI_Manager/ui.c:589: case BUTTON_FUNCTION:
      000C35 80 18            [24] 2408 	sjmp	00107$
      000C37                       2409 00105$:
                                   2410 ;	../UI_Manager/ui.c:590: set_ui_state(INC, NULL);
      000C37 E4               [12] 2411 	clr	a
      000C38 C0 E0            [24] 2412 	push	acc
      000C3A 75 82 01         [24] 2413 	mov	dpl,#0x01
      000C3D 12r12r16         [24] 2414 	lcall	_set_ui_state
      000C40 15 81            [12] 2415 	dec	sp
                                   2416 ;	../UI_Manager/ui.c:591: return;
      000C42 22               [24] 2417 	ret
                                   2418 ;	../UI_Manager/ui.c:592: case BUTTON_TIMER:
      000C43                       2419 00106$:
                                   2420 ;	../UI_Manager/ui.c:593: set_ui_state(DEC, NULL);
      000C43 E4               [12] 2421 	clr	a
      000C44 C0 E0            [24] 2422 	push	acc
      000C46 75 82 02         [24] 2423 	mov	dpl,#0x02
      000C49 12r12r16         [24] 2424 	lcall	_set_ui_state
      000C4C 15 81            [12] 2425 	dec	sp
                                   2426 ;	../UI_Manager/ui.c:594: return;
      000C4E 22               [24] 2427 	ret
                                   2428 ;	../UI_Manager/ui.c:595: }
      000C4F                       2429 00107$:
                                   2430 ;	../UI_Manager/ui.c:597: if(Changed){
      000C4F E5*01            [12] 2431 	mov	a,_Changed
      000C51 60 28            [24] 2432 	jz	00109$
                                   2433 ;	../UI_Manager/ui.c:598: Changed = 0x00;
      000C53 75*01 00         [24] 2434 	mov	_Changed,#0x00
                                   2435 ;	../UI_Manager/ui.c:599: changed = 0xFF;
      000C56 75*02 FF         [24] 2436 	mov	_changed,#0xff
                                   2437 ;	../UI_Manager/ui.c:601: exe_command(CLEAR_DISPLAY);
      000C59 90 80 00         [24] 2438 	mov	dptr,#0x8000
      000C5C 12r00r00         [24] 2439 	lcall	_exe_command
                                   2440 ;	../UI_Manager/ui.c:603: write_string("Macro Speed", sizeof("Macro Speed"), 3, LINE_0, NOT_SELECTED);
      000C5F E4               [12] 2441 	clr	a
      000C60 C0 E0            [24] 2442 	push	acc
      000C62 C0 E0            [24] 2443 	push	acc
      000C64 74 03            [12] 2444 	mov	a,#0x03
      000C66 C0 E0            [24] 2445 	push	acc
      000C68 74 0C            [12] 2446 	mov	a,#0x0c
      000C6A C0 E0            [24] 2447 	push	acc
      000C6C 90r00rFC         [24] 2448 	mov	dptr,#___str_22
      000C6F 75 F0 80         [24] 2449 	mov	b,#0x80
      000C72 12r00r00         [24] 2450 	lcall	_write_string
      000C75 E5 81            [12] 2451 	mov	a,sp
      000C77 24 FC            [12] 2452 	add	a,#0xfc
      000C79 F5 81            [12] 2453 	mov	sp,a
      000C7B                       2454 00109$:
                                   2455 ;	../UI_Manager/ui.c:607: if(changed){
      000C7B E5*02            [12] 2456 	mov	a,_changed
      000C7D 60 67            [24] 2457 	jz	00115$
                                   2458 ;	../UI_Manager/ui.c:608: changed = 0x00;
      000C7F 75*02 00         [24] 2459 	mov	_changed,#0x00
                                   2460 ;	../UI_Manager/ui.c:610: if(get_runtime_data(MACRO_SPEED_INDEX) == 0){
      000C82 75 82 04         [24] 2461 	mov	dpl,#0x04
      000C85 12r00r00         [24] 2462 	lcall	_get_runtime_data
      000C88 E5 82            [12] 2463 	mov	a,dpl
                                   2464 ;	../UI_Manager/ui.c:611: write_string("Off", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000C8A 70 1D            [24] 2465 	jnz	00111$
      000C8C C0 E0            [24] 2466 	push	acc
      000C8E 04               [12] 2467 	inc	a
      000C8F C0 E0            [24] 2468 	push	acc
      000C91 74 06            [12] 2469 	mov	a,#0x06
      000C93 C0 E0            [24] 2470 	push	acc
      000C95 74 10            [12] 2471 	mov	a,#0x10
      000C97 C0 E0            [24] 2472 	push	acc
      000C99 90r01r08         [24] 2473 	mov	dptr,#___str_23
      000C9C 75 F0 80         [24] 2474 	mov	b,#0x80
      000C9F 12r00r00         [24] 2475 	lcall	_write_string
      000CA2 E5 81            [12] 2476 	mov	a,sp
      000CA4 24 FC            [12] 2477 	add	a,#0xfc
      000CA6 F5 81            [12] 2478 	mov	sp,a
      000CA8 22               [24] 2479 	ret
      000CA9                       2480 00111$:
                                   2481 ;	../UI_Manager/ui.c:613: write_string("", LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000CA9 E4               [12] 2482 	clr	a
      000CAA C0 E0            [24] 2483 	push	acc
      000CAC 04               [12] 2484 	inc	a
      000CAD C0 E0            [24] 2485 	push	acc
      000CAF 74 03            [12] 2486 	mov	a,#0x03
      000CB1 C0 E0            [24] 2487 	push	acc
      000CB3 74 10            [12] 2488 	mov	a,#0x10
      000CB5 C0 E0            [24] 2489 	push	acc
      000CB7 90r01r0C         [24] 2490 	mov	dptr,#___str_24
      000CBA 75 F0 80         [24] 2491 	mov	b,#0x80
      000CBD 12r00r00         [24] 2492 	lcall	_write_string
      000CC0 E5 81            [12] 2493 	mov	a,sp
      000CC2 24 FC            [12] 2494 	add	a,#0xfc
      000CC4 F5 81            [12] 2495 	mov	sp,a
                                   2496 ;	../UI_Manager/ui.c:614: write_number(get_runtime_data(MACRO_SPEED_INDEX), 5, LINE_1, NOT_SELECTED);
      000CC6 75 82 04         [24] 2497 	mov	dpl,#0x04
      000CC9 12r00r00         [24] 2498 	lcall	_get_runtime_data
      000CCC AF 82            [24] 2499 	mov	r7,dpl
      000CCE E4               [12] 2500 	clr	a
      000CCF FE               [12] 2501 	mov	r6,a
      000CD0 C0 E0            [24] 2502 	push	acc
      000CD2 04               [12] 2503 	inc	a
      000CD3 C0 E0            [24] 2504 	push	acc
      000CD5 74 05            [12] 2505 	mov	a,#0x05
      000CD7 C0 E0            [24] 2506 	push	acc
      000CD9 8F 82            [24] 2507 	mov	dpl,r7
      000CDB 8E 83            [24] 2508 	mov	dph,r6
      000CDD 12r00r00         [24] 2509 	lcall	_write_number
      000CE0 15 81            [12] 2510 	dec	sp
      000CE2 15 81            [12] 2511 	dec	sp
      000CE4 15 81            [12] 2512 	dec	sp
      000CE6                       2513 00115$:
                                   2514 ;	../UI_Manager/ui.c:618: }
      000CE6 22               [24] 2515 	ret
                                   2516 ;------------------------------------------------------------
                                   2517 ;Allocation info for local variables in function 'colorPage'
                                   2518 ;------------------------------------------------------------
                                   2519 ;action                    Allocated to registers r7 
                                   2520 ;index                     Allocated to registers r6 
                                   2521 ;------------------------------------------------------------
                                   2522 ;	../UI_Manager/ui.c:620: void colorPage(uint8_t action){
                                   2523 ;	-----------------------------------------
                                   2524 ;	 function colorPage
                                   2525 ;	-----------------------------------------
      000CE7                       2526 _colorPage:
      000CE7 AF 82            [24] 2527 	mov	r7,dpl
                                   2528 ;	../UI_Manager/ui.c:621: uint8_t index = 0;
      000CE9 7E 00            [12] 2529 	mov	r6,#0x00
                                   2530 ;	../UI_Manager/ui.c:623: switch (State)
      000CEB AD*00            [24] 2531 	mov	r5,_State
      000CED BD 06 02         [24] 2532 	cjne	r5,#0x06,00174$
      000CF0 80 0F            [24] 2533 	sjmp	00101$
      000CF2                       2534 00174$:
      000CF2 BD 07 02         [24] 2535 	cjne	r5,#0x07,00175$
      000CF5 80 0E            [24] 2536 	sjmp	00102$
      000CF7                       2537 00175$:
      000CF7 BD 08 02         [24] 2538 	cjne	r5,#0x08,00176$
      000CFA 80 0D            [24] 2539 	sjmp	00103$
      000CFC                       2540 00176$:
                                   2541 ;	../UI_Manager/ui.c:625: case MANUAL_RED_STATE:
      000CFC BD 09 10         [24] 2542 	cjne	r5,#0x09,00105$
      000CFF 80 0C            [24] 2543 	sjmp	00104$
      000D01                       2544 00101$:
                                   2545 ;	../UI_Manager/ui.c:626: index = RED_INDEX;
      000D01 7E 05            [12] 2546 	mov	r6,#0x05
                                   2547 ;	../UI_Manager/ui.c:627: break;
                                   2548 ;	../UI_Manager/ui.c:628: case MANUAL_GREEN_STATE:
      000D03 80 0A            [24] 2549 	sjmp	00105$
      000D05                       2550 00102$:
                                   2551 ;	../UI_Manager/ui.c:629: index = GREEN_INDEX;
      000D05 7E 06            [12] 2552 	mov	r6,#0x06
                                   2553 ;	../UI_Manager/ui.c:630: break;
                                   2554 ;	../UI_Manager/ui.c:631: case MANUAL_BLUE_STATE:
      000D07 80 06            [24] 2555 	sjmp	00105$
      000D09                       2556 00103$:
                                   2557 ;	../UI_Manager/ui.c:632: index = BLUE_INDEX;
      000D09 7E 07            [12] 2558 	mov	r6,#0x07
                                   2559 ;	../UI_Manager/ui.c:633: break;
                                   2560 ;	../UI_Manager/ui.c:634: case MANUAL_STROBE_STATE:
      000D0B 80 02            [24] 2561 	sjmp	00105$
      000D0D                       2562 00104$:
                                   2563 ;	../UI_Manager/ui.c:635: index = STROBE_INDEX;
      000D0D 7E 08            [12] 2564 	mov	r6,#0x08
                                   2565 ;	../UI_Manager/ui.c:637: }
      000D0F                       2566 00105$:
                                   2567 ;	../UI_Manager/ui.c:639: switch (action)
      000D0F BF 01 02         [24] 2568 	cjne	r7,#0x01,00178$
      000D12 80 56            [24] 2569 	sjmp	00111$
      000D14                       2570 00178$:
      000D14 BF 02 02         [24] 2571 	cjne	r7,#0x02,00179$
      000D17 80 45            [24] 2572 	sjmp	00110$
      000D19                       2573 00179$:
      000D19 BF 03 02         [24] 2574 	cjne	r7,#0x03,00180$
      000D1C 80 0F            [24] 2575 	sjmp	00107$
      000D1E                       2576 00180$:
      000D1E BF 0B 02         [24] 2577 	cjne	r7,#0x0b,00181$
      000D21 80 22            [24] 2578 	sjmp	00109$
      000D23                       2579 00181$:
      000D23 BF 1F 02         [24] 2580 	cjne	r7,#0x1f,00182$
      000D26 80 05            [24] 2581 	sjmp	00107$
      000D28                       2582 00182$:
                                   2583 ;	../UI_Manager/ui.c:642: case BUTTON_UP:
      000D28 BF 6F 4B         [24] 2584 	cjne	r7,#0x6f,00112$
      000D2B 80 18            [24] 2585 	sjmp	00109$
      000D2D                       2586 00107$:
                                   2587 ;	../UI_Manager/ui.c:643: set_runtime_data(index, INC, NULL);
      000D2D C0 06            [24] 2588 	push	ar6
      000D2F E4               [12] 2589 	clr	a
      000D30 C0 E0            [24] 2590 	push	acc
      000D32 04               [12] 2591 	inc	a
      000D33 C0 E0            [24] 2592 	push	acc
      000D35 8E 82            [24] 2593 	mov	dpl,r6
      000D37 12r00r00         [24] 2594 	lcall	_set_runtime_data
      000D3A 15 81            [12] 2595 	dec	sp
      000D3C 15 81            [12] 2596 	dec	sp
      000D3E D0 06            [24] 2597 	pop	ar6
                                   2598 ;	../UI_Manager/ui.c:644: changed = 0xFF;
      000D40 75*02 FF         [24] 2599 	mov	_changed,#0xff
                                   2600 ;	../UI_Manager/ui.c:645: break;
                                   2601 ;	../UI_Manager/ui.c:647: case BUTTON_DOWN:
      000D43 80 31            [24] 2602 	sjmp	00112$
      000D45                       2603 00109$:
                                   2604 ;	../UI_Manager/ui.c:648: set_runtime_data(index, DEC, NULL);
      000D45 C0 06            [24] 2605 	push	ar6
      000D47 E4               [12] 2606 	clr	a
      000D48 C0 E0            [24] 2607 	push	acc
      000D4A 74 02            [12] 2608 	mov	a,#0x02
      000D4C C0 E0            [24] 2609 	push	acc
      000D4E 8E 82            [24] 2610 	mov	dpl,r6
      000D50 12r00r00         [24] 2611 	lcall	_set_runtime_data
      000D53 15 81            [12] 2612 	dec	sp
      000D55 15 81            [12] 2613 	dec	sp
      000D57 D0 06            [24] 2614 	pop	ar6
                                   2615 ;	../UI_Manager/ui.c:649: changed = 0xFF;  
      000D59 75*02 FF         [24] 2616 	mov	_changed,#0xff
                                   2617 ;	../UI_Manager/ui.c:650: break;
                                   2618 ;	../UI_Manager/ui.c:651: case BUTTON_FUNCTION:
      000D5C 80 18            [24] 2619 	sjmp	00112$
      000D5E                       2620 00110$:
                                   2621 ;	../UI_Manager/ui.c:652: set_ui_state(INC, NULL);
      000D5E E4               [12] 2622 	clr	a
      000D5F C0 E0            [24] 2623 	push	acc
      000D61 75 82 01         [24] 2624 	mov	dpl,#0x01
      000D64 12r12r16         [24] 2625 	lcall	_set_ui_state
      000D67 15 81            [12] 2626 	dec	sp
                                   2627 ;	../UI_Manager/ui.c:653: return;
      000D69 22               [24] 2628 	ret
                                   2629 ;	../UI_Manager/ui.c:654: case BUTTON_TIMER:
      000D6A                       2630 00111$:
                                   2631 ;	../UI_Manager/ui.c:655: set_ui_state(DEC, NULL);
      000D6A E4               [12] 2632 	clr	a
      000D6B C0 E0            [24] 2633 	push	acc
      000D6D 75 82 02         [24] 2634 	mov	dpl,#0x02
      000D70 12r12r16         [24] 2635 	lcall	_set_ui_state
      000D73 15 81            [12] 2636 	dec	sp
                                   2637 ;	../UI_Manager/ui.c:656: return;
      000D75 22               [24] 2638 	ret
                                   2639 ;	../UI_Manager/ui.c:657: }
      000D76                       2640 00112$:
                                   2641 ;	../UI_Manager/ui.c:659: if(Changed){
      000D76 E5*01            [12] 2642 	mov	a,_Changed
      000D78 60 3C            [24] 2643 	jz	00114$
                                   2644 ;	../UI_Manager/ui.c:660: Changed = 0x00;
      000D7A 75*01 00         [24] 2645 	mov	_Changed,#0x00
                                   2646 ;	../UI_Manager/ui.c:661: changed = 0xFF;
      000D7D 75*02 FF         [24] 2647 	mov	_changed,#0xff
                                   2648 ;	../UI_Manager/ui.c:663: exe_command(CLEAR_DISPLAY);
      000D80 90 80 00         [24] 2649 	mov	dptr,#0x8000
      000D83 C0 06            [24] 2650 	push	ar6
      000D85 12r00r00         [24] 2651 	lcall	_exe_command
                                   2652 ;	../UI_Manager/ui.c:665: write_string(getString(COLOR_STRING_OFFSET + State), LINE_LENGTH, 3, LINE_0, NOT_SELECTED);
      000D88 AF*00            [24] 2653 	mov	r7,_State
      000D8A 74 C8            [12] 2654 	mov	a,#0xc8
      000D8C 2F               [12] 2655 	add	a,r7
      000D8D F5 82            [12] 2656 	mov	dpl,a
      000D8F 12r13r23         [24] 2657 	lcall	_getString
      000D92 AC 82            [24] 2658 	mov	r4,dpl
      000D94 AD 83            [24] 2659 	mov	r5,dph
      000D96 AF F0            [24] 2660 	mov	r7,b
      000D98 E4               [12] 2661 	clr	a
      000D99 C0 E0            [24] 2662 	push	acc
      000D9B C0 E0            [24] 2663 	push	acc
      000D9D 74 03            [12] 2664 	mov	a,#0x03
      000D9F C0 E0            [24] 2665 	push	acc
      000DA1 74 10            [12] 2666 	mov	a,#0x10
      000DA3 C0 E0            [24] 2667 	push	acc
      000DA5 8C 82            [24] 2668 	mov	dpl,r4
      000DA7 8D 83            [24] 2669 	mov	dph,r5
      000DA9 8F F0            [24] 2670 	mov	b,r7
      000DAB 12r00r00         [24] 2671 	lcall	_write_string
      000DAE E5 81            [12] 2672 	mov	a,sp
      000DB0 24 FC            [12] 2673 	add	a,#0xfc
      000DB2 F5 81            [12] 2674 	mov	sp,a
      000DB4 D0 06            [24] 2675 	pop	ar6
      000DB6                       2676 00114$:
                                   2677 ;	../UI_Manager/ui.c:669: if(changed){
      000DB6 E5*02            [12] 2678 	mov	a,_changed
      000DB8 60 6C            [24] 2679 	jz	00120$
                                   2680 ;	../UI_Manager/ui.c:670: changed = 0x00;
      000DBA 75*02 00         [24] 2681 	mov	_changed,#0x00
                                   2682 ;	../UI_Manager/ui.c:672: if(get_runtime_data(index) == 0){
      000DBD 8E 82            [24] 2683 	mov	dpl,r6
      000DBF C0 06            [24] 2684 	push	ar6
      000DC1 12r00r00         [24] 2685 	lcall	_get_runtime_data
      000DC4 E5 82            [12] 2686 	mov	a,dpl
      000DC6 D0 06            [24] 2687 	pop	ar6
                                   2688 ;	../UI_Manager/ui.c:673: write_string("Off", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000DC8 70 1D            [24] 2689 	jnz	00116$
      000DCA C0 E0            [24] 2690 	push	acc
      000DCC 04               [12] 2691 	inc	a
      000DCD C0 E0            [24] 2692 	push	acc
      000DCF 74 06            [12] 2693 	mov	a,#0x06
      000DD1 C0 E0            [24] 2694 	push	acc
      000DD3 74 10            [12] 2695 	mov	a,#0x10
      000DD5 C0 E0            [24] 2696 	push	acc
      000DD7 90r01r08         [24] 2697 	mov	dptr,#___str_23
      000DDA 75 F0 80         [24] 2698 	mov	b,#0x80
      000DDD 12r00r00         [24] 2699 	lcall	_write_string
      000DE0 E5 81            [12] 2700 	mov	a,sp
      000DE2 24 FC            [12] 2701 	add	a,#0xfc
      000DE4 F5 81            [12] 2702 	mov	sp,a
      000DE6 22               [24] 2703 	ret
      000DE7                       2704 00116$:
                                   2705 ;	../UI_Manager/ui.c:675: write_string("", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      000DE7 C0 06            [24] 2706 	push	ar6
      000DE9 E4               [12] 2707 	clr	a
      000DEA C0 E0            [24] 2708 	push	acc
      000DEC 04               [12] 2709 	inc	a
      000DED C0 E0            [24] 2710 	push	acc
      000DEF E4               [12] 2711 	clr	a
      000DF0 C0 E0            [24] 2712 	push	acc
      000DF2 74 10            [12] 2713 	mov	a,#0x10
      000DF4 C0 E0            [24] 2714 	push	acc
      000DF6 90r01r0C         [24] 2715 	mov	dptr,#___str_24
      000DF9 75 F0 80         [24] 2716 	mov	b,#0x80
      000DFC 12r00r00         [24] 2717 	lcall	_write_string
      000DFF E5 81            [12] 2718 	mov	a,sp
      000E01 24 FC            [12] 2719 	add	a,#0xfc
      000E03 F5 81            [12] 2720 	mov	sp,a
      000E05 D0 06            [24] 2721 	pop	ar6
                                   2722 ;	../UI_Manager/ui.c:676: write_number(get_runtime_data(index), 6, LINE_1, NOT_SELECTED);
      000E07 8E 82            [24] 2723 	mov	dpl,r6
      000E09 12r00r00         [24] 2724 	lcall	_get_runtime_data
      000E0C AF 82            [24] 2725 	mov	r7,dpl
      000E0E E4               [12] 2726 	clr	a
      000E0F FE               [12] 2727 	mov	r6,a
      000E10 C0 E0            [24] 2728 	push	acc
      000E12 04               [12] 2729 	inc	a
      000E13 C0 E0            [24] 2730 	push	acc
      000E15 74 06            [12] 2731 	mov	a,#0x06
      000E17 C0 E0            [24] 2732 	push	acc
      000E19 8F 82            [24] 2733 	mov	dpl,r7
      000E1B 8E 83            [24] 2734 	mov	dph,r6
      000E1D 12r00r00         [24] 2735 	lcall	_write_number
      000E20 15 81            [12] 2736 	dec	sp
      000E22 15 81            [12] 2737 	dec	sp
      000E24 15 81            [12] 2738 	dec	sp
      000E26                       2739 00120$:
                                   2740 ;	../UI_Manager/ui.c:679: }
      000E26 22               [24] 2741 	ret
                                   2742 ;------------------------------------------------------------
                                   2743 ;Allocation info for local variables in function 'remotePage'
                                   2744 ;------------------------------------------------------------
                                   2745 ;action                    Allocated to registers r7 
                                   2746 ;remoteNumber              Allocated to registers r6 
                                   2747 ;index                     Allocated to registers r5 
                                   2748 ;------------------------------------------------------------
                                   2749 ;	../UI_Manager/ui.c:681: void remotePage(uint8_t action){
                                   2750 ;	-----------------------------------------
                                   2751 ;	 function remotePage
                                   2752 ;	-----------------------------------------
      000E27                       2753 _remotePage:
      000E27 AF 82            [24] 2754 	mov	r7,dpl
                                   2755 ;	../UI_Manager/ui.c:682: uint8_t remoteNumber = 0;
      000E29 7E 00            [12] 2756 	mov	r6,#0x00
                                   2757 ;	../UI_Manager/ui.c:683: uint8_t index = 0;
      000E2B 7D 00            [12] 2758 	mov	r5,#0x00
                                   2759 ;	../UI_Manager/ui.c:685: switch (State)
      000E2D AC*00            [24] 2760 	mov	r4,_State
      000E2F BC 0A 02         [24] 2761 	cjne	r4,#0x0a,00168$
      000E32 80 0A            [24] 2762 	sjmp	00101$
      000E34                       2763 00168$:
      000E34 BC 0B 02         [24] 2764 	cjne	r4,#0x0b,00169$
      000E37 80 0B            [24] 2765 	sjmp	00102$
      000E39                       2766 00169$:
                                   2767 ;	../UI_Manager/ui.c:687: case MANUAL_REMOTE_ACTION_4_STATE:
      000E39 BC 0C 12         [24] 2768 	cjne	r4,#0x0c,00104$
      000E3C 80 0C            [24] 2769 	sjmp	00103$
      000E3E                       2770 00101$:
                                   2771 ;	../UI_Manager/ui.c:688: index = R4_INDEX;
      000E3E 7D 09            [12] 2772 	mov	r5,#0x09
                                   2773 ;	../UI_Manager/ui.c:689: remoteNumber = 4;
      000E40 7E 04            [12] 2774 	mov	r6,#0x04
                                   2775 ;	../UI_Manager/ui.c:690: break;
                                   2776 ;	../UI_Manager/ui.c:691: case MANUAL_REMOTE_ACTION_5_STATE:
      000E42 80 0A            [24] 2777 	sjmp	00104$
      000E44                       2778 00102$:
                                   2779 ;	../UI_Manager/ui.c:692: index = R5_INDEX;
      000E44 7D 0A            [12] 2780 	mov	r5,#0x0a
                                   2781 ;	../UI_Manager/ui.c:693: remoteNumber = 5;
      000E46 7E 05            [12] 2782 	mov	r6,#0x05
                                   2783 ;	../UI_Manager/ui.c:694: break;
                                   2784 ;	../UI_Manager/ui.c:695: case MANUAL_REMOTE_ACTION_6_STATE:
      000E48 80 04            [24] 2785 	sjmp	00104$
      000E4A                       2786 00103$:
                                   2787 ;	../UI_Manager/ui.c:696: index = R6_INDEX;
      000E4A 7D 0B            [12] 2788 	mov	r5,#0x0b
                                   2789 ;	../UI_Manager/ui.c:697: remoteNumber = 6;
      000E4C 7E 06            [12] 2790 	mov	r6,#0x06
                                   2791 ;	../UI_Manager/ui.c:699: }
      000E4E                       2792 00104$:
                                   2793 ;	../UI_Manager/ui.c:701: switch (action)
      000E4E BF 01 02         [24] 2794 	cjne	r7,#0x01,00171$
      000E51 80 54            [24] 2795 	sjmp	00108$
      000E53                       2796 00171$:
      000E53 BF 02 02         [24] 2797 	cjne	r7,#0x02,00172$
      000E56 80 43            [24] 2798 	sjmp	00107$
      000E58                       2799 00172$:
      000E58 BF 03 02         [24] 2800 	cjne	r7,#0x03,00173$
      000E5B 80 05            [24] 2801 	sjmp	00105$
      000E5D                       2802 00173$:
                                   2803 ;	../UI_Manager/ui.c:703: case BUTTON_UP:
      000E5D BF 0B 53         [24] 2804 	cjne	r7,#0x0b,00109$
      000E60 80 1C            [24] 2805 	sjmp	00106$
      000E62                       2806 00105$:
                                   2807 ;	../UI_Manager/ui.c:704: set_runtime_data(index, INC, NULL);
      000E62 C0 06            [24] 2808 	push	ar6
      000E64 C0 05            [24] 2809 	push	ar5
      000E66 E4               [12] 2810 	clr	a
      000E67 C0 E0            [24] 2811 	push	acc
      000E69 04               [12] 2812 	inc	a
      000E6A C0 E0            [24] 2813 	push	acc
      000E6C 8D 82            [24] 2814 	mov	dpl,r5
      000E6E 12r00r00         [24] 2815 	lcall	_set_runtime_data
      000E71 15 81            [12] 2816 	dec	sp
      000E73 15 81            [12] 2817 	dec	sp
      000E75 D0 05            [24] 2818 	pop	ar5
      000E77 D0 06            [24] 2819 	pop	ar6
                                   2820 ;	../UI_Manager/ui.c:705: changed = 0xFF;
      000E79 75*02 FF         [24] 2821 	mov	_changed,#0xff
                                   2822 ;	../UI_Manager/ui.c:706: break;
                                   2823 ;	../UI_Manager/ui.c:707: case BUTTON_DOWN:
      000E7C 80 35            [24] 2824 	sjmp	00109$
      000E7E                       2825 00106$:
                                   2826 ;	../UI_Manager/ui.c:708: set_runtime_data(index, DEC, NULL);
      000E7E C0 06            [24] 2827 	push	ar6
      000E80 C0 05            [24] 2828 	push	ar5
      000E82 E4               [12] 2829 	clr	a
      000E83 C0 E0            [24] 2830 	push	acc
      000E85 74 02            [12] 2831 	mov	a,#0x02
      000E87 C0 E0            [24] 2832 	push	acc
      000E89 8D 82            [24] 2833 	mov	dpl,r5
      000E8B 12r00r00         [24] 2834 	lcall	_set_runtime_data
      000E8E 15 81            [12] 2835 	dec	sp
      000E90 15 81            [12] 2836 	dec	sp
      000E92 D0 05            [24] 2837 	pop	ar5
      000E94 D0 06            [24] 2838 	pop	ar6
                                   2839 ;	../UI_Manager/ui.c:709: changed = 0xFF;  
      000E96 75*02 FF         [24] 2840 	mov	_changed,#0xff
                                   2841 ;	../UI_Manager/ui.c:710: break;
                                   2842 ;	../UI_Manager/ui.c:711: case BUTTON_FUNCTION:
      000E99 80 18            [24] 2843 	sjmp	00109$
      000E9B                       2844 00107$:
                                   2845 ;	../UI_Manager/ui.c:712: set_ui_state(INC, NULL);
      000E9B E4               [12] 2846 	clr	a
      000E9C C0 E0            [24] 2847 	push	acc
      000E9E 75 82 01         [24] 2848 	mov	dpl,#0x01
      000EA1 12r12r16         [24] 2849 	lcall	_set_ui_state
      000EA4 15 81            [12] 2850 	dec	sp
                                   2851 ;	../UI_Manager/ui.c:713: return;
      000EA6 22               [24] 2852 	ret
                                   2853 ;	../UI_Manager/ui.c:714: case BUTTON_TIMER:
      000EA7                       2854 00108$:
                                   2855 ;	../UI_Manager/ui.c:715: set_ui_state(DEC, NULL);
      000EA7 E4               [12] 2856 	clr	a
      000EA8 C0 E0            [24] 2857 	push	acc
      000EAA 75 82 02         [24] 2858 	mov	dpl,#0x02
      000EAD 12r12r16         [24] 2859 	lcall	_set_ui_state
      000EB0 15 81            [12] 2860 	dec	sp
                                   2861 ;	../UI_Manager/ui.c:716: return;
      000EB2 22               [24] 2862 	ret
                                   2863 ;	../UI_Manager/ui.c:717: }
      000EB3                       2864 00109$:
                                   2865 ;	../UI_Manager/ui.c:719: if(Changed){
      000EB3 E5*01            [12] 2866 	mov	a,_Changed
      000EB5 70 03            [24] 2867 	jnz	00175$
      000EB7 02r0Fr3A         [24] 2868 	ljmp	00115$
      000EBA                       2869 00175$:
                                   2870 ;	../UI_Manager/ui.c:720: Changed = 0x00;
      000EBA 75*01 00         [24] 2871 	mov	_Changed,#0x00
                                   2872 ;	../UI_Manager/ui.c:721: changed = 0xFF;
      000EBD 75*02 FF         [24] 2873 	mov	_changed,#0xff
                                   2874 ;	../UI_Manager/ui.c:723: exe_command(CLEAR_DISPLAY);
      000EC0 90 80 00         [24] 2875 	mov	dptr,#0x8000
      000EC3 C0 06            [24] 2876 	push	ar6
      000EC5 C0 05            [24] 2877 	push	ar5
      000EC7 12r00r00         [24] 2878 	lcall	_exe_command
                                   2879 ;	../UI_Manager/ui.c:725: write_string("Remote X Action", sizeof("Remote X Action"), 1, LINE_0, NOT_SELECTED);
      000ECA E4               [12] 2880 	clr	a
      000ECB C0 E0            [24] 2881 	push	acc
      000ECD C0 E0            [24] 2882 	push	acc
      000ECF 04               [12] 2883 	inc	a
      000ED0 C0 E0            [24] 2884 	push	acc
      000ED2 C4               [12] 2885 	swap	a
      000ED3 C0 E0            [24] 2886 	push	acc
      000ED5 90r01r0D         [24] 2887 	mov	dptr,#___str_25
      000ED8 75 F0 80         [24] 2888 	mov	b,#0x80
      000EDB 12r00r00         [24] 2889 	lcall	_write_string
      000EDE E5 81            [12] 2890 	mov	a,sp
      000EE0 24 FC            [12] 2891 	add	a,#0xfc
      000EE2 F5 81            [12] 2892 	mov	sp,a
      000EE4 D0 05            [24] 2893 	pop	ar5
      000EE6 D0 06            [24] 2894 	pop	ar6
                                   2895 ;	../UI_Manager/ui.c:726: switch (remoteNumber)
      000EE8 BE 04 02         [24] 2896 	cjne	r6,#0x04,00176$
      000EEB 80 0A            [24] 2897 	sjmp	00110$
      000EED                       2898 00176$:
      000EED BE 05 02         [24] 2899 	cjne	r6,#0x05,00177$
      000EF0 80 1C            [24] 2900 	sjmp	00111$
      000EF2                       2901 00177$:
                                   2902 ;	../UI_Manager/ui.c:728: case 4:
      000EF2 BE 06 45         [24] 2903 	cjne	r6,#0x06,00115$
      000EF5 80 2E            [24] 2904 	sjmp	00112$
      000EF7                       2905 00110$:
                                   2906 ;	../UI_Manager/ui.c:729: write_char(CHAR_4, 8, LINE_0);
      000EF7 C0 05            [24] 2907 	push	ar5
      000EF9 E4               [12] 2908 	clr	a
      000EFA C0 E0            [24] 2909 	push	acc
      000EFC 74 08            [12] 2910 	mov	a,#0x08
      000EFE C0 E0            [24] 2911 	push	acc
      000F00 75 82 2C         [24] 2912 	mov	dpl,#0x2c
      000F03 12r00r00         [24] 2913 	lcall	_write_char
      000F06 15 81            [12] 2914 	dec	sp
      000F08 15 81            [12] 2915 	dec	sp
      000F0A D0 05            [24] 2916 	pop	ar5
                                   2917 ;	../UI_Manager/ui.c:730: break;
                                   2918 ;	../UI_Manager/ui.c:731: case 5:
      000F0C 80 2C            [24] 2919 	sjmp	00115$
      000F0E                       2920 00111$:
                                   2921 ;	../UI_Manager/ui.c:732: write_char(CHAR_5, 8, LINE_0);
      000F0E C0 05            [24] 2922 	push	ar5
      000F10 E4               [12] 2923 	clr	a
      000F11 C0 E0            [24] 2924 	push	acc
      000F13 74 08            [12] 2925 	mov	a,#0x08
      000F15 C0 E0            [24] 2926 	push	acc
      000F17 75 82 AC         [24] 2927 	mov	dpl,#0xac
      000F1A 12r00r00         [24] 2928 	lcall	_write_char
      000F1D 15 81            [12] 2929 	dec	sp
      000F1F 15 81            [12] 2930 	dec	sp
      000F21 D0 05            [24] 2931 	pop	ar5
                                   2932 ;	../UI_Manager/ui.c:733: break;
                                   2933 ;	../UI_Manager/ui.c:734: case 6:
      000F23 80 15            [24] 2934 	sjmp	00115$
      000F25                       2935 00112$:
                                   2936 ;	../UI_Manager/ui.c:735: write_char(CHAR_6, 8, LINE_0);
      000F25 C0 05            [24] 2937 	push	ar5
      000F27 E4               [12] 2938 	clr	a
      000F28 C0 E0            [24] 2939 	push	acc
      000F2A 74 08            [12] 2940 	mov	a,#0x08
      000F2C C0 E0            [24] 2941 	push	acc
      000F2E 75 82 6C         [24] 2942 	mov	dpl,#0x6c
      000F31 12r00r00         [24] 2943 	lcall	_write_char
      000F34 15 81            [12] 2944 	dec	sp
      000F36 15 81            [12] 2945 	dec	sp
      000F38 D0 05            [24] 2946 	pop	ar5
                                   2947 ;	../UI_Manager/ui.c:737: }
      000F3A                       2948 00115$:
                                   2949 ;	../UI_Manager/ui.c:740: if(changed){
      000F3A E5*02            [12] 2950 	mov	a,_changed
      000F3C 60 34            [24] 2951 	jz	00118$
                                   2952 ;	../UI_Manager/ui.c:741: changed = 0x00;
      000F3E 75*02 00         [24] 2953 	mov	_changed,#0x00
                                   2954 ;	../UI_Manager/ui.c:742: write_string(getString(get_runtime_data(index) + WIRELESS_ACTION_STRING_OFFSET), LINE_LENGTH, 2, LINE_1, NOT_SELECTED);  
      000F41 8D 82            [24] 2955 	mov	dpl,r5
      000F43 12r00r00         [24] 2956 	lcall	_get_runtime_data
      000F46 AF 82            [24] 2957 	mov	r7,dpl
      000F48 74 3C            [12] 2958 	mov	a,#0x3c
      000F4A 2F               [12] 2959 	add	a,r7
      000F4B F5 82            [12] 2960 	mov	dpl,a
      000F4D 12r13r23         [24] 2961 	lcall	_getString
      000F50 AD 82            [24] 2962 	mov	r5,dpl
      000F52 AE 83            [24] 2963 	mov	r6,dph
      000F54 AF F0            [24] 2964 	mov	r7,b
      000F56 E4               [12] 2965 	clr	a
      000F57 C0 E0            [24] 2966 	push	acc
      000F59 04               [12] 2967 	inc	a
      000F5A C0 E0            [24] 2968 	push	acc
      000F5C 04               [12] 2969 	inc	a
      000F5D C0 E0            [24] 2970 	push	acc
      000F5F 74 10            [12] 2971 	mov	a,#0x10
      000F61 C0 E0            [24] 2972 	push	acc
      000F63 8D 82            [24] 2973 	mov	dpl,r5
      000F65 8E 83            [24] 2974 	mov	dph,r6
      000F67 8F F0            [24] 2975 	mov	b,r7
      000F69 12r00r00         [24] 2976 	lcall	_write_string
      000F6C E5 81            [12] 2977 	mov	a,sp
      000F6E 24 FC            [12] 2978 	add	a,#0xfc
      000F70 F5 81            [12] 2979 	mov	sp,a
      000F72                       2980 00118$:
                                   2981 ;	../UI_Manager/ui.c:744: }
      000F72 22               [24] 2982 	ret
                                   2983 ;------------------------------------------------------------
                                   2984 ;Allocation info for local variables in function 'saveLoadPage'
                                   2985 ;------------------------------------------------------------
                                   2986 ;action                    Allocated to registers r7 
                                   2987 ;slot                      Allocated with name '_saveLoadPage_slot_65536_142'
                                   2988 ;------------------------------------------------------------
                                   2989 ;	../UI_Manager/ui.c:746: void saveLoadPage(uint8_t action){
                                   2990 ;	-----------------------------------------
                                   2991 ;	 function saveLoadPage
                                   2992 ;	-----------------------------------------
      000F73                       2993 _saveLoadPage:
      000F73 AF 82            [24] 2994 	mov	r7,dpl
                                   2995 ;	../UI_Manager/ui.c:749: switch (action)
      000F75 BF 01 03         [24] 2996 	cjne	r7,#0x01,00161$
      000F78 02r10r2D         [24] 2997 	ljmp	00108$
      000F7B                       2998 00161$:
      000F7B BF 02 03         [24] 2999 	cjne	r7,#0x02,00162$
      000F7E 02r10r21         [24] 3000 	ljmp	00107$
      000F81                       3001 00162$:
      000F81 BF 03 03         [24] 3002 	cjne	r7,#0x03,00163$
      000F84 02r10r13         [24] 3003 	ljmp	00105$
      000F87                       3004 00163$:
      000F87 BF 0B 03         [24] 3005 	cjne	r7,#0x0b,00164$
      000F8A 02r10r1A         [24] 3006 	ljmp	00106$
      000F8D                       3007 00164$:
      000F8D BF 1E 02         [24] 3008 	cjne	r7,#0x1e,00165$
      000F90 80 03            [24] 3009 	sjmp	00166$
      000F92                       3010 00165$:
      000F92 02r10r39         [24] 3011 	ljmp	00109$
      000F95                       3012 00166$:
                                   3013 ;	../UI_Manager/ui.c:752: save_load_settings(slot % (SLOT_COUNT - 1), (State == MANUAL_SAVE_SETTINGS_STATE) ? SAVE : LOAD);
      000F95 74 0D            [12] 3014 	mov	a,#0x0d
      000F97 B5*00 06         [24] 3015 	cjne	a,_State,00119$
      000F9A 7E 01            [12] 3016 	mov	r6,#0x01
      000F9C 7F 00            [12] 3017 	mov	r7,#0x00
      000F9E 80 04            [24] 3018 	sjmp	00120$
      000FA0                       3019 00119$:
      000FA0 7E 00            [12] 3020 	mov	r6,#0x00
      000FA2 7F 00            [12] 3021 	mov	r7,#0x00
      000FA4                       3022 00120$:
      000FA4 75 F0 03         [24] 3023 	mov	b,#0x03
      000FA7 E5*0A            [12] 3024 	mov	a,_saveLoadPage_slot_65536_142
      000FA9 84               [48] 3025 	div	ab
      000FAA 85 F0 82         [24] 3026 	mov	dpl,b
      000FAD C0 06            [24] 3027 	push	ar6
      000FAF 12r00r00         [24] 3028 	lcall	_save_load_settings
      000FB2 15 81            [12] 3029 	dec	sp
                                   3030 ;	../UI_Manager/ui.c:753: write_string("", LINE_LENGTH, 0, LINE_1, NOT_SELECTED); 
      000FB4 E4               [12] 3031 	clr	a
      000FB5 C0 E0            [24] 3032 	push	acc
      000FB7 04               [12] 3033 	inc	a
      000FB8 C0 E0            [24] 3034 	push	acc
      000FBA E4               [12] 3035 	clr	a
      000FBB C0 E0            [24] 3036 	push	acc
      000FBD 74 10            [12] 3037 	mov	a,#0x10
      000FBF C0 E0            [24] 3038 	push	acc
      000FC1 90r01r0C         [24] 3039 	mov	dptr,#___str_24
      000FC4 75 F0 80         [24] 3040 	mov	b,#0x80
      000FC7 12r00r00         [24] 3041 	lcall	_write_string
      000FCA E5 81            [12] 3042 	mov	a,sp
      000FCC 24 FC            [12] 3043 	add	a,#0xfc
      000FCE F5 81            [12] 3044 	mov	sp,a
                                   3045 ;	../UI_Manager/ui.c:755: if(State == MANUAL_SAVE_SETTINGS_STATE){
      000FD0 74 0D            [12] 3046 	mov	a,#0x0d
      000FD2 B5*00 1F         [24] 3047 	cjne	a,_State,00103$
                                   3048 ;	../UI_Manager/ui.c:756: write_string("Saved!", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000FD5 E4               [12] 3049 	clr	a
      000FD6 C0 E0            [24] 3050 	push	acc
      000FD8 04               [12] 3051 	inc	a
      000FD9 C0 E0            [24] 3052 	push	acc
      000FDB 74 06            [12] 3053 	mov	a,#0x06
      000FDD C0 E0            [24] 3054 	push	acc
      000FDF 74 10            [12] 3055 	mov	a,#0x10
      000FE1 C0 E0            [24] 3056 	push	acc
      000FE3 90r01r1D         [24] 3057 	mov	dptr,#___str_26
      000FE6 75 F0 80         [24] 3058 	mov	b,#0x80
      000FE9 12r00r00         [24] 3059 	lcall	_write_string
      000FEC E5 81            [12] 3060 	mov	a,sp
      000FEE 24 FC            [12] 3061 	add	a,#0xfc
      000FF0 F5 81            [12] 3062 	mov	sp,a
      000FF2 80 45            [24] 3063 	sjmp	00109$
      000FF4                       3064 00103$:
                                   3065 ;	../UI_Manager/ui.c:758: write_string("Loaded!", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000FF4 E4               [12] 3066 	clr	a
      000FF5 C0 E0            [24] 3067 	push	acc
      000FF7 04               [12] 3068 	inc	a
      000FF8 C0 E0            [24] 3069 	push	acc
      000FFA 74 06            [12] 3070 	mov	a,#0x06
      000FFC C0 E0            [24] 3071 	push	acc
      000FFE 74 10            [12] 3072 	mov	a,#0x10
      001000 C0 E0            [24] 3073 	push	acc
      001002 90r01r24         [24] 3074 	mov	dptr,#___str_27
      001005 75 F0 80         [24] 3075 	mov	b,#0x80
      001008 12r00r00         [24] 3076 	lcall	_write_string
      00100B E5 81            [12] 3077 	mov	a,sp
      00100D 24 FC            [12] 3078 	add	a,#0xfc
      00100F F5 81            [12] 3079 	mov	sp,a
                                   3080 ;	../UI_Manager/ui.c:760: break;
                                   3081 ;	../UI_Manager/ui.c:761: case BUTTON_UP:
      001011 80 26            [24] 3082 	sjmp	00109$
      001013                       3083 00105$:
                                   3084 ;	../UI_Manager/ui.c:762: slot++;
      001013 05*0A            [12] 3085 	inc	_saveLoadPage_slot_65536_142
                                   3086 ;	../UI_Manager/ui.c:763: changed = 0xFF;
      001015 75*02 FF         [24] 3087 	mov	_changed,#0xff
                                   3088 ;	../UI_Manager/ui.c:764: break;
                                   3089 ;	../UI_Manager/ui.c:765: case BUTTON_DOWN:
      001018 80 1F            [24] 3090 	sjmp	00109$
      00101A                       3091 00106$:
                                   3092 ;	../UI_Manager/ui.c:766: slot--;
      00101A 15*0A            [12] 3093 	dec	_saveLoadPage_slot_65536_142
                                   3094 ;	../UI_Manager/ui.c:767: changed = 0xFF;  
      00101C 75*02 FF         [24] 3095 	mov	_changed,#0xff
                                   3096 ;	../UI_Manager/ui.c:768: break;
                                   3097 ;	../UI_Manager/ui.c:769: case BUTTON_FUNCTION:
      00101F 80 18            [24] 3098 	sjmp	00109$
      001021                       3099 00107$:
                                   3100 ;	../UI_Manager/ui.c:770: set_ui_state(INC, NULL);
      001021 E4               [12] 3101 	clr	a
      001022 C0 E0            [24] 3102 	push	acc
      001024 75 82 01         [24] 3103 	mov	dpl,#0x01
      001027 12r12r16         [24] 3104 	lcall	_set_ui_state
      00102A 15 81            [12] 3105 	dec	sp
                                   3106 ;	../UI_Manager/ui.c:771: return;
      00102C 22               [24] 3107 	ret
                                   3108 ;	../UI_Manager/ui.c:772: case BUTTON_TIMER:
      00102D                       3109 00108$:
                                   3110 ;	../UI_Manager/ui.c:773: set_ui_state(DEC, NULL);
      00102D E4               [12] 3111 	clr	a
      00102E C0 E0            [24] 3112 	push	acc
      001030 75 82 02         [24] 3113 	mov	dpl,#0x02
      001033 12r12r16         [24] 3114 	lcall	_set_ui_state
      001036 15 81            [12] 3115 	dec	sp
                                   3116 ;	../UI_Manager/ui.c:774: return;
      001038 22               [24] 3117 	ret
                                   3118 ;	../UI_Manager/ui.c:775: }
      001039                       3119 00109$:
                                   3120 ;	../UI_Manager/ui.c:777: if(Changed){
      001039 E5*01            [12] 3121 	mov	a,_Changed
      00103B 60 4B            [24] 3122 	jz	00114$
                                   3123 ;	../UI_Manager/ui.c:778: Changed = 0x00;
      00103D 75*01 00         [24] 3124 	mov	_Changed,#0x00
                                   3125 ;	../UI_Manager/ui.c:779: changed = 0xFF;
      001040 75*02 FF         [24] 3126 	mov	_changed,#0xff
                                   3127 ;	../UI_Manager/ui.c:781: exe_command(CLEAR_DISPLAY);
      001043 90 80 00         [24] 3128 	mov	dptr,#0x8000
      001046 12r00r00         [24] 3129 	lcall	_exe_command
                                   3130 ;	../UI_Manager/ui.c:783: if(State == MANUAL_SAVE_SETTINGS_STATE){
      001049 74 0D            [12] 3131 	mov	a,#0x0d
      00104B B5*00 1E         [24] 3132 	cjne	a,_State,00111$
                                   3133 ;	../UI_Manager/ui.c:784: write_string("Save Settings", sizeof("Save Settings"), 2, LINE_0, NOT_SELECTED);
      00104E E4               [12] 3134 	clr	a
      00104F C0 E0            [24] 3135 	push	acc
      001051 C0 E0            [24] 3136 	push	acc
      001053 74 02            [12] 3137 	mov	a,#0x02
      001055 C0 E0            [24] 3138 	push	acc
      001057 74 0E            [12] 3139 	mov	a,#0x0e
      001059 C0 E0            [24] 3140 	push	acc
      00105B 90r01r2C         [24] 3141 	mov	dptr,#___str_28
      00105E 75 F0 80         [24] 3142 	mov	b,#0x80
      001061 12r00r00         [24] 3143 	lcall	_write_string
      001064 E5 81            [12] 3144 	mov	a,sp
      001066 24 FC            [12] 3145 	add	a,#0xfc
      001068 F5 81            [12] 3146 	mov	sp,a
      00106A 80 1C            [24] 3147 	sjmp	00114$
      00106C                       3148 00111$:
                                   3149 ;	../UI_Manager/ui.c:786: write_string("Load Settings", sizeof("Load Settings"), 2, LINE_0, NOT_SELECTED);
      00106C E4               [12] 3150 	clr	a
      00106D C0 E0            [24] 3151 	push	acc
      00106F C0 E0            [24] 3152 	push	acc
      001071 74 02            [12] 3153 	mov	a,#0x02
      001073 C0 E0            [24] 3154 	push	acc
      001075 74 0E            [12] 3155 	mov	a,#0x0e
      001077 C0 E0            [24] 3156 	push	acc
      001079 90r01r3A         [24] 3157 	mov	dptr,#___str_29
      00107C 75 F0 80         [24] 3158 	mov	b,#0x80
      00107F 12r00r00         [24] 3159 	lcall	_write_string
      001082 E5 81            [12] 3160 	mov	a,sp
      001084 24 FC            [12] 3161 	add	a,#0xfc
      001086 F5 81            [12] 3162 	mov	sp,a
      001088                       3163 00114$:
                                   3164 ;	../UI_Manager/ui.c:791: if(changed){
      001088 E5*02            [12] 3165 	mov	a,_changed
      00108A 60 36            [24] 3166 	jz	00117$
                                   3167 ;	../UI_Manager/ui.c:792: changed = 0x00;
      00108C 75*02 00         [24] 3168 	mov	_changed,#0x00
                                   3169 ;	../UI_Manager/ui.c:793: write_string(getString((slot % (SLOT_COUNT - 1)) + SAVE_LOAD_STRING_OFFSET), LINE_LENGTH, 4, LINE_1, NOT_SELECTED);  
      00108F 75 F0 03         [24] 3170 	mov	b,#0x03
      001092 E5*0A            [12] 3171 	mov	a,_saveLoadPage_slot_65536_142
      001094 84               [48] 3172 	div	ab
      001095 AF F0            [24] 3173 	mov	r7,b
      001097 74 50            [12] 3174 	mov	a,#0x50
      001099 2F               [12] 3175 	add	a,r7
      00109A F5 82            [12] 3176 	mov	dpl,a
      00109C 12r13r23         [24] 3177 	lcall	_getString
      00109F AD 82            [24] 3178 	mov	r5,dpl
      0010A1 AE 83            [24] 3179 	mov	r6,dph
      0010A3 AF F0            [24] 3180 	mov	r7,b
      0010A5 E4               [12] 3181 	clr	a
      0010A6 C0 E0            [24] 3182 	push	acc
      0010A8 04               [12] 3183 	inc	a
      0010A9 C0 E0            [24] 3184 	push	acc
      0010AB 74 04            [12] 3185 	mov	a,#0x04
      0010AD C0 E0            [24] 3186 	push	acc
      0010AF 74 10            [12] 3187 	mov	a,#0x10
      0010B1 C0 E0            [24] 3188 	push	acc
      0010B3 8D 82            [24] 3189 	mov	dpl,r5
      0010B5 8E 83            [24] 3190 	mov	dph,r6
      0010B7 8F F0            [24] 3191 	mov	b,r7
      0010B9 12r00r00         [24] 3192 	lcall	_write_string
      0010BC E5 81            [12] 3193 	mov	a,sp
      0010BE 24 FC            [12] 3194 	add	a,#0xfc
      0010C0 F5 81            [12] 3195 	mov	sp,a
      0010C2                       3196 00117$:
                                   3197 ;	../UI_Manager/ui.c:796: }
      0010C2 22               [24] 3198 	ret
                                   3199 ;------------------------------------------------------------
                                   3200 ;Allocation info for local variables in function 'dmxAddressPage'
                                   3201 ;------------------------------------------------------------
                                   3202 ;action                    Allocated to registers r7 
                                   3203 ;------------------------------------------------------------
                                   3204 ;	../UI_Manager/ui.c:798: void dmxAddressPage(uint8_t action){
                                   3205 ;	-----------------------------------------
                                   3206 ;	 function dmxAddressPage
                                   3207 ;	-----------------------------------------
      0010C3                       3208 _dmxAddressPage:
      0010C3 AF 82            [24] 3209 	mov	r7,dpl
                                   3210 ;	../UI_Manager/ui.c:800: switch (action)
      0010C5 BF 01 02         [24] 3211 	cjne	r7,#0x01,00146$
      0010C8 80 3B            [24] 3212 	sjmp	00106$
      0010CA                       3213 00146$:
      0010CA BF 02 02         [24] 3214 	cjne	r7,#0x02,00147$
      0010CD 80 2A            [24] 3215 	sjmp	00105$
      0010CF                       3216 00147$:
      0010CF BF 03 02         [24] 3217 	cjne	r7,#0x03,00148$
      0010D2 80 0F            [24] 3218 	sjmp	00102$
      0010D4                       3219 00148$:
      0010D4 BF 0B 02         [24] 3220 	cjne	r7,#0x0b,00149$
      0010D7 80 15            [24] 3221 	sjmp	00104$
      0010D9                       3222 00149$:
      0010D9 BF 1F 02         [24] 3223 	cjne	r7,#0x1f,00150$
      0010DC 80 05            [24] 3224 	sjmp	00102$
      0010DE                       3225 00150$:
                                   3226 ;	../UI_Manager/ui.c:803: case BUTTON_UP:
      0010DE BF 6F 30         [24] 3227 	cjne	r7,#0x6f,00107$
      0010E1 80 0B            [24] 3228 	sjmp	00104$
      0010E3                       3229 00102$:
                                   3230 ;	../UI_Manager/ui.c:804: set_dmx_address(INC);
      0010E3 75 82 01         [24] 3231 	mov	dpl,#0x01
      0010E6 12r00r00         [24] 3232 	lcall	_set_dmx_address
                                   3233 ;	../UI_Manager/ui.c:805: changed = 0xFF;
      0010E9 75*02 FF         [24] 3234 	mov	_changed,#0xff
                                   3235 ;	../UI_Manager/ui.c:806: break;
                                   3236 ;	../UI_Manager/ui.c:808: case BUTTON_DOWN:
      0010EC 80 23            [24] 3237 	sjmp	00107$
      0010EE                       3238 00104$:
                                   3239 ;	../UI_Manager/ui.c:809: set_dmx_address(DEC);
      0010EE 75 82 02         [24] 3240 	mov	dpl,#0x02
      0010F1 12r00r00         [24] 3241 	lcall	_set_dmx_address
                                   3242 ;	../UI_Manager/ui.c:810: changed = 0xFF;  
      0010F4 75*02 FF         [24] 3243 	mov	_changed,#0xff
                                   3244 ;	../UI_Manager/ui.c:811: break;
                                   3245 ;	../UI_Manager/ui.c:812: case BUTTON_FUNCTION:
      0010F7 80 18            [24] 3246 	sjmp	00107$
      0010F9                       3247 00105$:
                                   3248 ;	../UI_Manager/ui.c:813: set_ui_state(INC, NULL);
      0010F9 E4               [12] 3249 	clr	a
      0010FA C0 E0            [24] 3250 	push	acc
      0010FC 75 82 01         [24] 3251 	mov	dpl,#0x01
      0010FF 12r12r16         [24] 3252 	lcall	_set_ui_state
      001102 15 81            [12] 3253 	dec	sp
                                   3254 ;	../UI_Manager/ui.c:814: return;
                                   3255 ;	../UI_Manager/ui.c:815: case BUTTON_TIMER:
      001104 22               [24] 3256 	ret
      001105                       3257 00106$:
                                   3258 ;	../UI_Manager/ui.c:816: set_ui_state(DEC, NULL);
      001105 E4               [12] 3259 	clr	a
      001106 C0 E0            [24] 3260 	push	acc
      001108 75 82 02         [24] 3261 	mov	dpl,#0x02
      00110B 12r12r16         [24] 3262 	lcall	_set_ui_state
      00110E 15 81            [12] 3263 	dec	sp
                                   3264 ;	../UI_Manager/ui.c:817: return;
                                   3265 ;	../UI_Manager/ui.c:818: }
      001110 22               [24] 3266 	ret
      001111                       3267 00107$:
                                   3268 ;	../UI_Manager/ui.c:820: if(Changed){
      001111 E5*01            [12] 3269 	mov	a,_Changed
      001113 60 28            [24] 3270 	jz	00109$
                                   3271 ;	../UI_Manager/ui.c:821: Changed = 0x00;
      001115 75*01 00         [24] 3272 	mov	_Changed,#0x00
                                   3273 ;	../UI_Manager/ui.c:822: changed = 0xFF;
      001118 75*02 FF         [24] 3274 	mov	_changed,#0xff
                                   3275 ;	../UI_Manager/ui.c:824: exe_command(CLEAR_DISPLAY);
      00111B 90 80 00         [24] 3276 	mov	dptr,#0x8000
      00111E 12r00r00         [24] 3277 	lcall	_exe_command
                                   3278 ;	../UI_Manager/ui.c:826: write_string("DMX Address", sizeof("DMX Address"), 2, LINE_0, NOT_SELECTED);
      001121 E4               [12] 3279 	clr	a
      001122 C0 E0            [24] 3280 	push	acc
      001124 C0 E0            [24] 3281 	push	acc
      001126 74 02            [12] 3282 	mov	a,#0x02
      001128 C0 E0            [24] 3283 	push	acc
      00112A 74 0C            [12] 3284 	mov	a,#0x0c
      00112C C0 E0            [24] 3285 	push	acc
      00112E 90r01r48         [24] 3286 	mov	dptr,#___str_30
      001131 75 F0 80         [24] 3287 	mov	b,#0x80
      001134 12r00r00         [24] 3288 	lcall	_write_string
      001137 E5 81            [12] 3289 	mov	a,sp
      001139 24 FC            [12] 3290 	add	a,#0xfc
      00113B F5 81            [12] 3291 	mov	sp,a
      00113D                       3292 00109$:
                                   3293 ;	../UI_Manager/ui.c:829: if(changed){
      00113D E5*02            [12] 3294 	mov	a,_changed
      00113F 60 19            [24] 3295 	jz	00112$
                                   3296 ;	../UI_Manager/ui.c:830: changed = 0x00;
      001141 75*02 00         [24] 3297 	mov	_changed,#0x00
                                   3298 ;	../UI_Manager/ui.c:832: write_number(get_dmx_address(), 4, LINE_1, NOT_SELECTED);
      001144 12r00r00         [24] 3299 	lcall	_get_dmx_address
      001147 E4               [12] 3300 	clr	a
      001148 C0 E0            [24] 3301 	push	acc
      00114A 04               [12] 3302 	inc	a
      00114B C0 E0            [24] 3303 	push	acc
      00114D 74 04            [12] 3304 	mov	a,#0x04
      00114F C0 E0            [24] 3305 	push	acc
      001151 12r00r00         [24] 3306 	lcall	_write_number
      001154 15 81            [12] 3307 	dec	sp
      001156 15 81            [12] 3308 	dec	sp
      001158 15 81            [12] 3309 	dec	sp
      00115A                       3310 00112$:
                                   3311 ;	../UI_Manager/ui.c:835: }
      00115A 22               [24] 3312 	ret
                                   3313 ;------------------------------------------------------------
                                   3314 ;Allocation info for local variables in function 'dmxChannelPage'
                                   3315 ;------------------------------------------------------------
                                   3316 ;action                    Allocated to registers r7 
                                   3317 ;------------------------------------------------------------
                                   3318 ;	../UI_Manager/ui.c:837: void dmxChannelPage(uint8_t action){
                                   3319 ;	-----------------------------------------
                                   3320 ;	 function dmxChannelPage
                                   3321 ;	-----------------------------------------
      00115B                       3322 _dmxChannelPage:
      00115B AF 82            [24] 3323 	mov	r7,dpl
                                   3324 ;	../UI_Manager/ui.c:839: switch (action)
      00115D BF 01 02         [24] 3325 	cjne	r7,#0x01,00136$
      001160 80 46            [24] 3326 	sjmp	00104$
      001162                       3327 00136$:
      001162 BF 02 02         [24] 3328 	cjne	r7,#0x02,00137$
      001165 80 35            [24] 3329 	sjmp	00103$
      001167                       3330 00137$:
      001167 BF 03 02         [24] 3331 	cjne	r7,#0x03,00138$
      00116A 80 05            [24] 3332 	sjmp	00101$
      00116C                       3333 00138$:
                                   3334 ;	../UI_Manager/ui.c:841: case BUTTON_UP:
      00116C BF 0B 45         [24] 3335 	cjne	r7,#0x0b,00105$
      00116F 80 15            [24] 3336 	sjmp	00102$
      001171                       3337 00101$:
                                   3338 ;	../UI_Manager/ui.c:842: set_runtime_data(MODE_INDEX, INC, NULL);
      001171 E4               [12] 3339 	clr	a
      001172 C0 E0            [24] 3340 	push	acc
      001174 04               [12] 3341 	inc	a
      001175 C0 E0            [24] 3342 	push	acc
      001177 75 82 0E         [24] 3343 	mov	dpl,#0x0e
      00117A 12r00r00         [24] 3344 	lcall	_set_runtime_data
      00117D 15 81            [12] 3345 	dec	sp
      00117F 15 81            [12] 3346 	dec	sp
                                   3347 ;	../UI_Manager/ui.c:843: changed = 0xFF;
      001181 75*02 FF         [24] 3348 	mov	_changed,#0xff
                                   3349 ;	../UI_Manager/ui.c:844: break;
                                   3350 ;	../UI_Manager/ui.c:845: case BUTTON_DOWN:
      001184 80 2E            [24] 3351 	sjmp	00105$
      001186                       3352 00102$:
                                   3353 ;	../UI_Manager/ui.c:846: set_runtime_data(MODE_INDEX, DEC, NULL);
      001186 E4               [12] 3354 	clr	a
      001187 C0 E0            [24] 3355 	push	acc
      001189 74 02            [12] 3356 	mov	a,#0x02
      00118B C0 E0            [24] 3357 	push	acc
      00118D 75 82 0E         [24] 3358 	mov	dpl,#0x0e
      001190 12r00r00         [24] 3359 	lcall	_set_runtime_data
      001193 15 81            [12] 3360 	dec	sp
      001195 15 81            [12] 3361 	dec	sp
                                   3362 ;	../UI_Manager/ui.c:847: changed = 0xFF;  
      001197 75*02 FF         [24] 3363 	mov	_changed,#0xff
                                   3364 ;	../UI_Manager/ui.c:848: break;
                                   3365 ;	../UI_Manager/ui.c:849: case BUTTON_FUNCTION:
      00119A 80 18            [24] 3366 	sjmp	00105$
      00119C                       3367 00103$:
                                   3368 ;	../UI_Manager/ui.c:850: set_ui_state(INC, NULL);
      00119C E4               [12] 3369 	clr	a
      00119D C0 E0            [24] 3370 	push	acc
      00119F 75 82 01         [24] 3371 	mov	dpl,#0x01
      0011A2 12r12r16         [24] 3372 	lcall	_set_ui_state
      0011A5 15 81            [12] 3373 	dec	sp
                                   3374 ;	../UI_Manager/ui.c:851: return;
                                   3375 ;	../UI_Manager/ui.c:852: case BUTTON_TIMER:
      0011A7 22               [24] 3376 	ret
      0011A8                       3377 00104$:
                                   3378 ;	../UI_Manager/ui.c:853: set_ui_state(DEC, NULL);
      0011A8 E4               [12] 3379 	clr	a
      0011A9 C0 E0            [24] 3380 	push	acc
      0011AB 75 82 02         [24] 3381 	mov	dpl,#0x02
      0011AE 12r12r16         [24] 3382 	lcall	_set_ui_state
      0011B1 15 81            [12] 3383 	dec	sp
                                   3384 ;	../UI_Manager/ui.c:854: return;
                                   3385 ;	../UI_Manager/ui.c:855: }
      0011B3 22               [24] 3386 	ret
      0011B4                       3387 00105$:
                                   3388 ;	../UI_Manager/ui.c:857: if(Changed){
      0011B4 E5*01            [12] 3389 	mov	a,_Changed
      0011B6 60 26            [24] 3390 	jz	00107$
                                   3391 ;	../UI_Manager/ui.c:858: Changed = 0x00;
      0011B8 75*01 00         [24] 3392 	mov	_Changed,#0x00
                                   3393 ;	../UI_Manager/ui.c:859: changed = 0xFF;
      0011BB 75*02 FF         [24] 3394 	mov	_changed,#0xff
                                   3395 ;	../UI_Manager/ui.c:861: exe_command(CLEAR_DISPLAY);
      0011BE 90 80 00         [24] 3396 	mov	dptr,#0x8000
      0011C1 12r00r00         [24] 3397 	lcall	_exe_command
                                   3398 ;	../UI_Manager/ui.c:863: write_string("DMX Channel Mode", sizeof("DMX Channel Mode"), 0, LINE_0, NOT_SELECTED);
      0011C4 E4               [12] 3399 	clr	a
      0011C5 C0 E0            [24] 3400 	push	acc
      0011C7 C0 E0            [24] 3401 	push	acc
      0011C9 C0 E0            [24] 3402 	push	acc
      0011CB 74 11            [12] 3403 	mov	a,#0x11
      0011CD C0 E0            [24] 3404 	push	acc
      0011CF 90r01r54         [24] 3405 	mov	dptr,#___str_31
      0011D2 75 F0 80         [24] 3406 	mov	b,#0x80
      0011D5 12r00r00         [24] 3407 	lcall	_write_string
      0011D8 E5 81            [12] 3408 	mov	a,sp
      0011DA 24 FC            [12] 3409 	add	a,#0xfc
      0011DC F5 81            [12] 3410 	mov	sp,a
      0011DE                       3411 00107$:
                                   3412 ;	../UI_Manager/ui.c:866: if(changed){
      0011DE E5*02            [12] 3413 	mov	a,_changed
      0011E0 60 33            [24] 3414 	jz	00110$
                                   3415 ;	../UI_Manager/ui.c:867: changed = 0x00;
      0011E2 75*02 00         [24] 3416 	mov	_changed,#0x00
                                   3417 ;	../UI_Manager/ui.c:869: write_string(getString(get_runtime_data(MODE_INDEX) + DMX_STRING_OFFSET), LINE_LENGTH, 1, LINE_1, NOT_SELECTED);
      0011E5 75 82 0E         [24] 3418 	mov	dpl,#0x0e
      0011E8 12r00r00         [24] 3419 	lcall	_get_runtime_data
      0011EB AF 82            [24] 3420 	mov	r7,dpl
      0011ED 74 64            [12] 3421 	mov	a,#0x64
      0011EF 2F               [12] 3422 	add	a,r7
      0011F0 F5 82            [12] 3423 	mov	dpl,a
      0011F2 12r13r23         [24] 3424 	lcall	_getString
      0011F5 AD 82            [24] 3425 	mov	r5,dpl
      0011F7 AE 83            [24] 3426 	mov	r6,dph
      0011F9 AF F0            [24] 3427 	mov	r7,b
      0011FB E4               [12] 3428 	clr	a
      0011FC C0 E0            [24] 3429 	push	acc
      0011FE 04               [12] 3430 	inc	a
      0011FF C0 E0            [24] 3431 	push	acc
      001201 C0 E0            [24] 3432 	push	acc
      001203 C4               [12] 3433 	swap	a
      001204 C0 E0            [24] 3434 	push	acc
      001206 8D 82            [24] 3435 	mov	dpl,r5
      001208 8E 83            [24] 3436 	mov	dph,r6
      00120A 8F F0            [24] 3437 	mov	b,r7
      00120C 12r00r00         [24] 3438 	lcall	_write_string
      00120F E5 81            [12] 3439 	mov	a,sp
      001211 24 FC            [12] 3440 	add	a,#0xfc
      001213 F5 81            [12] 3441 	mov	sp,a
      001215                       3442 00110$:
                                   3443 ;	../UI_Manager/ui.c:872: }
      001215 22               [24] 3444 	ret
                                   3445 ;------------------------------------------------------------
                                   3446 ;Allocation info for local variables in function 'set_ui_state'
                                   3447 ;------------------------------------------------------------
                                   3448 ;state                     Allocated to stack - _bp -3
                                   3449 ;inc                       Allocated to registers r7 
                                   3450 ;------------------------------------------------------------
                                   3451 ;	../UI_Manager/ui.c:874: void set_ui_state(uint8_t inc, uint8_t state){
                                   3452 ;	-----------------------------------------
                                   3453 ;	 function set_ui_state
                                   3454 ;	-----------------------------------------
      001216                       3455 _set_ui_state:
      001216 C0*00            [24] 3456 	push	_bp
      001218 85 81*00         [24] 3457 	mov	_bp,sp
      00121B AF 82            [24] 3458 	mov	r7,dpl
                                   3459 ;	../UI_Manager/ui.c:875: Changed = CHANGE_SCREEN_X;
      00121D 75*01 FF         [24] 3460 	mov	_Changed,#0xff
                                   3461 ;	../UI_Manager/ui.c:877: switch (inc)
      001220 BF 01 02         [24] 3462 	cjne	r7,#0x01,00187$
      001223 80 77            [24] 3463 	sjmp	00115$
      001225                       3464 00187$:
      001225 BF 02 02         [24] 3465 	cjne	r7,#0x02,00188$
      001228 80 03            [24] 3466 	sjmp	00189$
      00122A                       3467 00188$:
      00122A 02r12rF0         [24] 3468 	ljmp	00127$
      00122D                       3469 00189$:
                                   3470 ;	../UI_Manager/ui.c:880: state = State;
      00122D E5*00            [12] 3471 	mov	a,_bp
      00122F 24 FD            [12] 3472 	add	a,#0xfd
      001231 F8               [12] 3473 	mov	r0,a
      001232 A6*00            [24] 3474 	mov	@r0,_State
                                   3475 ;	../UI_Manager/ui.c:881: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      001234 75 82 10         [24] 3476 	mov	dpl,#0x10
      001237 12r00r00         [24] 3477 	lcall	_get_runtime_data
      00123A E5 82            [12] 3478 	mov	a,dpl
      00123C 70 2F            [24] 3479 	jnz	00113$
                                   3480 ;	../UI_Manager/ui.c:882: if(state == IDLE_STATE){
      00123E E5*00            [12] 3481 	mov	a,_bp
      001240 24 FD            [12] 3482 	add	a,#0xfd
      001242 F8               [12] 3483 	mov	r0,a
      001243 E6               [12] 3484 	mov	a,@r0
      001244 70 0A            [24] 3485 	jnz	00105$
                                   3486 ;	../UI_Manager/ui.c:883: state = DMX_STATE_LOW;
      001246 E5*00            [12] 3487 	mov	a,_bp
      001248 24 FD            [12] 3488 	add	a,#0xfd
      00124A F8               [12] 3489 	mov	r0,a
      00124B 76 14            [12] 3490 	mov	@r0,#0x14
      00124D 02r13r15         [24] 3491 	ljmp	00132$
      001250                       3492 00105$:
                                   3493 ;	../UI_Manager/ui.c:884: } else if(++state > DMX_STATE_HIGH){
      001250 E5*00            [12] 3494 	mov	a,_bp
      001252 24 FD            [12] 3495 	add	a,#0xfd
      001254 F8               [12] 3496 	mov	r0,a
      001255 06               [12] 3497 	inc	@r0
      001256 E5*00            [12] 3498 	mov	a,_bp
      001258 24 FD            [12] 3499 	add	a,#0xfd
      00125A F8               [12] 3500 	mov	r0,a
      00125B E6               [12] 3501 	mov	a,@r0
      00125C 24 EA            [12] 3502 	add	a,#0xff - 0x15
      00125E 40 03            [24] 3503 	jc	00192$
      001260 02r13r15         [24] 3504 	ljmp	00132$
      001263                       3505 00192$:
                                   3506 ;	../UI_Manager/ui.c:885: state = IDLE_STATE;
      001263 E5*00            [12] 3507 	mov	a,_bp
      001265 24 FD            [12] 3508 	add	a,#0xfd
      001267 F8               [12] 3509 	mov	r0,a
      001268 76 00            [12] 3510 	mov	@r0,#0x00
      00126A 02r13r15         [24] 3511 	ljmp	00132$
      00126D                       3512 00113$:
                                   3513 ;	../UI_Manager/ui.c:888: if(state == IDLE_STATE){
      00126D E5*00            [12] 3514 	mov	a,_bp
      00126F 24 FD            [12] 3515 	add	a,#0xfd
      001271 F8               [12] 3516 	mov	r0,a
      001272 E6               [12] 3517 	mov	a,@r0
      001273 70 0A            [24] 3518 	jnz	00110$
                                   3519 ;	../UI_Manager/ui.c:889: state = IDLE_STATE + 1; 
      001275 E5*00            [12] 3520 	mov	a,_bp
      001277 24 FD            [12] 3521 	add	a,#0xfd
      001279 F8               [12] 3522 	mov	r0,a
      00127A 76 01            [12] 3523 	mov	@r0,#0x01
      00127C 02r13r15         [24] 3524 	ljmp	00132$
      00127F                       3525 00110$:
                                   3526 ;	../UI_Manager/ui.c:890: } else if(++state > MANUAL_STATE_HIGH){
      00127F E5*00            [12] 3527 	mov	a,_bp
      001281 24 FD            [12] 3528 	add	a,#0xfd
      001283 F8               [12] 3529 	mov	r0,a
      001284 06               [12] 3530 	inc	@r0
      001285 E5*00            [12] 3531 	mov	a,_bp
      001287 24 FD            [12] 3532 	add	a,#0xfd
      001289 F8               [12] 3533 	mov	r0,a
      00128A E6               [12] 3534 	mov	a,@r0
      00128B 24 F1            [12] 3535 	add	a,#0xff - 0x0e
      00128D 40 03            [24] 3536 	jc	00194$
      00128F 02r13r15         [24] 3537 	ljmp	00132$
      001292                       3538 00194$:
                                   3539 ;	../UI_Manager/ui.c:891: state = IDLE_STATE;
      001292 E5*00            [12] 3540 	mov	a,_bp
      001294 24 FD            [12] 3541 	add	a,#0xfd
      001296 F8               [12] 3542 	mov	r0,a
      001297 76 00            [12] 3543 	mov	@r0,#0x00
                                   3544 ;	../UI_Manager/ui.c:894: break;
      001299 02r13r15         [24] 3545 	ljmp	00132$
                                   3546 ;	../UI_Manager/ui.c:895: case INC:
      00129C                       3547 00115$:
                                   3548 ;	../UI_Manager/ui.c:896: state = State;
      00129C E5*00            [12] 3549 	mov	a,_bp
      00129E 24 FD            [12] 3550 	add	a,#0xfd
      0012A0 F8               [12] 3551 	mov	r0,a
      0012A1 A6*00            [24] 3552 	mov	@r0,_State
                                   3553 ;	../UI_Manager/ui.c:897: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      0012A3 75 82 10         [24] 3554 	mov	dpl,#0x10
      0012A6 12r00r00         [24] 3555 	lcall	_get_runtime_data
      0012A9 E5 82            [12] 3556 	mov	a,dpl
      0012AB 70 2A            [24] 3557 	jnz	00125$
                                   3558 ;	../UI_Manager/ui.c:898: if(state == IDLE_STATE){
      0012AD E5*00            [12] 3559 	mov	a,_bp
      0012AF 24 FD            [12] 3560 	add	a,#0xfd
      0012B1 F8               [12] 3561 	mov	r0,a
      0012B2 E6               [12] 3562 	mov	a,@r0
      0012B3 70 09            [24] 3563 	jnz	00119$
                                   3564 ;	../UI_Manager/ui.c:899: state = DMX_STATE_HIGH;
      0012B5 E5*00            [12] 3565 	mov	a,_bp
      0012B7 24 FD            [12] 3566 	add	a,#0xfd
      0012B9 F8               [12] 3567 	mov	r0,a
      0012BA 76 15            [12] 3568 	mov	@r0,#0x15
      0012BC 80 57            [24] 3569 	sjmp	00132$
      0012BE                       3570 00119$:
                                   3571 ;	../UI_Manager/ui.c:900: } else if(--state < DMX_STATE_LOW){
      0012BE E5*00            [12] 3572 	mov	a,_bp
      0012C0 24 FD            [12] 3573 	add	a,#0xfd
      0012C2 F8               [12] 3574 	mov	r0,a
      0012C3 16               [12] 3575 	dec	@r0
      0012C4 E5*00            [12] 3576 	mov	a,_bp
      0012C6 24 FD            [12] 3577 	add	a,#0xfd
      0012C8 F8               [12] 3578 	mov	r0,a
      0012C9 B6 14 00         [24] 3579 	cjne	@r0,#0x14,00197$
      0012CC                       3580 00197$:
      0012CC 50 47            [24] 3581 	jnc	00132$
                                   3582 ;	../UI_Manager/ui.c:901: state = IDLE_STATE;
      0012CE E5*00            [12] 3583 	mov	a,_bp
      0012D0 24 FD            [12] 3584 	add	a,#0xfd
      0012D2 F8               [12] 3585 	mov	r0,a
      0012D3 76 00            [12] 3586 	mov	@r0,#0x00
      0012D5 80 3E            [24] 3587 	sjmp	00132$
      0012D7                       3588 00125$:
                                   3589 ;	../UI_Manager/ui.c:904: if(state == IDLE_STATE){
      0012D7 E5*00            [12] 3590 	mov	a,_bp
      0012D9 24 FD            [12] 3591 	add	a,#0xfd
      0012DB F8               [12] 3592 	mov	r0,a
      0012DC E6               [12] 3593 	mov	a,@r0
      0012DD 70 09            [24] 3594 	jnz	00122$
                                   3595 ;	../UI_Manager/ui.c:905: state = MANUAL_STATE_HIGH; 
      0012DF E5*00            [12] 3596 	mov	a,_bp
      0012E1 24 FD            [12] 3597 	add	a,#0xfd
      0012E3 F8               [12] 3598 	mov	r0,a
      0012E4 76 0E            [12] 3599 	mov	@r0,#0x0e
      0012E6 80 2D            [24] 3600 	sjmp	00132$
      0012E8                       3601 00122$:
                                   3602 ;	../UI_Manager/ui.c:907: state--;
      0012E8 E5*00            [12] 3603 	mov	a,_bp
      0012EA 24 FD            [12] 3604 	add	a,#0xfd
      0012EC F8               [12] 3605 	mov	r0,a
      0012ED 16               [12] 3606 	dec	@r0
                                   3607 ;	../UI_Manager/ui.c:910: break;
                                   3608 ;	../UI_Manager/ui.c:911: default: 
      0012EE 80 25            [24] 3609 	sjmp	00132$
      0012F0                       3610 00127$:
                                   3611 ;	../UI_Manager/ui.c:912: if(state <= MANUAL_STATE_HIGH || (state >= DMX_STATE_LOW && state <= DMX_STATE_HIGH)){
      0012F0 E5*00            [12] 3612 	mov	a,_bp
      0012F2 24 FD            [12] 3613 	add	a,#0xfd
      0012F4 F8               [12] 3614 	mov	r0,a
      0012F5 E6               [12] 3615 	mov	a,@r0
      0012F6 24 F1            [12] 3616 	add	a,#0xff - 0x0e
      0012F8 50 14            [24] 3617 	jnc	00128$
      0012FA E5*00            [12] 3618 	mov	a,_bp
      0012FC 24 FD            [12] 3619 	add	a,#0xfd
      0012FE F8               [12] 3620 	mov	r0,a
      0012FF B6 14 00         [24] 3621 	cjne	@r0,#0x14,00201$
      001302                       3622 00201$:
      001302 40 11            [24] 3623 	jc	00132$
      001304 E5*00            [12] 3624 	mov	a,_bp
      001306 24 FD            [12] 3625 	add	a,#0xfd
      001308 F8               [12] 3626 	mov	r0,a
      001309 E6               [12] 3627 	mov	a,@r0
      00130A 24 EA            [12] 3628 	add	a,#0xff - 0x15
      00130C 40 07            [24] 3629 	jc	00132$
      00130E                       3630 00128$:
                                   3631 ;	../UI_Manager/ui.c:913: state = IDLE_STATE;
      00130E E5*00            [12] 3632 	mov	a,_bp
      001310 24 FD            [12] 3633 	add	a,#0xfd
      001312 F8               [12] 3634 	mov	r0,a
      001313 76 00            [12] 3635 	mov	@r0,#0x00
                                   3636 ;	../UI_Manager/ui.c:916: }
      001315                       3637 00132$:
                                   3638 ;	../UI_Manager/ui.c:918: State = state;
      001315 E5*00            [12] 3639 	mov	a,_bp
      001317 24 FD            [12] 3640 	add	a,#0xfd
      001319 F8               [12] 3641 	mov	r0,a
      00131A 86*00            [24] 3642 	mov	_State,@r0
                                   3643 ;	../UI_Manager/ui.c:919: }
      00131C D0*00            [24] 3644 	pop	_bp
      00131E 22               [24] 3645 	ret
                                   3646 ;------------------------------------------------------------
                                   3647 ;Allocation info for local variables in function 'get_ui_state'
                                   3648 ;------------------------------------------------------------
                                   3649 ;	../UI_Manager/ui.c:921: uint8_t get_ui_state(){
                                   3650 ;	-----------------------------------------
                                   3651 ;	 function get_ui_state
                                   3652 ;	-----------------------------------------
      00131F                       3653 _get_ui_state:
                                   3654 ;	../UI_Manager/ui.c:922: return State;
      00131F 85*00 82         [24] 3655 	mov	dpl,_State
                                   3656 ;	../UI_Manager/ui.c:923: }
      001322 22               [24] 3657 	ret
                                   3658 ;------------------------------------------------------------
                                   3659 ;Allocation info for local variables in function 'getString'
                                   3660 ;------------------------------------------------------------
                                   3661 ;index                     Allocated to registers r7 
                                   3662 ;------------------------------------------------------------
                                   3663 ;	../UI_Manager/ui.c:925: char* getString(uint8_t index){
                                   3664 ;	-----------------------------------------
                                   3665 ;	 function getString
                                   3666 ;	-----------------------------------------
      001323                       3667 _getString:
      001323 AF 82            [24] 3668 	mov	r7,dpl
                                   3669 ;	../UI_Manager/ui.c:926: switch (index)
      001325 8F 06            [24] 3670 	mov	ar6,r7
      001327 BE 00 03         [24] 3671 	cjne	r6,#0x00,00299$
      00132A 02r14r14         [24] 3672 	ljmp	00101$
      00132D                       3673 00299$:
      00132D BE 01 03         [24] 3674 	cjne	r6,#0x01,00300$
      001330 02r14r1B         [24] 3675 	ljmp	00102$
      001333                       3676 00300$:
      001333 BF 02 03         [24] 3677 	cjne	r7,#0x02,00301$
      001336 02r14r22         [24] 3678 	ljmp	00103$
      001339                       3679 00301$:
      001339 BF 14 03         [24] 3680 	cjne	r7,#0x14,00302$
      00133C 02r14r29         [24] 3681 	ljmp	00104$
      00133F                       3682 00302$:
      00133F BF 15 03         [24] 3683 	cjne	r7,#0x15,00303$
      001342 02r14r30         [24] 3684 	ljmp	00105$
      001345                       3685 00303$:
      001345 BF 16 03         [24] 3686 	cjne	r7,#0x16,00304$
      001348 02r14r37         [24] 3687 	ljmp	00106$
      00134B                       3688 00304$:
      00134B BF 17 03         [24] 3689 	cjne	r7,#0x17,00305$
      00134E 02r14r3E         [24] 3690 	ljmp	00107$
      001351                       3691 00305$:
      001351 BF 18 03         [24] 3692 	cjne	r7,#0x18,00306$
      001354 02r14r4C         [24] 3693 	ljmp	00109$
      001357                       3694 00306$:
      001357 BF 19 03         [24] 3695 	cjne	r7,#0x19,00307$
      00135A 02r14r53         [24] 3696 	ljmp	00110$
      00135D                       3697 00307$:
      00135D BF 1A 03         [24] 3698 	cjne	r7,#0x1a,00308$
      001360 02r14r45         [24] 3699 	ljmp	00108$
      001363                       3700 00308$:
      001363 BF 28 03         [24] 3701 	cjne	r7,#0x28,00309$
      001366 02r14rFB         [24] 3702 	ljmp	00134$
      001369                       3703 00309$:
      001369 BF 29 03         [24] 3704 	cjne	r7,#0x29,00310$
      00136C 02r15r02         [24] 3705 	ljmp	00135$
      00136F                       3706 00310$:
      00136F BF 2A 03         [24] 3707 	cjne	r7,#0x2a,00311$
      001372 02r15r09         [24] 3708 	ljmp	00136$
      001375                       3709 00311$:
      001375 BF 2B 03         [24] 3710 	cjne	r7,#0x2b,00312$
      001378 02r15r10         [24] 3711 	ljmp	00137$
      00137B                       3712 00312$:
      00137B BF 2C 03         [24] 3713 	cjne	r7,#0x2c,00313$
      00137E 02r15r17         [24] 3714 	ljmp	00138$
      001381                       3715 00313$:
      001381 BF 2D 03         [24] 3716 	cjne	r7,#0x2d,00314$
      001384 02r15r1E         [24] 3717 	ljmp	00139$
      001387                       3718 00314$:
      001387 BF 3C 03         [24] 3719 	cjne	r7,#0x3c,00315$
      00138A 02r14r76         [24] 3720 	ljmp	00115$
      00138D                       3721 00315$:
      00138D BF 3D 03         [24] 3722 	cjne	r7,#0x3d,00316$
      001390 02r14r7D         [24] 3723 	ljmp	00116$
      001393                       3724 00316$:
      001393 BF 3E 03         [24] 3725 	cjne	r7,#0x3e,00317$
      001396 02r14r84         [24] 3726 	ljmp	00117$
      001399                       3727 00317$:
      001399 BF 3F 03         [24] 3728 	cjne	r7,#0x3f,00318$
      00139C 02r14r8B         [24] 3729 	ljmp	00118$
      00139F                       3730 00318$:
      00139F BF 40 03         [24] 3731 	cjne	r7,#0x40,00319$
      0013A2 02r14r92         [24] 3732 	ljmp	00119$
      0013A5                       3733 00319$:
      0013A5 BF 41 03         [24] 3734 	cjne	r7,#0x41,00320$
      0013A8 02r14r99         [24] 3735 	ljmp	00120$
      0013AB                       3736 00320$:
      0013AB BF 42 03         [24] 3737 	cjne	r7,#0x42,00321$
      0013AE 02r14rA0         [24] 3738 	ljmp	00121$
      0013B1                       3739 00321$:
      0013B1 BF 43 03         [24] 3740 	cjne	r7,#0x43,00322$
      0013B4 02r14rA7         [24] 3741 	ljmp	00122$
      0013B7                       3742 00322$:
      0013B7 BF 44 03         [24] 3743 	cjne	r7,#0x44,00323$
      0013BA 02r14rAE         [24] 3744 	ljmp	00123$
      0013BD                       3745 00323$:
      0013BD BF 45 03         [24] 3746 	cjne	r7,#0x45,00324$
      0013C0 02r14rB5         [24] 3747 	ljmp	00124$
      0013C3                       3748 00324$:
      0013C3 BF 46 03         [24] 3749 	cjne	r7,#0x46,00325$
      0013C6 02r14rBC         [24] 3750 	ljmp	00125$
      0013C9                       3751 00325$:
      0013C9 BF 47 03         [24] 3752 	cjne	r7,#0x47,00326$
      0013CC 02r14rC3         [24] 3753 	ljmp	00126$
      0013CF                       3754 00326$:
      0013CF BF 48 03         [24] 3755 	cjne	r7,#0x48,00327$
      0013D2 02r14rCA         [24] 3756 	ljmp	00127$
      0013D5                       3757 00327$:
      0013D5 BF 50 03         [24] 3758 	cjne	r7,#0x50,00328$
      0013D8 02r14rD1         [24] 3759 	ljmp	00128$
      0013DB                       3760 00328$:
      0013DB BF 51 03         [24] 3761 	cjne	r7,#0x51,00329$
      0013DE 02r14rD8         [24] 3762 	ljmp	00129$
      0013E1                       3763 00329$:
      0013E1 BF 52 03         [24] 3764 	cjne	r7,#0x52,00330$
      0013E4 02r14rDF         [24] 3765 	ljmp	00130$
      0013E7                       3766 00330$:
      0013E7 BF 64 03         [24] 3767 	cjne	r7,#0x64,00331$
      0013EA 02r14rE6         [24] 3768 	ljmp	00131$
      0013ED                       3769 00331$:
      0013ED BF 65 03         [24] 3770 	cjne	r7,#0x65,00332$
      0013F0 02r14rED         [24] 3771 	ljmp	00132$
      0013F3                       3772 00332$:
      0013F3 BF 66 03         [24] 3773 	cjne	r7,#0x66,00333$
      0013F6 02r14rF4         [24] 3774 	ljmp	00133$
      0013F9                       3775 00333$:
      0013F9 BF CE 03         [24] 3776 	cjne	r7,#0xce,00334$
      0013FC 02r14r5A         [24] 3777 	ljmp	00111$
      0013FF                       3778 00334$:
      0013FF BF CF 03         [24] 3779 	cjne	r7,#0xcf,00335$
      001402 02r14r61         [24] 3780 	ljmp	00112$
      001405                       3781 00335$:
      001405 BF D0 03         [24] 3782 	cjne	r7,#0xd0,00336$
      001408 02r14r68         [24] 3783 	ljmp	00113$
      00140B                       3784 00336$:
      00140B BF D1 03         [24] 3785 	cjne	r7,#0xd1,00337$
      00140E 02r14r6F         [24] 3786 	ljmp	00114$
      001411                       3787 00337$:
      001411 02r15r25         [24] 3788 	ljmp	00140$
                                   3789 ;	../UI_Manager/ui.c:928: case POWER_STRING_OFFSET + OPTION_FOG_LOW:
      001414                       3790 00101$:
                                   3791 ;	../UI_Manager/ui.c:929: return "Wimpy";
      001414 90r01r65         [24] 3792 	mov	dptr,#___str_32
      001417 75 F0 80         [24] 3793 	mov	b,#0x80
      00141A 22               [24] 3794 	ret
                                   3795 ;	../UI_Manager/ui.c:930: case POWER_STRING_OFFSET + OPTION_FOG_MEDIUM:
      00141B                       3796 00102$:
                                   3797 ;	../UI_Manager/ui.c:931: return "Mild";
      00141B 90r01r6B         [24] 3798 	mov	dptr,#___str_33
      00141E 75 F0 80         [24] 3799 	mov	b,#0x80
      001421 22               [24] 3800 	ret
                                   3801 ;	../UI_Manager/ui.c:932: case POWER_STRING_OFFSET + OPTION_FOG_HIGH:
      001422                       3802 00103$:
                                   3803 ;	../UI_Manager/ui.c:933: return "Blazin";
      001422 90r01r70         [24] 3804 	mov	dptr,#___str_34
      001425 75 F0 80         [24] 3805 	mov	b,#0x80
      001428 22               [24] 3806 	ret
                                   3807 ;	../UI_Manager/ui.c:935: case MACRO_STRING_OFFSET + OPTION_MACRO_NONE:
      001429                       3808 00104$:
                                   3809 ;	../UI_Manager/ui.c:936: return "Off";
      001429 90r01r08         [24] 3810 	mov	dptr,#___str_23
      00142C 75 F0 80         [24] 3811 	mov	b,#0x80
      00142F 22               [24] 3812 	ret
                                   3813 ;	../UI_Manager/ui.c:937: case MACRO_STRING_OFFSET + OPTION_MACRO_RAINBOW_DMX:
      001430                       3814 00105$:
                                   3815 ;	../UI_Manager/ui.c:938: return "Rainbow";
      001430 90r01r77         [24] 3816 	mov	dptr,#___str_35
      001433 75 F0 80         [24] 3817 	mov	b,#0x80
      001436 22               [24] 3818 	ret
                                   3819 ;	../UI_Manager/ui.c:939: case MACRO_STRING_OFFSET + OPTION_MACRO_FIRE_DMX:
      001437                       3820 00106$:
                                   3821 ;	../UI_Manager/ui.c:940: return "Fire";
      001437 90r01r7F         [24] 3822 	mov	dptr,#___str_36
      00143A 75 F0 80         [24] 3823 	mov	b,#0x80
      00143D 22               [24] 3824 	ret
                                   3825 ;	../UI_Manager/ui.c:941: case MACRO_STRING_OFFSET + OPTION_MACRO_WATER_DMX:
      00143E                       3826 00107$:
                                   3827 ;	../UI_Manager/ui.c:942: return "Water";
      00143E 90r01r84         [24] 3828 	mov	dptr,#___str_37
      001441 75 F0 80         [24] 3829 	mov	b,#0x80
      001444 22               [24] 3830 	ret
                                   3831 ;	../UI_Manager/ui.c:943: case MACRO_STRING_OFFSET + OPTION_MACRO_STORM_DMX:
      001445                       3832 00108$:
                                   3833 ;	../UI_Manager/ui.c:944: return "Storm";
      001445 90r01r8A         [24] 3834 	mov	dptr,#___str_38
      001448 75 F0 80         [24] 3835 	mov	b,#0x80
      00144B 22               [24] 3836 	ret
                                   3837 ;	../UI_Manager/ui.c:945: case MACRO_STRING_OFFSET + OPTION_MACRO_ACID_DMX:
      00144C                       3838 00109$:
                                   3839 ;	../UI_Manager/ui.c:946: return "Acid";
      00144C 90r01r90         [24] 3840 	mov	dptr,#___str_39
      00144F 75 F0 80         [24] 3841 	mov	b,#0x80
      001452 22               [24] 3842 	ret
                                   3843 ;	../UI_Manager/ui.c:947: case MACRO_STRING_OFFSET + OPTION_MACRO_ETHER_DMX:
      001453                       3844 00110$:
                                   3845 ;	../UI_Manager/ui.c:948: return "Ether";
      001453 90r01r95         [24] 3846 	mov	dptr,#___str_40
      001456 75 F0 80         [24] 3847 	mov	b,#0x80
      001459 22               [24] 3848 	ret
                                   3849 ;	../UI_Manager/ui.c:950: case COLOR_STRING_OFFSET + MANUAL_RED_STATE:
      00145A                       3850 00111$:
                                   3851 ;	../UI_Manager/ui.c:951: return "Red Level";
      00145A 90r01r9B         [24] 3852 	mov	dptr,#___str_41
      00145D 75 F0 80         [24] 3853 	mov	b,#0x80
      001460 22               [24] 3854 	ret
                                   3855 ;	../UI_Manager/ui.c:952: case COLOR_STRING_OFFSET + MANUAL_GREEN_STATE:
      001461                       3856 00112$:
                                   3857 ;	../UI_Manager/ui.c:953: return "Green Level";
      001461 90r01rA5         [24] 3858 	mov	dptr,#___str_42
      001464 75 F0 80         [24] 3859 	mov	b,#0x80
      001467 22               [24] 3860 	ret
                                   3861 ;	../UI_Manager/ui.c:954: case COLOR_STRING_OFFSET + MANUAL_BLUE_STATE:
      001468                       3862 00113$:
                                   3863 ;	../UI_Manager/ui.c:955: return "Blue Level";
      001468 90r01rB1         [24] 3864 	mov	dptr,#___str_43
      00146B 75 F0 80         [24] 3865 	mov	b,#0x80
      00146E 22               [24] 3866 	ret
                                   3867 ;	../UI_Manager/ui.c:956: case COLOR_STRING_OFFSET + MANUAL_STROBE_STATE:
      00146F                       3868 00114$:
                                   3869 ;	../UI_Manager/ui.c:957: return "Strobe Level";
      00146F 90r01rBC         [24] 3870 	mov	dptr,#___str_44
      001472 75 F0 80         [24] 3871 	mov	b,#0x80
      001475 22               [24] 3872 	ret
                                   3873 ;	../UI_Manager/ui.c:959: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACITON_NONE:
      001476                       3874 00115$:
                                   3875 ;	../UI_Manager/ui.c:960: return "No Action";
      001476 90r01rC9         [24] 3876 	mov	dptr,#___str_45
      001479 75 F0 80         [24] 3877 	mov	b,#0x80
      00147C 22               [24] 3878 	ret
                                   3879 ;	../UI_Manager/ui.c:961: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_CHOOSE_MACRO:
      00147D                       3880 00116$:
                                   3881 ;	../UI_Manager/ui.c:962: return "Choose Macro";
      00147D 90r01rD3         [24] 3882 	mov	dptr,#___str_46
      001480 75 F0 80         [24] 3883 	mov	b,#0x80
      001483 22               [24] 3884 	ret
                                   3885 ;	../UI_Manager/ui.c:963: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_RED:
      001484                       3886 00117$:
                                   3887 ;	../UI_Manager/ui.c:964: return "Red";
      001484 90r01rE0         [24] 3888 	mov	dptr,#___str_47
      001487 75 F0 80         [24] 3889 	mov	b,#0x80
      00148A 22               [24] 3890 	ret
                                   3891 ;	../UI_Manager/ui.c:965: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_YELLOW:
      00148B                       3892 00118$:
                                   3893 ;	../UI_Manager/ui.c:966: return "Yellow";
      00148B 90r01rE4         [24] 3894 	mov	dptr,#___str_48
      00148E 75 F0 80         [24] 3895 	mov	b,#0x80
      001491 22               [24] 3896 	ret
                                   3897 ;	../UI_Manager/ui.c:967: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_GREEN:
      001492                       3898 00119$:
                                   3899 ;	../UI_Manager/ui.c:968: return "Green";
      001492 90r01rEB         [24] 3900 	mov	dptr,#___str_49
      001495 75 F0 80         [24] 3901 	mov	b,#0x80
      001498 22               [24] 3902 	ret
                                   3903 ;	../UI_Manager/ui.c:969: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_CYAN:
      001499                       3904 00120$:
                                   3905 ;	../UI_Manager/ui.c:970: return "Cyan";
      001499 90r01rF1         [24] 3906 	mov	dptr,#___str_50
      00149C 75 F0 80         [24] 3907 	mov	b,#0x80
      00149F 22               [24] 3908 	ret
                                   3909 ;	../UI_Manager/ui.c:971: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_BLUE:
      0014A0                       3910 00121$:
                                   3911 ;	../UI_Manager/ui.c:972: return "Blue";
      0014A0 90r01rF6         [24] 3912 	mov	dptr,#___str_51
      0014A3 75 F0 80         [24] 3913 	mov	b,#0x80
      0014A6 22               [24] 3914 	ret
                                   3915 ;	../UI_Manager/ui.c:973: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_MAGENTA:
      0014A7                       3916 00122$:
                                   3917 ;	../UI_Manager/ui.c:974: return "Magenta";
      0014A7 90r01rFB         [24] 3918 	mov	dptr,#___str_52
      0014AA 75 F0 80         [24] 3919 	mov	b,#0x80
      0014AD 22               [24] 3920 	ret
                                   3921 ;	../UI_Manager/ui.c:975: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_SLOW:
      0014AE                       3922 00123$:
                                   3923 ;	../UI_Manager/ui.c:976: return "Strobe Slow";
      0014AE 90r02r03         [24] 3924 	mov	dptr,#___str_53
      0014B1 75 F0 80         [24] 3925 	mov	b,#0x80
      0014B4 22               [24] 3926 	ret
                                   3927 ;	../UI_Manager/ui.c:977: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_MEDIUM:
      0014B5                       3928 00124$:
                                   3929 ;	../UI_Manager/ui.c:978: return "Strobe Medium";
      0014B5 90r02r0F         [24] 3930 	mov	dptr,#___str_54
      0014B8 75 F0 80         [24] 3931 	mov	b,#0x80
      0014BB 22               [24] 3932 	ret
                                   3933 ;	../UI_Manager/ui.c:979: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_FAST:
      0014BC                       3934 00125$:
                                   3935 ;	../UI_Manager/ui.c:980: return "Strobe Fast";
      0014BC 90r02r1D         [24] 3936 	mov	dptr,#___str_55
      0014BF 75 F0 80         [24] 3937 	mov	b,#0x80
      0014C2 22               [24] 3938 	ret
                                   3939 ;	../UI_Manager/ui.c:981: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_BLACKOUT:
      0014C3                       3940 00126$:
                                   3941 ;	../UI_Manager/ui.c:982: return "Blackout";
      0014C3 90r02r29         [24] 3942 	mov	dptr,#___str_56
      0014C6 75 F0 80         [24] 3943 	mov	b,#0x80
      0014C9 22               [24] 3944 	ret
                                   3945 ;	../UI_Manager/ui.c:983: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_WHITEOUT:
      0014CA                       3946 00127$:
                                   3947 ;	../UI_Manager/ui.c:984: return "Whiteout";         
      0014CA 90r02r32         [24] 3948 	mov	dptr,#___str_57
      0014CD 75 F0 80         [24] 3949 	mov	b,#0x80
      0014D0 22               [24] 3950 	ret
                                   3951 ;	../UI_Manager/ui.c:986: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_1: 
      0014D1                       3952 00128$:
                                   3953 ;	../UI_Manager/ui.c:987: return "Slot 1";   
      0014D1 90r02r3B         [24] 3954 	mov	dptr,#___str_58
      0014D4 75 F0 80         [24] 3955 	mov	b,#0x80
      0014D7 22               [24] 3956 	ret
                                   3957 ;	../UI_Manager/ui.c:988: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_2: 
      0014D8                       3958 00129$:
                                   3959 ;	../UI_Manager/ui.c:989: return "Slot 2";   
      0014D8 90r02r42         [24] 3960 	mov	dptr,#___str_59
      0014DB 75 F0 80         [24] 3961 	mov	b,#0x80
      0014DE 22               [24] 3962 	ret
                                   3963 ;	../UI_Manager/ui.c:990: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_3: 
      0014DF                       3964 00130$:
                                   3965 ;	../UI_Manager/ui.c:991: return "Slot 3"; 
      0014DF 90r02r49         [24] 3966 	mov	dptr,#___str_60
      0014E2 75 F0 80         [24] 3967 	mov	b,#0x80
                                   3968 ;	../UI_Manager/ui.c:993: case DMX_STRING_OFFSET + OPTION_DMX_MODE_11: 
      0014E5 22               [24] 3969 	ret
      0014E6                       3970 00131$:
                                   3971 ;	../UI_Manager/ui.c:994: return "11 All";     
      0014E6 90r02r50         [24] 3972 	mov	dptr,#___str_61
      0014E9 75 F0 80         [24] 3973 	mov	b,#0x80
                                   3974 ;	../UI_Manager/ui.c:995: case DMX_STRING_OFFSET + OPTION_DMX_MODE_3: 
      0014EC 22               [24] 3975 	ret
      0014ED                       3976 00132$:
                                   3977 ;	../UI_Manager/ui.c:996: return " 3 Fog + Macro";   
      0014ED 90r02r57         [24] 3978 	mov	dptr,#___str_62
      0014F0 75 F0 80         [24] 3979 	mov	b,#0x80
                                   3980 ;	../UI_Manager/ui.c:997: case DMX_STRING_OFFSET + OPTION_DMX_MODE_1: 
      0014F3 22               [24] 3981 	ret
      0014F4                       3982 00133$:
                                   3983 ;	../UI_Manager/ui.c:998: return " 1 Fog";    
      0014F4 90r02r66         [24] 3984 	mov	dptr,#___str_63
      0014F7 75 F0 80         [24] 3985 	mov	b,#0x80
                                   3986 ;	../UI_Manager/ui.c:1000: case SECRET_STRING_OFFSET + 0:
      0014FA 22               [24] 3987 	ret
      0014FB                       3988 00134$:
                                   3989 ;	../UI_Manager/ui.c:1001: return "0x486F6C6D6573";
      0014FB 90r02r6D         [24] 3990 	mov	dptr,#___str_64
      0014FE 75 F0 80         [24] 3991 	mov	b,#0x80
                                   3992 ;	../UI_Manager/ui.c:1002: case SECRET_STRING_OFFSET + 1:
      001501 22               [24] 3993 	ret
      001502                       3994 00135$:
                                   3995 ;	../UI_Manager/ui.c:1003: return "& 576174736F6E";
      001502 90r02r7C         [24] 3996 	mov	dptr,#___str_65
      001505 75 F0 80         [24] 3997 	mov	b,#0x80
                                   3998 ;	../UI_Manager/ui.c:1004: case SECRET_STRING_OFFSET + 2:
      001508 22               [24] 3999 	ret
      001509                       4000 00136$:
                                   4001 ;	../UI_Manager/ui.c:1005: return "626F74684F776E41";
      001509 90r02r8B         [24] 4002 	mov	dptr,#___str_66
      00150C 75 F0 80         [24] 4003 	mov	b,#0x80
                                   4004 ;	../UI_Manager/ui.c:1006: case SECRET_STRING_OFFSET + 3:
      00150F 22               [24] 4005 	ret
      001510                       4006 00137$:
                                   4007 ;	../UI_Manager/ui.c:1007: return "536E6F7762616C6C";
      001510 90r02r9C         [24] 4008 	mov	dptr,#___str_67
      001513 75 F0 80         [24] 4009 	mov	b,#0x80
                                   4010 ;	../UI_Manager/ui.c:1008: case SECRET_STRING_OFFSET + 4:
      001516 22               [24] 4011 	ret
      001517                       4012 00138$:
                                   4013 ;	../UI_Manager/ui.c:1009: return "4D6F726961727479";
      001517 90r02rAD         [24] 4014 	mov	dptr,#___str_68
      00151A 75 F0 80         [24] 4015 	mov	b,#0x80
                                   4016 ;	../UI_Manager/ui.c:1010: case SECRET_STRING_OFFSET + 5:
      00151D 22               [24] 4017 	ret
      00151E                       4018 00139$:
                                   4019 ;	../UI_Manager/ui.c:1011: return "646F65734E6F74 ;";
      00151E 90r02rBE         [24] 4020 	mov	dptr,#___str_69
      001521 75 F0 80         [24] 4021 	mov	b,#0x80
                                   4022 ;	../UI_Manager/ui.c:1012: }
      001524 22               [24] 4023 	ret
      001525                       4024 00140$:
                                   4025 ;	../UI_Manager/ui.c:1014: return 0;
      001525 90 00 00         [24] 4026 	mov	dptr,#0x0000
      001528 75 F0 00         [24] 4027 	mov	b,#0x00
                                   4028 ;	../UI_Manager/ui.c:1015: }
      00152B 22               [24] 4029 	ret
                                   4030 	.area CSEG    (CODE)
                                   4031 	.area CONST   (CODE)
      000000                       4032 ___str_0:
      000000 54 61 6E 6B 20 4C 69  4033 	.ascii "Tank Lights Off"
             67 68 74 73 20 4F 66
             66
      00000F 00                    4034 	.db 0x00
      000010                       4035 ___str_1:
      000010 54 61 6E 6B 20 4C 69  4036 	.ascii "Tank Lights On"
             67 68 74 73 20 4F 6E
      00001E 00                    4037 	.db 0x00
      00001F                       4038 ___str_2:
      00001F 46 75 6E 2B 4D 61 6E  4039 	.ascii "Fun+Man to Undo"
             20 74 6F 20 55 6E 64
             6F
      00002E 00                    4040 	.db 0x00
      00002F                       4041 ___str_3:
      00002F 48 65 61 74 65 72 20  4042 	.ascii "Heater Off"
             4F 66 66
      000039 00                    4043 	.db 0x00
      00003A                       4044 ___str_4:
      00003A 48 65 61 74 65 72 20  4045 	.ascii "Heater On"
             4F 6E
      000043 00                    4046 	.db 0x00
      000044                       4047 ___str_5:
      000044 42 75 72 73 74 2B 55  4048 	.ascii "Burst+Up to Undo"
             70 20 74 6F 20 55 6E
             64 6F
      000054 00                    4049 	.db 0x00
      000055                       4050 ___str_6:
      000055 41 74 6D 6F 73 46 45  4051 	.ascii "AtmosFEAR 221B"
             41 52 20 32 32 31 42
      000063 00                    4052 	.db 0x00
      000064                       4053 ___str_7:
      000064 42 79 20 42 6C 69 7A  4054 	.ascii "By Blizzard Pro"
             7A 61 72 64 20 50 72
             6F
      000073 00                    4055 	.db 0x00
      000074                       4056 ___str_8:
      000074 50 43 20 4C 6F 61 64  4057 	.ascii "PC Load Letter"
             20 4C 65 74 74 65 72
      000082 00                    4058 	.db 0x00
      000083                       4059 ___str_9:
      000083 42 75 72 73 74 20 74  4060 	.ascii "Burst to Refill"
             6F 20 52 65 66 69 6C
             6C
      000092 00                    4061 	.db 0x00
      000093                       4062 ___str_10:
      000093 4D 61 6E 75 61 6C 20  4063 	.ascii "Manual Mode"
             4D 6F 64 65
      00009E 00                    4064 	.db 0x00
      00009F                       4065 ___str_11:
      00009F 41 64 64 72           4066 	.ascii "Addr"
      0000A3 00                    4067 	.db 0x00
      0000A4                       4068 ___str_12:
      0000A4 4D 6F 64 65           4069 	.ascii "Mode"
      0000A8 00                    4070 	.db 0x00
      0000A9                       4071 ___str_13:
      0000A9 44 4D 58 20 4F 6B     4072 	.ascii "DMX Ok"
      0000AF 00                    4073 	.db 0x00
      0000B0                       4074 ___str_14:
      0000B0 4E 6F 20 44 4D 58     4075 	.ascii "No DMX"
      0000B6 00                    4076 	.db 0x00
      0000B7                       4077 ___str_15:
      0000B7 49 6E 74 65 72 76 61  4078 	.ascii "Interval"
             6C
      0000BF 00                    4079 	.db 0x00
      0000C0                       4080 ___str_16:
      0000C0 44 75 72 61 74 69 6F  4081 	.ascii "Duration"
             6E
      0000C8 00                    4082 	.db 0x00
      0000C9                       4083 ___str_17:
      0000C9 46 6F 67 20 4C 65 76  4084 	.ascii "Fog Level"
             65 6C
      0000D2 00                    4085 	.db 0x00
      0000D3                       4086 ___str_18:
      0000D3 46 6F 67 20 49 6E 74  4087 	.ascii "Fog Interval"
             65 72 76 61 6C
      0000DF 00                    4088 	.db 0x00
      0000E0                       4089 ___str_19:
      0000E0 53 65 63 6F 6E 64 73  4090 	.ascii "Seconds"
      0000E7 00                    4091 	.db 0x00
      0000E8                       4092 ___str_20:
      0000E8 46 6F 67 20 44 75 72  4093 	.ascii "Fog Duration"
             61 74 69 6F 6E
      0000F4 00                    4094 	.db 0x00
      0000F5                       4095 ___str_21:
      0000F5 4D 61 63 72 6F 73     4096 	.ascii "Macros"
      0000FB 00                    4097 	.db 0x00
      0000FC                       4098 ___str_22:
      0000FC 4D 61 63 72 6F 20 53  4099 	.ascii "Macro Speed"
             70 65 65 64
      000107 00                    4100 	.db 0x00
      000108                       4101 ___str_23:
      000108 4F 66 66              4102 	.ascii "Off"
      00010B 00                    4103 	.db 0x00
      00010C                       4104 ___str_24:
      00010C 00                    4105 	.db 0x00
      00010D                       4106 ___str_25:
      00010D 52 65 6D 6F 74 65 20  4107 	.ascii "Remote X Action"
             58 20 41 63 74 69 6F
             6E
      00011C 00                    4108 	.db 0x00
      00011D                       4109 ___str_26:
      00011D 53 61 76 65 64 21     4110 	.ascii "Saved!"
      000123 00                    4111 	.db 0x00
      000124                       4112 ___str_27:
      000124 4C 6F 61 64 65 64 21  4113 	.ascii "Loaded!"
      00012B 00                    4114 	.db 0x00
      00012C                       4115 ___str_28:
      00012C 53 61 76 65 20 53 65  4116 	.ascii "Save Settings"
             74 74 69 6E 67 73
      000139 00                    4117 	.db 0x00
      00013A                       4118 ___str_29:
      00013A 4C 6F 61 64 20 53 65  4119 	.ascii "Load Settings"
             74 74 69 6E 67 73
      000147 00                    4120 	.db 0x00
      000148                       4121 ___str_30:
      000148 44 4D 58 20 41 64 64  4122 	.ascii "DMX Address"
             72 65 73 73
      000153 00                    4123 	.db 0x00
      000154                       4124 ___str_31:
      000154 44 4D 58 20 43 68 61  4125 	.ascii "DMX Channel Mode"
             6E 6E 65 6C 20 4D 6F
             64 65
      000164 00                    4126 	.db 0x00
      000165                       4127 ___str_32:
      000165 57 69 6D 70 79        4128 	.ascii "Wimpy"
      00016A 00                    4129 	.db 0x00
      00016B                       4130 ___str_33:
      00016B 4D 69 6C 64           4131 	.ascii "Mild"
      00016F 00                    4132 	.db 0x00
      000170                       4133 ___str_34:
      000170 42 6C 61 7A 69 6E     4134 	.ascii "Blazin"
      000176 00                    4135 	.db 0x00
      000177                       4136 ___str_35:
      000177 52 61 69 6E 62 6F 77  4137 	.ascii "Rainbow"
      00017E 00                    4138 	.db 0x00
      00017F                       4139 ___str_36:
      00017F 46 69 72 65           4140 	.ascii "Fire"
      000183 00                    4141 	.db 0x00
      000184                       4142 ___str_37:
      000184 57 61 74 65 72        4143 	.ascii "Water"
      000189 00                    4144 	.db 0x00
      00018A                       4145 ___str_38:
      00018A 53 74 6F 72 6D        4146 	.ascii "Storm"
      00018F 00                    4147 	.db 0x00
      000190                       4148 ___str_39:
      000190 41 63 69 64           4149 	.ascii "Acid"
      000194 00                    4150 	.db 0x00
      000195                       4151 ___str_40:
      000195 45 74 68 65 72        4152 	.ascii "Ether"
      00019A 00                    4153 	.db 0x00
      00019B                       4154 ___str_41:
      00019B 52 65 64 20 4C 65 76  4155 	.ascii "Red Level"
             65 6C
      0001A4 00                    4156 	.db 0x00
      0001A5                       4157 ___str_42:
      0001A5 47 72 65 65 6E 20 4C  4158 	.ascii "Green Level"
             65 76 65 6C
      0001B0 00                    4159 	.db 0x00
      0001B1                       4160 ___str_43:
      0001B1 42 6C 75 65 20 4C 65  4161 	.ascii "Blue Level"
             76 65 6C
      0001BB 00                    4162 	.db 0x00
      0001BC                       4163 ___str_44:
      0001BC 53 74 72 6F 62 65 20  4164 	.ascii "Strobe Level"
             4C 65 76 65 6C
      0001C8 00                    4165 	.db 0x00
      0001C9                       4166 ___str_45:
      0001C9 4E 6F 20 41 63 74 69  4167 	.ascii "No Action"
             6F 6E
      0001D2 00                    4168 	.db 0x00
      0001D3                       4169 ___str_46:
      0001D3 43 68 6F 6F 73 65 20  4170 	.ascii "Choose Macro"
             4D 61 63 72 6F
      0001DF 00                    4171 	.db 0x00
      0001E0                       4172 ___str_47:
      0001E0 52 65 64              4173 	.ascii "Red"
      0001E3 00                    4174 	.db 0x00
      0001E4                       4175 ___str_48:
      0001E4 59 65 6C 6C 6F 77     4176 	.ascii "Yellow"
      0001EA 00                    4177 	.db 0x00
      0001EB                       4178 ___str_49:
      0001EB 47 72 65 65 6E        4179 	.ascii "Green"
      0001F0 00                    4180 	.db 0x00
      0001F1                       4181 ___str_50:
      0001F1 43 79 61 6E           4182 	.ascii "Cyan"
      0001F5 00                    4183 	.db 0x00
      0001F6                       4184 ___str_51:
      0001F6 42 6C 75 65           4185 	.ascii "Blue"
      0001FA 00                    4186 	.db 0x00
      0001FB                       4187 ___str_52:
      0001FB 4D 61 67 65 6E 74 61  4188 	.ascii "Magenta"
      000202 00                    4189 	.db 0x00
      000203                       4190 ___str_53:
      000203 53 74 72 6F 62 65 20  4191 	.ascii "Strobe Slow"
             53 6C 6F 77
      00020E 00                    4192 	.db 0x00
      00020F                       4193 ___str_54:
      00020F 53 74 72 6F 62 65 20  4194 	.ascii "Strobe Medium"
             4D 65 64 69 75 6D
      00021C 00                    4195 	.db 0x00
      00021D                       4196 ___str_55:
      00021D 53 74 72 6F 62 65 20  4197 	.ascii "Strobe Fast"
             46 61 73 74
      000228 00                    4198 	.db 0x00
      000229                       4199 ___str_56:
      000229 42 6C 61 63 6B 6F 75  4200 	.ascii "Blackout"
             74
      000231 00                    4201 	.db 0x00
      000232                       4202 ___str_57:
      000232 57 68 69 74 65 6F 75  4203 	.ascii "Whiteout"
             74
      00023A 00                    4204 	.db 0x00
      00023B                       4205 ___str_58:
      00023B 53 6C 6F 74 20 31     4206 	.ascii "Slot 1"
      000241 00                    4207 	.db 0x00
      000242                       4208 ___str_59:
      000242 53 6C 6F 74 20 32     4209 	.ascii "Slot 2"
      000248 00                    4210 	.db 0x00
      000249                       4211 ___str_60:
      000249 53 6C 6F 74 20 33     4212 	.ascii "Slot 3"
      00024F 00                    4213 	.db 0x00
      000250                       4214 ___str_61:
      000250 31 31 20 41 6C 6C     4215 	.ascii "11 All"
      000256 00                    4216 	.db 0x00
      000257                       4217 ___str_62:
      000257 20 33 20 46 6F 67 20  4218 	.ascii " 3 Fog + Macro"
             2B 20 4D 61 63 72 6F
      000265 00                    4219 	.db 0x00
      000266                       4220 ___str_63:
      000266 20 31 20 46 6F 67     4221 	.ascii " 1 Fog"
      00026C 00                    4222 	.db 0x00
      00026D                       4223 ___str_64:
      00026D 30 78 34 38 36 46 36  4224 	.ascii "0x486F6C6D6573"
             43 36 44 36 35 37 33
      00027B 00                    4225 	.db 0x00
      00027C                       4226 ___str_65:
      00027C 26 20 35 37 36 31 37  4227 	.ascii "& 576174736F6E"
             34 37 33 36 46 36 45
      00028A 00                    4228 	.db 0x00
      00028B                       4229 ___str_66:
      00028B 36 32 36 46 37 34 36  4230 	.ascii "626F74684F776E41"
             38 34 46 37 37 36 45
             34 31
      00029B 00                    4231 	.db 0x00
      00029C                       4232 ___str_67:
      00029C 35 33 36 45 36 46 37  4233 	.ascii "536E6F7762616C6C"
             37 36 32 36 31 36 43
             36 43
      0002AC 00                    4234 	.db 0x00
      0002AD                       4235 ___str_68:
      0002AD 34 44 36 46 37 32 36  4236 	.ascii "4D6F726961727479"
             39 36 31 37 32 37 34
             37 39
      0002BD 00                    4237 	.db 0x00
      0002BE                       4238 ___str_69:
      0002BE 36 34 36 46 36 35 37  4239 	.ascii "646F65734E6F74 ;"
             33 34 45 36 46 37 34
             20 3B
      0002CE 00                    4240 	.db 0x00
                                   4241 	.area XINIT   (CODE)
                                   4242 	.area CABS    (ABS,CODE)
