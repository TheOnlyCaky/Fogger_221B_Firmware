                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module ui
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _exe_command
                                     12 	.globl _write_char
                                     13 	.globl _write_number
                                     14 	.globl _write_string
                                     15 	.globl _get_button_action
                                     16 	.globl _power_heater
                                     17 	.globl _power_pump
                                     18 	.globl _tick_fogger
                                     19 	.globl _set_dmx_address
                                     20 	.globl _get_dmx_address
                                     21 	.globl _set_runtime_data
                                     22 	.globl _get_runtime_data
                                     23 	.globl _save_load_settings
                                     24 	.globl _CPRL2
                                     25 	.globl _CT2
                                     26 	.globl _TR2
                                     27 	.globl _EXEN2
                                     28 	.globl _TCLK
                                     29 	.globl _RCLK
                                     30 	.globl _REN
                                     31 	.globl _SM2
                                     32 	.globl _SM1
                                     33 	.globl _SM0
                                     34 	.globl _RCK
                                     35 	.globl _SER
                                     36 	.globl _SCK
                                     37 	.globl _RI
                                     38 	.globl _ES
                                     39 	.globl _ET0
                                     40 	.globl _EA
                                     41 	.globl _P3_7
                                     42 	.globl _P3_6
                                     43 	.globl _P3_5
                                     44 	.globl _P3_4
                                     45 	.globl _P3_3
                                     46 	.globl _P3_2
                                     47 	.globl _P3_1
                                     48 	.globl _P3_0
                                     49 	.globl _P2_7
                                     50 	.globl _P2_6
                                     51 	.globl _P2_5
                                     52 	.globl _P2_4
                                     53 	.globl _P2_3
                                     54 	.globl _P2_2
                                     55 	.globl _P2_1
                                     56 	.globl _P2_0
                                     57 	.globl _P1_7
                                     58 	.globl _P1_6
                                     59 	.globl _P1_5
                                     60 	.globl _P1_4
                                     61 	.globl _P1_3
                                     62 	.globl _P1_2
                                     63 	.globl _P1_1
                                     64 	.globl _P1_0
                                     65 	.globl _P0_7
                                     66 	.globl _P0_6
                                     67 	.globl _P0_5
                                     68 	.globl _P0_4
                                     69 	.globl _P0_3
                                     70 	.globl _P0_2
                                     71 	.globl _P0_1
                                     72 	.globl _P0_0
                                     73 	.globl _IAP_ADRH
                                     74 	.globl _IAP_ADRL
                                     75 	.globl _IAPEN
                                     76 	.globl _TH0
                                     77 	.globl _TL0
                                     78 	.globl _CKCON
                                     79 	.globl _TMOD
                                     80 	.globl _TCON
                                     81 	.globl _PWMDATA17L
                                     82 	.globl _PWMDATA17H
                                     83 	.globl _PWMDATA14L
                                     84 	.globl _PWMDATA14H
                                     85 	.globl _PWMDATA11L
                                     86 	.globl _PWMDATA11H
                                     87 	.globl _PWM_EA2
                                     88 	.globl _PWM_EA1
                                     89 	.globl _SBUF
                                     90 	.globl _TL3
                                     91 	.globl _TH3
                                     92 	.globl _T2CON
                                     93 	.globl _RCAP2H
                                     94 	.globl _RCAP2L
                                     95 	.globl _SCON
                                     96 	.globl _P1_OPT
                                     97 	.globl _ADCVAL2
                                     98 	.globl _ADCVAL1
                                     99 	.globl _ADCSEL
                                    100 	.globl _EXIF
                                    101 	.globl _EIE
                                    102 	.globl _IE
                                    103 	.globl _P3
                                    104 	.globl _P2
                                    105 	.globl _P1
                                    106 	.globl _P0
                                    107 	.globl _PCLKSEL
                                    108 	.globl _CHIPCON
                                    109 	.globl _set_ui_state_PARM_2
                                    110 	.globl _tick_ui
                                    111 	.globl _idlePage
                                    112 	.globl _fogLevelPage
                                    113 	.globl _fogIntervalPage
                                    114 	.globl _fogDurationPage
                                    115 	.globl _macroPage
                                    116 	.globl _macroSpeedPage
                                    117 	.globl _colorPage
                                    118 	.globl _remotePage
                                    119 	.globl _saveLoadPage
                                    120 	.globl _dmxAddressPage
                                    121 	.globl _dmxChannelPage
                                    122 	.globl _set_ui_state
                                    123 	.globl _get_ui_state
                                    124 	.globl _getString
                                    125 ;--------------------------------------------------------
                                    126 ; special function registers
                                    127 ;--------------------------------------------------------
                                    128 	.area RSEG    (ABS,DATA)
      000000                        129 	.org 0x0000
                           0000BF   130 _CHIPCON	=	0x00bf
                           0000B7   131 _PCLKSEL	=	0x00b7
                           000080   132 _P0	=	0x0080
                           000090   133 _P1	=	0x0090
                           0000A0   134 _P2	=	0x00a0
                           0000B0   135 _P3	=	0x00b0
                           0000A8   136 _IE	=	0x00a8
                           0000E8   137 _EIE	=	0x00e8
                           000091   138 _EXIF	=	0x0091
                           0000DA   139 _ADCSEL	=	0x00da
                           0000DB   140 _ADCVAL1	=	0x00db
                           0000DC   141 _ADCVAL2	=	0x00dc
                           0000D9   142 _P1_OPT	=	0x00d9
                           000098   143 _SCON	=	0x0098
                           0000CA   144 _RCAP2L	=	0x00ca
                           0000CB   145 _RCAP2H	=	0x00cb
                           0000C8   146 _T2CON	=	0x00c8
                           00009B   147 _TH3	=	0x009b
                           00009A   148 _TL3	=	0x009a
                           000099   149 _SBUF	=	0x0099
                           0000D3   150 _PWM_EA1	=	0x00d3
                           0000D4   151 _PWM_EA2	=	0x00d4
                           0000BD   152 _PWMDATA11H	=	0x00bd
                           0000BE   153 _PWMDATA11L	=	0x00be
                           0000B5   154 _PWMDATA14H	=	0x00b5
                           0000B6   155 _PWMDATA14L	=	0x00b6
                           0000AD   156 _PWMDATA17H	=	0x00ad
                           0000AE   157 _PWMDATA17L	=	0x00ae
                           000088   158 _TCON	=	0x0088
                           000089   159 _TMOD	=	0x0089
                           00008E   160 _CKCON	=	0x008e
                           00008A   161 _TL0	=	0x008a
                           00008C   162 _TH0	=	0x008c
                           0000E4   163 _IAPEN	=	0x00e4
                           0000E5   164 _IAP_ADRL	=	0x00e5
                           0000E6   165 _IAP_ADRH	=	0x00e6
                                    166 ;--------------------------------------------------------
                                    167 ; special function bits
                                    168 ;--------------------------------------------------------
                                    169 	.area RSEG    (ABS,DATA)
      000000                        170 	.org 0x0000
                           000080   171 _P0_0	=	0x0080
                           000081   172 _P0_1	=	0x0081
                           000082   173 _P0_2	=	0x0082
                           000083   174 _P0_3	=	0x0083
                           000084   175 _P0_4	=	0x0084
                           000085   176 _P0_5	=	0x0085
                           000086   177 _P0_6	=	0x0086
                           000087   178 _P0_7	=	0x0087
                           000090   179 _P1_0	=	0x0090
                           000091   180 _P1_1	=	0x0091
                           000092   181 _P1_2	=	0x0092
                           000093   182 _P1_3	=	0x0093
                           000094   183 _P1_4	=	0x0094
                           000095   184 _P1_5	=	0x0095
                           000096   185 _P1_6	=	0x0096
                           000097   186 _P1_7	=	0x0097
                           0000A0   187 _P2_0	=	0x00a0
                           0000A1   188 _P2_1	=	0x00a1
                           0000A2   189 _P2_2	=	0x00a2
                           0000A3   190 _P2_3	=	0x00a3
                           0000A4   191 _P2_4	=	0x00a4
                           0000A5   192 _P2_5	=	0x00a5
                           0000A6   193 _P2_6	=	0x00a6
                           0000A7   194 _P2_7	=	0x00a7
                           0000B0   195 _P3_0	=	0x00b0
                           0000B1   196 _P3_1	=	0x00b1
                           0000B2   197 _P3_2	=	0x00b2
                           0000B3   198 _P3_3	=	0x00b3
                           0000B4   199 _P3_4	=	0x00b4
                           0000B5   200 _P3_5	=	0x00b5
                           0000B6   201 _P3_6	=	0x00b6
                           0000B7   202 _P3_7	=	0x00b7
                           0000AF   203 _EA	=	0x00af
                           0000A9   204 _ET0	=	0x00a9
                           0000AC   205 _ES	=	0x00ac
                           000098   206 _RI	=	0x0098
                           000093   207 _SCK	=	0x0093
                           000095   208 _SER	=	0x0095
                           000092   209 _RCK	=	0x0092
                           00009F   210 _SM0	=	0x009f
                           00009E   211 _SM1	=	0x009e
                           00009D   212 _SM2	=	0x009d
                           00009C   213 _REN	=	0x009c
                           0000CD   214 _RCLK	=	0x00cd
                           0000CC   215 _TCLK	=	0x00cc
                           0000CB   216 _EXEN2	=	0x00cb
                           0000CA   217 _TR2	=	0x00ca
                           0000C9   218 _CT2	=	0x00c9
                           0000C8   219 _CPRL2	=	0x00c8
                                    220 ;--------------------------------------------------------
                                    221 ; overlayable register banks
                                    222 ;--------------------------------------------------------
                                    223 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        224 	.ds 8
                                    225 ;--------------------------------------------------------
                                    226 ; internal ram data
                                    227 ;--------------------------------------------------------
                                    228 	.area DSEG    (DATA)
      000000                        229 _State:
      000000                        230 	.ds 1
      000001                        231 _Changed:
      000001                        232 	.ds 1
      000002                        233 _changed:
      000002                        234 	.ds 1
      000003                        235 _tick_ui_bursting_65536_37:
      000003                        236 	.ds 1
      000004                        237 _tick_ui_delay_65536_37:
      000004                        238 	.ds 4
      000008                        239 _idlePage_timer_65536_59:
      000008                        240 	.ds 1
      000009                        241 _idlePage_intervalOrDuration_65536_59:
      000009                        242 	.ds 1
      00000A                        243 _idlePage_empty_65536_59:
      00000A                        244 	.ds 1
      00000B                        245 _idlePage_tock_65536_59:
      00000B                        246 	.ds 1
      00000C                        247 _idlePage_iconChange_65536_59:
      00000C                        248 	.ds 1
      00000D                        249 _idlePage_playing_65536_59:
      00000D                        250 	.ds 1
      00000E                        251 _saveLoadPage_slot_65536_141:
      00000E                        252 	.ds 1
      00000F                        253 _set_ui_state_PARM_2:
      00000F                        254 	.ds 1
                                    255 ;--------------------------------------------------------
                                    256 ; overlayable items in internal ram 
                                    257 ;--------------------------------------------------------
                                    258 	.area	OSEG    (OVR,DATA)
                                    259 ;--------------------------------------------------------
                                    260 ; indirectly addressable internal ram data
                                    261 ;--------------------------------------------------------
                                    262 	.area ISEG    (DATA)
                                    263 ;--------------------------------------------------------
                                    264 ; absolute internal ram data
                                    265 ;--------------------------------------------------------
                                    266 	.area IABS    (ABS,DATA)
                                    267 	.area IABS    (ABS,DATA)
                                    268 ;--------------------------------------------------------
                                    269 ; bit data
                                    270 ;--------------------------------------------------------
                                    271 	.area BSEG    (BIT)
                                    272 ;--------------------------------------------------------
                                    273 ; paged external ram data
                                    274 ;--------------------------------------------------------
                                    275 	.area PSEG    (PAG,XDATA)
                                    276 ;--------------------------------------------------------
                                    277 ; external ram data
                                    278 ;--------------------------------------------------------
                                    279 	.area XSEG    (XDATA)
                                    280 ;--------------------------------------------------------
                                    281 ; absolute external ram data
                                    282 ;--------------------------------------------------------
                                    283 	.area XABS    (ABS,XDATA)
                                    284 ;--------------------------------------------------------
                                    285 ; external initialized ram data
                                    286 ;--------------------------------------------------------
                                    287 	.area XISEG   (XDATA)
                                    288 	.area HOME    (CODE)
                                    289 	.area GSINIT0 (CODE)
                                    290 	.area GSINIT1 (CODE)
                                    291 	.area GSINIT2 (CODE)
                                    292 	.area GSINIT3 (CODE)
                                    293 	.area GSINIT4 (CODE)
                                    294 	.area GSINIT5 (CODE)
                                    295 	.area GSINIT  (CODE)
                                    296 	.area GSFINAL (CODE)
                                    297 	.area CSEG    (CODE)
                                    298 ;--------------------------------------------------------
                                    299 ; global & static initialisations
                                    300 ;--------------------------------------------------------
                                    301 	.area HOME    (CODE)
                                    302 	.area GSINIT  (CODE)
                                    303 	.area GSFINAL (CODE)
                                    304 	.area GSINIT  (CODE)
                                    305 ;------------------------------------------------------------
                                    306 ;Allocation info for local variables in function 'tick_ui'
                                    307 ;------------------------------------------------------------
                                    308 ;bursting                  Allocated with name '_tick_ui_bursting_65536_37'
                                    309 ;action                    Allocated to registers r7 
                                    310 ;ss                        Allocated to registers 
                                    311 ;delay                     Allocated with name '_tick_ui_delay_65536_37'
                                    312 ;------------------------------------------------------------
                                    313 ;	../UI_Manager/ui.c:17: static uint8_t bursting = 0;
      000000 75*03 00         [24]  314 	mov	_tick_ui_bursting_65536_37,#0x00
                                    315 ;------------------------------------------------------------
                                    316 ;Allocation info for local variables in function 'idlePage'
                                    317 ;------------------------------------------------------------
                                    318 ;timer                     Allocated with name '_idlePage_timer_65536_59'
                                    319 ;intervalOrDuration        Allocated with name '_idlePage_intervalOrDuration_65536_59'
                                    320 ;empty                     Allocated with name '_idlePage_empty_65536_59'
                                    321 ;tock                      Allocated with name '_idlePage_tock_65536_59'
                                    322 ;iconChange                Allocated with name '_idlePage_iconChange_65536_59'
                                    323 ;playing                   Allocated with name '_idlePage_playing_65536_59'
                                    324 ;temp                      Allocated to registers r7 
                                    325 ;------------------------------------------------------------
                                    326 ;	../UI_Manager/ui.c:209: static uint8_t timer = 0;
      000003 75*08 00         [24]  327 	mov	_idlePage_timer_65536_59,#0x00
                                    328 ;	../UI_Manager/ui.c:211: static uint8_t empty = 0x00;
      000006 75*0A 00         [24]  329 	mov	_idlePage_empty_65536_59,#0x00
                                    330 ;	../UI_Manager/ui.c:212: static uint8_t tock = 0x00;
      000009 75*0B 00         [24]  331 	mov	_idlePage_tock_65536_59,#0x00
                                    332 ;	../UI_Manager/ui.c:213: static uint8_t iconChange = 0x00;
      00000C 75*0C 00         [24]  333 	mov	_idlePage_iconChange_65536_59,#0x00
                                    334 ;	../UI_Manager/ui.c:214: static uint8_t playing = PAUSE;
      00000F 75*0D 00         [24]  335 	mov	_idlePage_playing_65536_59,#0x00
                                    336 ;------------------------------------------------------------
                                    337 ;Allocation info for local variables in function 'saveLoadPage'
                                    338 ;------------------------------------------------------------
                                    339 ;slot                      Allocated with name '_saveLoadPage_slot_65536_141'
                                    340 ;action                    Allocated to registers r7 
                                    341 ;------------------------------------------------------------
                                    342 ;	../UI_Manager/ui.c:741: static uint8_t slot = 0;
      000012 75*0E 00         [24]  343 	mov	_saveLoadPage_slot_65536_141,#0x00
                                    344 ;	../UI_Manager/ui.c:12: static volatile uint8_t State = WELCOME_STATE;
      000015 75*00 45         [24]  345 	mov	_State,#0x45
                                    346 ;	../UI_Manager/ui.c:13: static volatile uint8_t Changed = CHANGE_SCREEN_X;
      000018 75*01 FF         [24]  347 	mov	_Changed,#0xff
                                    348 ;	../UI_Manager/ui.c:14: static volatile uint8_t changed = CHANGE_SCREEN_X;
      00001B 75*02 FF         [24]  349 	mov	_changed,#0xff
                                    350 ;--------------------------------------------------------
                                    351 ; Home
                                    352 ;--------------------------------------------------------
                                    353 	.area HOME    (CODE)
                                    354 	.area HOME    (CODE)
                                    355 ;--------------------------------------------------------
                                    356 ; code
                                    357 ;--------------------------------------------------------
                                    358 	.area CSEG    (CODE)
                                    359 ;------------------------------------------------------------
                                    360 ;Allocation info for local variables in function 'tick_ui'
                                    361 ;------------------------------------------------------------
                                    362 ;bursting                  Allocated with name '_tick_ui_bursting_65536_37'
                                    363 ;action                    Allocated to registers r7 
                                    364 ;ss                        Allocated to registers 
                                    365 ;delay                     Allocated with name '_tick_ui_delay_65536_37'
                                    366 ;------------------------------------------------------------
                                    367 ;	../UI_Manager/ui.c:16: void tick_ui(void){
                                    368 ;	-----------------------------------------
                                    369 ;	 function tick_ui
                                    370 ;	-----------------------------------------
      000000                        371 _tick_ui:
                           000007   372 	ar7 = 0x07
                           000006   373 	ar6 = 0x06
                           000005   374 	ar5 = 0x05
                           000004   375 	ar4 = 0x04
                           000003   376 	ar3 = 0x03
                           000002   377 	ar2 = 0x02
                           000001   378 	ar1 = 0x01
                           000000   379 	ar0 = 0x00
                                    380 ;	../UI_Manager/ui.c:18: uint8_t action = get_button_action();
      000000 12r00r00         [24]  381 	lcall	_get_button_action
      000003 AF 82            [24]  382 	mov	r7,dpl
                                    383 ;	../UI_Manager/ui.c:24: if(action == BUTTON_BURST || action == BUTTON_MAN_BURST){
      000005 E4               [12]  384 	clr	a
      000006 BF 05 01         [24]  385 	cjne	r7,#0x05,00416$
      000009 04               [12]  386 	inc	a
      00000A                        387 00416$:
      00000A FE               [12]  388 	mov	r6,a
      00000B 70 03            [24]  389 	jnz	00103$
      00000D BF 0A 21         [24]  390 	cjne	r7,#0x0a,00104$
      000010                        391 00103$:
                                    392 ;	../UI_Manager/ui.c:25: power_pump(action == (BUTTON_BURST) ? PUMP_OVERRIDE : PUMP_MASTER_OVERRIDE);
      000010 EE               [12]  393 	mov	a,r6
      000011 60 06            [24]  394 	jz	00174$
      000013 7D 02            [12]  395 	mov	r5,#0x02
      000015 7E 00            [12]  396 	mov	r6,#0x00
      000017 80 04            [24]  397 	sjmp	00175$
      000019                        398 00174$:
      000019 7D 03            [12]  399 	mov	r5,#0x03
      00001B 7E 00            [12]  400 	mov	r6,#0x00
      00001D                        401 00175$:
      00001D 8D 82            [24]  402 	mov	dpl,r5
      00001F C0 07            [24]  403 	push	ar7
      000021 12r00r00         [24]  404 	lcall	_power_pump
      000024 D0 07            [24]  405 	pop	ar7
                                    406 ;	../UI_Manager/ui.c:26: bursting |= BURSTING;
      000026 AD*03            [24]  407 	mov	r5,_tick_ui_bursting_65536_37
      000028 7E 00            [12]  408 	mov	r6,#0x00
      00002A 43 05 80         [24]  409 	orl	ar5,#0x80
      00002D 8D*03            [24]  410 	mov	_tick_ui_bursting_65536_37,r5
      00002F 80 12            [24]  411 	sjmp	00105$
      000031                        412 00104$:
                                    413 ;	../UI_Manager/ui.c:27: } else if(bursting & BURSTING){
      000031 E5*03            [12]  414 	mov	a,_tick_ui_bursting_65536_37
      000033 30 E7 0D         [24]  415 	jnb	acc.7,00105$
                                    416 ;	../UI_Manager/ui.c:28: power_pump(PUMP_OFF);
      000036 75 82 00         [24]  417 	mov	dpl,#0x00
      000039 C0 07            [24]  418 	push	ar7
      00003B 12r00r00         [24]  419 	lcall	_power_pump
      00003E D0 07            [24]  420 	pop	ar7
                                    421 ;	../UI_Manager/ui.c:29: bursting &= ~BURSTING;
      000040 53*03 7F         [24]  422 	anl	_tick_ui_bursting_65536_37,#0x7f
      000043                        423 00105$:
                                    424 ;	../UI_Manager/ui.c:33: if(action == BUTTON_MANUAL){
      000043 BF 08 34         [24]  425 	cjne	r7,#0x08,00108$
                                    426 ;	../UI_Manager/ui.c:34: set_runtime_data(OP_MODE_INDEX, VALUE, (get_runtime_data(OP_MODE_INDEX) == MODE_MANUAL) ? MODE_DMX : MODE_MANUAL);
      000046 75 82 10         [24]  427 	mov	dpl,#0x10
      000049 C0 07            [24]  428 	push	ar7
      00004B 12r00r00         [24]  429 	lcall	_get_runtime_data
      00004E AE 82            [24]  430 	mov	r6,dpl
      000050 D0 07            [24]  431 	pop	ar7
      000052 BE 80 06         [24]  432 	cjne	r6,#0x80,00176$
      000055 7D 00            [12]  433 	mov	r5,#0x00
      000057 7E 00            [12]  434 	mov	r6,#0x00
      000059 80 04            [24]  435 	sjmp	00177$
      00005B                        436 00176$:
      00005B 7D 80            [12]  437 	mov	r5,#0x80
      00005D 7E 00            [12]  438 	mov	r6,#0x00
      00005F                        439 00177$:
      00005F 8D*00            [24]  440 	mov	_set_runtime_data_PARM_3,r5
      000061 75*00 00         [24]  441 	mov	_set_runtime_data_PARM_2,#0x00
      000064 75 82 10         [24]  442 	mov	dpl,#0x10
      000067 C0 07            [24]  443 	push	ar7
      000069 12r00r00         [24]  444 	lcall	_set_runtime_data
                                    445 ;	../UI_Manager/ui.c:36: State = IDLE_STATE;
      00006C 75*00 00         [24]  446 	mov	_State,#0x00
                                    447 ;	../UI_Manager/ui.c:37: Changed = CHANGE_SCREEN_X;
      00006F 75*01 FF         [24]  448 	mov	_Changed,#0xff
                                    449 ;	../UI_Manager/ui.c:39: set_playing(RESET);
      000072 75*00 02         [24]  450 	mov	_Playing,#0x02
                                    451 ;	../UI_Manager/ui.c:41: tick_fogger();
      000075 12r00r00         [24]  452 	lcall	_tick_fogger
      000078 D0 07            [24]  453 	pop	ar7
      00007A                        454 00108$:
                                    455 ;	../UI_Manager/ui.c:46: if(action == BUTTON_TIMER_HOLD){
      00007A BF C8 10         [24]  456 	cjne	r7,#0xc8,00113$
                                    457 ;	../UI_Manager/ui.c:47: if(get_playing() == PLAY){
      00007D 74 01            [12]  458 	mov	a,#0x01
      00007F B5*00 05         [24]  459 	cjne	a,_Playing,00110$
                                    460 ;	../UI_Manager/ui.c:48: set_playing(RESET);
      000082 75*00 02         [24]  461 	mov	_Playing,#0x02
      000085 80 03            [24]  462 	sjmp	00111$
      000087                        463 00110$:
                                    464 ;	../UI_Manager/ui.c:50: set_playing(PLAY);
      000087 75*00 01         [24]  465 	mov	_Playing,#0x01
      00008A                        466 00111$:
                                    467 ;	../UI_Manager/ui.c:53: tick_fogger();
                                    468 ;	../UI_Manager/ui.c:55: return;
      00008A 02r00r00         [24]  469 	ljmp	_tick_fogger
      00008D                        470 00113$:
                                    471 ;	../UI_Manager/ui.c:59: if(action == BUTTON_FUN_MAN){
      00008D BF 09 02         [24]  472 	cjne	r7,#0x09,00431$
      000090 80 03            [24]  473 	sjmp	00432$
      000092                        474 00431$:
      000092 02r01r2B         [24]  475 	ljmp	00121$
      000095                        476 00432$:
                                    477 ;	../UI_Manager/ui.c:60: set_runtime_data(TANK_LIGHTS_INDEX, VALUE, ~get_runtime_data(TANK_LIGHTS_INDEX));
      000095 75 82 0F         [24]  478 	mov	dpl,#0x0f
      000098 12r00r00         [24]  479 	lcall	_get_runtime_data
      00009B E5 82            [12]  480 	mov	a,dpl
      00009D F4               [12]  481 	cpl	a
      00009E F5*00            [12]  482 	mov	_set_runtime_data_PARM_3,a
      0000A0 75*00 00         [24]  483 	mov	_set_runtime_data_PARM_2,#0x00
      0000A3 75 82 0F         [24]  484 	mov	dpl,#0x0f
      0000A6 12r00r00         [24]  485 	lcall	_set_runtime_data
                                    486 ;	../UI_Manager/ui.c:62: exe_command(CLEAR_DISPLAY);
      0000A9 90 80 00         [24]  487 	mov	dptr,#0x8000
      0000AC 12r00r00         [24]  488 	lcall	_exe_command
                                    489 ;	../UI_Manager/ui.c:63: if(get_runtime_data(TANK_LIGHTS_INDEX)){
      0000AF 75 82 0F         [24]  490 	mov	dpl,#0x0f
      0000B2 12r00r00         [24]  491 	lcall	_get_runtime_data
      0000B5 E5 82            [12]  492 	mov	a,dpl
      0000B7 60 17            [24]  493 	jz	00115$
                                    494 ;	../UI_Manager/ui.c:64: write_string("Tank Lights Off", 15, 0, LINE_0, NOT_SELECTED);
      0000B9 75*00 0F         [24]  495 	mov	_write_string_PARM_2,#0x0f
      0000BC 75*00 00         [24]  496 	mov	_write_string_PARM_3,#0x00
      0000BF 75*00 00         [24]  497 	mov	_write_string_PARM_4,#0x00
      0000C2 75*00 00         [24]  498 	mov	_write_string_PARM_5,#0x00
      0000C5 90r00r00         [24]  499 	mov	dptr,#___str_0
      0000C8 75 F0 80         [24]  500 	mov	b,#0x80
      0000CB 12r00r00         [24]  501 	lcall	_write_string
      0000CE 80 15            [24]  502 	sjmp	00116$
      0000D0                        503 00115$:
                                    504 ;	../UI_Manager/ui.c:66: write_string("Tank Lights On", 15, 0, LINE_0, NOT_SELECTED);
      0000D0 75*00 0F         [24]  505 	mov	_write_string_PARM_2,#0x0f
      0000D3 75*00 00         [24]  506 	mov	_write_string_PARM_3,#0x00
      0000D6 75*00 00         [24]  507 	mov	_write_string_PARM_4,#0x00
      0000D9 75*00 00         [24]  508 	mov	_write_string_PARM_5,#0x00
      0000DC 90r00r10         [24]  509 	mov	dptr,#___str_1
      0000DF 75 F0 80         [24]  510 	mov	b,#0x80
      0000E2 12r00r00         [24]  511 	lcall	_write_string
      0000E5                        512 00116$:
                                    513 ;	../UI_Manager/ui.c:69: write_string("Fun+Man to Undo", 15, 0, LINE_1, NOT_SELECTED);
      0000E5 75*00 0F         [24]  514 	mov	_write_string_PARM_2,#0x0f
      0000E8 75*00 00         [24]  515 	mov	_write_string_PARM_3,#0x00
      0000EB 75*00 01         [24]  516 	mov	_write_string_PARM_4,#0x01
      0000EE 75*00 00         [24]  517 	mov	_write_string_PARM_5,#0x00
      0000F1 90r00r1F         [24]  518 	mov	dptr,#___str_2
      0000F4 75 F0 80         [24]  519 	mov	b,#0x80
      0000F7 12r00r00         [24]  520 	lcall	_write_string
                                    521 ;	../UI_Manager/ui.c:73: while(delay--){ ;; }
      0000FA 75*04 B5         [24]  522 	mov	_tick_ui_delay_65536_37,#0xb5
      0000FD 75*05 D8         [24]  523 	mov	(_tick_ui_delay_65536_37 + 1),#0xd8
      000100 75*06 07         [24]  524 	mov	(_tick_ui_delay_65536_37 + 2),#0x07
      000103 75*07 00         [24]  525 	mov	(_tick_ui_delay_65536_37 + 3),#0x00
      000106                        526 00117$:
      000106 A8*04            [24]  527 	mov	r0,_tick_ui_delay_65536_37
      000108 A9*05            [24]  528 	mov	r1,(_tick_ui_delay_65536_37 + 1)
      00010A AA*06            [24]  529 	mov	r2,(_tick_ui_delay_65536_37 + 2)
      00010C AE*07            [24]  530 	mov	r6,(_tick_ui_delay_65536_37 + 3)
      00010E 15*04            [12]  531 	dec	_tick_ui_delay_65536_37
      000110 74 FF            [12]  532 	mov	a,#0xff
      000112 B5*04 0C         [24]  533 	cjne	a,_tick_ui_delay_65536_37,00434$
      000115 15*05            [12]  534 	dec	(_tick_ui_delay_65536_37 + 1)
      000117 B5*05 07         [24]  535 	cjne	a,(_tick_ui_delay_65536_37 + 1),00434$
      00011A 15*06            [12]  536 	dec	(_tick_ui_delay_65536_37 + 2)
      00011C B5*06 02         [24]  537 	cjne	a,(_tick_ui_delay_65536_37 + 2),00434$
      00011F 15*07            [12]  538 	dec	(_tick_ui_delay_65536_37 + 3)
      000121                        539 00434$:
      000121 E8               [12]  540 	mov	a,r0
      000122 49               [12]  541 	orl	a,r1
      000123 4A               [12]  542 	orl	a,r2
      000124 4E               [12]  543 	orl	a,r6
      000125 70 DF            [24]  544 	jnz	00117$
                                    545 ;	../UI_Manager/ui.c:75: Changed = CHANGE_SCREEN_X;
      000127 75*01 FF         [24]  546 	mov	_Changed,#0xff
                                    547 ;	../UI_Manager/ui.c:77: return;
      00012A 22               [24]  548 	ret
      00012B                        549 00121$:
                                    550 ;	../UI_Manager/ui.c:81: if(action == BUTTON_BURST_UP){
      00012B BF 07 02         [24]  551 	cjne	r7,#0x07,00436$
      00012E 80 03            [24]  552 	sjmp	00437$
      000130                        553 00436$:
      000130 02r01rBC         [24]  554 	ljmp	00129$
      000133                        555 00437$:
                                    556 ;	../UI_Manager/ui.c:83: exe_command(CLEAR_DISPLAY);
      000133 90 80 00         [24]  557 	mov	dptr,#0x8000
      000136 12r00r00         [24]  558 	lcall	_exe_command
                                    559 ;	../UI_Manager/ui.c:84: if(get_heater_enabled()){
      000139 E5*00            [12]  560 	mov	a,_Heat_Flag
      00013B 20 E4 1D         [24]  561 	jb	acc.4,00123$
                                    562 ;	../UI_Manager/ui.c:85: write_string("Heater Off", 15, 2, LINE_0, NOT_SELECTED);
      00013E 75*00 0F         [24]  563 	mov	_write_string_PARM_2,#0x0f
      000141 75*00 02         [24]  564 	mov	_write_string_PARM_3,#0x02
      000144 75*00 00         [24]  565 	mov	_write_string_PARM_4,#0x00
      000147 75*00 00         [24]  566 	mov	_write_string_PARM_5,#0x00
      00014A 90r00r2F         [24]  567 	mov	dptr,#___str_3
      00014D 75 F0 80         [24]  568 	mov	b,#0x80
      000150 12r00r00         [24]  569 	lcall	_write_string
                                    570 ;	../UI_Manager/ui.c:86: power_heater(HEATER_DISABLE);
      000153 75 82 01         [24]  571 	mov	dpl,#0x01
      000156 12r00r00         [24]  572 	lcall	_power_heater
      000159 80 1B            [24]  573 	sjmp	00124$
      00015B                        574 00123$:
                                    575 ;	../UI_Manager/ui.c:88: write_string("Heater On", 15, 2, LINE_0, NOT_SELECTED);
      00015B 75*00 0F         [24]  576 	mov	_write_string_PARM_2,#0x0f
      00015E 75*00 02         [24]  577 	mov	_write_string_PARM_3,#0x02
      000161 75*00 00         [24]  578 	mov	_write_string_PARM_4,#0x00
      000164 75*00 00         [24]  579 	mov	_write_string_PARM_5,#0x00
      000167 90r00r3A         [24]  580 	mov	dptr,#___str_4
      00016A 75 F0 80         [24]  581 	mov	b,#0x80
      00016D 12r00r00         [24]  582 	lcall	_write_string
                                    583 ;	../UI_Manager/ui.c:89: power_heater(HEATER_ENABLE);
      000170 75 82 00         [24]  584 	mov	dpl,#0x00
      000173 12r00r00         [24]  585 	lcall	_power_heater
      000176                        586 00124$:
                                    587 ;	../UI_Manager/ui.c:92: write_string("Burst+Up to Undo", 16, 0, LINE_1, NOT_SELECTED);
      000176 75*00 10         [24]  588 	mov	_write_string_PARM_2,#0x10
      000179 75*00 00         [24]  589 	mov	_write_string_PARM_3,#0x00
      00017C 75*00 01         [24]  590 	mov	_write_string_PARM_4,#0x01
      00017F 75*00 00         [24]  591 	mov	_write_string_PARM_5,#0x00
      000182 90r00r44         [24]  592 	mov	dptr,#___str_5
      000185 75 F0 80         [24]  593 	mov	b,#0x80
      000188 12r00r00         [24]  594 	lcall	_write_string
                                    595 ;	../UI_Manager/ui.c:96: while(delay--){ ;; }
      00018B 75*04 B5         [24]  596 	mov	_tick_ui_delay_65536_37,#0xb5
      00018E 75*05 D8         [24]  597 	mov	(_tick_ui_delay_65536_37 + 1),#0xd8
      000191 75*06 07         [24]  598 	mov	(_tick_ui_delay_65536_37 + 2),#0x07
      000194 75*07 00         [24]  599 	mov	(_tick_ui_delay_65536_37 + 3),#0x00
      000197                        600 00125$:
      000197 A8*04            [24]  601 	mov	r0,_tick_ui_delay_65536_37
      000199 A9*05            [24]  602 	mov	r1,(_tick_ui_delay_65536_37 + 1)
      00019B AA*06            [24]  603 	mov	r2,(_tick_ui_delay_65536_37 + 2)
      00019D AE*07            [24]  604 	mov	r6,(_tick_ui_delay_65536_37 + 3)
      00019F 15*04            [12]  605 	dec	_tick_ui_delay_65536_37
      0001A1 74 FF            [12]  606 	mov	a,#0xff
      0001A3 B5*04 0C         [24]  607 	cjne	a,_tick_ui_delay_65536_37,00439$
      0001A6 15*05            [12]  608 	dec	(_tick_ui_delay_65536_37 + 1)
      0001A8 B5*05 07         [24]  609 	cjne	a,(_tick_ui_delay_65536_37 + 1),00439$
      0001AB 15*06            [12]  610 	dec	(_tick_ui_delay_65536_37 + 2)
      0001AD B5*06 02         [24]  611 	cjne	a,(_tick_ui_delay_65536_37 + 2),00439$
      0001B0 15*07            [12]  612 	dec	(_tick_ui_delay_65536_37 + 3)
      0001B2                        613 00439$:
      0001B2 E8               [12]  614 	mov	a,r0
      0001B3 49               [12]  615 	orl	a,r1
      0001B4 4A               [12]  616 	orl	a,r2
      0001B5 4E               [12]  617 	orl	a,r6
      0001B6 70 DF            [24]  618 	jnz	00125$
                                    619 ;	../UI_Manager/ui.c:98: Changed = CHANGE_SCREEN_X;
      0001B8 75*01 FF         [24]  620 	mov	_Changed,#0xff
                                    621 ;	../UI_Manager/ui.c:100: return;
      0001BB 22               [24]  622 	ret
      0001BC                        623 00129$:
                                    624 ;	../UI_Manager/ui.c:104: if(action == BUTTON_FUN_BURST){
      0001BC BF 06 02         [24]  625 	cjne	r7,#0x06,00441$
      0001BF 80 03            [24]  626 	sjmp	00442$
      0001C1                        627 00441$:
      0001C1 02r02r6C         [24]  628 	ljmp	00134$
      0001C4                        629 00442$:
                                    630 ;	../UI_Manager/ui.c:106: ss = bursting & ~BURSTING;
      0001C4 74 7F            [12]  631 	mov	a,#0x7f
      0001C6 55*03            [12]  632 	anl	a,_tick_ui_bursting_65536_37
      0001C8 FE               [12]  633 	mov	r6,a
                                    634 ;	../UI_Manager/ui.c:108: exe_command(CLEAR_DISPLAY);
      0001C9 90 80 00         [24]  635 	mov	dptr,#0x8000
      0001CC C0 06            [24]  636 	push	ar6
      0001CE 12r00r00         [24]  637 	lcall	_exe_command
      0001D1 D0 06            [24]  638 	pop	ar6
                                    639 ;	../UI_Manager/ui.c:110: write_string(getString(SECRET_STRING_OFFSET + (ss % 3)*2), LINE_LENGTH, 0, LINE_0, NOT_SELECTED);
      0001D3 8E 04            [24]  640 	mov	ar4,r6
      0001D5 7D 00            [12]  641 	mov	r5,#0x00
      0001D7 75*00 03         [24]  642 	mov	__modsint_PARM_2,#0x03
                                    643 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0001DA 8D*01            [24]  644 	mov	(__modsint_PARM_2 + 1),r5
      0001DC 8C 82            [24]  645 	mov	dpl,r4
      0001DE 8D 83            [24]  646 	mov	dph,r5
      0001E0 C0 06            [24]  647 	push	ar6
      0001E2 12r00r00         [24]  648 	lcall	__modsint
      0001E5 E5 82            [12]  649 	mov	a,dpl
      0001E7 FC               [12]  650 	mov	r4,a
      0001E8 2C               [12]  651 	add	a,r4
      0001E9 FC               [12]  652 	mov	r4,a
      0001EA 24 28            [12]  653 	add	a,#0x28
      0001EC F5 82            [12]  654 	mov	dpl,a
      0001EE C0 04            [24]  655 	push	ar4
      0001F0 12r0Fr8B         [24]  656 	lcall	_getString
      0001F3 AA 82            [24]  657 	mov	r2,dpl
      0001F5 AB 83            [24]  658 	mov	r3,dph
      0001F7 AD F0            [24]  659 	mov	r5,b
      0001F9 75*00 10         [24]  660 	mov	_write_string_PARM_2,#0x10
      0001FC 75*00 00         [24]  661 	mov	_write_string_PARM_3,#0x00
      0001FF 75*00 00         [24]  662 	mov	_write_string_PARM_4,#0x00
      000202 75*00 00         [24]  663 	mov	_write_string_PARM_5,#0x00
      000205 8A 82            [24]  664 	mov	dpl,r2
      000207 8B 83            [24]  665 	mov	dph,r3
      000209 8D F0            [24]  666 	mov	b,r5
      00020B 12r00r00         [24]  667 	lcall	_write_string
      00020E D0 04            [24]  668 	pop	ar4
                                    669 ;	../UI_Manager/ui.c:111: write_string(getString(SECRET_STRING_OFFSET + (ss % 3)*2 + 1), LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      000210 74 29            [12]  670 	mov	a,#0x29
      000212 2C               [12]  671 	add	a,r4
      000213 F5 82            [12]  672 	mov	dpl,a
      000215 12r0Fr8B         [24]  673 	lcall	_getString
      000218 AB 82            [24]  674 	mov	r3,dpl
      00021A AC 83            [24]  675 	mov	r4,dph
      00021C AD F0            [24]  676 	mov	r5,b
      00021E 75*00 10         [24]  677 	mov	_write_string_PARM_2,#0x10
      000221 75*00 00         [24]  678 	mov	_write_string_PARM_3,#0x00
      000224 75*00 01         [24]  679 	mov	_write_string_PARM_4,#0x01
      000227 75*00 00         [24]  680 	mov	_write_string_PARM_5,#0x00
      00022A 8B 82            [24]  681 	mov	dpl,r3
      00022C 8C 83            [24]  682 	mov	dph,r4
      00022E 8D F0            [24]  683 	mov	b,r5
      000230 12r00r00         [24]  684 	lcall	_write_string
      000233 D0 06            [24]  685 	pop	ar6
                                    686 ;	../UI_Manager/ui.c:113: ss++;
      000235 EE               [12]  687 	mov	a,r6
      000236 04               [12]  688 	inc	a
                                    689 ;	../UI_Manager/ui.c:115: bursting |= (ss & ~BURSTING);
      000237 54 7F            [12]  690 	anl	a,#0x7f
      000239 42*03            [12]  691 	orl	_tick_ui_bursting_65536_37,a
                                    692 ;	../UI_Manager/ui.c:119: while(delay--){ ;; }
      00023B 75*04 DD         [24]  693 	mov	_tick_ui_delay_65536_37,#0xdd
      00023E 75*05 8A         [24]  694 	mov	(_tick_ui_delay_65536_37 + 1),#0x8a
      000241 75*06 14         [24]  695 	mov	(_tick_ui_delay_65536_37 + 2),#0x14
      000244 75*07 00         [24]  696 	mov	(_tick_ui_delay_65536_37 + 3),#0x00
      000247                        697 00130$:
      000247 A8*04            [24]  698 	mov	r0,_tick_ui_delay_65536_37
      000249 A9*05            [24]  699 	mov	r1,(_tick_ui_delay_65536_37 + 1)
      00024B AA*06            [24]  700 	mov	r2,(_tick_ui_delay_65536_37 + 2)
      00024D AE*07            [24]  701 	mov	r6,(_tick_ui_delay_65536_37 + 3)
      00024F 15*04            [12]  702 	dec	_tick_ui_delay_65536_37
      000251 74 FF            [12]  703 	mov	a,#0xff
      000253 B5*04 0C         [24]  704 	cjne	a,_tick_ui_delay_65536_37,00443$
      000256 15*05            [12]  705 	dec	(_tick_ui_delay_65536_37 + 1)
      000258 B5*05 07         [24]  706 	cjne	a,(_tick_ui_delay_65536_37 + 1),00443$
      00025B 15*06            [12]  707 	dec	(_tick_ui_delay_65536_37 + 2)
      00025D B5*06 02         [24]  708 	cjne	a,(_tick_ui_delay_65536_37 + 2),00443$
      000260 15*07            [12]  709 	dec	(_tick_ui_delay_65536_37 + 3)
      000262                        710 00443$:
      000262 E8               [12]  711 	mov	a,r0
      000263 49               [12]  712 	orl	a,r1
      000264 4A               [12]  713 	orl	a,r2
      000265 4E               [12]  714 	orl	a,r6
      000266 70 DF            [24]  715 	jnz	00130$
                                    716 ;	../UI_Manager/ui.c:121: Changed = CHANGE_SCREEN_X;
      000268 75*01 FF         [24]  717 	mov	_Changed,#0xff
                                    718 ;	../UI_Manager/ui.c:123: return;
      00026B 22               [24]  719 	ret
      00026C                        720 00134$:
                                    721 ;	../UI_Manager/ui.c:127: if(action == BUTTON_FUN_TIME){
      00026C BF 04 06         [24]  722 	cjne	r7,#0x04,00136$
                                    723 ;	../UI_Manager/ui.c:128: State = IDLE_STATE;
      00026F 75*00 00         [24]  724 	mov	_State,#0x00
                                    725 ;	../UI_Manager/ui.c:129: Changed = CHANGE_SCREEN_X;
      000272 75*01 FF         [24]  726 	mov	_Changed,#0xff
      000275                        727 00136$:
                                    728 ;	../UI_Manager/ui.c:134: if(Changed || 
      000275 E5*01            [12]  729 	mov	a,_Changed
      000277 70 2D            [24]  730 	jnz	00161$
                                    731 ;	../UI_Manager/ui.c:135: action == BUTTON_UP ||
      000279 BF 03 02         [24]  732 	cjne	r7,#0x03,00448$
      00027C 80 28            [24]  733 	sjmp	00161$
      00027E                        734 00448$:
                                    735 ;	../UI_Manager/ui.c:136: action == BUTTON_UP_HOLD||
      00027E BF 1E 02         [24]  736 	cjne	r7,#0x1e,00449$
      000281 80 23            [24]  737 	sjmp	00161$
      000283                        738 00449$:
                                    739 ;	../UI_Manager/ui.c:137: action == BUTTON_UP_BURST ||
      000283 BF 1F 02         [24]  740 	cjne	r7,#0x1f,00450$
      000286 80 1E            [24]  741 	sjmp	00161$
      000288                        742 00450$:
                                    743 ;	../UI_Manager/ui.c:138: action == BUTTON_DOWN ||
      000288 BF 0B 02         [24]  744 	cjne	r7,#0x0b,00451$
      00028B 80 19            [24]  745 	sjmp	00161$
      00028D                        746 00451$:
                                    747 ;	../UI_Manager/ui.c:139: action == BUTTON_DOWN_HOLD ||
      00028D BF 6E 02         [24]  748 	cjne	r7,#0x6e,00452$
      000290 80 14            [24]  749 	sjmp	00161$
      000292                        750 00452$:
                                    751 ;	../UI_Manager/ui.c:140: action == BUTTON_DOWN_BURST ||
      000292 BF 6F 02         [24]  752 	cjne	r7,#0x6f,00453$
      000295 80 0F            [24]  753 	sjmp	00161$
      000297                        754 00453$:
                                    755 ;	../UI_Manager/ui.c:141: action == BUTTON_TIMER ||
      000297 BF 01 02         [24]  756 	cjne	r7,#0x01,00454$
      00029A 80 0A            [24]  757 	sjmp	00161$
      00029C                        758 00454$:
                                    759 ;	../UI_Manager/ui.c:142: action == BUTTON_FUNCTION ||
      00029C BF 02 02         [24]  760 	cjne	r7,#0x02,00455$
      00029F 80 05            [24]  761 	sjmp	00161$
      0002A1                        762 00455$:
                                    763 ;	../UI_Manager/ui.c:143: State == IDLE_STATE){
      0002A1 E5*00            [12]  764 	mov	a,_State
      0002A3 60 01            [24]  765 	jz	00456$
      0002A5 22               [24]  766 	ret
      0002A6                        767 00456$:
      0002A6                        768 00161$:
                                    769 ;	../UI_Manager/ui.c:145: switch (State)
      0002A6 AE*00            [24]  770 	mov	r6,_State
      0002A8 BE 01 03         [24]  771 	cjne	r6,#0x01,00457$
      0002AB 02r03r3A         [24]  772 	ljmp	00138$
      0002AE                        773 00457$:
      0002AE BE 02 03         [24]  774 	cjne	r6,#0x02,00458$
      0002B1 02r03r44         [24]  775 	ljmp	00140$
      0002B4                        776 00458$:
      0002B4 BE 03 03         [24]  777 	cjne	r6,#0x03,00459$
      0002B7 02r03r3F         [24]  778 	ljmp	00139$
      0002BA                        779 00459$:
      0002BA BE 04 03         [24]  780 	cjne	r6,#0x04,00460$
      0002BD 02r03r49         [24]  781 	ljmp	00141$
      0002C0                        782 00460$:
      0002C0 BE 05 03         [24]  783 	cjne	r6,#0x05,00461$
      0002C3 02r03r4E         [24]  784 	ljmp	00142$
      0002C6                        785 00461$:
      0002C6 BE 06 03         [24]  786 	cjne	r6,#0x06,00462$
      0002C9 02r03r53         [24]  787 	ljmp	00146$
      0002CC                        788 00462$:
      0002CC BE 07 03         [24]  789 	cjne	r6,#0x07,00463$
      0002CF 02r03r53         [24]  790 	ljmp	00146$
      0002D2                        791 00463$:
      0002D2 BE 08 03         [24]  792 	cjne	r6,#0x08,00464$
      0002D5 02r03r53         [24]  793 	ljmp	00146$
      0002D8                        794 00464$:
      0002D8 BE 09 02         [24]  795 	cjne	r6,#0x09,00465$
      0002DB 80 76            [24]  796 	sjmp	00146$
      0002DD                        797 00465$:
      0002DD BE 0A 02         [24]  798 	cjne	r6,#0x0a,00466$
      0002E0 80 76            [24]  799 	sjmp	00149$
      0002E2                        800 00466$:
      0002E2 BE 0B 02         [24]  801 	cjne	r6,#0x0b,00467$
      0002E5 80 71            [24]  802 	sjmp	00149$
      0002E7                        803 00467$:
      0002E7 BE 0C 02         [24]  804 	cjne	r6,#0x0c,00468$
      0002EA 80 6C            [24]  805 	sjmp	00149$
      0002EC                        806 00468$:
      0002EC BE 0D 02         [24]  807 	cjne	r6,#0x0d,00469$
      0002EF 80 6C            [24]  808 	sjmp	00151$
      0002F1                        809 00469$:
      0002F1 BE 0E 02         [24]  810 	cjne	r6,#0x0e,00470$
      0002F4 80 67            [24]  811 	sjmp	00151$
      0002F6                        812 00470$:
      0002F6 BE 14 02         [24]  813 	cjne	r6,#0x14,00471$
      0002F9 80 67            [24]  814 	sjmp	00152$
      0002FB                        815 00471$:
      0002FB BE 15 02         [24]  816 	cjne	r6,#0x15,00472$
      0002FE 80 67            [24]  817 	sjmp	00153$
      000300                        818 00472$:
      000300 BE 45 69         [24]  819 	cjne	r6,#0x45,00154$
                                    820 ;	../UI_Manager/ui.c:150: exe_command(CLEAR_DISPLAY);
      000303 90 80 00         [24]  821 	mov	dptr,#0x8000
      000306 12r00r00         [24]  822 	lcall	_exe_command
                                    823 ;	../UI_Manager/ui.c:151: write_string("AtmosFEAR 221B", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      000309 75*00 10         [24]  824 	mov	_write_string_PARM_2,#0x10
      00030C 75*00 01         [24]  825 	mov	_write_string_PARM_3,#0x01
      00030F 75*00 00         [24]  826 	mov	_write_string_PARM_4,#0x00
      000312 75*00 00         [24]  827 	mov	_write_string_PARM_5,#0x00
      000315 90r00r55         [24]  828 	mov	dptr,#___str_6
      000318 75 F0 80         [24]  829 	mov	b,#0x80
      00031B 12r00r00         [24]  830 	lcall	_write_string
                                    831 ;	../UI_Manager/ui.c:152: write_string("By Blizzard Pro", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      00031E 75*00 10         [24]  832 	mov	_write_string_PARM_2,#0x10
      000321 75*00 00         [24]  833 	mov	_write_string_PARM_3,#0x00
      000324 75*00 01         [24]  834 	mov	_write_string_PARM_4,#0x01
      000327 75*00 00         [24]  835 	mov	_write_string_PARM_5,#0x00
      00032A 90r00r64         [24]  836 	mov	dptr,#___str_7
      00032D 75 F0 80         [24]  837 	mov	b,#0x80
      000330 12r00r00         [24]  838 	lcall	_write_string
                                    839 ;	../UI_Manager/ui.c:154: Changed = CHANGE_SCREEN_X;
      000333 75*01 FF         [24]  840 	mov	_Changed,#0xff
                                    841 ;	../UI_Manager/ui.c:155: State = IDLE_STATE;
      000336 75*00 00         [24]  842 	mov	_State,#0x00
                                    843 ;	../UI_Manager/ui.c:157: break;
                                    844 ;	../UI_Manager/ui.c:158: case MANUAL_FOG_POWER_STATE:
      000339 22               [24]  845 	ret
      00033A                        846 00138$:
                                    847 ;	../UI_Manager/ui.c:159: fogLevelPage(action);
      00033A 8F 82            [24]  848 	mov	dpl,r7
                                    849 ;	../UI_Manager/ui.c:160: break;
                                    850 ;	../UI_Manager/ui.c:161: case MANUAL_FOG_INTERVAL_STATE:
      00033C 02r06r72         [24]  851 	ljmp	_fogLevelPage
      00033F                        852 00139$:
                                    853 ;	../UI_Manager/ui.c:162: fogIntervalPage(action);
      00033F 8F 82            [24]  854 	mov	dpl,r7
                                    855 ;	../UI_Manager/ui.c:163: break;
                                    856 ;	../UI_Manager/ui.c:164: case MANUAL_FOG_DURATION_STATE:
      000341 02r07rAC         [24]  857 	ljmp	_fogIntervalPage
      000344                        858 00140$:
                                    859 ;	../UI_Manager/ui.c:165: fogDurationPage(action);
      000344 8F 82            [24]  860 	mov	dpl,r7
                                    861 ;	../UI_Manager/ui.c:166: break;
                                    862 ;	../UI_Manager/ui.c:167: case MANUAL_COLOR_MACRO_STATE:
      000346 02r08r5B         [24]  863 	ljmp	_fogDurationPage
      000349                        864 00141$:
                                    865 ;	../UI_Manager/ui.c:168: macroPage(action);
      000349 8F 82            [24]  866 	mov	dpl,r7
                                    867 ;	../UI_Manager/ui.c:169: break;
                                    868 ;	../UI_Manager/ui.c:170: case MANUAL_MACRO_SPEED_STATE:
      00034B 02r09r0A         [24]  869 	ljmp	_macroPage
      00034E                        870 00142$:
                                    871 ;	../UI_Manager/ui.c:171: macroSpeedPage(action);
      00034E 8F 82            [24]  872 	mov	dpl,r7
                                    873 ;	../UI_Manager/ui.c:172: break;
                                    874 ;	../UI_Manager/ui.c:176: case MANUAL_STROBE_STATE:
      000350 02r09rB6         [24]  875 	ljmp	_macroSpeedPage
      000353                        876 00146$:
                                    877 ;	../UI_Manager/ui.c:177: colorPage(action);
      000353 8F 82            [24]  878 	mov	dpl,r7
                                    879 ;	../UI_Manager/ui.c:178: break;
                                    880 ;	../UI_Manager/ui.c:181: case MANUAL_REMOTE_ACTION_6_STATE:
      000355 02r0Ar83         [24]  881 	ljmp	_colorPage
      000358                        882 00149$:
                                    883 ;	../UI_Manager/ui.c:182: remotePage(action);
      000358 8F 82            [24]  884 	mov	dpl,r7
                                    885 ;	../UI_Manager/ui.c:183: break;
                                    886 ;	../UI_Manager/ui.c:185: case MANUAL_SAVE_SETTINGS_STATE:
      00035A 02r0Br96         [24]  887 	ljmp	_remotePage
      00035D                        888 00151$:
                                    889 ;	../UI_Manager/ui.c:186: saveLoadPage(action);
      00035D 8F 82            [24]  890 	mov	dpl,r7
                                    891 ;	../UI_Manager/ui.c:187: break;
                                    892 ;	../UI_Manager/ui.c:188: case DMX_ADDRESS_STATE:
      00035F 02r0CrB5         [24]  893 	ljmp	_saveLoadPage
      000362                        894 00152$:
                                    895 ;	../UI_Manager/ui.c:189: dmxAddressPage(action);
      000362 8F 82            [24]  896 	mov	dpl,r7
                                    897 ;	../UI_Manager/ui.c:190: break;
                                    898 ;	../UI_Manager/ui.c:191: case DMX_CHANNEL_MODE_STATE:
      000364 02r0DrD1         [24]  899 	ljmp	_dmxAddressPage
      000367                        900 00153$:
                                    901 ;	../UI_Manager/ui.c:192: dmxChannelPage(action);
      000367 8F 82            [24]  902 	mov	dpl,r7
                                    903 ;	../UI_Manager/ui.c:193: break;
                                    904 ;	../UI_Manager/ui.c:194: default: //IDLE state
      000369 02r0Er55         [24]  905 	ljmp	_dmxChannelPage
      00036C                        906 00154$:
                                    907 ;	../UI_Manager/ui.c:195: idlePage();
      00036C C0 07            [24]  908 	push	ar7
      00036E 12r03r8C         [24]  909 	lcall	_idlePage
      000371 D0 07            [24]  910 	pop	ar7
                                    911 ;	../UI_Manager/ui.c:197: if(action == BUTTON_FUNCTION){
      000373 BF 02 09         [24]  912 	cjne	r7,#0x02,00158$
                                    913 ;	../UI_Manager/ui.c:198: set_ui_state(INC, NULL);
      000376 75*0F 00         [24]  914 	mov	_set_ui_state_PARM_2,#0x00
      000379 75 82 01         [24]  915 	mov	dpl,#0x01
      00037C 02r0ErF7         [24]  916 	ljmp	_set_ui_state
      00037F                        917 00158$:
                                    918 ;	../UI_Manager/ui.c:199: } else if(action == BUTTON_TIMER){
      00037F BF 01 09         [24]  919 	cjne	r7,#0x01,00172$
                                    920 ;	../UI_Manager/ui.c:200: set_ui_state(DEC, NULL);
      000382 75*0F 00         [24]  921 	mov	_set_ui_state_PARM_2,#0x00
      000385 75 82 02         [24]  922 	mov	dpl,#0x02
                                    923 ;	../UI_Manager/ui.c:203: }
                                    924 ;	../UI_Manager/ui.c:206: }
      000388 02r0ErF7         [24]  925 	ljmp	_set_ui_state
      00038B                        926 00172$:
      00038B 22               [24]  927 	ret
                                    928 ;------------------------------------------------------------
                                    929 ;Allocation info for local variables in function 'idlePage'
                                    930 ;------------------------------------------------------------
                                    931 ;timer                     Allocated with name '_idlePage_timer_65536_59'
                                    932 ;intervalOrDuration        Allocated with name '_idlePage_intervalOrDuration_65536_59'
                                    933 ;empty                     Allocated with name '_idlePage_empty_65536_59'
                                    934 ;tock                      Allocated with name '_idlePage_tock_65536_59'
                                    935 ;iconChange                Allocated with name '_idlePage_iconChange_65536_59'
                                    936 ;playing                   Allocated with name '_idlePage_playing_65536_59'
                                    937 ;temp                      Allocated to registers r7 
                                    938 ;------------------------------------------------------------
                                    939 ;	../UI_Manager/ui.c:208: void idlePage(){
                                    940 ;	-----------------------------------------
                                    941 ;	 function idlePage
                                    942 ;	-----------------------------------------
      00038C                        943 _idlePage:
                                    944 ;	../UI_Manager/ui.c:217: if(Changed){
      00038C E5*01            [12]  945 	mov	a,_Changed
      00038E 70 03            [24]  946 	jnz	00329$
      000390 02r04r73         [24]  947 	ljmp	00116$
      000393                        948 00329$:
                                    949 ;	../UI_Manager/ui.c:218: exe_command(CLEAR_DISPLAY);
      000393 90 80 00         [24]  950 	mov	dptr,#0x8000
      000396 12r00r00         [24]  951 	lcall	_exe_command
                                    952 ;	../UI_Manager/ui.c:219: Changed = 0x00;
      000399 75*01 00         [24]  953 	mov	_Changed,#0x00
                                    954 ;	../UI_Manager/ui.c:220: changed = 0xFF;
      00039C 75*02 FF         [24]  955 	mov	_changed,#0xff
                                    956 ;	../UI_Manager/ui.c:221: timer = 0xFF;
      00039F 75*08 FF         [24]  957 	mov	_idlePage_timer_65536_59,#0xff
                                    958 ;	../UI_Manager/ui.c:222: intervalOrDuration = 0x55; //guaranteed to not be interval or duration
      0003A2 75*09 55         [24]  959 	mov	_idlePage_intervalOrDuration_65536_59,#0x55
                                    960 ;	../UI_Manager/ui.c:225: if(get_fog_fluid_level() == TANK_EMPTY && get_heated()){
      0003A5 E5*00            [12]  961 	mov	a,_Fluid_Level
      0003A7 70 33            [24]  962 	jnz	00102$
      0003A9 E5*00            [12]  963 	mov	a,_Heat_Flag
      0003AB 30 E7 2E         [24]  964 	jnb	acc.7,00102$
                                    965 ;	../UI_Manager/ui.c:227: write_string("PC Load Letter", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      0003AE 75*00 10         [24]  966 	mov	_write_string_PARM_2,#0x10
      0003B1 75*00 01         [24]  967 	mov	_write_string_PARM_3,#0x01
      0003B4 75*00 00         [24]  968 	mov	_write_string_PARM_4,#0x00
      0003B7 75*00 00         [24]  969 	mov	_write_string_PARM_5,#0x00
      0003BA 90r00r74         [24]  970 	mov	dptr,#___str_8
      0003BD 75 F0 80         [24]  971 	mov	b,#0x80
      0003C0 12r00r00         [24]  972 	lcall	_write_string
                                    973 ;	../UI_Manager/ui.c:228: write_string("Burst to Refill", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      0003C3 75*00 10         [24]  974 	mov	_write_string_PARM_2,#0x10
      0003C6 75*00 00         [24]  975 	mov	_write_string_PARM_3,#0x00
      0003C9 75*00 01         [24]  976 	mov	_write_string_PARM_4,#0x01
      0003CC 75*00 00         [24]  977 	mov	_write_string_PARM_5,#0x00
      0003CF 90r00r83         [24]  978 	mov	dptr,#___str_9
      0003D2 75 F0 80         [24]  979 	mov	b,#0x80
      0003D5 12r00r00         [24]  980 	lcall	_write_string
                                    981 ;	../UI_Manager/ui.c:230: empty = 0xFF;
      0003D8 75*0A FF         [24]  982 	mov	_idlePage_empty_65536_59,#0xff
                                    983 ;	../UI_Manager/ui.c:232: return;
      0003DB 22               [24]  984 	ret
      0003DC                        985 00102$:
                                    986 ;	../UI_Manager/ui.c:235: if(empty){
      0003DC E5*0A            [12]  987 	mov	a,_idlePage_empty_65536_59
      0003DE 60 0C            [24]  988 	jz	00107$
                                    989 ;	../UI_Manager/ui.c:236: if(get_fog_fluid_level() == TANK_FULL){
      0003E0 74 01            [12]  990 	mov	a,#0x01
      0003E2 B5*00 06         [24]  991 	cjne	a,_Fluid_Level,00105$
                                    992 ;	../UI_Manager/ui.c:237: empty = 0x00;
      0003E5 75*0A 00         [24]  993 	mov	_idlePage_empty_65536_59,#0x00
                                    994 ;	../UI_Manager/ui.c:238: Changed = CHANGE_SCREEN_X;
      0003E8 75*01 FF         [24]  995 	mov	_Changed,#0xff
      0003EB                        996 00105$:
                                    997 ;	../UI_Manager/ui.c:241: return;
      0003EB 22               [24]  998 	ret
      0003EC                        999 00107$:
                                   1000 ;	../UI_Manager/ui.c:244: if(get_runtime_data(OP_MODE_INDEX)){ /* Manual Mode */
      0003EC 75 82 10         [24] 1001 	mov	dpl,#0x10
      0003EF 12r00r00         [24] 1002 	lcall	_get_runtime_data
      0003F2 E5 82            [12] 1003 	mov	a,dpl
      0003F4 60 17            [24] 1004 	jz	00113$
                                   1005 ;	../UI_Manager/ui.c:245: write_string("Manual Mode", LINE_LENGTH, 1, LINE_0, NOT_SELECTED);
      0003F6 75*00 10         [24] 1006 	mov	_write_string_PARM_2,#0x10
      0003F9 75*00 01         [24] 1007 	mov	_write_string_PARM_3,#0x01
      0003FC 75*00 00         [24] 1008 	mov	_write_string_PARM_4,#0x00
      0003FF 75*00 00         [24] 1009 	mov	_write_string_PARM_5,#0x00
      000402 90r00r93         [24] 1010 	mov	dptr,#___str_10
      000405 75 F0 80         [24] 1011 	mov	b,#0x80
      000408 12r00r00         [24] 1012 	lcall	_write_string
      00040B 80 66            [24] 1013 	sjmp	00116$
      00040D                       1014 00113$:
                                   1015 ;	../UI_Manager/ui.c:248: write_number(get_dmx_address(), 4, LINE_1, NOT_SELECTED);
      00040D 12r00r00         [24] 1016 	lcall	_get_dmx_address
      000410 75*00 04         [24] 1017 	mov	_write_number_PARM_2,#0x04
      000413 75*00 01         [24] 1018 	mov	_write_number_PARM_3,#0x01
      000416 75*00 00         [24] 1019 	mov	_write_number_PARM_4,#0x00
      000419 12r00r00         [24] 1020 	lcall	_write_number
                                   1021 ;	../UI_Manager/ui.c:249: switch (get_runtime_data(MODE_INDEX))
      00041C 75 82 0E         [24] 1022 	mov	dpl,#0x0e
      00041F 12r00r00         [24] 1023 	lcall	_get_runtime_data
      000422 AF 82            [24] 1024 	mov	r7,dpl
      000424 BF 01 02         [24] 1025 	cjne	r7,#0x01,00336$
      000427 80 05            [24] 1026 	sjmp	00108$
      000429                       1027 00336$:
                                   1028 ;	../UI_Manager/ui.c:251: case OPTION_DMX_MODE_3:
      000429 BF 02 0A         [24] 1029 	cjne	r7,#0x02,00110$
      00042C 80 04            [24] 1030 	sjmp	00109$
      00042E                       1031 00108$:
                                   1032 ;	../UI_Manager/ui.c:252: temp = 3;
      00042E 7F 03            [12] 1033 	mov	r7,#0x03
                                   1034 ;	../UI_Manager/ui.c:253: break;
                                   1035 ;	../UI_Manager/ui.c:254: case OPTION_DMX_MODE_1: 
      000430 80 06            [24] 1036 	sjmp	00111$
      000432                       1037 00109$:
                                   1038 ;	../UI_Manager/ui.c:255: temp = 1;
      000432 7F 01            [12] 1039 	mov	r7,#0x01
                                   1040 ;	../UI_Manager/ui.c:256: break;
                                   1041 ;	../UI_Manager/ui.c:257: default:
      000434 80 02            [24] 1042 	sjmp	00111$
      000436                       1043 00110$:
                                   1044 ;	../UI_Manager/ui.c:258: temp = 10;
      000436 7F 0A            [12] 1045 	mov	r7,#0x0a
                                   1046 ;	../UI_Manager/ui.c:260: }
      000438                       1047 00111$:
                                   1048 ;	../UI_Manager/ui.c:261: write_number(temp, 12, LINE_1, NOT_SELECTED);
      000438 7E 00            [12] 1049 	mov	r6,#0x00
      00043A 75*00 0C         [24] 1050 	mov	_write_number_PARM_2,#0x0c
      00043D 75*00 01         [24] 1051 	mov	_write_number_PARM_3,#0x01
                                   1052 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000440 8E*00            [24] 1053 	mov	_write_number_PARM_4,r6
      000442 8F 82            [24] 1054 	mov	dpl,r7
      000444 8E 83            [24] 1055 	mov	dph,r6
      000446 12r00r00         [24] 1056 	lcall	_write_number
                                   1057 ;	../UI_Manager/ui.c:263: write_string("Addr", sizeof("Addr") - 1, 0, LINE_1, NOT_SELECTED);
      000449 75*00 04         [24] 1058 	mov	_write_string_PARM_2,#0x04
      00044C 75*00 00         [24] 1059 	mov	_write_string_PARM_3,#0x00
      00044F 75*00 01         [24] 1060 	mov	_write_string_PARM_4,#0x01
      000452 75*00 00         [24] 1061 	mov	_write_string_PARM_5,#0x00
      000455 90r00r9F         [24] 1062 	mov	dptr,#___str_11
      000458 75 F0 80         [24] 1063 	mov	b,#0x80
      00045B 12r00r00         [24] 1064 	lcall	_write_string
                                   1065 ;	../UI_Manager/ui.c:264: write_string("Mode", sizeof("Mode") - 1, 9, LINE_1, NOT_SELECTED);
      00045E 75*00 04         [24] 1066 	mov	_write_string_PARM_2,#0x04
      000461 75*00 09         [24] 1067 	mov	_write_string_PARM_3,#0x09
      000464 75*00 01         [24] 1068 	mov	_write_string_PARM_4,#0x01
      000467 75*00 00         [24] 1069 	mov	_write_string_PARM_5,#0x00
      00046A 90r00rA4         [24] 1070 	mov	dptr,#___str_12
      00046D 75 F0 80         [24] 1071 	mov	b,#0x80
      000470 12r00r00         [24] 1072 	lcall	_write_string
      000473                       1073 00116$:
                                   1074 ;	../UI_Manager/ui.c:272: tock++;
      000473 05*0B            [12] 1075 	inc	_idlePage_tock_65536_59
                                   1076 ;	../UI_Manager/ui.c:273: if(get_playing() == PLAY){
      000475 74 01            [12] 1077 	mov	a,#0x01
      000477 B5*00 55         [24] 1078 	cjne	a,_Playing,00134$
                                   1079 ;	../UI_Manager/ui.c:274: if(playing == PAUSE){
      00047A E5*0D            [12] 1080 	mov	a,_idlePage_playing_65536_59
                                   1081 ;	../UI_Manager/ui.c:275: iconChange |= PLAY_CHANGE;
      00047C 70 08            [24] 1082 	jnz	00118$
      00047E AE*0C            [24] 1083 	mov	r6,_idlePage_iconChange_65536_59
      000480 FF               [12] 1084 	mov	r7,a
      000481 43 06 20         [24] 1085 	orl	ar6,#0x20
      000484 8E*0C            [24] 1086 	mov	_idlePage_iconChange_65536_59,r6
      000486                       1087 00118$:
                                   1088 ;	../UI_Manager/ui.c:278: if(get_interval_or_duration() == INTERVAL){
      000486 E5*00            [12] 1089 	mov	a,_Interval_Or_Duration
      000488 70 16            [24] 1090 	jnz	00127$
                                   1091 ;	../UI_Manager/ui.c:280: if(iconChange & PLAY_CHANGE){
      00048A E5*0C            [12] 1092 	mov	a,_idlePage_iconChange_65536_59
      00048C 30 E5 35         [24] 1093 	jnb	acc.5,00128$
                                   1094 ;	../UI_Manager/ui.c:281: write_char(CHAR_PLAY, PLAY_ICON_INDEX, LINE_0);
      00048F 75*00 0E         [24] 1095 	mov	_write_char_PARM_2,#0x0e
      000492 75*00 00         [24] 1096 	mov	_write_char_PARM_3,#0x00
      000495 75 82 80         [24] 1097 	mov	dpl,#0x80
      000498 12r00r00         [24] 1098 	lcall	_write_char
                                   1099 ;	../UI_Manager/ui.c:282: iconChange &= ~PLAY_CHANGE;
      00049B 53*0C DF         [24] 1100 	anl	_idlePage_iconChange_65536_59,#0xdf
      00049E 80 24            [24] 1101 	sjmp	00128$
      0004A0                       1102 00127$:
                                   1103 ;	../UI_Manager/ui.c:286: if(tock == 0x80 + 55){ //blink if fogging
      0004A0 74 B7            [12] 1104 	mov	a,#0xb7
      0004A2 B5*0B 0E         [24] 1105 	cjne	a,_idlePage_tock_65536_59,00124$
                                   1106 ;	../UI_Manager/ui.c:287: write_char(CHAR_PLAY, PLAY_ICON_INDEX, LINE_0);
      0004A5 75*00 0E         [24] 1107 	mov	_write_char_PARM_2,#0x0e
      0004A8 75*00 00         [24] 1108 	mov	_write_char_PARM_3,#0x00
      0004AB 75 82 80         [24] 1109 	mov	dpl,#0x80
      0004AE 12r00r00         [24] 1110 	lcall	_write_char
      0004B1 80 11            [24] 1111 	sjmp	00128$
      0004B3                       1112 00124$:
                                   1113 ;	../UI_Manager/ui.c:288: } else if(tock == 0x08 + 55){
      0004B3 74 3F            [12] 1114 	mov	a,#0x3f
      0004B5 B5*0B 0C         [24] 1115 	cjne	a,_idlePage_tock_65536_59,00128$
                                   1116 ;	../UI_Manager/ui.c:289: write_char(CHAR_NULL, PLAY_ICON_INDEX, LINE_0);
      0004B8 75*00 0E         [24] 1117 	mov	_write_char_PARM_2,#0x0e
      0004BB 75*00 00         [24] 1118 	mov	_write_char_PARM_3,#0x00
      0004BE 75 82 04         [24] 1119 	mov	dpl,#0x04
      0004C1 12r00r00         [24] 1120 	lcall	_write_char
      0004C4                       1121 00128$:
                                   1122 ;	../UI_Manager/ui.c:292: iconChange |= PAUSE_CHANGE;
      0004C4 AE*0C            [24] 1123 	mov	r6,_idlePage_iconChange_65536_59
      0004C6 7F 00            [12] 1124 	mov	r7,#0x00
      0004C8 43 06 10         [24] 1125 	orl	ar6,#0x10
      0004CB 8E*0C            [24] 1126 	mov	_idlePage_iconChange_65536_59,r6
      0004CD 80 2E            [24] 1127 	sjmp	00135$
      0004CF                       1128 00134$:
                                   1129 ;	../UI_Manager/ui.c:294: if(playing == PLAY){
      0004CF 74 01            [12] 1130 	mov	a,#0x01
      0004D1 B5*0D 09         [24] 1131 	cjne	a,_idlePage_playing_65536_59,00130$
                                   1132 ;	../UI_Manager/ui.c:295: iconChange |= PAUSE_CHANGE;
      0004D4 AE*0C            [24] 1133 	mov	r6,_idlePage_iconChange_65536_59
      0004D6 7F 00            [12] 1134 	mov	r7,#0x00
      0004D8 43 06 10         [24] 1135 	orl	ar6,#0x10
      0004DB 8E*0C            [24] 1136 	mov	_idlePage_iconChange_65536_59,r6
      0004DD                       1137 00130$:
                                   1138 ;	../UI_Manager/ui.c:298: if(iconChange & PAUSE_CHANGE){
      0004DD E5*0C            [12] 1139 	mov	a,_idlePage_iconChange_65536_59
      0004DF 30 E4 18         [24] 1140 	jnb	acc.4,00132$
                                   1141 ;	../UI_Manager/ui.c:299: write_char(CHAR_NULL, PLAY_ICON_INDEX, LINE_0);
      0004E2 75*00 0E         [24] 1142 	mov	_write_char_PARM_2,#0x0e
      0004E5 75*00 00         [24] 1143 	mov	_write_char_PARM_3,#0x00
      0004E8 75 82 04         [24] 1144 	mov	dpl,#0x04
      0004EB 12r00r00         [24] 1145 	lcall	_write_char
                                   1146 ;	../UI_Manager/ui.c:300: iconChange |= PLAY_CHANGE;
      0004EE AE*0C            [24] 1147 	mov	r6,_idlePage_iconChange_65536_59
      0004F0 7F 00            [12] 1148 	mov	r7,#0x00
      0004F2 43 06 20         [24] 1149 	orl	ar6,#0x20
      0004F5 8E*0C            [24] 1150 	mov	_idlePage_iconChange_65536_59,r6
                                   1151 ;	../UI_Manager/ui.c:301: iconChange &= ~PAUSE_CHANGE;
      0004F7 53*0C EF         [24] 1152 	anl	_idlePage_iconChange_65536_59,#0xef
      0004FA                       1153 00132$:
                                   1154 ;	../UI_Manager/ui.c:304: playing = PAUSE;
      0004FA 75*0D 00         [24] 1155 	mov	_idlePage_playing_65536_59,#0x00
      0004FD                       1156 00135$:
                                   1157 ;	../UI_Manager/ui.c:307: if(get_heater_enabled()){
      0004FD E5*00            [12] 1158 	mov	a,_Heat_Flag
      0004FF 20 E4 5E         [24] 1159 	jb	acc.4,00149$
                                   1160 ;	../UI_Manager/ui.c:308: if(get_heated()){
      000502 E5*00            [12] 1161 	mov	a,_Heat_Flag
      000504 30 E7 16         [24] 1162 	jnb	acc.7,00144$
                                   1163 ;	../UI_Manager/ui.c:309: if(iconChange & HEATED_CHANGE){
      000507 E5*0C            [12] 1164 	mov	a,_idlePage_iconChange_65536_59
      000509 30 E0 49         [24] 1165 	jnb	acc.0,00145$
                                   1166 ;	../UI_Manager/ui.c:310: write_char(CHAR_HEATED, HEAT_ICON_INDEX, LINE_0);
      00050C 75*00 0F         [24] 1167 	mov	_write_char_PARM_2,#0x0f
      00050F 75*00 00         [24] 1168 	mov	_write_char_PARM_3,#0x00
      000512 75 82 60         [24] 1169 	mov	dpl,#0x60
      000515 12r00r00         [24] 1170 	lcall	_write_char
                                   1171 ;	../UI_Manager/ui.c:311: iconChange &= ~HEATED_CHANGE;
      000518 53*0C FE         [24] 1172 	anl	_idlePage_iconChange_65536_59,#0xfe
      00051B 80 38            [24] 1173 	sjmp	00145$
      00051D                       1174 00144$:
                                   1175 ;	../UI_Manager/ui.c:314: if(!(tock)){
      00051D E5*0B            [12] 1176 	mov	a,_idlePage_tock_65536_59
      00051F 70 2B            [24] 1177 	jnz	00142$
                                   1178 ;	../UI_Manager/ui.c:315: if(iconChange & HEATING_CHANGE){
      000521 E5*0C            [12] 1179 	mov	a,_idlePage_iconChange_65536_59
      000523 30 E1 11         [24] 1180 	jnb	acc.1,00139$
                                   1181 ;	../UI_Manager/ui.c:316: write_char(CHAR_NULL, HEAT_ICON_INDEX, LINE_0);
      000526 75*00 0F         [24] 1182 	mov	_write_char_PARM_2,#0x0f
      000529 75*00 00         [24] 1183 	mov	_write_char_PARM_3,#0x00
      00052C 75 82 04         [24] 1184 	mov	dpl,#0x04
      00052F 12r00r00         [24] 1185 	lcall	_write_char
                                   1186 ;	../UI_Manager/ui.c:317: iconChange &= ~HEATING_CHANGE;
      000532 53*0C FD         [24] 1187 	anl	_idlePage_iconChange_65536_59,#0xfd
      000535 80 15            [24] 1188 	sjmp	00142$
      000537                       1189 00139$:
                                   1190 ;	../UI_Manager/ui.c:319: write_char(CHAR_HEATING, HEAT_ICON_INDEX, LINE_0);
      000537 75*00 0F         [24] 1191 	mov	_write_char_PARM_2,#0x0f
      00053A 75*00 00         [24] 1192 	mov	_write_char_PARM_3,#0x00
      00053D 75 82 A0         [24] 1193 	mov	dpl,#0xa0
      000540 12r00r00         [24] 1194 	lcall	_write_char
                                   1195 ;	../UI_Manager/ui.c:320: iconChange |= HEATING_CHANGE;
      000543 AE*0C            [24] 1196 	mov	r6,_idlePage_iconChange_65536_59
      000545 7F 00            [12] 1197 	mov	r7,#0x00
      000547 43 06 02         [24] 1198 	orl	ar6,#0x02
      00054A 8E*0C            [24] 1199 	mov	_idlePage_iconChange_65536_59,r6
      00054C                       1200 00142$:
                                   1201 ;	../UI_Manager/ui.c:323: iconChange |= HEATED_CHANGE;
      00054C AE*0C            [24] 1202 	mov	r6,_idlePage_iconChange_65536_59
      00054E 7F 00            [12] 1203 	mov	r7,#0x00
      000550 43 06 01         [24] 1204 	orl	ar6,#0x01
      000553 8E*0C            [24] 1205 	mov	_idlePage_iconChange_65536_59,r6
      000555                       1206 00145$:
                                   1207 ;	../UI_Manager/ui.c:325: iconChange |= HEATER_CHANGE;
      000555 AE*0C            [24] 1208 	mov	r6,_idlePage_iconChange_65536_59
      000557 7F 00            [12] 1209 	mov	r7,#0x00
      000559 43 06 08         [24] 1210 	orl	ar6,#0x08
      00055C 8E*0C            [24] 1211 	mov	_idlePage_iconChange_65536_59,r6
      00055E 80 17            [24] 1212 	sjmp	00150$
      000560                       1213 00149$:
                                   1214 ;	../UI_Manager/ui.c:327: if(iconChange & HEATER_CHANGE){
      000560 E5*0C            [12] 1215 	mov	a,_idlePage_iconChange_65536_59
      000562 30 E3 0F         [24] 1216 	jnb	acc.3,00147$
                                   1217 ;	../UI_Manager/ui.c:328: write_char(CHAR_HEATER_OFF, HEAT_ICON_INDEX, LINE_0);
      000565 75*00 0F         [24] 1218 	mov	_write_char_PARM_2,#0x0f
      000568 75*00 00         [24] 1219 	mov	_write_char_PARM_3,#0x00
      00056B 75 82 00         [24] 1220 	mov	dpl,#0x00
      00056E 12r00r00         [24] 1221 	lcall	_write_char
                                   1222 ;	../UI_Manager/ui.c:329: iconChange &= ~HEATER_CHANGE;
      000571 53*0C F7         [24] 1223 	anl	_idlePage_iconChange_65536_59,#0xf7
      000574                       1224 00147$:
                                   1225 ;	../UI_Manager/ui.c:331: iconChange |= HEATER_CHANGE | HEATED_CHANGE;
      000574 43*0C 09         [24] 1226 	orl	_idlePage_iconChange_65536_59,#0x09
      000577                       1227 00150$:
                                   1228 ;	../UI_Manager/ui.c:336: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      000577 75 82 10         [24] 1229 	mov	dpl,#0x10
      00057A 12r00r00         [24] 1230 	lcall	_get_runtime_data
      00057D E5 82            [12] 1231 	mov	a,dpl
      00057F 60 03            [24] 1232 	jz	00356$
      000581 02r06r12         [24] 1233 	ljmp	00168$
      000584                       1234 00356$:
                                   1235 ;	../UI_Manager/ui.c:339: if(has_dmx()){
      000584 E5*00            [12] 1236 	mov	a,_Has_DMX
      000586 60 28            [24] 1237 	jz	00156$
                                   1238 ;	../UI_Manager/ui.c:340: if(changed & DMX_OK_CHANGE){
      000588 E5*02            [12] 1239 	mov	a,_changed
      00058A 30 E7 49         [24] 1240 	jnb	acc.7,00157$
                                   1241 ;	../UI_Manager/ui.c:341: write_string("DMX Ok", sizeof("DMX Ok") - 1, 1, LINE_0, NOT_SELECTED);
      00058D 75*00 06         [24] 1242 	mov	_write_string_PARM_2,#0x06
      000590 75*00 01         [24] 1243 	mov	_write_string_PARM_3,#0x01
      000593 75*00 00         [24] 1244 	mov	_write_string_PARM_4,#0x00
      000596 75*00 00         [24] 1245 	mov	_write_string_PARM_5,#0x00
      000599 90r00rA9         [24] 1246 	mov	dptr,#___str_13
      00059C 75 F0 80         [24] 1247 	mov	b,#0x80
      00059F 12r00r00         [24] 1248 	lcall	_write_string
                                   1249 ;	../UI_Manager/ui.c:342: changed |= NO_DMX_CHANGE;
      0005A2 AE*02            [24] 1250 	mov	r6,_changed
      0005A4 7F 00            [12] 1251 	mov	r7,#0x00
      0005A6 43 06 40         [24] 1252 	orl	ar6,#0x40
      0005A9 8E*02            [24] 1253 	mov	_changed,r6
                                   1254 ;	../UI_Manager/ui.c:343: changed &= ~DMX_OK_CHANGE;
      0005AB 53*02 7F         [24] 1255 	anl	_changed,#0x7f
      0005AE 80 26            [24] 1256 	sjmp	00157$
      0005B0                       1257 00156$:
                                   1258 ;	../UI_Manager/ui.c:346: if(changed & NO_DMX_CHANGE){
      0005B0 E5*02            [12] 1259 	mov	a,_changed
      0005B2 30 E6 21         [24] 1260 	jnb	acc.6,00157$
                                   1261 ;	../UI_Manager/ui.c:347: write_string("No DMX", sizeof("No DMX") - 1, 1, LINE_0, NOT_SELECTED);
      0005B5 75*00 06         [24] 1262 	mov	_write_string_PARM_2,#0x06
      0005B8 75*00 01         [24] 1263 	mov	_write_string_PARM_3,#0x01
      0005BB 75*00 00         [24] 1264 	mov	_write_string_PARM_4,#0x00
      0005BE 75*00 00         [24] 1265 	mov	_write_string_PARM_5,#0x00
      0005C1 90r00rB0         [24] 1266 	mov	dptr,#___str_14
      0005C4 75 F0 80         [24] 1267 	mov	b,#0x80
      0005C7 12r00r00         [24] 1268 	lcall	_write_string
                                   1269 ;	../UI_Manager/ui.c:348: changed |= DMX_OK_CHANGE;
      0005CA AE*02            [24] 1270 	mov	r6,_changed
      0005CC 7F 00            [12] 1271 	mov	r7,#0x00
      0005CE 43 06 80         [24] 1272 	orl	ar6,#0x80
      0005D1 8E*02            [24] 1273 	mov	_changed,r6
                                   1274 ;	../UI_Manager/ui.c:349: changed &= ~NO_DMX_CHANGE;
      0005D3 53*02 BF         [24] 1275 	anl	_changed,#0xbf
      0005D6                       1276 00157$:
                                   1277 ;	../UI_Manager/ui.c:353: temp = get_timer();
                                   1278 ;	../UI_Manager/ui.c:356: if(timer != temp){
      0005D6 E5*00            [12] 1279 	mov	a,_Timer
      0005D8 FF               [12] 1280 	mov	r7,a
      0005D9 B5*08 01         [24] 1281 	cjne	a,_idlePage_timer_65536_59,00360$
      0005DC 22               [24] 1282 	ret
      0005DD                       1283 00360$:
                                   1284 ;	../UI_Manager/ui.c:358: write_number(temp, 7, LINE_0, NOT_SELECTED);
      0005DD 8F 05            [24] 1285 	mov	ar5,r7
      0005DF 7E 00            [12] 1286 	mov	r6,#0x00
      0005E1 75*00 07         [24] 1287 	mov	_write_number_PARM_2,#0x07
                                   1288 ;	1-genFromRTrack replaced	mov	_write_number_PARM_3,#0x00
      0005E4 8E*00            [24] 1289 	mov	_write_number_PARM_3,r6
                                   1290 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      0005E6 8E*00            [24] 1291 	mov	_write_number_PARM_4,r6
      0005E8 8D 82            [24] 1292 	mov	dpl,r5
      0005EA 8E 83            [24] 1293 	mov	dph,r6
      0005EC C0 07            [24] 1294 	push	ar7
      0005EE 12r00r00         [24] 1295 	lcall	_write_number
      0005F1 D0 07            [24] 1296 	pop	ar7
                                   1297 ;	../UI_Manager/ui.c:359: write_char((get_interval_or_duration() == INTERVAL) ? CHAR_I : CHAR_D, 11, LINE_0);
      0005F3 E5*00            [12] 1298 	mov	a,_Interval_Or_Duration
      0005F5 70 05            [24] 1299 	jnz	00172$
      0005F7 7D 92            [12] 1300 	mov	r5,#0x92
      0005F9 FE               [12] 1301 	mov	r6,a
      0005FA 80 04            [24] 1302 	sjmp	00173$
      0005FC                       1303 00172$:
      0005FC 7D 22            [12] 1304 	mov	r5,#0x22
      0005FE 7E 00            [12] 1305 	mov	r6,#0x00
      000600                       1306 00173$:
      000600 8D 82            [24] 1307 	mov	dpl,r5
      000602 75*00 0B         [24] 1308 	mov	_write_char_PARM_2,#0x0b
      000605 75*00 00         [24] 1309 	mov	_write_char_PARM_3,#0x00
      000608 C0 07            [24] 1310 	push	ar7
      00060A 12r00r00         [24] 1311 	lcall	_write_char
      00060D D0 07            [24] 1312 	pop	ar7
                                   1313 ;	../UI_Manager/ui.c:361: timer = temp;
      00060F 8F*08            [24] 1314 	mov	_idlePage_timer_65536_59,r7
      000611 22               [24] 1315 	ret
      000612                       1316 00168$:
                                   1317 ;	../UI_Manager/ui.c:366: temp = get_interval_or_duration();
                                   1318 ;	../UI_Manager/ui.c:368: if(intervalOrDuration != temp){
      000612 E5*00            [12] 1319 	mov	a,_Interval_Or_Duration
      000614 FF               [12] 1320 	mov	r7,a
      000615 B5*09 02         [24] 1321 	cjne	a,_idlePage_intervalOrDuration_65536_59,00362$
      000618 80 37            [24] 1322 	sjmp	00164$
      00061A                       1323 00362$:
                                   1324 ;	../UI_Manager/ui.c:369: if(temp == INTERVAL){
      00061A EF               [12] 1325 	mov	a,r7
                                   1326 ;	../UI_Manager/ui.c:370: write_string("Interval", sizeof("Interval"), 0, LINE_1, NOT_SELECTED);
      00061B 70 19            [24] 1327 	jnz	00161$
      00061D 75*00 09         [24] 1328 	mov	_write_string_PARM_2,#0x09
      000620 F5*00            [12] 1329 	mov	_write_string_PARM_3,a
      000622 75*00 01         [24] 1330 	mov	_write_string_PARM_4,#0x01
      000625 F5*00            [12] 1331 	mov	_write_string_PARM_5,a
      000627 90r00rB7         [24] 1332 	mov	dptr,#___str_15
      00062A 75 F0 80         [24] 1333 	mov	b,#0x80
      00062D C0 07            [24] 1334 	push	ar7
      00062F 12r00r00         [24] 1335 	lcall	_write_string
      000632 D0 07            [24] 1336 	pop	ar7
      000634 80 19            [24] 1337 	sjmp	00162$
      000636                       1338 00161$:
                                   1339 ;	../UI_Manager/ui.c:372: write_string("Duration", sizeof("Duration"), 0, LINE_1, NOT_SELECTED);
      000636 75*00 09         [24] 1340 	mov	_write_string_PARM_2,#0x09
      000639 75*00 00         [24] 1341 	mov	_write_string_PARM_3,#0x00
      00063C 75*00 01         [24] 1342 	mov	_write_string_PARM_4,#0x01
      00063F 75*00 00         [24] 1343 	mov	_write_string_PARM_5,#0x00
      000642 90r00rC0         [24] 1344 	mov	dptr,#___str_16
      000645 75 F0 80         [24] 1345 	mov	b,#0x80
      000648 C0 07            [24] 1346 	push	ar7
      00064A 12r00r00         [24] 1347 	lcall	_write_string
      00064D D0 07            [24] 1348 	pop	ar7
      00064F                       1349 00162$:
                                   1350 ;	../UI_Manager/ui.c:375: intervalOrDuration = temp;
      00064F 8F*09            [24] 1351 	mov	_idlePage_intervalOrDuration_65536_59,r7
      000651                       1352 00164$:
                                   1353 ;	../UI_Manager/ui.c:378: temp = get_timer();
                                   1354 ;	../UI_Manager/ui.c:380: if(timer != temp){
      000651 E5*00            [12] 1355 	mov	a,_Timer
      000653 FF               [12] 1356 	mov	r7,a
      000654 B5*08 01         [24] 1357 	cjne	a,_idlePage_timer_65536_59,00364$
      000657 22               [24] 1358 	ret
      000658                       1359 00364$:
                                   1360 ;	../UI_Manager/ui.c:382: write_number(temp, NUMBER_END_INDEX, LINE_1, NOT_SELECTED);
      000658 8F 05            [24] 1361 	mov	ar5,r7
      00065A 7E 00            [12] 1362 	mov	r6,#0x00
      00065C 75*00 0C         [24] 1363 	mov	_write_number_PARM_2,#0x0c
      00065F 75*00 01         [24] 1364 	mov	_write_number_PARM_3,#0x01
                                   1365 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000662 8E*00            [24] 1366 	mov	_write_number_PARM_4,r6
      000664 8D 82            [24] 1367 	mov	dpl,r5
      000666 8E 83            [24] 1368 	mov	dph,r6
      000668 C0 07            [24] 1369 	push	ar7
      00066A 12r00r00         [24] 1370 	lcall	_write_number
      00066D D0 07            [24] 1371 	pop	ar7
                                   1372 ;	../UI_Manager/ui.c:384: timer = temp;
      00066F 8F*08            [24] 1373 	mov	_idlePage_timer_65536_59,r7
                                   1374 ;	../UI_Manager/ui.c:388: }
      000671 22               [24] 1375 	ret
                                   1376 ;------------------------------------------------------------
                                   1377 ;Allocation info for local variables in function 'fogLevelPage'
                                   1378 ;------------------------------------------------------------
                                   1379 ;action                    Allocated to registers r7 
                                   1380 ;------------------------------------------------------------
                                   1381 ;	../UI_Manager/ui.c:390: void fogLevelPage(uint8_t action){
                                   1382 ;	-----------------------------------------
                                   1383 ;	 function fogLevelPage
                                   1384 ;	-----------------------------------------
      000672                       1385 _fogLevelPage:
      000672 AF 82            [24] 1386 	mov	r7,dpl
                                   1387 ;	../UI_Manager/ui.c:392: switch (action)
      000674 BF 01 02         [24] 1388 	cjne	r7,#0x01,00152$
      000677 80 3A            [24] 1389 	sjmp	00104$
      000679                       1390 00152$:
      000679 BF 02 02         [24] 1391 	cjne	r7,#0x02,00153$
      00067C 80 2C            [24] 1392 	sjmp	00103$
      00067E                       1393 00153$:
      00067E BF 03 02         [24] 1394 	cjne	r7,#0x03,00154$
      000681 80 05            [24] 1395 	sjmp	00101$
      000683                       1396 00154$:
                                   1397 ;	../UI_Manager/ui.c:394: case BUTTON_UP:
      000683 BF 0B 36         [24] 1398 	cjne	r7,#0x0b,00105$
      000686 80 11            [24] 1399 	sjmp	00102$
      000688                       1400 00101$:
                                   1401 ;	../UI_Manager/ui.c:395: set_runtime_data(FOG_POWER_INDEX, INC, NULL);
      000688 75*00 01         [24] 1402 	mov	_set_runtime_data_PARM_2,#0x01
      00068B 75*00 00         [24] 1403 	mov	_set_runtime_data_PARM_3,#0x00
      00068E 75 82 00         [24] 1404 	mov	dpl,#0x00
      000691 12r00r00         [24] 1405 	lcall	_set_runtime_data
                                   1406 ;	../UI_Manager/ui.c:396: changed = 0xFF;
      000694 75*02 FF         [24] 1407 	mov	_changed,#0xff
                                   1408 ;	../UI_Manager/ui.c:397: break;
                                   1409 ;	../UI_Manager/ui.c:398: case BUTTON_DOWN:
      000697 80 23            [24] 1410 	sjmp	00105$
      000699                       1411 00102$:
                                   1412 ;	../UI_Manager/ui.c:399: set_runtime_data(FOG_POWER_INDEX, DEC, NULL);
      000699 75*00 02         [24] 1413 	mov	_set_runtime_data_PARM_2,#0x02
      00069C 75*00 00         [24] 1414 	mov	_set_runtime_data_PARM_3,#0x00
      00069F 75 82 00         [24] 1415 	mov	dpl,#0x00
      0006A2 12r00r00         [24] 1416 	lcall	_set_runtime_data
                                   1417 ;	../UI_Manager/ui.c:400: changed = 0xFF;  
      0006A5 75*02 FF         [24] 1418 	mov	_changed,#0xff
                                   1419 ;	../UI_Manager/ui.c:401: break;
                                   1420 ;	../UI_Manager/ui.c:402: case BUTTON_FUNCTION:
      0006A8 80 12            [24] 1421 	sjmp	00105$
      0006AA                       1422 00103$:
                                   1423 ;	../UI_Manager/ui.c:403: set_ui_state(INC, NULL);
      0006AA 75*0F 00         [24] 1424 	mov	_set_ui_state_PARM_2,#0x00
      0006AD 75 82 01         [24] 1425 	mov	dpl,#0x01
                                   1426 ;	../UI_Manager/ui.c:404: return;
      0006B0 02r0ErF7         [24] 1427 	ljmp	_set_ui_state
                                   1428 ;	../UI_Manager/ui.c:405: case BUTTON_TIMER:
      0006B3                       1429 00104$:
                                   1430 ;	../UI_Manager/ui.c:406: set_ui_state(DEC, NULL);
      0006B3 75*0F 00         [24] 1431 	mov	_set_ui_state_PARM_2,#0x00
      0006B6 75 82 02         [24] 1432 	mov	dpl,#0x02
                                   1433 ;	../UI_Manager/ui.c:407: return;
      0006B9 02r0ErF7         [24] 1434 	ljmp	_set_ui_state
                                   1435 ;	../UI_Manager/ui.c:408: }
      0006BC                       1436 00105$:
                                   1437 ;	../UI_Manager/ui.c:410: if(Changed){
      0006BC E5*01            [12] 1438 	mov	a,_Changed
      0006BE 60 21            [24] 1439 	jz	00107$
                                   1440 ;	../UI_Manager/ui.c:411: Changed = 0x00;
      0006C0 75*01 00         [24] 1441 	mov	_Changed,#0x00
                                   1442 ;	../UI_Manager/ui.c:412: changed = 0xFF;
      0006C3 75*02 FF         [24] 1443 	mov	_changed,#0xff
                                   1444 ;	../UI_Manager/ui.c:414: exe_command(CLEAR_DISPLAY);
      0006C6 90 80 00         [24] 1445 	mov	dptr,#0x8000
      0006C9 12r00r00         [24] 1446 	lcall	_exe_command
                                   1447 ;	../UI_Manager/ui.c:416: write_string("Fog Level", sizeof("Fog Level"), 3, LINE_0, NOT_SELECTED);
      0006CC 75*00 0A         [24] 1448 	mov	_write_string_PARM_2,#0x0a
      0006CF 75*00 03         [24] 1449 	mov	_write_string_PARM_3,#0x03
      0006D2 75*00 00         [24] 1450 	mov	_write_string_PARM_4,#0x00
      0006D5 75*00 00         [24] 1451 	mov	_write_string_PARM_5,#0x00
      0006D8 90r00rC9         [24] 1452 	mov	dptr,#___str_17
      0006DB 75 F0 80         [24] 1453 	mov	b,#0x80
      0006DE 12r00r00         [24] 1454 	lcall	_write_string
      0006E1                       1455 00107$:
                                   1456 ;	../UI_Manager/ui.c:420: if(changed){
      0006E1 E5*02            [12] 1457 	mov	a,_changed
      0006E3 70 01            [24] 1458 	jnz	00157$
      0006E5 22               [24] 1459 	ret
      0006E6                       1460 00157$:
                                   1461 ;	../UI_Manager/ui.c:421: changed = 0x00;
      0006E6 75*02 00         [24] 1462 	mov	_changed,#0x00
                                   1463 ;	../UI_Manager/ui.c:423: switch (get_runtime_data(FOG_POWER_INDEX))
      0006E9 75 82 00         [24] 1464 	mov	dpl,#0x00
      0006EC 12r00r00         [24] 1465 	lcall	_get_runtime_data
      0006EF AF 82            [24] 1466 	mov	r7,dpl
      0006F1 BF 00 02         [24] 1467 	cjne	r7,#0x00,00158$
      0006F4 80 0B            [24] 1468 	sjmp	00108$
      0006F6                       1469 00158$:
      0006F6 BF 01 02         [24] 1470 	cjne	r7,#0x01,00159$
      0006F9 80 33            [24] 1471 	sjmp	00109$
      0006FB                       1472 00159$:
      0006FB BF 02 02         [24] 1473 	cjne	r7,#0x02,00160$
      0006FE 80 67            [24] 1474 	sjmp	00110$
      000700                       1475 00160$:
      000700 22               [24] 1476 	ret
                                   1477 ;	../UI_Manager/ui.c:425: case OPTION_FOG_LOW:
      000701                       1478 00108$:
                                   1479 ;	../UI_Manager/ui.c:426: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_LOW), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000701 75 82 00         [24] 1480 	mov	dpl,#0x00
      000704 12r0Fr8B         [24] 1481 	lcall	_getString
      000707 AD 82            [24] 1482 	mov	r5,dpl
      000709 AE 83            [24] 1483 	mov	r6,dph
      00070B AF F0            [24] 1484 	mov	r7,b
      00070D 75*00 10         [24] 1485 	mov	_write_string_PARM_2,#0x10
      000710 75*00 03         [24] 1486 	mov	_write_string_PARM_3,#0x03
      000713 75*00 01         [24] 1487 	mov	_write_string_PARM_4,#0x01
      000716 75*00 00         [24] 1488 	mov	_write_string_PARM_5,#0x00
      000719 8D 82            [24] 1489 	mov	dpl,r5
      00071B 8E 83            [24] 1490 	mov	dph,r6
      00071D 8F F0            [24] 1491 	mov	b,r7
      00071F 12r00r00         [24] 1492 	lcall	_write_string
                                   1493 ;	../UI_Manager/ui.c:427: write_char(CHAR_LVL_1, 12, LINE_1);
      000722 75*00 0C         [24] 1494 	mov	_write_char_PARM_2,#0x0c
      000725 75*00 01         [24] 1495 	mov	_write_char_PARM_3,#0x01
      000728 75 82 40         [24] 1496 	mov	dpl,#0x40
                                   1497 ;	../UI_Manager/ui.c:428: break;
      00072B 02r00r00         [24] 1498 	ljmp	_write_char
                                   1499 ;	../UI_Manager/ui.c:429: case OPTION_FOG_MEDIUM:
      00072E                       1500 00109$:
                                   1501 ;	../UI_Manager/ui.c:430: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_MEDIUM), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      00072E 75 82 01         [24] 1502 	mov	dpl,#0x01
      000731 12r0Fr8B         [24] 1503 	lcall	_getString
      000734 AD 82            [24] 1504 	mov	r5,dpl
      000736 AE 83            [24] 1505 	mov	r6,dph
      000738 AF F0            [24] 1506 	mov	r7,b
      00073A 75*00 10         [24] 1507 	mov	_write_string_PARM_2,#0x10
      00073D 75*00 03         [24] 1508 	mov	_write_string_PARM_3,#0x03
      000740 75*00 01         [24] 1509 	mov	_write_string_PARM_4,#0x01
      000743 75*00 00         [24] 1510 	mov	_write_string_PARM_5,#0x00
      000746 8D 82            [24] 1511 	mov	dpl,r5
      000748 8E 83            [24] 1512 	mov	dph,r6
      00074A 8F F0            [24] 1513 	mov	b,r7
      00074C 12r00r00         [24] 1514 	lcall	_write_string
                                   1515 ;	../UI_Manager/ui.c:431: write_char(CHAR_LVL_1, 12, LINE_1);
      00074F 75*00 0C         [24] 1516 	mov	_write_char_PARM_2,#0x0c
      000752 75*00 01         [24] 1517 	mov	_write_char_PARM_3,#0x01
      000755 75 82 40         [24] 1518 	mov	dpl,#0x40
      000758 12r00r00         [24] 1519 	lcall	_write_char
                                   1520 ;	../UI_Manager/ui.c:432: write_char(CHAR_LVL_2, 13, LINE_1);
      00075B 75*00 0D         [24] 1521 	mov	_write_char_PARM_2,#0x0d
      00075E 75*00 01         [24] 1522 	mov	_write_char_PARM_3,#0x01
      000761 75 82 C0         [24] 1523 	mov	dpl,#0xc0
                                   1524 ;	../UI_Manager/ui.c:433: break;
                                   1525 ;	../UI_Manager/ui.c:434: case OPTION_FOG_HIGH:
      000764 02r00r00         [24] 1526 	ljmp	_write_char
      000767                       1527 00110$:
                                   1528 ;	../UI_Manager/ui.c:435: write_string(getString(POWER_STRING_OFFSET + OPTION_FOG_HIGH), LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000767 75 82 02         [24] 1529 	mov	dpl,#0x02
      00076A 12r0Fr8B         [24] 1530 	lcall	_getString
      00076D AD 82            [24] 1531 	mov	r5,dpl
      00076F AE 83            [24] 1532 	mov	r6,dph
      000771 AF F0            [24] 1533 	mov	r7,b
      000773 75*00 10         [24] 1534 	mov	_write_string_PARM_2,#0x10
      000776 75*00 03         [24] 1535 	mov	_write_string_PARM_3,#0x03
      000779 75*00 01         [24] 1536 	mov	_write_string_PARM_4,#0x01
      00077C 75*00 00         [24] 1537 	mov	_write_string_PARM_5,#0x00
      00077F 8D 82            [24] 1538 	mov	dpl,r5
      000781 8E 83            [24] 1539 	mov	dph,r6
      000783 8F F0            [24] 1540 	mov	b,r7
      000785 12r00r00         [24] 1541 	lcall	_write_string
                                   1542 ;	../UI_Manager/ui.c:436: write_char(CHAR_LVL_1, 12, LINE_1);
      000788 75*00 0C         [24] 1543 	mov	_write_char_PARM_2,#0x0c
      00078B 75*00 01         [24] 1544 	mov	_write_char_PARM_3,#0x01
      00078E 75 82 40         [24] 1545 	mov	dpl,#0x40
      000791 12r00r00         [24] 1546 	lcall	_write_char
                                   1547 ;	../UI_Manager/ui.c:437: write_char(CHAR_LVL_2, 13, LINE_1);
      000794 75*00 0D         [24] 1548 	mov	_write_char_PARM_2,#0x0d
      000797 75*00 01         [24] 1549 	mov	_write_char_PARM_3,#0x01
      00079A 75 82 C0         [24] 1550 	mov	dpl,#0xc0
      00079D 12r00r00         [24] 1551 	lcall	_write_char
                                   1552 ;	../UI_Manager/ui.c:438: write_char(CHAR_LVL_3, 14, LINE_1);
      0007A0 75*00 0E         [24] 1553 	mov	_write_char_PARM_2,#0x0e
      0007A3 75*00 01         [24] 1554 	mov	_write_char_PARM_3,#0x01
      0007A6 75 82 20         [24] 1555 	mov	dpl,#0x20
                                   1556 ;	../UI_Manager/ui.c:440: }
                                   1557 ;	../UI_Manager/ui.c:443: }
      0007A9 02r00r00         [24] 1558 	ljmp	_write_char
                                   1559 ;------------------------------------------------------------
                                   1560 ;Allocation info for local variables in function 'fogIntervalPage'
                                   1561 ;------------------------------------------------------------
                                   1562 ;action                    Allocated to registers r7 
                                   1563 ;------------------------------------------------------------
                                   1564 ;	../UI_Manager/ui.c:445: void fogIntervalPage(uint8_t action){
                                   1565 ;	-----------------------------------------
                                   1566 ;	 function fogIntervalPage
                                   1567 ;	-----------------------------------------
      0007AC                       1568 _fogIntervalPage:
      0007AC AF 82            [24] 1569 	mov	r7,dpl
                                   1570 ;	../UI_Manager/ui.c:447: switch (action)
      0007AE BF 01 02         [24] 1571 	cjne	r7,#0x01,00146$
      0007B1 80 44            [24] 1572 	sjmp	00106$
      0007B3                       1573 00146$:
      0007B3 BF 02 02         [24] 1574 	cjne	r7,#0x02,00147$
      0007B6 80 36            [24] 1575 	sjmp	00105$
      0007B8                       1576 00147$:
      0007B8 BF 03 02         [24] 1577 	cjne	r7,#0x03,00148$
      0007BB 80 0F            [24] 1578 	sjmp	00102$
      0007BD                       1579 00148$:
      0007BD BF 0B 02         [24] 1580 	cjne	r7,#0x0b,00149$
      0007C0 80 1B            [24] 1581 	sjmp	00104$
      0007C2                       1582 00149$:
      0007C2 BF 1F 02         [24] 1583 	cjne	r7,#0x1f,00150$
      0007C5 80 05            [24] 1584 	sjmp	00102$
      0007C7                       1585 00150$:
                                   1586 ;	../UI_Manager/ui.c:450: case BUTTON_UP:
      0007C7 BF 6F 36         [24] 1587 	cjne	r7,#0x6f,00107$
      0007CA 80 11            [24] 1588 	sjmp	00104$
      0007CC                       1589 00102$:
                                   1590 ;	../UI_Manager/ui.c:451: set_runtime_data(FOG_INTERVAL_INDEX, INC, NULL);
      0007CC 75*00 01         [24] 1591 	mov	_set_runtime_data_PARM_2,#0x01
      0007CF 75*00 00         [24] 1592 	mov	_set_runtime_data_PARM_3,#0x00
      0007D2 75 82 02         [24] 1593 	mov	dpl,#0x02
      0007D5 12r00r00         [24] 1594 	lcall	_set_runtime_data
                                   1595 ;	../UI_Manager/ui.c:452: changed = 0xFF;
      0007D8 75*02 FF         [24] 1596 	mov	_changed,#0xff
                                   1597 ;	../UI_Manager/ui.c:453: break;
                                   1598 ;	../UI_Manager/ui.c:455: case BUTTON_DOWN:
      0007DB 80 23            [24] 1599 	sjmp	00107$
      0007DD                       1600 00104$:
                                   1601 ;	../UI_Manager/ui.c:456: set_runtime_data(FOG_INTERVAL_INDEX, DEC, NULL);
      0007DD 75*00 02         [24] 1602 	mov	_set_runtime_data_PARM_2,#0x02
      0007E0 75*00 00         [24] 1603 	mov	_set_runtime_data_PARM_3,#0x00
      0007E3 75 82 02         [24] 1604 	mov	dpl,#0x02
      0007E6 12r00r00         [24] 1605 	lcall	_set_runtime_data
                                   1606 ;	../UI_Manager/ui.c:457: changed = 0xFF;  
      0007E9 75*02 FF         [24] 1607 	mov	_changed,#0xff
                                   1608 ;	../UI_Manager/ui.c:458: break;
                                   1609 ;	../UI_Manager/ui.c:459: case BUTTON_FUNCTION:
      0007EC 80 12            [24] 1610 	sjmp	00107$
      0007EE                       1611 00105$:
                                   1612 ;	../UI_Manager/ui.c:460: set_ui_state(INC, NULL);
      0007EE 75*0F 00         [24] 1613 	mov	_set_ui_state_PARM_2,#0x00
      0007F1 75 82 01         [24] 1614 	mov	dpl,#0x01
                                   1615 ;	../UI_Manager/ui.c:461: return;
                                   1616 ;	../UI_Manager/ui.c:462: case BUTTON_TIMER:
      0007F4 02r0ErF7         [24] 1617 	ljmp	_set_ui_state
      0007F7                       1618 00106$:
                                   1619 ;	../UI_Manager/ui.c:463: set_ui_state(DEC, NULL);
      0007F7 75*0F 00         [24] 1620 	mov	_set_ui_state_PARM_2,#0x00
      0007FA 75 82 02         [24] 1621 	mov	dpl,#0x02
                                   1622 ;	../UI_Manager/ui.c:464: return;
                                   1623 ;	../UI_Manager/ui.c:465: }
      0007FD 02r0ErF7         [24] 1624 	ljmp	_set_ui_state
      000800                       1625 00107$:
                                   1626 ;	../UI_Manager/ui.c:467: if(Changed){
      000800 E5*01            [12] 1627 	mov	a,_Changed
      000802 60 36            [24] 1628 	jz	00109$
                                   1629 ;	../UI_Manager/ui.c:468: Changed = 0x00;
      000804 75*01 00         [24] 1630 	mov	_Changed,#0x00
                                   1631 ;	../UI_Manager/ui.c:469: changed = 0xFF;
      000807 75*02 FF         [24] 1632 	mov	_changed,#0xff
                                   1633 ;	../UI_Manager/ui.c:471: exe_command(CLEAR_DISPLAY);
      00080A 90 80 00         [24] 1634 	mov	dptr,#0x8000
      00080D 12r00r00         [24] 1635 	lcall	_exe_command
                                   1636 ;	../UI_Manager/ui.c:473: write_string("Fog Interval", sizeof("Fog Interval"), 2, LINE_0, NOT_SELECTED);
      000810 75*00 0D         [24] 1637 	mov	_write_string_PARM_2,#0x0d
      000813 75*00 02         [24] 1638 	mov	_write_string_PARM_3,#0x02
      000816 75*00 00         [24] 1639 	mov	_write_string_PARM_4,#0x00
      000819 75*00 00         [24] 1640 	mov	_write_string_PARM_5,#0x00
      00081C 90r00rD3         [24] 1641 	mov	dptr,#___str_18
      00081F 75 F0 80         [24] 1642 	mov	b,#0x80
      000822 12r00r00         [24] 1643 	lcall	_write_string
                                   1644 ;	../UI_Manager/ui.c:474: write_string("Seconds", sizeof("Seconds"), 7, LINE_1, NOT_SELECTED);
      000825 75*00 08         [24] 1645 	mov	_write_string_PARM_2,#0x08
      000828 75*00 07         [24] 1646 	mov	_write_string_PARM_3,#0x07
      00082B 75*00 01         [24] 1647 	mov	_write_string_PARM_4,#0x01
      00082E 75*00 00         [24] 1648 	mov	_write_string_PARM_5,#0x00
      000831 90r00rE0         [24] 1649 	mov	dptr,#___str_19
      000834 75 F0 80         [24] 1650 	mov	b,#0x80
      000837 12r00r00         [24] 1651 	lcall	_write_string
      00083A                       1652 00109$:
                                   1653 ;	../UI_Manager/ui.c:478: if(changed){
      00083A E5*02            [12] 1654 	mov	a,_changed
      00083C 60 1C            [24] 1655 	jz	00112$
                                   1656 ;	../UI_Manager/ui.c:479: changed = 0x00;
      00083E 75*02 00         [24] 1657 	mov	_changed,#0x00
                                   1658 ;	../UI_Manager/ui.c:481: write_number(get_runtime_data(FOG_INTERVAL_INDEX), 1, LINE_1, NOT_SELECTED);
      000841 75 82 02         [24] 1659 	mov	dpl,#0x02
      000844 12r00r00         [24] 1660 	lcall	_get_runtime_data
      000847 AF 82            [24] 1661 	mov	r7,dpl
      000849 7E 00            [12] 1662 	mov	r6,#0x00
      00084B 75*00 01         [24] 1663 	mov	_write_number_PARM_2,#0x01
      00084E 75*00 01         [24] 1664 	mov	_write_number_PARM_3,#0x01
                                   1665 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000851 8E*00            [24] 1666 	mov	_write_number_PARM_4,r6
      000853 8F 82            [24] 1667 	mov	dpl,r7
      000855 8E 83            [24] 1668 	mov	dph,r6
                                   1669 ;	../UI_Manager/ui.c:486: }
      000857 02r00r00         [24] 1670 	ljmp	_write_number
      00085A                       1671 00112$:
      00085A 22               [24] 1672 	ret
                                   1673 ;------------------------------------------------------------
                                   1674 ;Allocation info for local variables in function 'fogDurationPage'
                                   1675 ;------------------------------------------------------------
                                   1676 ;action                    Allocated to registers r7 
                                   1677 ;------------------------------------------------------------
                                   1678 ;	../UI_Manager/ui.c:488: void fogDurationPage(uint8_t action){
                                   1679 ;	-----------------------------------------
                                   1680 ;	 function fogDurationPage
                                   1681 ;	-----------------------------------------
      00085B                       1682 _fogDurationPage:
      00085B AF 82            [24] 1683 	mov	r7,dpl
                                   1684 ;	../UI_Manager/ui.c:490: switch (action)
      00085D BF 01 02         [24] 1685 	cjne	r7,#0x01,00146$
      000860 80 44            [24] 1686 	sjmp	00106$
      000862                       1687 00146$:
      000862 BF 02 02         [24] 1688 	cjne	r7,#0x02,00147$
      000865 80 36            [24] 1689 	sjmp	00105$
      000867                       1690 00147$:
      000867 BF 03 02         [24] 1691 	cjne	r7,#0x03,00148$
      00086A 80 0F            [24] 1692 	sjmp	00102$
      00086C                       1693 00148$:
      00086C BF 0B 02         [24] 1694 	cjne	r7,#0x0b,00149$
      00086F 80 1B            [24] 1695 	sjmp	00104$
      000871                       1696 00149$:
      000871 BF 1F 02         [24] 1697 	cjne	r7,#0x1f,00150$
      000874 80 05            [24] 1698 	sjmp	00102$
      000876                       1699 00150$:
                                   1700 ;	../UI_Manager/ui.c:493: case BUTTON_UP:
      000876 BF 6F 36         [24] 1701 	cjne	r7,#0x6f,00107$
      000879 80 11            [24] 1702 	sjmp	00104$
      00087B                       1703 00102$:
                                   1704 ;	../UI_Manager/ui.c:494: set_runtime_data(FOG_DURATION_INDEX, INC, NULL);
      00087B 75*00 01         [24] 1705 	mov	_set_runtime_data_PARM_2,#0x01
      00087E 75*00 00         [24] 1706 	mov	_set_runtime_data_PARM_3,#0x00
      000881 75 82 01         [24] 1707 	mov	dpl,#0x01
      000884 12r00r00         [24] 1708 	lcall	_set_runtime_data
                                   1709 ;	../UI_Manager/ui.c:495: changed = 0xFF;
      000887 75*02 FF         [24] 1710 	mov	_changed,#0xff
                                   1711 ;	../UI_Manager/ui.c:496: break;
                                   1712 ;	../UI_Manager/ui.c:498: case BUTTON_DOWN:
      00088A 80 23            [24] 1713 	sjmp	00107$
      00088C                       1714 00104$:
                                   1715 ;	../UI_Manager/ui.c:499: set_runtime_data(FOG_DURATION_INDEX, DEC, NULL);
      00088C 75*00 02         [24] 1716 	mov	_set_runtime_data_PARM_2,#0x02
      00088F 75*00 00         [24] 1717 	mov	_set_runtime_data_PARM_3,#0x00
      000892 75 82 01         [24] 1718 	mov	dpl,#0x01
      000895 12r00r00         [24] 1719 	lcall	_set_runtime_data
                                   1720 ;	../UI_Manager/ui.c:500: changed = 0xFF;  
      000898 75*02 FF         [24] 1721 	mov	_changed,#0xff
                                   1722 ;	../UI_Manager/ui.c:501: break;
                                   1723 ;	../UI_Manager/ui.c:502: case BUTTON_FUNCTION:
      00089B 80 12            [24] 1724 	sjmp	00107$
      00089D                       1725 00105$:
                                   1726 ;	../UI_Manager/ui.c:503: set_ui_state(INC, NULL);
      00089D 75*0F 00         [24] 1727 	mov	_set_ui_state_PARM_2,#0x00
      0008A0 75 82 01         [24] 1728 	mov	dpl,#0x01
                                   1729 ;	../UI_Manager/ui.c:504: return;
                                   1730 ;	../UI_Manager/ui.c:505: case BUTTON_TIMER:
      0008A3 02r0ErF7         [24] 1731 	ljmp	_set_ui_state
      0008A6                       1732 00106$:
                                   1733 ;	../UI_Manager/ui.c:506: set_ui_state(DEC, NULL);
      0008A6 75*0F 00         [24] 1734 	mov	_set_ui_state_PARM_2,#0x00
      0008A9 75 82 02         [24] 1735 	mov	dpl,#0x02
                                   1736 ;	../UI_Manager/ui.c:507: return;
                                   1737 ;	../UI_Manager/ui.c:508: }
      0008AC 02r0ErF7         [24] 1738 	ljmp	_set_ui_state
      0008AF                       1739 00107$:
                                   1740 ;	../UI_Manager/ui.c:510: if(Changed){
      0008AF E5*01            [12] 1741 	mov	a,_Changed
      0008B1 60 36            [24] 1742 	jz	00109$
                                   1743 ;	../UI_Manager/ui.c:511: Changed = 0x00;
      0008B3 75*01 00         [24] 1744 	mov	_Changed,#0x00
                                   1745 ;	../UI_Manager/ui.c:512: changed = 0xFF;
      0008B6 75*02 FF         [24] 1746 	mov	_changed,#0xff
                                   1747 ;	../UI_Manager/ui.c:514: exe_command(CLEAR_DISPLAY);
      0008B9 90 80 00         [24] 1748 	mov	dptr,#0x8000
      0008BC 12r00r00         [24] 1749 	lcall	_exe_command
                                   1750 ;	../UI_Manager/ui.c:516: write_string("Fog Duration", sizeof("Fog Duration"), 2, LINE_0, NOT_SELECTED);
      0008BF 75*00 0D         [24] 1751 	mov	_write_string_PARM_2,#0x0d
      0008C2 75*00 02         [24] 1752 	mov	_write_string_PARM_3,#0x02
      0008C5 75*00 00         [24] 1753 	mov	_write_string_PARM_4,#0x00
      0008C8 75*00 00         [24] 1754 	mov	_write_string_PARM_5,#0x00
      0008CB 90r00rE8         [24] 1755 	mov	dptr,#___str_20
      0008CE 75 F0 80         [24] 1756 	mov	b,#0x80
      0008D1 12r00r00         [24] 1757 	lcall	_write_string
                                   1758 ;	../UI_Manager/ui.c:517: write_string("Seconds", sizeof("Seconds"), 7, LINE_1, NOT_SELECTED);
      0008D4 75*00 08         [24] 1759 	mov	_write_string_PARM_2,#0x08
      0008D7 75*00 07         [24] 1760 	mov	_write_string_PARM_3,#0x07
      0008DA 75*00 01         [24] 1761 	mov	_write_string_PARM_4,#0x01
      0008DD 75*00 00         [24] 1762 	mov	_write_string_PARM_5,#0x00
      0008E0 90r00rE0         [24] 1763 	mov	dptr,#___str_19
      0008E3 75 F0 80         [24] 1764 	mov	b,#0x80
      0008E6 12r00r00         [24] 1765 	lcall	_write_string
      0008E9                       1766 00109$:
                                   1767 ;	../UI_Manager/ui.c:521: if(changed){
      0008E9 E5*02            [12] 1768 	mov	a,_changed
      0008EB 60 1C            [24] 1769 	jz	00112$
                                   1770 ;	../UI_Manager/ui.c:522: changed = 0x00;
      0008ED 75*02 00         [24] 1771 	mov	_changed,#0x00
                                   1772 ;	../UI_Manager/ui.c:524: write_number(get_runtime_data(FOG_DURATION_INDEX), 1, LINE_1, NOT_SELECTED);
      0008F0 75 82 01         [24] 1773 	mov	dpl,#0x01
      0008F3 12r00r00         [24] 1774 	lcall	_get_runtime_data
      0008F6 AF 82            [24] 1775 	mov	r7,dpl
      0008F8 7E 00            [12] 1776 	mov	r6,#0x00
      0008FA 75*00 01         [24] 1777 	mov	_write_number_PARM_2,#0x01
      0008FD 75*00 01         [24] 1778 	mov	_write_number_PARM_3,#0x01
                                   1779 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000900 8E*00            [24] 1780 	mov	_write_number_PARM_4,r6
      000902 8F 82            [24] 1781 	mov	dpl,r7
      000904 8E 83            [24] 1782 	mov	dph,r6
                                   1783 ;	../UI_Manager/ui.c:527: }
      000906 02r00r00         [24] 1784 	ljmp	_write_number
      000909                       1785 00112$:
      000909 22               [24] 1786 	ret
                                   1787 ;------------------------------------------------------------
                                   1788 ;Allocation info for local variables in function 'macroPage'
                                   1789 ;------------------------------------------------------------
                                   1790 ;action                    Allocated to registers r7 
                                   1791 ;------------------------------------------------------------
                                   1792 ;	../UI_Manager/ui.c:529: void macroPage(uint8_t action){
                                   1793 ;	-----------------------------------------
                                   1794 ;	 function macroPage
                                   1795 ;	-----------------------------------------
      00090A                       1796 _macroPage:
      00090A AF 82            [24] 1797 	mov	r7,dpl
                                   1798 ;	../UI_Manager/ui.c:531: switch (action)
      00090C BF 01 02         [24] 1799 	cjne	r7,#0x01,00146$
      00090F 80 44            [24] 1800 	sjmp	00106$
      000911                       1801 00146$:
      000911 BF 02 02         [24] 1802 	cjne	r7,#0x02,00147$
      000914 80 36            [24] 1803 	sjmp	00105$
      000916                       1804 00147$:
      000916 BF 03 02         [24] 1805 	cjne	r7,#0x03,00148$
      000919 80 0F            [24] 1806 	sjmp	00102$
      00091B                       1807 00148$:
      00091B BF 0B 02         [24] 1808 	cjne	r7,#0x0b,00149$
      00091E 80 1B            [24] 1809 	sjmp	00104$
      000920                       1810 00149$:
      000920 BF 1F 02         [24] 1811 	cjne	r7,#0x1f,00150$
      000923 80 05            [24] 1812 	sjmp	00102$
      000925                       1813 00150$:
                                   1814 ;	../UI_Manager/ui.c:534: case BUTTON_UP:
      000925 BF 6F 36         [24] 1815 	cjne	r7,#0x6f,00107$
      000928 80 11            [24] 1816 	sjmp	00104$
      00092A                       1817 00102$:
                                   1818 ;	../UI_Manager/ui.c:535: set_runtime_data(MACRO_INDEX, INC, NULL);
      00092A 75*00 01         [24] 1819 	mov	_set_runtime_data_PARM_2,#0x01
      00092D 75*00 00         [24] 1820 	mov	_set_runtime_data_PARM_3,#0x00
      000930 75 82 03         [24] 1821 	mov	dpl,#0x03
      000933 12r00r00         [24] 1822 	lcall	_set_runtime_data
                                   1823 ;	../UI_Manager/ui.c:536: changed = 0xFF;
      000936 75*02 FF         [24] 1824 	mov	_changed,#0xff
                                   1825 ;	../UI_Manager/ui.c:537: break;
                                   1826 ;	../UI_Manager/ui.c:539: case BUTTON_DOWN:
      000939 80 23            [24] 1827 	sjmp	00107$
      00093B                       1828 00104$:
                                   1829 ;	../UI_Manager/ui.c:540: set_runtime_data(MACRO_INDEX, DEC, NULL);
      00093B 75*00 02         [24] 1830 	mov	_set_runtime_data_PARM_2,#0x02
      00093E 75*00 00         [24] 1831 	mov	_set_runtime_data_PARM_3,#0x00
      000941 75 82 03         [24] 1832 	mov	dpl,#0x03
      000944 12r00r00         [24] 1833 	lcall	_set_runtime_data
                                   1834 ;	../UI_Manager/ui.c:541: changed = 0xFF;  
      000947 75*02 FF         [24] 1835 	mov	_changed,#0xff
                                   1836 ;	../UI_Manager/ui.c:542: break;
                                   1837 ;	../UI_Manager/ui.c:543: case BUTTON_FUNCTION:
      00094A 80 12            [24] 1838 	sjmp	00107$
      00094C                       1839 00105$:
                                   1840 ;	../UI_Manager/ui.c:544: set_ui_state(INC, NULL);
      00094C 75*0F 00         [24] 1841 	mov	_set_ui_state_PARM_2,#0x00
      00094F 75 82 01         [24] 1842 	mov	dpl,#0x01
                                   1843 ;	../UI_Manager/ui.c:545: return;
                                   1844 ;	../UI_Manager/ui.c:546: case BUTTON_TIMER:
      000952 02r0ErF7         [24] 1845 	ljmp	_set_ui_state
      000955                       1846 00106$:
                                   1847 ;	../UI_Manager/ui.c:547: set_ui_state(DEC, NULL);
      000955 75*0F 00         [24] 1848 	mov	_set_ui_state_PARM_2,#0x00
      000958 75 82 02         [24] 1849 	mov	dpl,#0x02
                                   1850 ;	../UI_Manager/ui.c:548: return;
                                   1851 ;	../UI_Manager/ui.c:549: }
      00095B 02r0ErF7         [24] 1852 	ljmp	_set_ui_state
      00095E                       1853 00107$:
                                   1854 ;	../UI_Manager/ui.c:551: if(Changed){
      00095E E5*01            [12] 1855 	mov	a,_Changed
      000960 60 21            [24] 1856 	jz	00109$
                                   1857 ;	../UI_Manager/ui.c:552: Changed = 0x00;
      000962 75*01 00         [24] 1858 	mov	_Changed,#0x00
                                   1859 ;	../UI_Manager/ui.c:553: changed = 0xFF;
      000965 75*02 FF         [24] 1860 	mov	_changed,#0xff
                                   1861 ;	../UI_Manager/ui.c:555: exe_command(CLEAR_DISPLAY);
      000968 90 80 00         [24] 1862 	mov	dptr,#0x8000
      00096B 12r00r00         [24] 1863 	lcall	_exe_command
                                   1864 ;	../UI_Manager/ui.c:557: write_string("Macros", sizeof("Macros"), 4, LINE_0, NOT_SELECTED);
      00096E 75*00 07         [24] 1865 	mov	_write_string_PARM_2,#0x07
      000971 75*00 04         [24] 1866 	mov	_write_string_PARM_3,#0x04
      000974 75*00 00         [24] 1867 	mov	_write_string_PARM_4,#0x00
      000977 75*00 00         [24] 1868 	mov	_write_string_PARM_5,#0x00
      00097A 90r00rF5         [24] 1869 	mov	dptr,#___str_21
      00097D 75 F0 80         [24] 1870 	mov	b,#0x80
      000980 12r00r00         [24] 1871 	lcall	_write_string
      000983                       1872 00109$:
                                   1873 ;	../UI_Manager/ui.c:561: if(changed){
      000983 E5*02            [12] 1874 	mov	a,_changed
      000985 60 2E            [24] 1875 	jz	00112$
                                   1876 ;	../UI_Manager/ui.c:562: changed = 0x00;
      000987 75*02 00         [24] 1877 	mov	_changed,#0x00
                                   1878 ;	../UI_Manager/ui.c:564: write_string(getString(get_runtime_data(MACRO_INDEX) + MACRO_STRING_OFFSET), LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      00098A 75 82 03         [24] 1879 	mov	dpl,#0x03
      00098D 12r00r00         [24] 1880 	lcall	_get_runtime_data
      000990 AF 82            [24] 1881 	mov	r7,dpl
      000992 74 14            [12] 1882 	mov	a,#0x14
      000994 2F               [12] 1883 	add	a,r7
      000995 F5 82            [12] 1884 	mov	dpl,a
      000997 12r0Fr8B         [24] 1885 	lcall	_getString
      00099A AD 82            [24] 1886 	mov	r5,dpl
      00099C AE 83            [24] 1887 	mov	r6,dph
      00099E AF F0            [24] 1888 	mov	r7,b
      0009A0 75*00 10         [24] 1889 	mov	_write_string_PARM_2,#0x10
      0009A3 75*00 06         [24] 1890 	mov	_write_string_PARM_3,#0x06
      0009A6 75*00 01         [24] 1891 	mov	_write_string_PARM_4,#0x01
      0009A9 75*00 00         [24] 1892 	mov	_write_string_PARM_5,#0x00
      0009AC 8D 82            [24] 1893 	mov	dpl,r5
      0009AE 8E 83            [24] 1894 	mov	dph,r6
      0009B0 8F F0            [24] 1895 	mov	b,r7
                                   1896 ;	../UI_Manager/ui.c:567: }
      0009B2 02r00r00         [24] 1897 	ljmp	_write_string
      0009B5                       1898 00112$:
      0009B5 22               [24] 1899 	ret
                                   1900 ;------------------------------------------------------------
                                   1901 ;Allocation info for local variables in function 'macroSpeedPage'
                                   1902 ;------------------------------------------------------------
                                   1903 ;action                    Allocated to registers r7 
                                   1904 ;------------------------------------------------------------
                                   1905 ;	../UI_Manager/ui.c:569: void macroSpeedPage(uint8_t action){
                                   1906 ;	-----------------------------------------
                                   1907 ;	 function macroSpeedPage
                                   1908 ;	-----------------------------------------
      0009B6                       1909 _macroSpeedPage:
      0009B6 AF 82            [24] 1910 	mov	r7,dpl
                                   1911 ;	../UI_Manager/ui.c:571: switch (action)
      0009B8 BF 01 02         [24] 1912 	cjne	r7,#0x01,00153$
      0009BB 80 44            [24] 1913 	sjmp	00106$
      0009BD                       1914 00153$:
      0009BD BF 02 02         [24] 1915 	cjne	r7,#0x02,00154$
      0009C0 80 36            [24] 1916 	sjmp	00105$
      0009C2                       1917 00154$:
      0009C2 BF 03 02         [24] 1918 	cjne	r7,#0x03,00155$
      0009C5 80 0F            [24] 1919 	sjmp	00102$
      0009C7                       1920 00155$:
      0009C7 BF 0B 02         [24] 1921 	cjne	r7,#0x0b,00156$
      0009CA 80 1B            [24] 1922 	sjmp	00104$
      0009CC                       1923 00156$:
      0009CC BF 1F 02         [24] 1924 	cjne	r7,#0x1f,00157$
      0009CF 80 05            [24] 1925 	sjmp	00102$
      0009D1                       1926 00157$:
                                   1927 ;	../UI_Manager/ui.c:574: case BUTTON_UP:
      0009D1 BF 6F 36         [24] 1928 	cjne	r7,#0x6f,00107$
      0009D4 80 11            [24] 1929 	sjmp	00104$
      0009D6                       1930 00102$:
                                   1931 ;	../UI_Manager/ui.c:575: set_runtime_data(MACRO_SPEED_INDEX, INC, NULL);
      0009D6 75*00 01         [24] 1932 	mov	_set_runtime_data_PARM_2,#0x01
      0009D9 75*00 00         [24] 1933 	mov	_set_runtime_data_PARM_3,#0x00
      0009DC 75 82 04         [24] 1934 	mov	dpl,#0x04
      0009DF 12r00r00         [24] 1935 	lcall	_set_runtime_data
                                   1936 ;	../UI_Manager/ui.c:576: changed = 0xFF;
      0009E2 75*02 FF         [24] 1937 	mov	_changed,#0xff
                                   1938 ;	../UI_Manager/ui.c:577: break;
                                   1939 ;	../UI_Manager/ui.c:579: case BUTTON_DOWN:
      0009E5 80 23            [24] 1940 	sjmp	00107$
      0009E7                       1941 00104$:
                                   1942 ;	../UI_Manager/ui.c:580: set_runtime_data(MACRO_SPEED_INDEX, DEC, NULL);
      0009E7 75*00 02         [24] 1943 	mov	_set_runtime_data_PARM_2,#0x02
      0009EA 75*00 00         [24] 1944 	mov	_set_runtime_data_PARM_3,#0x00
      0009ED 75 82 04         [24] 1945 	mov	dpl,#0x04
      0009F0 12r00r00         [24] 1946 	lcall	_set_runtime_data
                                   1947 ;	../UI_Manager/ui.c:581: changed = 0xFF;  
      0009F3 75*02 FF         [24] 1948 	mov	_changed,#0xff
                                   1949 ;	../UI_Manager/ui.c:582: break;
                                   1950 ;	../UI_Manager/ui.c:583: case BUTTON_FUNCTION:
      0009F6 80 12            [24] 1951 	sjmp	00107$
      0009F8                       1952 00105$:
                                   1953 ;	../UI_Manager/ui.c:584: set_ui_state(INC, NULL);
      0009F8 75*0F 00         [24] 1954 	mov	_set_ui_state_PARM_2,#0x00
      0009FB 75 82 01         [24] 1955 	mov	dpl,#0x01
                                   1956 ;	../UI_Manager/ui.c:585: return;
      0009FE 02r0ErF7         [24] 1957 	ljmp	_set_ui_state
                                   1958 ;	../UI_Manager/ui.c:586: case BUTTON_TIMER:
      000A01                       1959 00106$:
                                   1960 ;	../UI_Manager/ui.c:587: set_ui_state(DEC, NULL);
      000A01 75*0F 00         [24] 1961 	mov	_set_ui_state_PARM_2,#0x00
      000A04 75 82 02         [24] 1962 	mov	dpl,#0x02
                                   1963 ;	../UI_Manager/ui.c:588: return;
      000A07 02r0ErF7         [24] 1964 	ljmp	_set_ui_state
                                   1965 ;	../UI_Manager/ui.c:589: }
      000A0A                       1966 00107$:
                                   1967 ;	../UI_Manager/ui.c:591: if(Changed){
      000A0A E5*01            [12] 1968 	mov	a,_Changed
      000A0C 60 21            [24] 1969 	jz	00109$
                                   1970 ;	../UI_Manager/ui.c:592: Changed = 0x00;
      000A0E 75*01 00         [24] 1971 	mov	_Changed,#0x00
                                   1972 ;	../UI_Manager/ui.c:593: changed = 0xFF;
      000A11 75*02 FF         [24] 1973 	mov	_changed,#0xff
                                   1974 ;	../UI_Manager/ui.c:595: exe_command(CLEAR_DISPLAY);
      000A14 90 80 00         [24] 1975 	mov	dptr,#0x8000
      000A17 12r00r00         [24] 1976 	lcall	_exe_command
                                   1977 ;	../UI_Manager/ui.c:597: write_string("Macro Speed", sizeof("Macro Speed"), 3, LINE_0, NOT_SELECTED);
      000A1A 75*00 0C         [24] 1978 	mov	_write_string_PARM_2,#0x0c
      000A1D 75*00 03         [24] 1979 	mov	_write_string_PARM_3,#0x03
      000A20 75*00 00         [24] 1980 	mov	_write_string_PARM_4,#0x00
      000A23 75*00 00         [24] 1981 	mov	_write_string_PARM_5,#0x00
      000A26 90r00rFC         [24] 1982 	mov	dptr,#___str_22
      000A29 75 F0 80         [24] 1983 	mov	b,#0x80
      000A2C 12r00r00         [24] 1984 	lcall	_write_string
      000A2F                       1985 00109$:
                                   1986 ;	../UI_Manager/ui.c:601: if(changed){
      000A2F E5*02            [12] 1987 	mov	a,_changed
      000A31 60 4F            [24] 1988 	jz	00115$
                                   1989 ;	../UI_Manager/ui.c:602: changed = 0x00;
      000A33 75*02 00         [24] 1990 	mov	_changed,#0x00
                                   1991 ;	../UI_Manager/ui.c:604: if(get_runtime_data(MACRO_SPEED_INDEX) == 0){
      000A36 75 82 04         [24] 1992 	mov	dpl,#0x04
      000A39 12r00r00         [24] 1993 	lcall	_get_runtime_data
      000A3C E5 82            [12] 1994 	mov	a,dpl
                                   1995 ;	../UI_Manager/ui.c:605: write_string("Off", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000A3E 70 14            [24] 1996 	jnz	00111$
      000A40 75*00 10         [24] 1997 	mov	_write_string_PARM_2,#0x10
      000A43 75*00 06         [24] 1998 	mov	_write_string_PARM_3,#0x06
      000A46 75*00 01         [24] 1999 	mov	_write_string_PARM_4,#0x01
      000A49 F5*00            [12] 2000 	mov	_write_string_PARM_5,a
      000A4B 90r01r08         [24] 2001 	mov	dptr,#___str_23
      000A4E 75 F0 80         [24] 2002 	mov	b,#0x80
      000A51 02r00r00         [24] 2003 	ljmp	_write_string
      000A54                       2004 00111$:
                                   2005 ;	../UI_Manager/ui.c:607: write_string("", LINE_LENGTH, 3, LINE_1, NOT_SELECTED);
      000A54 75*00 10         [24] 2006 	mov	_write_string_PARM_2,#0x10
      000A57 75*00 03         [24] 2007 	mov	_write_string_PARM_3,#0x03
      000A5A 75*00 01         [24] 2008 	mov	_write_string_PARM_4,#0x01
      000A5D 75*00 00         [24] 2009 	mov	_write_string_PARM_5,#0x00
      000A60 90r01r0C         [24] 2010 	mov	dptr,#___str_24
      000A63 75 F0 80         [24] 2011 	mov	b,#0x80
      000A66 12r00r00         [24] 2012 	lcall	_write_string
                                   2013 ;	../UI_Manager/ui.c:608: write_number(get_runtime_data(MACRO_SPEED_INDEX), 5, LINE_1, NOT_SELECTED);
      000A69 75 82 04         [24] 2014 	mov	dpl,#0x04
      000A6C 12r00r00         [24] 2015 	lcall	_get_runtime_data
      000A6F AF 82            [24] 2016 	mov	r7,dpl
      000A71 7E 00            [12] 2017 	mov	r6,#0x00
      000A73 75*00 05         [24] 2018 	mov	_write_number_PARM_2,#0x05
      000A76 75*00 01         [24] 2019 	mov	_write_number_PARM_3,#0x01
                                   2020 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000A79 8E*00            [24] 2021 	mov	_write_number_PARM_4,r6
      000A7B 8F 82            [24] 2022 	mov	dpl,r7
      000A7D 8E 83            [24] 2023 	mov	dph,r6
                                   2024 ;	../UI_Manager/ui.c:612: }
      000A7F 02r00r00         [24] 2025 	ljmp	_write_number
      000A82                       2026 00115$:
      000A82 22               [24] 2027 	ret
                                   2028 ;------------------------------------------------------------
                                   2029 ;Allocation info for local variables in function 'colorPage'
                                   2030 ;------------------------------------------------------------
                                   2031 ;action                    Allocated to registers r7 
                                   2032 ;index                     Allocated to registers r6 
                                   2033 ;------------------------------------------------------------
                                   2034 ;	../UI_Manager/ui.c:614: void colorPage(uint8_t action){
                                   2035 ;	-----------------------------------------
                                   2036 ;	 function colorPage
                                   2037 ;	-----------------------------------------
      000A83                       2038 _colorPage:
      000A83 AF 82            [24] 2039 	mov	r7,dpl
                                   2040 ;	../UI_Manager/ui.c:615: uint8_t index = 0;
      000A85 7E 00            [12] 2041 	mov	r6,#0x00
                                   2042 ;	../UI_Manager/ui.c:617: switch (State)
      000A87 AD*00            [24] 2043 	mov	r5,_State
      000A89 BD 06 02         [24] 2044 	cjne	r5,#0x06,00174$
      000A8C 80 0F            [24] 2045 	sjmp	00101$
      000A8E                       2046 00174$:
      000A8E BD 07 02         [24] 2047 	cjne	r5,#0x07,00175$
      000A91 80 0E            [24] 2048 	sjmp	00102$
      000A93                       2049 00175$:
      000A93 BD 08 02         [24] 2050 	cjne	r5,#0x08,00176$
      000A96 80 0D            [24] 2051 	sjmp	00103$
      000A98                       2052 00176$:
                                   2053 ;	../UI_Manager/ui.c:619: case MANUAL_RED_STATE:
      000A98 BD 09 10         [24] 2054 	cjne	r5,#0x09,00105$
      000A9B 80 0C            [24] 2055 	sjmp	00104$
      000A9D                       2056 00101$:
                                   2057 ;	../UI_Manager/ui.c:620: index = RED_INDEX;
      000A9D 7E 05            [12] 2058 	mov	r6,#0x05
                                   2059 ;	../UI_Manager/ui.c:621: break;
                                   2060 ;	../UI_Manager/ui.c:622: case MANUAL_GREEN_STATE:
      000A9F 80 0A            [24] 2061 	sjmp	00105$
      000AA1                       2062 00102$:
                                   2063 ;	../UI_Manager/ui.c:623: index = GREEN_INDEX;
      000AA1 7E 06            [12] 2064 	mov	r6,#0x06
                                   2065 ;	../UI_Manager/ui.c:624: break;
                                   2066 ;	../UI_Manager/ui.c:625: case MANUAL_BLUE_STATE:
      000AA3 80 06            [24] 2067 	sjmp	00105$
      000AA5                       2068 00103$:
                                   2069 ;	../UI_Manager/ui.c:626: index = BLUE_INDEX;
      000AA5 7E 07            [12] 2070 	mov	r6,#0x07
                                   2071 ;	../UI_Manager/ui.c:627: break;
                                   2072 ;	../UI_Manager/ui.c:628: case MANUAL_STROBE_STATE:
      000AA7 80 02            [24] 2073 	sjmp	00105$
      000AA9                       2074 00104$:
                                   2075 ;	../UI_Manager/ui.c:629: index = STROBE_INDEX;
      000AA9 7E 08            [12] 2076 	mov	r6,#0x08
                                   2077 ;	../UI_Manager/ui.c:631: }
      000AAB                       2078 00105$:
                                   2079 ;	../UI_Manager/ui.c:633: switch (action)
      000AAB BF 01 02         [24] 2080 	cjne	r7,#0x01,00178$
      000AAE 80 4A            [24] 2081 	sjmp	00111$
      000AB0                       2082 00178$:
      000AB0 BF 02 02         [24] 2083 	cjne	r7,#0x02,00179$
      000AB3 80 3C            [24] 2084 	sjmp	00110$
      000AB5                       2085 00179$:
      000AB5 BF 03 02         [24] 2086 	cjne	r7,#0x03,00180$
      000AB8 80 0F            [24] 2087 	sjmp	00107$
      000ABA                       2088 00180$:
      000ABA BF 0B 02         [24] 2089 	cjne	r7,#0x0b,00181$
      000ABD 80 1E            [24] 2090 	sjmp	00109$
      000ABF                       2091 00181$:
      000ABF BF 1F 02         [24] 2092 	cjne	r7,#0x1f,00182$
      000AC2 80 05            [24] 2093 	sjmp	00107$
      000AC4                       2094 00182$:
                                   2095 ;	../UI_Manager/ui.c:636: case BUTTON_UP:
      000AC4 BF 6F 3C         [24] 2096 	cjne	r7,#0x6f,00112$
      000AC7 80 14            [24] 2097 	sjmp	00109$
      000AC9                       2098 00107$:
                                   2099 ;	../UI_Manager/ui.c:637: set_runtime_data(index, INC, NULL);
      000AC9 75*00 01         [24] 2100 	mov	_set_runtime_data_PARM_2,#0x01
      000ACC 75*00 00         [24] 2101 	mov	_set_runtime_data_PARM_3,#0x00
      000ACF 8E 82            [24] 2102 	mov	dpl,r6
      000AD1 C0 06            [24] 2103 	push	ar6
      000AD3 12r00r00         [24] 2104 	lcall	_set_runtime_data
      000AD6 D0 06            [24] 2105 	pop	ar6
                                   2106 ;	../UI_Manager/ui.c:638: changed = 0xFF;
      000AD8 75*02 FF         [24] 2107 	mov	_changed,#0xff
                                   2108 ;	../UI_Manager/ui.c:639: break;
                                   2109 ;	../UI_Manager/ui.c:641: case BUTTON_DOWN:
      000ADB 80 26            [24] 2110 	sjmp	00112$
      000ADD                       2111 00109$:
                                   2112 ;	../UI_Manager/ui.c:642: set_runtime_data(index, DEC, NULL);
      000ADD 75*00 02         [24] 2113 	mov	_set_runtime_data_PARM_2,#0x02
      000AE0 75*00 00         [24] 2114 	mov	_set_runtime_data_PARM_3,#0x00
      000AE3 8E 82            [24] 2115 	mov	dpl,r6
      000AE5 C0 06            [24] 2116 	push	ar6
      000AE7 12r00r00         [24] 2117 	lcall	_set_runtime_data
      000AEA D0 06            [24] 2118 	pop	ar6
                                   2119 ;	../UI_Manager/ui.c:643: changed = 0xFF;  
      000AEC 75*02 FF         [24] 2120 	mov	_changed,#0xff
                                   2121 ;	../UI_Manager/ui.c:644: break;
                                   2122 ;	../UI_Manager/ui.c:645: case BUTTON_FUNCTION:
      000AEF 80 12            [24] 2123 	sjmp	00112$
      000AF1                       2124 00110$:
                                   2125 ;	../UI_Manager/ui.c:646: set_ui_state(INC, NULL);
      000AF1 75*0F 00         [24] 2126 	mov	_set_ui_state_PARM_2,#0x00
      000AF4 75 82 01         [24] 2127 	mov	dpl,#0x01
                                   2128 ;	../UI_Manager/ui.c:647: return;
      000AF7 02r0ErF7         [24] 2129 	ljmp	_set_ui_state
                                   2130 ;	../UI_Manager/ui.c:648: case BUTTON_TIMER:
      000AFA                       2131 00111$:
                                   2132 ;	../UI_Manager/ui.c:649: set_ui_state(DEC, NULL);
      000AFA 75*0F 00         [24] 2133 	mov	_set_ui_state_PARM_2,#0x00
      000AFD 75 82 02         [24] 2134 	mov	dpl,#0x02
                                   2135 ;	../UI_Manager/ui.c:650: return;
      000B00 02r0ErF7         [24] 2136 	ljmp	_set_ui_state
                                   2137 ;	../UI_Manager/ui.c:651: }
      000B03                       2138 00112$:
                                   2139 ;	../UI_Manager/ui.c:653: if(Changed){
      000B03 E5*01            [12] 2140 	mov	a,_Changed
      000B05 60 35            [24] 2141 	jz	00114$
                                   2142 ;	../UI_Manager/ui.c:654: Changed = 0x00;
      000B07 75*01 00         [24] 2143 	mov	_Changed,#0x00
                                   2144 ;	../UI_Manager/ui.c:655: changed = 0xFF;
      000B0A 75*02 FF         [24] 2145 	mov	_changed,#0xff
                                   2146 ;	../UI_Manager/ui.c:657: exe_command(CLEAR_DISPLAY);
      000B0D 90 80 00         [24] 2147 	mov	dptr,#0x8000
      000B10 C0 06            [24] 2148 	push	ar6
      000B12 12r00r00         [24] 2149 	lcall	_exe_command
                                   2150 ;	../UI_Manager/ui.c:659: write_string(getString(COLOR_STRING_OFFSET + State), LINE_LENGTH, 3, LINE_0, NOT_SELECTED);
      000B15 AF*00            [24] 2151 	mov	r7,_State
      000B17 74 C8            [12] 2152 	mov	a,#0xc8
      000B19 2F               [12] 2153 	add	a,r7
      000B1A F5 82            [12] 2154 	mov	dpl,a
      000B1C 12r0Fr8B         [24] 2155 	lcall	_getString
      000B1F AC 82            [24] 2156 	mov	r4,dpl
      000B21 AD 83            [24] 2157 	mov	r5,dph
      000B23 AF F0            [24] 2158 	mov	r7,b
      000B25 75*00 10         [24] 2159 	mov	_write_string_PARM_2,#0x10
      000B28 75*00 03         [24] 2160 	mov	_write_string_PARM_3,#0x03
      000B2B 75*00 00         [24] 2161 	mov	_write_string_PARM_4,#0x00
      000B2E 75*00 00         [24] 2162 	mov	_write_string_PARM_5,#0x00
      000B31 8C 82            [24] 2163 	mov	dpl,r4
      000B33 8D 83            [24] 2164 	mov	dph,r5
      000B35 8F F0            [24] 2165 	mov	b,r7
      000B37 12r00r00         [24] 2166 	lcall	_write_string
      000B3A D0 06            [24] 2167 	pop	ar6
      000B3C                       2168 00114$:
                                   2169 ;	../UI_Manager/ui.c:663: if(changed){
      000B3C E5*02            [12] 2170 	mov	a,_changed
      000B3E 60 55            [24] 2171 	jz	00120$
                                   2172 ;	../UI_Manager/ui.c:664: changed = 0x00;
      000B40 75*02 00         [24] 2173 	mov	_changed,#0x00
                                   2174 ;	../UI_Manager/ui.c:666: if(get_runtime_data(index) == 0){
      000B43 8E 82            [24] 2175 	mov	dpl,r6
      000B45 C0 06            [24] 2176 	push	ar6
      000B47 12r00r00         [24] 2177 	lcall	_get_runtime_data
      000B4A E5 82            [12] 2178 	mov	a,dpl
      000B4C D0 06            [24] 2179 	pop	ar6
                                   2180 ;	../UI_Manager/ui.c:667: write_string("Off", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000B4E 70 14            [24] 2181 	jnz	00116$
      000B50 75*00 10         [24] 2182 	mov	_write_string_PARM_2,#0x10
      000B53 75*00 06         [24] 2183 	mov	_write_string_PARM_3,#0x06
      000B56 75*00 01         [24] 2184 	mov	_write_string_PARM_4,#0x01
      000B59 F5*00            [12] 2185 	mov	_write_string_PARM_5,a
      000B5B 90r01r08         [24] 2186 	mov	dptr,#___str_23
      000B5E 75 F0 80         [24] 2187 	mov	b,#0x80
      000B61 02r00r00         [24] 2188 	ljmp	_write_string
      000B64                       2189 00116$:
                                   2190 ;	../UI_Manager/ui.c:669: write_string("", LINE_LENGTH, 0, LINE_1, NOT_SELECTED);
      000B64 75*00 10         [24] 2191 	mov	_write_string_PARM_2,#0x10
      000B67 75*00 00         [24] 2192 	mov	_write_string_PARM_3,#0x00
      000B6A 75*00 01         [24] 2193 	mov	_write_string_PARM_4,#0x01
      000B6D 75*00 00         [24] 2194 	mov	_write_string_PARM_5,#0x00
      000B70 90r01r0C         [24] 2195 	mov	dptr,#___str_24
      000B73 75 F0 80         [24] 2196 	mov	b,#0x80
      000B76 C0 06            [24] 2197 	push	ar6
      000B78 12r00r00         [24] 2198 	lcall	_write_string
      000B7B D0 06            [24] 2199 	pop	ar6
                                   2200 ;	../UI_Manager/ui.c:670: write_number(get_runtime_data(index), 6, LINE_1, NOT_SELECTED);
      000B7D 8E 82            [24] 2201 	mov	dpl,r6
      000B7F 12r00r00         [24] 2202 	lcall	_get_runtime_data
      000B82 AF 82            [24] 2203 	mov	r7,dpl
      000B84 7E 00            [12] 2204 	mov	r6,#0x00
      000B86 75*00 06         [24] 2205 	mov	_write_number_PARM_2,#0x06
      000B89 75*00 01         [24] 2206 	mov	_write_number_PARM_3,#0x01
                                   2207 ;	1-genFromRTrack replaced	mov	_write_number_PARM_4,#0x00
      000B8C 8E*00            [24] 2208 	mov	_write_number_PARM_4,r6
      000B8E 8F 82            [24] 2209 	mov	dpl,r7
      000B90 8E 83            [24] 2210 	mov	dph,r6
                                   2211 ;	../UI_Manager/ui.c:673: }
      000B92 02r00r00         [24] 2212 	ljmp	_write_number
      000B95                       2213 00120$:
      000B95 22               [24] 2214 	ret
                                   2215 ;------------------------------------------------------------
                                   2216 ;Allocation info for local variables in function 'remotePage'
                                   2217 ;------------------------------------------------------------
                                   2218 ;action                    Allocated to registers r7 
                                   2219 ;remoteNumber              Allocated to registers r6 
                                   2220 ;index                     Allocated to registers r5 
                                   2221 ;------------------------------------------------------------
                                   2222 ;	../UI_Manager/ui.c:675: void remotePage(uint8_t action){
                                   2223 ;	-----------------------------------------
                                   2224 ;	 function remotePage
                                   2225 ;	-----------------------------------------
      000B96                       2226 _remotePage:
      000B96 AF 82            [24] 2227 	mov	r7,dpl
                                   2228 ;	../UI_Manager/ui.c:676: uint8_t remoteNumber = 0;
      000B98 7E 00            [12] 2229 	mov	r6,#0x00
                                   2230 ;	../UI_Manager/ui.c:677: uint8_t index = 0;
      000B9A 7D 00            [12] 2231 	mov	r5,#0x00
                                   2232 ;	../UI_Manager/ui.c:679: switch (State)
      000B9C AC*00            [24] 2233 	mov	r4,_State
      000B9E BC 0A 02         [24] 2234 	cjne	r4,#0x0a,00168$
      000BA1 80 0A            [24] 2235 	sjmp	00101$
      000BA3                       2236 00168$:
      000BA3 BC 0B 02         [24] 2237 	cjne	r4,#0x0b,00169$
      000BA6 80 0B            [24] 2238 	sjmp	00102$
      000BA8                       2239 00169$:
                                   2240 ;	../UI_Manager/ui.c:681: case MANUAL_REMOTE_ACTION_4_STATE:
      000BA8 BC 0C 12         [24] 2241 	cjne	r4,#0x0c,00104$
      000BAB 80 0C            [24] 2242 	sjmp	00103$
      000BAD                       2243 00101$:
                                   2244 ;	../UI_Manager/ui.c:682: index = R4_INDEX;
      000BAD 7D 09            [12] 2245 	mov	r5,#0x09
                                   2246 ;	../UI_Manager/ui.c:683: remoteNumber = 4;
      000BAF 7E 04            [12] 2247 	mov	r6,#0x04
                                   2248 ;	../UI_Manager/ui.c:684: break;
                                   2249 ;	../UI_Manager/ui.c:685: case MANUAL_REMOTE_ACTION_5_STATE:
      000BB1 80 0A            [24] 2250 	sjmp	00104$
      000BB3                       2251 00102$:
                                   2252 ;	../UI_Manager/ui.c:686: index = R5_INDEX;
      000BB3 7D 0A            [12] 2253 	mov	r5,#0x0a
                                   2254 ;	../UI_Manager/ui.c:687: remoteNumber = 5;
      000BB5 7E 05            [12] 2255 	mov	r6,#0x05
                                   2256 ;	../UI_Manager/ui.c:688: break;
                                   2257 ;	../UI_Manager/ui.c:689: case MANUAL_REMOTE_ACTION_6_STATE:
      000BB7 80 04            [24] 2258 	sjmp	00104$
      000BB9                       2259 00103$:
                                   2260 ;	../UI_Manager/ui.c:690: index = R6_INDEX;
      000BB9 7D 0B            [12] 2261 	mov	r5,#0x0b
                                   2262 ;	../UI_Manager/ui.c:691: remoteNumber = 6;
      000BBB 7E 06            [12] 2263 	mov	r6,#0x06
                                   2264 ;	../UI_Manager/ui.c:693: }
      000BBD                       2265 00104$:
                                   2266 ;	../UI_Manager/ui.c:695: switch (action)
      000BBD BF 01 02         [24] 2267 	cjne	r7,#0x01,00171$
      000BC0 80 48            [24] 2268 	sjmp	00108$
      000BC2                       2269 00171$:
      000BC2 BF 02 02         [24] 2270 	cjne	r7,#0x02,00172$
      000BC5 80 3A            [24] 2271 	sjmp	00107$
      000BC7                       2272 00172$:
      000BC7 BF 03 02         [24] 2273 	cjne	r7,#0x03,00173$
      000BCA 80 05            [24] 2274 	sjmp	00105$
      000BCC                       2275 00173$:
                                   2276 ;	../UI_Manager/ui.c:697: case BUTTON_UP:
      000BCC BF 0B 44         [24] 2277 	cjne	r7,#0x0b,00109$
      000BCF 80 18            [24] 2278 	sjmp	00106$
      000BD1                       2279 00105$:
                                   2280 ;	../UI_Manager/ui.c:698: set_runtime_data(index, INC, NULL);
      000BD1 75*00 01         [24] 2281 	mov	_set_runtime_data_PARM_2,#0x01
      000BD4 75*00 00         [24] 2282 	mov	_set_runtime_data_PARM_3,#0x00
      000BD7 8D 82            [24] 2283 	mov	dpl,r5
      000BD9 C0 06            [24] 2284 	push	ar6
      000BDB C0 05            [24] 2285 	push	ar5
      000BDD 12r00r00         [24] 2286 	lcall	_set_runtime_data
      000BE0 D0 05            [24] 2287 	pop	ar5
      000BE2 D0 06            [24] 2288 	pop	ar6
                                   2289 ;	../UI_Manager/ui.c:699: changed = 0xFF;
      000BE4 75*02 FF         [24] 2290 	mov	_changed,#0xff
                                   2291 ;	../UI_Manager/ui.c:700: break;
                                   2292 ;	../UI_Manager/ui.c:701: case BUTTON_DOWN:
      000BE7 80 2A            [24] 2293 	sjmp	00109$
      000BE9                       2294 00106$:
                                   2295 ;	../UI_Manager/ui.c:702: set_runtime_data(index, DEC, NULL);
      000BE9 75*00 02         [24] 2296 	mov	_set_runtime_data_PARM_2,#0x02
      000BEC 75*00 00         [24] 2297 	mov	_set_runtime_data_PARM_3,#0x00
      000BEF 8D 82            [24] 2298 	mov	dpl,r5
      000BF1 C0 06            [24] 2299 	push	ar6
      000BF3 C0 05            [24] 2300 	push	ar5
      000BF5 12r00r00         [24] 2301 	lcall	_set_runtime_data
      000BF8 D0 05            [24] 2302 	pop	ar5
      000BFA D0 06            [24] 2303 	pop	ar6
                                   2304 ;	../UI_Manager/ui.c:703: changed = 0xFF;  
      000BFC 75*02 FF         [24] 2305 	mov	_changed,#0xff
                                   2306 ;	../UI_Manager/ui.c:704: break;
                                   2307 ;	../UI_Manager/ui.c:705: case BUTTON_FUNCTION:
      000BFF 80 12            [24] 2308 	sjmp	00109$
      000C01                       2309 00107$:
                                   2310 ;	../UI_Manager/ui.c:706: set_ui_state(INC, NULL);
      000C01 75*0F 00         [24] 2311 	mov	_set_ui_state_PARM_2,#0x00
      000C04 75 82 01         [24] 2312 	mov	dpl,#0x01
                                   2313 ;	../UI_Manager/ui.c:707: return;
      000C07 02r0ErF7         [24] 2314 	ljmp	_set_ui_state
                                   2315 ;	../UI_Manager/ui.c:708: case BUTTON_TIMER:
      000C0A                       2316 00108$:
                                   2317 ;	../UI_Manager/ui.c:709: set_ui_state(DEC, NULL);
      000C0A 75*0F 00         [24] 2318 	mov	_set_ui_state_PARM_2,#0x00
      000C0D 75 82 02         [24] 2319 	mov	dpl,#0x02
                                   2320 ;	../UI_Manager/ui.c:710: return;
      000C10 02r0ErF7         [24] 2321 	ljmp	_set_ui_state
                                   2322 ;	../UI_Manager/ui.c:711: }
      000C13                       2323 00109$:
                                   2324 ;	../UI_Manager/ui.c:713: if(Changed){
      000C13 E5*01            [12] 2325 	mov	a,_Changed
      000C15 60 6C            [24] 2326 	jz	00115$
                                   2327 ;	../UI_Manager/ui.c:714: Changed = 0x00;
      000C17 75*01 00         [24] 2328 	mov	_Changed,#0x00
                                   2329 ;	../UI_Manager/ui.c:715: changed = 0xFF;
      000C1A 75*02 FF         [24] 2330 	mov	_changed,#0xff
                                   2331 ;	../UI_Manager/ui.c:717: exe_command(CLEAR_DISPLAY);
      000C1D 90 80 00         [24] 2332 	mov	dptr,#0x8000
      000C20 C0 06            [24] 2333 	push	ar6
      000C22 C0 05            [24] 2334 	push	ar5
      000C24 12r00r00         [24] 2335 	lcall	_exe_command
                                   2336 ;	../UI_Manager/ui.c:719: write_string("Remote X Action", sizeof("Remote X Action"), 1, LINE_0, NOT_SELECTED);
      000C27 75*00 10         [24] 2337 	mov	_write_string_PARM_2,#0x10
      000C2A 75*00 01         [24] 2338 	mov	_write_string_PARM_3,#0x01
      000C2D 75*00 00         [24] 2339 	mov	_write_string_PARM_4,#0x00
      000C30 75*00 00         [24] 2340 	mov	_write_string_PARM_5,#0x00
      000C33 90r01r0D         [24] 2341 	mov	dptr,#___str_25
      000C36 75 F0 80         [24] 2342 	mov	b,#0x80
      000C39 12r00r00         [24] 2343 	lcall	_write_string
      000C3C D0 05            [24] 2344 	pop	ar5
      000C3E D0 06            [24] 2345 	pop	ar6
                                   2346 ;	../UI_Manager/ui.c:720: switch (remoteNumber)
      000C40 BE 04 02         [24] 2347 	cjne	r6,#0x04,00176$
      000C43 80 0A            [24] 2348 	sjmp	00110$
      000C45                       2349 00176$:
      000C45 BE 05 02         [24] 2350 	cjne	r6,#0x05,00177$
      000C48 80 17            [24] 2351 	sjmp	00111$
      000C4A                       2352 00177$:
                                   2353 ;	../UI_Manager/ui.c:722: case 4:
      000C4A BE 06 36         [24] 2354 	cjne	r6,#0x06,00115$
      000C4D 80 24            [24] 2355 	sjmp	00112$
      000C4F                       2356 00110$:
                                   2357 ;	../UI_Manager/ui.c:723: write_char(CHAR_4, 8, LINE_0);
      000C4F 75*00 08         [24] 2358 	mov	_write_char_PARM_2,#0x08
      000C52 75*00 00         [24] 2359 	mov	_write_char_PARM_3,#0x00
      000C55 75 82 2C         [24] 2360 	mov	dpl,#0x2c
      000C58 C0 05            [24] 2361 	push	ar5
      000C5A 12r00r00         [24] 2362 	lcall	_write_char
      000C5D D0 05            [24] 2363 	pop	ar5
                                   2364 ;	../UI_Manager/ui.c:724: break;
                                   2365 ;	../UI_Manager/ui.c:725: case 5:
      000C5F 80 22            [24] 2366 	sjmp	00115$
      000C61                       2367 00111$:
                                   2368 ;	../UI_Manager/ui.c:726: write_char(CHAR_5, 8, LINE_0);
      000C61 75*00 08         [24] 2369 	mov	_write_char_PARM_2,#0x08
      000C64 75*00 00         [24] 2370 	mov	_write_char_PARM_3,#0x00
      000C67 75 82 AC         [24] 2371 	mov	dpl,#0xac
      000C6A C0 05            [24] 2372 	push	ar5
      000C6C 12r00r00         [24] 2373 	lcall	_write_char
      000C6F D0 05            [24] 2374 	pop	ar5
                                   2375 ;	../UI_Manager/ui.c:727: break;
                                   2376 ;	../UI_Manager/ui.c:728: case 6:
      000C71 80 10            [24] 2377 	sjmp	00115$
      000C73                       2378 00112$:
                                   2379 ;	../UI_Manager/ui.c:729: write_char(CHAR_6, 8, LINE_0);
      000C73 75*00 08         [24] 2380 	mov	_write_char_PARM_2,#0x08
      000C76 75*00 00         [24] 2381 	mov	_write_char_PARM_3,#0x00
      000C79 75 82 6C         [24] 2382 	mov	dpl,#0x6c
      000C7C C0 05            [24] 2383 	push	ar5
      000C7E 12r00r00         [24] 2384 	lcall	_write_char
      000C81 D0 05            [24] 2385 	pop	ar5
                                   2386 ;	../UI_Manager/ui.c:731: }
      000C83                       2387 00115$:
                                   2388 ;	../UI_Manager/ui.c:734: if(changed){
      000C83 E5*02            [12] 2389 	mov	a,_changed
      000C85 60 2D            [24] 2390 	jz	00118$
                                   2391 ;	../UI_Manager/ui.c:735: changed = 0x00;
      000C87 75*02 00         [24] 2392 	mov	_changed,#0x00
                                   2393 ;	../UI_Manager/ui.c:736: write_string(getString(get_runtime_data(index) + WIRELESS_ACTION_STRING_OFFSET), LINE_LENGTH, 2, LINE_1, NOT_SELECTED);  
      000C8A 8D 82            [24] 2394 	mov	dpl,r5
      000C8C 12r00r00         [24] 2395 	lcall	_get_runtime_data
      000C8F AF 82            [24] 2396 	mov	r7,dpl
      000C91 74 3C            [12] 2397 	mov	a,#0x3c
      000C93 2F               [12] 2398 	add	a,r7
      000C94 F5 82            [12] 2399 	mov	dpl,a
      000C96 12r0Fr8B         [24] 2400 	lcall	_getString
      000C99 AD 82            [24] 2401 	mov	r5,dpl
      000C9B AE 83            [24] 2402 	mov	r6,dph
      000C9D AF F0            [24] 2403 	mov	r7,b
      000C9F 75*00 10         [24] 2404 	mov	_write_string_PARM_2,#0x10
      000CA2 75*00 02         [24] 2405 	mov	_write_string_PARM_3,#0x02
      000CA5 75*00 01         [24] 2406 	mov	_write_string_PARM_4,#0x01
      000CA8 75*00 00         [24] 2407 	mov	_write_string_PARM_5,#0x00
      000CAB 8D 82            [24] 2408 	mov	dpl,r5
      000CAD 8E 83            [24] 2409 	mov	dph,r6
      000CAF 8F F0            [24] 2410 	mov	b,r7
                                   2411 ;	../UI_Manager/ui.c:738: }
      000CB1 02r00r00         [24] 2412 	ljmp	_write_string
      000CB4                       2413 00118$:
      000CB4 22               [24] 2414 	ret
                                   2415 ;------------------------------------------------------------
                                   2416 ;Allocation info for local variables in function 'saveLoadPage'
                                   2417 ;------------------------------------------------------------
                                   2418 ;slot                      Allocated with name '_saveLoadPage_slot_65536_141'
                                   2419 ;action                    Allocated to registers r7 
                                   2420 ;------------------------------------------------------------
                                   2421 ;	../UI_Manager/ui.c:740: void saveLoadPage(uint8_t action){
                                   2422 ;	-----------------------------------------
                                   2423 ;	 function saveLoadPage
                                   2424 ;	-----------------------------------------
      000CB5                       2425 _saveLoadPage:
      000CB5 AF 82            [24] 2426 	mov	r7,dpl
                                   2427 ;	../UI_Manager/ui.c:743: switch (action)
      000CB7 BF 01 03         [24] 2428 	cjne	r7,#0x01,00161$
      000CBA 02r0Dr54         [24] 2429 	ljmp	00108$
      000CBD                       2430 00161$:
      000CBD BF 02 03         [24] 2431 	cjne	r7,#0x02,00162$
      000CC0 02r0Dr4B         [24] 2432 	ljmp	00107$
      000CC3                       2433 00162$:
      000CC3 BF 03 03         [24] 2434 	cjne	r7,#0x03,00163$
      000CC6 02r0Dr3D         [24] 2435 	ljmp	00105$
      000CC9                       2436 00163$:
      000CC9 BF 0B 03         [24] 2437 	cjne	r7,#0x0b,00164$
      000CCC 02r0Dr44         [24] 2438 	ljmp	00106$
      000CCF                       2439 00164$:
      000CCF BF 1E 02         [24] 2440 	cjne	r7,#0x1e,00165$
      000CD2 80 03            [24] 2441 	sjmp	00166$
      000CD4                       2442 00165$:
      000CD4 02r0Dr5D         [24] 2443 	ljmp	00109$
      000CD7                       2444 00166$:
                                   2445 ;	../UI_Manager/ui.c:746: save_load_settings(slot % (SLOT_COUNT - 1), (State == MANUAL_SAVE_SETTINGS_STATE) ? SAVE : LOAD);
      000CD7 75 F0 03         [24] 2446 	mov	b,#0x03
      000CDA E5*0E            [12] 2447 	mov	a,_saveLoadPage_slot_65536_141
      000CDC 84               [48] 2448 	div	ab
      000CDD AF F0            [24] 2449 	mov	r7,b
      000CDF 74 0D            [12] 2450 	mov	a,#0x0d
      000CE1 B5*00 06         [24] 2451 	cjne	a,_State,00119$
      000CE4 7D 01            [12] 2452 	mov	r5,#0x01
      000CE6 7E 00            [12] 2453 	mov	r6,#0x00
      000CE8 80 04            [24] 2454 	sjmp	00120$
      000CEA                       2455 00119$:
      000CEA 7D 00            [12] 2456 	mov	r5,#0x00
      000CEC 7E 00            [12] 2457 	mov	r6,#0x00
      000CEE                       2458 00120$:
      000CEE 8D*00            [24] 2459 	mov	_save_load_settings_PARM_2,r5
      000CF0 8F 82            [24] 2460 	mov	dpl,r7
      000CF2 12r00r00         [24] 2461 	lcall	_save_load_settings
                                   2462 ;	../UI_Manager/ui.c:747: write_string("", LINE_LENGTH, 0, LINE_1, NOT_SELECTED); 
      000CF5 75*00 10         [24] 2463 	mov	_write_string_PARM_2,#0x10
      000CF8 75*00 00         [24] 2464 	mov	_write_string_PARM_3,#0x00
      000CFB 75*00 01         [24] 2465 	mov	_write_string_PARM_4,#0x01
      000CFE 75*00 00         [24] 2466 	mov	_write_string_PARM_5,#0x00
      000D01 90r01r0C         [24] 2467 	mov	dptr,#___str_24
      000D04 75 F0 80         [24] 2468 	mov	b,#0x80
      000D07 12r00r00         [24] 2469 	lcall	_write_string
                                   2470 ;	../UI_Manager/ui.c:749: if(State == MANUAL_SAVE_SETTINGS_STATE){
      000D0A 74 0D            [12] 2471 	mov	a,#0x0d
      000D0C B5*00 17         [24] 2472 	cjne	a,_State,00103$
                                   2473 ;	../UI_Manager/ui.c:750: write_string("Saved!", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000D0F 75*00 10         [24] 2474 	mov	_write_string_PARM_2,#0x10
      000D12 75*00 06         [24] 2475 	mov	_write_string_PARM_3,#0x06
      000D15 75*00 01         [24] 2476 	mov	_write_string_PARM_4,#0x01
      000D18 75*00 00         [24] 2477 	mov	_write_string_PARM_5,#0x00
      000D1B 90r01r1D         [24] 2478 	mov	dptr,#___str_26
      000D1E 75 F0 80         [24] 2479 	mov	b,#0x80
      000D21 12r00r00         [24] 2480 	lcall	_write_string
      000D24 80 37            [24] 2481 	sjmp	00109$
      000D26                       2482 00103$:
                                   2483 ;	../UI_Manager/ui.c:752: write_string("Loaded!", LINE_LENGTH, 6, LINE_1, NOT_SELECTED);
      000D26 75*00 10         [24] 2484 	mov	_write_string_PARM_2,#0x10
      000D29 75*00 06         [24] 2485 	mov	_write_string_PARM_3,#0x06
      000D2C 75*00 01         [24] 2486 	mov	_write_string_PARM_4,#0x01
      000D2F 75*00 00         [24] 2487 	mov	_write_string_PARM_5,#0x00
      000D32 90r01r24         [24] 2488 	mov	dptr,#___str_27
      000D35 75 F0 80         [24] 2489 	mov	b,#0x80
      000D38 12r00r00         [24] 2490 	lcall	_write_string
                                   2491 ;	../UI_Manager/ui.c:754: break;
                                   2492 ;	../UI_Manager/ui.c:755: case BUTTON_UP:
      000D3B 80 20            [24] 2493 	sjmp	00109$
      000D3D                       2494 00105$:
                                   2495 ;	../UI_Manager/ui.c:756: slot++;
      000D3D 05*0E            [12] 2496 	inc	_saveLoadPage_slot_65536_141
                                   2497 ;	../UI_Manager/ui.c:757: changed = 0xFF;
      000D3F 75*02 FF         [24] 2498 	mov	_changed,#0xff
                                   2499 ;	../UI_Manager/ui.c:758: break;
                                   2500 ;	../UI_Manager/ui.c:759: case BUTTON_DOWN:
      000D42 80 19            [24] 2501 	sjmp	00109$
      000D44                       2502 00106$:
                                   2503 ;	../UI_Manager/ui.c:760: slot--;
      000D44 15*0E            [12] 2504 	dec	_saveLoadPage_slot_65536_141
                                   2505 ;	../UI_Manager/ui.c:761: changed = 0xFF;  
      000D46 75*02 FF         [24] 2506 	mov	_changed,#0xff
                                   2507 ;	../UI_Manager/ui.c:762: break;
                                   2508 ;	../UI_Manager/ui.c:763: case BUTTON_FUNCTION:
      000D49 80 12            [24] 2509 	sjmp	00109$
      000D4B                       2510 00107$:
                                   2511 ;	../UI_Manager/ui.c:764: set_ui_state(INC, NULL);
      000D4B 75*0F 00         [24] 2512 	mov	_set_ui_state_PARM_2,#0x00
      000D4E 75 82 01         [24] 2513 	mov	dpl,#0x01
                                   2514 ;	../UI_Manager/ui.c:765: return;
      000D51 02r0ErF7         [24] 2515 	ljmp	_set_ui_state
                                   2516 ;	../UI_Manager/ui.c:766: case BUTTON_TIMER:
      000D54                       2517 00108$:
                                   2518 ;	../UI_Manager/ui.c:767: set_ui_state(DEC, NULL);
      000D54 75*0F 00         [24] 2519 	mov	_set_ui_state_PARM_2,#0x00
      000D57 75 82 02         [24] 2520 	mov	dpl,#0x02
                                   2521 ;	../UI_Manager/ui.c:768: return;
      000D5A 02r0ErF7         [24] 2522 	ljmp	_set_ui_state
                                   2523 ;	../UI_Manager/ui.c:769: }
      000D5D                       2524 00109$:
                                   2525 ;	../UI_Manager/ui.c:771: if(Changed){
      000D5D E5*01            [12] 2526 	mov	a,_Changed
      000D5F 60 3D            [24] 2527 	jz	00114$
                                   2528 ;	../UI_Manager/ui.c:772: Changed = 0x00;
      000D61 75*01 00         [24] 2529 	mov	_Changed,#0x00
                                   2530 ;	../UI_Manager/ui.c:773: changed = 0xFF;
      000D64 75*02 FF         [24] 2531 	mov	_changed,#0xff
                                   2532 ;	../UI_Manager/ui.c:775: exe_command(CLEAR_DISPLAY);
      000D67 90 80 00         [24] 2533 	mov	dptr,#0x8000
      000D6A 12r00r00         [24] 2534 	lcall	_exe_command
                                   2535 ;	../UI_Manager/ui.c:777: if(State == MANUAL_SAVE_SETTINGS_STATE){
      000D6D 74 0D            [12] 2536 	mov	a,#0x0d
      000D6F B5*00 17         [24] 2537 	cjne	a,_State,00111$
                                   2538 ;	../UI_Manager/ui.c:778: write_string("Save Settings", sizeof("Save Settings"), 2, LINE_0, NOT_SELECTED);
      000D72 75*00 0E         [24] 2539 	mov	_write_string_PARM_2,#0x0e
      000D75 75*00 02         [24] 2540 	mov	_write_string_PARM_3,#0x02
      000D78 75*00 00         [24] 2541 	mov	_write_string_PARM_4,#0x00
      000D7B 75*00 00         [24] 2542 	mov	_write_string_PARM_5,#0x00
      000D7E 90r01r2C         [24] 2543 	mov	dptr,#___str_28
      000D81 75 F0 80         [24] 2544 	mov	b,#0x80
      000D84 12r00r00         [24] 2545 	lcall	_write_string
      000D87 80 15            [24] 2546 	sjmp	00114$
      000D89                       2547 00111$:
                                   2548 ;	../UI_Manager/ui.c:780: write_string("Load Settings", sizeof("Load Settings"), 2, LINE_0, NOT_SELECTED);
      000D89 75*00 0E         [24] 2549 	mov	_write_string_PARM_2,#0x0e
      000D8C 75*00 02         [24] 2550 	mov	_write_string_PARM_3,#0x02
      000D8F 75*00 00         [24] 2551 	mov	_write_string_PARM_4,#0x00
      000D92 75*00 00         [24] 2552 	mov	_write_string_PARM_5,#0x00
      000D95 90r01r3A         [24] 2553 	mov	dptr,#___str_29
      000D98 75 F0 80         [24] 2554 	mov	b,#0x80
      000D9B 12r00r00         [24] 2555 	lcall	_write_string
      000D9E                       2556 00114$:
                                   2557 ;	../UI_Manager/ui.c:785: if(changed){
      000D9E E5*02            [12] 2558 	mov	a,_changed
      000DA0 60 2E            [24] 2559 	jz	00117$
                                   2560 ;	../UI_Manager/ui.c:786: changed = 0x00;
      000DA2 75*02 00         [24] 2561 	mov	_changed,#0x00
                                   2562 ;	../UI_Manager/ui.c:787: write_string(getString((slot % (SLOT_COUNT - 1)) + SAVE_LOAD_STRING_OFFSET), LINE_LENGTH, 4, LINE_1, NOT_SELECTED);  
      000DA5 75 F0 03         [24] 2563 	mov	b,#0x03
      000DA8 E5*0E            [12] 2564 	mov	a,_saveLoadPage_slot_65536_141
      000DAA 84               [48] 2565 	div	ab
      000DAB AF F0            [24] 2566 	mov	r7,b
      000DAD 74 50            [12] 2567 	mov	a,#0x50
      000DAF 2F               [12] 2568 	add	a,r7
      000DB0 F5 82            [12] 2569 	mov	dpl,a
      000DB2 12r0Fr8B         [24] 2570 	lcall	_getString
      000DB5 AD 82            [24] 2571 	mov	r5,dpl
      000DB7 AE 83            [24] 2572 	mov	r6,dph
      000DB9 AF F0            [24] 2573 	mov	r7,b
      000DBB 75*00 10         [24] 2574 	mov	_write_string_PARM_2,#0x10
      000DBE 75*00 04         [24] 2575 	mov	_write_string_PARM_3,#0x04
      000DC1 75*00 01         [24] 2576 	mov	_write_string_PARM_4,#0x01
      000DC4 75*00 00         [24] 2577 	mov	_write_string_PARM_5,#0x00
      000DC7 8D 82            [24] 2578 	mov	dpl,r5
      000DC9 8E 83            [24] 2579 	mov	dph,r6
      000DCB 8F F0            [24] 2580 	mov	b,r7
                                   2581 ;	../UI_Manager/ui.c:790: }
      000DCD 02r00r00         [24] 2582 	ljmp	_write_string
      000DD0                       2583 00117$:
      000DD0 22               [24] 2584 	ret
                                   2585 ;------------------------------------------------------------
                                   2586 ;Allocation info for local variables in function 'dmxAddressPage'
                                   2587 ;------------------------------------------------------------
                                   2588 ;action                    Allocated to registers r7 
                                   2589 ;------------------------------------------------------------
                                   2590 ;	../UI_Manager/ui.c:792: void dmxAddressPage(uint8_t action){
                                   2591 ;	-----------------------------------------
                                   2592 ;	 function dmxAddressPage
                                   2593 ;	-----------------------------------------
      000DD1                       2594 _dmxAddressPage:
      000DD1 AF 82            [24] 2595 	mov	r7,dpl
                                   2596 ;	../UI_Manager/ui.c:794: switch (action)
      000DD3 BF 01 02         [24] 2597 	cjne	r7,#0x01,00146$
      000DD6 80 38            [24] 2598 	sjmp	00106$
      000DD8                       2599 00146$:
      000DD8 BF 02 02         [24] 2600 	cjne	r7,#0x02,00147$
      000DDB 80 2A            [24] 2601 	sjmp	00105$
      000DDD                       2602 00147$:
      000DDD BF 03 02         [24] 2603 	cjne	r7,#0x03,00148$
      000DE0 80 0F            [24] 2604 	sjmp	00102$
      000DE2                       2605 00148$:
      000DE2 BF 0B 02         [24] 2606 	cjne	r7,#0x0b,00149$
      000DE5 80 15            [24] 2607 	sjmp	00104$
      000DE7                       2608 00149$:
      000DE7 BF 1F 02         [24] 2609 	cjne	r7,#0x1f,00150$
      000DEA 80 05            [24] 2610 	sjmp	00102$
      000DEC                       2611 00150$:
                                   2612 ;	../UI_Manager/ui.c:797: case BUTTON_UP:
      000DEC BF 6F 2A         [24] 2613 	cjne	r7,#0x6f,00107$
      000DEF 80 0B            [24] 2614 	sjmp	00104$
      000DF1                       2615 00102$:
                                   2616 ;	../UI_Manager/ui.c:798: set_dmx_address(INC);
      000DF1 75 82 01         [24] 2617 	mov	dpl,#0x01
      000DF4 12r00r00         [24] 2618 	lcall	_set_dmx_address
                                   2619 ;	../UI_Manager/ui.c:799: changed = 0xFF;
      000DF7 75*02 FF         [24] 2620 	mov	_changed,#0xff
                                   2621 ;	../UI_Manager/ui.c:800: break;
                                   2622 ;	../UI_Manager/ui.c:802: case BUTTON_DOWN:
      000DFA 80 1D            [24] 2623 	sjmp	00107$
      000DFC                       2624 00104$:
                                   2625 ;	../UI_Manager/ui.c:803: set_dmx_address(DEC);
      000DFC 75 82 02         [24] 2626 	mov	dpl,#0x02
      000DFF 12r00r00         [24] 2627 	lcall	_set_dmx_address
                                   2628 ;	../UI_Manager/ui.c:804: changed = 0xFF;  
      000E02 75*02 FF         [24] 2629 	mov	_changed,#0xff
                                   2630 ;	../UI_Manager/ui.c:805: break;
                                   2631 ;	../UI_Manager/ui.c:806: case BUTTON_FUNCTION:
      000E05 80 12            [24] 2632 	sjmp	00107$
      000E07                       2633 00105$:
                                   2634 ;	../UI_Manager/ui.c:807: set_ui_state(INC, NULL);
      000E07 75*0F 00         [24] 2635 	mov	_set_ui_state_PARM_2,#0x00
      000E0A 75 82 01         [24] 2636 	mov	dpl,#0x01
                                   2637 ;	../UI_Manager/ui.c:808: return;
                                   2638 ;	../UI_Manager/ui.c:809: case BUTTON_TIMER:
      000E0D 02r0ErF7         [24] 2639 	ljmp	_set_ui_state
      000E10                       2640 00106$:
                                   2641 ;	../UI_Manager/ui.c:810: set_ui_state(DEC, NULL);
      000E10 75*0F 00         [24] 2642 	mov	_set_ui_state_PARM_2,#0x00
      000E13 75 82 02         [24] 2643 	mov	dpl,#0x02
                                   2644 ;	../UI_Manager/ui.c:811: return;
                                   2645 ;	../UI_Manager/ui.c:812: }
      000E16 02r0ErF7         [24] 2646 	ljmp	_set_ui_state
      000E19                       2647 00107$:
                                   2648 ;	../UI_Manager/ui.c:814: if(Changed){
      000E19 E5*01            [12] 2649 	mov	a,_Changed
      000E1B 60 21            [24] 2650 	jz	00109$
                                   2651 ;	../UI_Manager/ui.c:815: Changed = 0x00;
      000E1D 75*01 00         [24] 2652 	mov	_Changed,#0x00
                                   2653 ;	../UI_Manager/ui.c:816: changed = 0xFF;
      000E20 75*02 FF         [24] 2654 	mov	_changed,#0xff
                                   2655 ;	../UI_Manager/ui.c:818: exe_command(CLEAR_DISPLAY);
      000E23 90 80 00         [24] 2656 	mov	dptr,#0x8000
      000E26 12r00r00         [24] 2657 	lcall	_exe_command
                                   2658 ;	../UI_Manager/ui.c:820: write_string("DMX Address", sizeof("DMX Address"), 2, LINE_0, NOT_SELECTED);
      000E29 75*00 0C         [24] 2659 	mov	_write_string_PARM_2,#0x0c
      000E2C 75*00 02         [24] 2660 	mov	_write_string_PARM_3,#0x02
      000E2F 75*00 00         [24] 2661 	mov	_write_string_PARM_4,#0x00
      000E32 75*00 00         [24] 2662 	mov	_write_string_PARM_5,#0x00
      000E35 90r01r48         [24] 2663 	mov	dptr,#___str_30
      000E38 75 F0 80         [24] 2664 	mov	b,#0x80
      000E3B 12r00r00         [24] 2665 	lcall	_write_string
      000E3E                       2666 00109$:
                                   2667 ;	../UI_Manager/ui.c:823: if(changed){
      000E3E E5*02            [12] 2668 	mov	a,_changed
      000E40 60 12            [24] 2669 	jz	00112$
                                   2670 ;	../UI_Manager/ui.c:824: changed = 0x00;
      000E42 75*02 00         [24] 2671 	mov	_changed,#0x00
                                   2672 ;	../UI_Manager/ui.c:826: write_number(get_dmx_address(), 4, LINE_1, NOT_SELECTED);
      000E45 12r00r00         [24] 2673 	lcall	_get_dmx_address
      000E48 75*00 04         [24] 2674 	mov	_write_number_PARM_2,#0x04
      000E4B 75*00 01         [24] 2675 	mov	_write_number_PARM_3,#0x01
      000E4E 75*00 00         [24] 2676 	mov	_write_number_PARM_4,#0x00
                                   2677 ;	../UI_Manager/ui.c:829: }
      000E51 02r00r00         [24] 2678 	ljmp	_write_number
      000E54                       2679 00112$:
      000E54 22               [24] 2680 	ret
                                   2681 ;------------------------------------------------------------
                                   2682 ;Allocation info for local variables in function 'dmxChannelPage'
                                   2683 ;------------------------------------------------------------
                                   2684 ;action                    Allocated to registers r7 
                                   2685 ;------------------------------------------------------------
                                   2686 ;	../UI_Manager/ui.c:831: void dmxChannelPage(uint8_t action){
                                   2687 ;	-----------------------------------------
                                   2688 ;	 function dmxChannelPage
                                   2689 ;	-----------------------------------------
      000E55                       2690 _dmxChannelPage:
      000E55 AF 82            [24] 2691 	mov	r7,dpl
                                   2692 ;	../UI_Manager/ui.c:833: switch (action)
      000E57 BF 01 02         [24] 2693 	cjne	r7,#0x01,00136$
      000E5A 80 3A            [24] 2694 	sjmp	00104$
      000E5C                       2695 00136$:
      000E5C BF 02 02         [24] 2696 	cjne	r7,#0x02,00137$
      000E5F 80 2C            [24] 2697 	sjmp	00103$
      000E61                       2698 00137$:
      000E61 BF 03 02         [24] 2699 	cjne	r7,#0x03,00138$
      000E64 80 05            [24] 2700 	sjmp	00101$
      000E66                       2701 00138$:
                                   2702 ;	../UI_Manager/ui.c:835: case BUTTON_UP:
      000E66 BF 0B 36         [24] 2703 	cjne	r7,#0x0b,00105$
      000E69 80 11            [24] 2704 	sjmp	00102$
      000E6B                       2705 00101$:
                                   2706 ;	../UI_Manager/ui.c:836: set_runtime_data(MODE_INDEX, INC, NULL);
      000E6B 75*00 01         [24] 2707 	mov	_set_runtime_data_PARM_2,#0x01
      000E6E 75*00 00         [24] 2708 	mov	_set_runtime_data_PARM_3,#0x00
      000E71 75 82 0E         [24] 2709 	mov	dpl,#0x0e
      000E74 12r00r00         [24] 2710 	lcall	_set_runtime_data
                                   2711 ;	../UI_Manager/ui.c:837: changed = 0xFF;
      000E77 75*02 FF         [24] 2712 	mov	_changed,#0xff
                                   2713 ;	../UI_Manager/ui.c:838: break;
                                   2714 ;	../UI_Manager/ui.c:839: case BUTTON_DOWN:
      000E7A 80 23            [24] 2715 	sjmp	00105$
      000E7C                       2716 00102$:
                                   2717 ;	../UI_Manager/ui.c:840: set_runtime_data(MODE_INDEX, DEC, NULL);
      000E7C 75*00 02         [24] 2718 	mov	_set_runtime_data_PARM_2,#0x02
      000E7F 75*00 00         [24] 2719 	mov	_set_runtime_data_PARM_3,#0x00
      000E82 75 82 0E         [24] 2720 	mov	dpl,#0x0e
      000E85 12r00r00         [24] 2721 	lcall	_set_runtime_data
                                   2722 ;	../UI_Manager/ui.c:841: changed = 0xFF;  
      000E88 75*02 FF         [24] 2723 	mov	_changed,#0xff
                                   2724 ;	../UI_Manager/ui.c:842: break;
                                   2725 ;	../UI_Manager/ui.c:843: case BUTTON_FUNCTION:
      000E8B 80 12            [24] 2726 	sjmp	00105$
      000E8D                       2727 00103$:
                                   2728 ;	../UI_Manager/ui.c:844: set_ui_state(INC, NULL);
      000E8D 75*0F 00         [24] 2729 	mov	_set_ui_state_PARM_2,#0x00
      000E90 75 82 01         [24] 2730 	mov	dpl,#0x01
                                   2731 ;	../UI_Manager/ui.c:845: return;
                                   2732 ;	../UI_Manager/ui.c:846: case BUTTON_TIMER:
      000E93 02r0ErF7         [24] 2733 	ljmp	_set_ui_state
      000E96                       2734 00104$:
                                   2735 ;	../UI_Manager/ui.c:847: set_ui_state(DEC, NULL);
      000E96 75*0F 00         [24] 2736 	mov	_set_ui_state_PARM_2,#0x00
      000E99 75 82 02         [24] 2737 	mov	dpl,#0x02
                                   2738 ;	../UI_Manager/ui.c:848: return;
                                   2739 ;	../UI_Manager/ui.c:849: }
      000E9C 02r0ErF7         [24] 2740 	ljmp	_set_ui_state
      000E9F                       2741 00105$:
                                   2742 ;	../UI_Manager/ui.c:851: if(Changed){
      000E9F E5*01            [12] 2743 	mov	a,_Changed
      000EA1 60 21            [24] 2744 	jz	00107$
                                   2745 ;	../UI_Manager/ui.c:852: Changed = 0x00;
      000EA3 75*01 00         [24] 2746 	mov	_Changed,#0x00
                                   2747 ;	../UI_Manager/ui.c:853: changed = 0xFF;
      000EA6 75*02 FF         [24] 2748 	mov	_changed,#0xff
                                   2749 ;	../UI_Manager/ui.c:855: exe_command(CLEAR_DISPLAY);
      000EA9 90 80 00         [24] 2750 	mov	dptr,#0x8000
      000EAC 12r00r00         [24] 2751 	lcall	_exe_command
                                   2752 ;	../UI_Manager/ui.c:857: write_string("DMX Channel Mode", sizeof("DMX Channel Mode"), 0, LINE_0, NOT_SELECTED);
      000EAF 75*00 11         [24] 2753 	mov	_write_string_PARM_2,#0x11
      000EB2 75*00 00         [24] 2754 	mov	_write_string_PARM_3,#0x00
      000EB5 75*00 00         [24] 2755 	mov	_write_string_PARM_4,#0x00
      000EB8 75*00 00         [24] 2756 	mov	_write_string_PARM_5,#0x00
      000EBB 90r01r54         [24] 2757 	mov	dptr,#___str_31
      000EBE 75 F0 80         [24] 2758 	mov	b,#0x80
      000EC1 12r00r00         [24] 2759 	lcall	_write_string
      000EC4                       2760 00107$:
                                   2761 ;	../UI_Manager/ui.c:860: if(changed){
      000EC4 E5*02            [12] 2762 	mov	a,_changed
      000EC6 60 2E            [24] 2763 	jz	00110$
                                   2764 ;	../UI_Manager/ui.c:861: changed = 0x00;
      000EC8 75*02 00         [24] 2765 	mov	_changed,#0x00
                                   2766 ;	../UI_Manager/ui.c:863: write_string(getString(get_runtime_data(MODE_INDEX) + DMX_STRING_OFFSET), LINE_LENGTH, 1, LINE_1, NOT_SELECTED);
      000ECB 75 82 0E         [24] 2767 	mov	dpl,#0x0e
      000ECE 12r00r00         [24] 2768 	lcall	_get_runtime_data
      000ED1 AF 82            [24] 2769 	mov	r7,dpl
      000ED3 74 64            [12] 2770 	mov	a,#0x64
      000ED5 2F               [12] 2771 	add	a,r7
      000ED6 F5 82            [12] 2772 	mov	dpl,a
      000ED8 12r0Fr8B         [24] 2773 	lcall	_getString
      000EDB AD 82            [24] 2774 	mov	r5,dpl
      000EDD AE 83            [24] 2775 	mov	r6,dph
      000EDF AF F0            [24] 2776 	mov	r7,b
      000EE1 75*00 10         [24] 2777 	mov	_write_string_PARM_2,#0x10
      000EE4 75*00 01         [24] 2778 	mov	_write_string_PARM_3,#0x01
      000EE7 75*00 01         [24] 2779 	mov	_write_string_PARM_4,#0x01
      000EEA 75*00 00         [24] 2780 	mov	_write_string_PARM_5,#0x00
      000EED 8D 82            [24] 2781 	mov	dpl,r5
      000EEF 8E 83            [24] 2782 	mov	dph,r6
      000EF1 8F F0            [24] 2783 	mov	b,r7
                                   2784 ;	../UI_Manager/ui.c:866: }
      000EF3 02r00r00         [24] 2785 	ljmp	_write_string
      000EF6                       2786 00110$:
      000EF6 22               [24] 2787 	ret
                                   2788 ;------------------------------------------------------------
                                   2789 ;Allocation info for local variables in function 'set_ui_state'
                                   2790 ;------------------------------------------------------------
                                   2791 ;state                     Allocated with name '_set_ui_state_PARM_2'
                                   2792 ;inc                       Allocated to registers r7 
                                   2793 ;------------------------------------------------------------
                                   2794 ;	../UI_Manager/ui.c:868: void set_ui_state(uint8_t inc, uint8_t state){
                                   2795 ;	-----------------------------------------
                                   2796 ;	 function set_ui_state
                                   2797 ;	-----------------------------------------
      000EF7                       2798 _set_ui_state:
      000EF7 AF 82            [24] 2799 	mov	r7,dpl
                                   2800 ;	../UI_Manager/ui.c:869: Changed = CHANGE_SCREEN_X;
      000EF9 75*01 FF         [24] 2801 	mov	_Changed,#0xff
                                   2802 ;	../UI_Manager/ui.c:871: switch (inc)
      000EFC BF 01 02         [24] 2803 	cjne	r7,#0x01,00187$
      000EFF 80 3D            [24] 2804 	sjmp	00115$
      000F01                       2805 00187$:
      000F01 BF 02 6A         [24] 2806 	cjne	r7,#0x02,00127$
                                   2807 ;	../UI_Manager/ui.c:874: state = State;
      000F04 85*00*0F         [24] 2808 	mov	_set_ui_state_PARM_2,_State
                                   2809 ;	../UI_Manager/ui.c:875: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      000F07 75 82 10         [24] 2810 	mov	dpl,#0x10
      000F0A 12r00r00         [24] 2811 	lcall	_get_runtime_data
      000F0D E5 82            [12] 2812 	mov	a,dpl
      000F0F 70 17            [24] 2813 	jnz	00113$
                                   2814 ;	../UI_Manager/ui.c:876: if(state == IDLE_STATE){
      000F11 E5*0F            [12] 2815 	mov	a,_set_ui_state_PARM_2
      000F13 70 06            [24] 2816 	jnz	00105$
                                   2817 ;	../UI_Manager/ui.c:877: state = DMX_STATE_LOW;
      000F15 75*0F 14         [24] 2818 	mov	_set_ui_state_PARM_2,#0x14
      000F18 02r0Fr83         [24] 2819 	ljmp	00132$
      000F1B                       2820 00105$:
                                   2821 ;	../UI_Manager/ui.c:878: } else if(++state > DMX_STATE_HIGH){
      000F1B 05*0F            [12] 2822 	inc	_set_ui_state_PARM_2
      000F1D E5*0F            [12] 2823 	mov	a,_set_ui_state_PARM_2
      000F1F 24 EA            [12] 2824 	add	a,#0xff - 0x15
      000F21 50 60            [24] 2825 	jnc	00132$
                                   2826 ;	../UI_Manager/ui.c:879: state = IDLE_STATE;
      000F23 75*0F 00         [24] 2827 	mov	_set_ui_state_PARM_2,#0x00
      000F26 80 5B            [24] 2828 	sjmp	00132$
      000F28                       2829 00113$:
                                   2830 ;	../UI_Manager/ui.c:882: if(state == IDLE_STATE){
      000F28 E5*0F            [12] 2831 	mov	a,_set_ui_state_PARM_2
      000F2A 70 05            [24] 2832 	jnz	00110$
                                   2833 ;	../UI_Manager/ui.c:883: state = IDLE_STATE + 1; 
      000F2C 75*0F 01         [24] 2834 	mov	_set_ui_state_PARM_2,#0x01
      000F2F 80 52            [24] 2835 	sjmp	00132$
      000F31                       2836 00110$:
                                   2837 ;	../UI_Manager/ui.c:884: } else if(++state > MANUAL_STATE_HIGH){
      000F31 05*0F            [12] 2838 	inc	_set_ui_state_PARM_2
      000F33 E5*0F            [12] 2839 	mov	a,_set_ui_state_PARM_2
      000F35 24 F1            [12] 2840 	add	a,#0xff - 0x0e
      000F37 50 4A            [24] 2841 	jnc	00132$
                                   2842 ;	../UI_Manager/ui.c:885: state = IDLE_STATE;
      000F39 75*0F 00         [24] 2843 	mov	_set_ui_state_PARM_2,#0x00
                                   2844 ;	../UI_Manager/ui.c:888: break;
                                   2845 ;	../UI_Manager/ui.c:889: case INC:
      000F3C 80 45            [24] 2846 	sjmp	00132$
      000F3E                       2847 00115$:
                                   2848 ;	../UI_Manager/ui.c:890: state = State;
      000F3E 85*00*0F         [24] 2849 	mov	_set_ui_state_PARM_2,_State
                                   2850 ;	../UI_Manager/ui.c:891: if(get_runtime_data(OP_MODE_INDEX) == MODE_DMX){
      000F41 75 82 10         [24] 2851 	mov	dpl,#0x10
      000F44 12r00r00         [24] 2852 	lcall	_get_runtime_data
      000F47 E5 82            [12] 2853 	mov	a,dpl
      000F49 70 16            [24] 2854 	jnz	00125$
                                   2855 ;	../UI_Manager/ui.c:892: if(state == IDLE_STATE){
      000F4B E5*0F            [12] 2856 	mov	a,_set_ui_state_PARM_2
      000F4D 70 05            [24] 2857 	jnz	00119$
                                   2858 ;	../UI_Manager/ui.c:893: state = DMX_STATE_HIGH;
      000F4F 75*0F 15         [24] 2859 	mov	_set_ui_state_PARM_2,#0x15
      000F52 80 2F            [24] 2860 	sjmp	00132$
      000F54                       2861 00119$:
                                   2862 ;	../UI_Manager/ui.c:894: } else if(--state < DMX_STATE_LOW){
      000F54 15*0F            [12] 2863 	dec	_set_ui_state_PARM_2
      000F56 74 EC            [12] 2864 	mov	a,#0x100 - 0x14
      000F58 25*0F            [12] 2865 	add	a,_set_ui_state_PARM_2
      000F5A 40 27            [24] 2866 	jc	00132$
                                   2867 ;	../UI_Manager/ui.c:895: state = IDLE_STATE;
      000F5C 75*0F 00         [24] 2868 	mov	_set_ui_state_PARM_2,#0x00
      000F5F 80 22            [24] 2869 	sjmp	00132$
      000F61                       2870 00125$:
                                   2871 ;	../UI_Manager/ui.c:898: if(state == IDLE_STATE){
      000F61 E5*0F            [12] 2872 	mov	a,_set_ui_state_PARM_2
      000F63 70 05            [24] 2873 	jnz	00122$
                                   2874 ;	../UI_Manager/ui.c:899: state = MANUAL_STATE_HIGH; 
      000F65 75*0F 0E         [24] 2875 	mov	_set_ui_state_PARM_2,#0x0e
      000F68 80 19            [24] 2876 	sjmp	00132$
      000F6A                       2877 00122$:
                                   2878 ;	../UI_Manager/ui.c:901: state--;
      000F6A 15*0F            [12] 2879 	dec	_set_ui_state_PARM_2
                                   2880 ;	../UI_Manager/ui.c:904: break;
                                   2881 ;	../UI_Manager/ui.c:905: default: 
      000F6C 80 15            [24] 2882 	sjmp	00132$
      000F6E                       2883 00127$:
                                   2884 ;	../UI_Manager/ui.c:906: if(state <= MANUAL_STATE_HIGH || (state >= DMX_STATE_LOW && state <= DMX_STATE_HIGH)){
      000F6E E5*0F            [12] 2885 	mov	a,_set_ui_state_PARM_2
      000F70 24 F1            [12] 2886 	add	a,#0xff - 0x0e
      000F72 50 0C            [24] 2887 	jnc	00128$
      000F74 74 EC            [12] 2888 	mov	a,#0x100 - 0x14
      000F76 25*0F            [12] 2889 	add	a,_set_ui_state_PARM_2
      000F78 50 09            [24] 2890 	jnc	00132$
      000F7A E5*0F            [12] 2891 	mov	a,_set_ui_state_PARM_2
      000F7C 24 EA            [12] 2892 	add	a,#0xff - 0x15
      000F7E 40 03            [24] 2893 	jc	00132$
      000F80                       2894 00128$:
                                   2895 ;	../UI_Manager/ui.c:907: state = IDLE_STATE;
      000F80 75*0F 00         [24] 2896 	mov	_set_ui_state_PARM_2,#0x00
                                   2897 ;	../UI_Manager/ui.c:910: }
      000F83                       2898 00132$:
                                   2899 ;	../UI_Manager/ui.c:912: State = state;
      000F83 85*0F*00         [24] 2900 	mov	_State,_set_ui_state_PARM_2
                                   2901 ;	../UI_Manager/ui.c:913: }
      000F86 22               [24] 2902 	ret
                                   2903 ;------------------------------------------------------------
                                   2904 ;Allocation info for local variables in function 'get_ui_state'
                                   2905 ;------------------------------------------------------------
                                   2906 ;	../UI_Manager/ui.c:915: uint8_t get_ui_state(){
                                   2907 ;	-----------------------------------------
                                   2908 ;	 function get_ui_state
                                   2909 ;	-----------------------------------------
      000F87                       2910 _get_ui_state:
                                   2911 ;	../UI_Manager/ui.c:916: return State;
      000F87 85*00 82         [24] 2912 	mov	dpl,_State
                                   2913 ;	../UI_Manager/ui.c:917: }
      000F8A 22               [24] 2914 	ret
                                   2915 ;------------------------------------------------------------
                                   2916 ;Allocation info for local variables in function 'getString'
                                   2917 ;------------------------------------------------------------
                                   2918 ;index                     Allocated to registers r7 
                                   2919 ;------------------------------------------------------------
                                   2920 ;	../UI_Manager/ui.c:919: char* getString(uint8_t index){
                                   2921 ;	-----------------------------------------
                                   2922 ;	 function getString
                                   2923 ;	-----------------------------------------
      000F8B                       2924 _getString:
      000F8B AF 82            [24] 2925 	mov	r7,dpl
                                   2926 ;	../UI_Manager/ui.c:920: switch (index)
      000F8D 8F 06            [24] 2927 	mov	ar6,r7
      000F8F BE 00 03         [24] 2928 	cjne	r6,#0x00,00299$
      000F92 02r10r7C         [24] 2929 	ljmp	00101$
      000F95                       2930 00299$:
      000F95 BE 01 03         [24] 2931 	cjne	r6,#0x01,00300$
      000F98 02r10r83         [24] 2932 	ljmp	00102$
      000F9B                       2933 00300$:
      000F9B BF 02 03         [24] 2934 	cjne	r7,#0x02,00301$
      000F9E 02r10r8A         [24] 2935 	ljmp	00103$
      000FA1                       2936 00301$:
      000FA1 BF 14 03         [24] 2937 	cjne	r7,#0x14,00302$
      000FA4 02r10r91         [24] 2938 	ljmp	00104$
      000FA7                       2939 00302$:
      000FA7 BF 15 03         [24] 2940 	cjne	r7,#0x15,00303$
      000FAA 02r10r98         [24] 2941 	ljmp	00105$
      000FAD                       2942 00303$:
      000FAD BF 16 03         [24] 2943 	cjne	r7,#0x16,00304$
      000FB0 02r10r9F         [24] 2944 	ljmp	00106$
      000FB3                       2945 00304$:
      000FB3 BF 17 03         [24] 2946 	cjne	r7,#0x17,00305$
      000FB6 02r10rA6         [24] 2947 	ljmp	00107$
      000FB9                       2948 00305$:
      000FB9 BF 18 03         [24] 2949 	cjne	r7,#0x18,00306$
      000FBC 02r10rB4         [24] 2950 	ljmp	00109$
      000FBF                       2951 00306$:
      000FBF BF 19 03         [24] 2952 	cjne	r7,#0x19,00307$
      000FC2 02r10rBB         [24] 2953 	ljmp	00110$
      000FC5                       2954 00307$:
      000FC5 BF 1A 03         [24] 2955 	cjne	r7,#0x1a,00308$
      000FC8 02r10rAD         [24] 2956 	ljmp	00108$
      000FCB                       2957 00308$:
      000FCB BF 28 03         [24] 2958 	cjne	r7,#0x28,00309$
      000FCE 02r11r63         [24] 2959 	ljmp	00134$
      000FD1                       2960 00309$:
      000FD1 BF 29 03         [24] 2961 	cjne	r7,#0x29,00310$
      000FD4 02r11r6A         [24] 2962 	ljmp	00135$
      000FD7                       2963 00310$:
      000FD7 BF 2A 03         [24] 2964 	cjne	r7,#0x2a,00311$
      000FDA 02r11r71         [24] 2965 	ljmp	00136$
      000FDD                       2966 00311$:
      000FDD BF 2B 03         [24] 2967 	cjne	r7,#0x2b,00312$
      000FE0 02r11r78         [24] 2968 	ljmp	00137$
      000FE3                       2969 00312$:
      000FE3 BF 2C 03         [24] 2970 	cjne	r7,#0x2c,00313$
      000FE6 02r11r7F         [24] 2971 	ljmp	00138$
      000FE9                       2972 00313$:
      000FE9 BF 2D 03         [24] 2973 	cjne	r7,#0x2d,00314$
      000FEC 02r11r86         [24] 2974 	ljmp	00139$
      000FEF                       2975 00314$:
      000FEF BF 3C 03         [24] 2976 	cjne	r7,#0x3c,00315$
      000FF2 02r10rDE         [24] 2977 	ljmp	00115$
      000FF5                       2978 00315$:
      000FF5 BF 3D 03         [24] 2979 	cjne	r7,#0x3d,00316$
      000FF8 02r10rE5         [24] 2980 	ljmp	00116$
      000FFB                       2981 00316$:
      000FFB BF 3E 03         [24] 2982 	cjne	r7,#0x3e,00317$
      000FFE 02r10rEC         [24] 2983 	ljmp	00117$
      001001                       2984 00317$:
      001001 BF 3F 03         [24] 2985 	cjne	r7,#0x3f,00318$
      001004 02r10rF3         [24] 2986 	ljmp	00118$
      001007                       2987 00318$:
      001007 BF 40 03         [24] 2988 	cjne	r7,#0x40,00319$
      00100A 02r10rFA         [24] 2989 	ljmp	00119$
      00100D                       2990 00319$:
      00100D BF 41 03         [24] 2991 	cjne	r7,#0x41,00320$
      001010 02r11r01         [24] 2992 	ljmp	00120$
      001013                       2993 00320$:
      001013 BF 42 03         [24] 2994 	cjne	r7,#0x42,00321$
      001016 02r11r08         [24] 2995 	ljmp	00121$
      001019                       2996 00321$:
      001019 BF 43 03         [24] 2997 	cjne	r7,#0x43,00322$
      00101C 02r11r0F         [24] 2998 	ljmp	00122$
      00101F                       2999 00322$:
      00101F BF 44 03         [24] 3000 	cjne	r7,#0x44,00323$
      001022 02r11r16         [24] 3001 	ljmp	00123$
      001025                       3002 00323$:
      001025 BF 45 03         [24] 3003 	cjne	r7,#0x45,00324$
      001028 02r11r1D         [24] 3004 	ljmp	00124$
      00102B                       3005 00324$:
      00102B BF 46 03         [24] 3006 	cjne	r7,#0x46,00325$
      00102E 02r11r24         [24] 3007 	ljmp	00125$
      001031                       3008 00325$:
      001031 BF 47 03         [24] 3009 	cjne	r7,#0x47,00326$
      001034 02r11r2B         [24] 3010 	ljmp	00126$
      001037                       3011 00326$:
      001037 BF 48 03         [24] 3012 	cjne	r7,#0x48,00327$
      00103A 02r11r32         [24] 3013 	ljmp	00127$
      00103D                       3014 00327$:
      00103D BF 50 03         [24] 3015 	cjne	r7,#0x50,00328$
      001040 02r11r39         [24] 3016 	ljmp	00128$
      001043                       3017 00328$:
      001043 BF 51 03         [24] 3018 	cjne	r7,#0x51,00329$
      001046 02r11r40         [24] 3019 	ljmp	00129$
      001049                       3020 00329$:
      001049 BF 52 03         [24] 3021 	cjne	r7,#0x52,00330$
      00104C 02r11r47         [24] 3022 	ljmp	00130$
      00104F                       3023 00330$:
      00104F BF 64 03         [24] 3024 	cjne	r7,#0x64,00331$
      001052 02r11r4E         [24] 3025 	ljmp	00131$
      001055                       3026 00331$:
      001055 BF 65 03         [24] 3027 	cjne	r7,#0x65,00332$
      001058 02r11r55         [24] 3028 	ljmp	00132$
      00105B                       3029 00332$:
      00105B BF 66 03         [24] 3030 	cjne	r7,#0x66,00333$
      00105E 02r11r5C         [24] 3031 	ljmp	00133$
      001061                       3032 00333$:
      001061 BF CE 03         [24] 3033 	cjne	r7,#0xce,00334$
      001064 02r10rC2         [24] 3034 	ljmp	00111$
      001067                       3035 00334$:
      001067 BF CF 03         [24] 3036 	cjne	r7,#0xcf,00335$
      00106A 02r10rC9         [24] 3037 	ljmp	00112$
      00106D                       3038 00335$:
      00106D BF D0 03         [24] 3039 	cjne	r7,#0xd0,00336$
      001070 02r10rD0         [24] 3040 	ljmp	00113$
      001073                       3041 00336$:
      001073 BF D1 03         [24] 3042 	cjne	r7,#0xd1,00337$
      001076 02r10rD7         [24] 3043 	ljmp	00114$
      001079                       3044 00337$:
      001079 02r11r8D         [24] 3045 	ljmp	00140$
                                   3046 ;	../UI_Manager/ui.c:922: case POWER_STRING_OFFSET + OPTION_FOG_LOW:
      00107C                       3047 00101$:
                                   3048 ;	../UI_Manager/ui.c:923: return "Wimpy";
      00107C 90r01r65         [24] 3049 	mov	dptr,#___str_32
      00107F 75 F0 80         [24] 3050 	mov	b,#0x80
      001082 22               [24] 3051 	ret
                                   3052 ;	../UI_Manager/ui.c:924: case POWER_STRING_OFFSET + OPTION_FOG_MEDIUM:
      001083                       3053 00102$:
                                   3054 ;	../UI_Manager/ui.c:925: return "Mild";
      001083 90r01r6B         [24] 3055 	mov	dptr,#___str_33
      001086 75 F0 80         [24] 3056 	mov	b,#0x80
      001089 22               [24] 3057 	ret
                                   3058 ;	../UI_Manager/ui.c:926: case POWER_STRING_OFFSET + OPTION_FOG_HIGH:
      00108A                       3059 00103$:
                                   3060 ;	../UI_Manager/ui.c:927: return "Blazin";
      00108A 90r01r70         [24] 3061 	mov	dptr,#___str_34
      00108D 75 F0 80         [24] 3062 	mov	b,#0x80
      001090 22               [24] 3063 	ret
                                   3064 ;	../UI_Manager/ui.c:929: case MACRO_STRING_OFFSET + OPTION_MACRO_NONE:
      001091                       3065 00104$:
                                   3066 ;	../UI_Manager/ui.c:930: return "Off";
      001091 90r01r08         [24] 3067 	mov	dptr,#___str_23
      001094 75 F0 80         [24] 3068 	mov	b,#0x80
      001097 22               [24] 3069 	ret
                                   3070 ;	../UI_Manager/ui.c:931: case MACRO_STRING_OFFSET + OPTION_MACRO_RAINBOW_DMX:
      001098                       3071 00105$:
                                   3072 ;	../UI_Manager/ui.c:932: return "Rainbow";
      001098 90r01r77         [24] 3073 	mov	dptr,#___str_35
      00109B 75 F0 80         [24] 3074 	mov	b,#0x80
      00109E 22               [24] 3075 	ret
                                   3076 ;	../UI_Manager/ui.c:933: case MACRO_STRING_OFFSET + OPTION_MACRO_FIRE_DMX:
      00109F                       3077 00106$:
                                   3078 ;	../UI_Manager/ui.c:934: return "Fire";
      00109F 90r01r7F         [24] 3079 	mov	dptr,#___str_36
      0010A2 75 F0 80         [24] 3080 	mov	b,#0x80
      0010A5 22               [24] 3081 	ret
                                   3082 ;	../UI_Manager/ui.c:935: case MACRO_STRING_OFFSET + OPTION_MACRO_WATER_DMX:
      0010A6                       3083 00107$:
                                   3084 ;	../UI_Manager/ui.c:936: return "Water";
      0010A6 90r01r84         [24] 3085 	mov	dptr,#___str_37
      0010A9 75 F0 80         [24] 3086 	mov	b,#0x80
      0010AC 22               [24] 3087 	ret
                                   3088 ;	../UI_Manager/ui.c:937: case MACRO_STRING_OFFSET + OPTION_MACRO_STORM_DMX:
      0010AD                       3089 00108$:
                                   3090 ;	../UI_Manager/ui.c:938: return "Storm";
      0010AD 90r01r8A         [24] 3091 	mov	dptr,#___str_38
      0010B0 75 F0 80         [24] 3092 	mov	b,#0x80
      0010B3 22               [24] 3093 	ret
                                   3094 ;	../UI_Manager/ui.c:939: case MACRO_STRING_OFFSET + OPTION_MACRO_ACID_DMX:
      0010B4                       3095 00109$:
                                   3096 ;	../UI_Manager/ui.c:940: return "Acid";
      0010B4 90r01r90         [24] 3097 	mov	dptr,#___str_39
      0010B7 75 F0 80         [24] 3098 	mov	b,#0x80
      0010BA 22               [24] 3099 	ret
                                   3100 ;	../UI_Manager/ui.c:941: case MACRO_STRING_OFFSET + OPTION_MACRO_ETHER_DMX:
      0010BB                       3101 00110$:
                                   3102 ;	../UI_Manager/ui.c:942: return "Ether";
      0010BB 90r01r95         [24] 3103 	mov	dptr,#___str_40
      0010BE 75 F0 80         [24] 3104 	mov	b,#0x80
      0010C1 22               [24] 3105 	ret
                                   3106 ;	../UI_Manager/ui.c:944: case COLOR_STRING_OFFSET + MANUAL_RED_STATE:
      0010C2                       3107 00111$:
                                   3108 ;	../UI_Manager/ui.c:945: return "Red Level";
      0010C2 90r01r9B         [24] 3109 	mov	dptr,#___str_41
      0010C5 75 F0 80         [24] 3110 	mov	b,#0x80
      0010C8 22               [24] 3111 	ret
                                   3112 ;	../UI_Manager/ui.c:946: case COLOR_STRING_OFFSET + MANUAL_GREEN_STATE:
      0010C9                       3113 00112$:
                                   3114 ;	../UI_Manager/ui.c:947: return "Green Level";
      0010C9 90r01rA5         [24] 3115 	mov	dptr,#___str_42
      0010CC 75 F0 80         [24] 3116 	mov	b,#0x80
      0010CF 22               [24] 3117 	ret
                                   3118 ;	../UI_Manager/ui.c:948: case COLOR_STRING_OFFSET + MANUAL_BLUE_STATE:
      0010D0                       3119 00113$:
                                   3120 ;	../UI_Manager/ui.c:949: return "Blue Level";
      0010D0 90r01rB1         [24] 3121 	mov	dptr,#___str_43
      0010D3 75 F0 80         [24] 3122 	mov	b,#0x80
      0010D6 22               [24] 3123 	ret
                                   3124 ;	../UI_Manager/ui.c:950: case COLOR_STRING_OFFSET + MANUAL_STROBE_STATE:
      0010D7                       3125 00114$:
                                   3126 ;	../UI_Manager/ui.c:951: return "Strobe Level";
      0010D7 90r01rBC         [24] 3127 	mov	dptr,#___str_44
      0010DA 75 F0 80         [24] 3128 	mov	b,#0x80
      0010DD 22               [24] 3129 	ret
                                   3130 ;	../UI_Manager/ui.c:953: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACITON_NONE:
      0010DE                       3131 00115$:
                                   3132 ;	../UI_Manager/ui.c:954: return "No Action";
      0010DE 90r01rC9         [24] 3133 	mov	dptr,#___str_45
      0010E1 75 F0 80         [24] 3134 	mov	b,#0x80
      0010E4 22               [24] 3135 	ret
                                   3136 ;	../UI_Manager/ui.c:955: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_CHOOSE_MACRO:
      0010E5                       3137 00116$:
                                   3138 ;	../UI_Manager/ui.c:956: return "Choose Macro";
      0010E5 90r01rD3         [24] 3139 	mov	dptr,#___str_46
      0010E8 75 F0 80         [24] 3140 	mov	b,#0x80
      0010EB 22               [24] 3141 	ret
                                   3142 ;	../UI_Manager/ui.c:957: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_RED:
      0010EC                       3143 00117$:
                                   3144 ;	../UI_Manager/ui.c:958: return "Red";
      0010EC 90r01rE0         [24] 3145 	mov	dptr,#___str_47
      0010EF 75 F0 80         [24] 3146 	mov	b,#0x80
      0010F2 22               [24] 3147 	ret
                                   3148 ;	../UI_Manager/ui.c:959: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_YELLOW:
      0010F3                       3149 00118$:
                                   3150 ;	../UI_Manager/ui.c:960: return "Yellow";
      0010F3 90r01rE4         [24] 3151 	mov	dptr,#___str_48
      0010F6 75 F0 80         [24] 3152 	mov	b,#0x80
      0010F9 22               [24] 3153 	ret
                                   3154 ;	../UI_Manager/ui.c:961: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_GREEN:
      0010FA                       3155 00119$:
                                   3156 ;	../UI_Manager/ui.c:962: return "Green";
      0010FA 90r01rEB         [24] 3157 	mov	dptr,#___str_49
      0010FD 75 F0 80         [24] 3158 	mov	b,#0x80
      001100 22               [24] 3159 	ret
                                   3160 ;	../UI_Manager/ui.c:963: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_CYAN:
      001101                       3161 00120$:
                                   3162 ;	../UI_Manager/ui.c:964: return "Cyan";
      001101 90r01rF1         [24] 3163 	mov	dptr,#___str_50
      001104 75 F0 80         [24] 3164 	mov	b,#0x80
      001107 22               [24] 3165 	ret
                                   3166 ;	../UI_Manager/ui.c:965: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_BLUE:
      001108                       3167 00121$:
                                   3168 ;	../UI_Manager/ui.c:966: return "Blue";
      001108 90r01rF6         [24] 3169 	mov	dptr,#___str_51
      00110B 75 F0 80         [24] 3170 	mov	b,#0x80
      00110E 22               [24] 3171 	ret
                                   3172 ;	../UI_Manager/ui.c:967: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_MAGENTA:
      00110F                       3173 00122$:
                                   3174 ;	../UI_Manager/ui.c:968: return "Magenta";
      00110F 90r01rFB         [24] 3175 	mov	dptr,#___str_52
      001112 75 F0 80         [24] 3176 	mov	b,#0x80
      001115 22               [24] 3177 	ret
                                   3178 ;	../UI_Manager/ui.c:969: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_SLOW:
      001116                       3179 00123$:
                                   3180 ;	../UI_Manager/ui.c:970: return "Strobe Slow";
      001116 90r02r03         [24] 3181 	mov	dptr,#___str_53
      001119 75 F0 80         [24] 3182 	mov	b,#0x80
      00111C 22               [24] 3183 	ret
                                   3184 ;	../UI_Manager/ui.c:971: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_MEDIUM:
      00111D                       3185 00124$:
                                   3186 ;	../UI_Manager/ui.c:972: return "Strobe Medium";
      00111D 90r02r0F         [24] 3187 	mov	dptr,#___str_54
      001120 75 F0 80         [24] 3188 	mov	b,#0x80
      001123 22               [24] 3189 	ret
                                   3190 ;	../UI_Manager/ui.c:973: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_STROBE_FAST:
      001124                       3191 00125$:
                                   3192 ;	../UI_Manager/ui.c:974: return "Strobe Fast";
      001124 90r02r1D         [24] 3193 	mov	dptr,#___str_55
      001127 75 F0 80         [24] 3194 	mov	b,#0x80
      00112A 22               [24] 3195 	ret
                                   3196 ;	../UI_Manager/ui.c:975: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_BLACKOUT:
      00112B                       3197 00126$:
                                   3198 ;	../UI_Manager/ui.c:976: return "Blackout";
      00112B 90r02r29         [24] 3199 	mov	dptr,#___str_56
      00112E 75 F0 80         [24] 3200 	mov	b,#0x80
      001131 22               [24] 3201 	ret
                                   3202 ;	../UI_Manager/ui.c:977: case WIRELESS_ACTION_STRING_OFFSET + OPTION_WIRELESS_ACTION_WHITEOUT:
      001132                       3203 00127$:
                                   3204 ;	../UI_Manager/ui.c:978: return "Whiteout";         
      001132 90r02r32         [24] 3205 	mov	dptr,#___str_57
      001135 75 F0 80         [24] 3206 	mov	b,#0x80
      001138 22               [24] 3207 	ret
                                   3208 ;	../UI_Manager/ui.c:980: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_1: 
      001139                       3209 00128$:
                                   3210 ;	../UI_Manager/ui.c:981: return "Slot 1";   
      001139 90r02r3B         [24] 3211 	mov	dptr,#___str_58
      00113C 75 F0 80         [24] 3212 	mov	b,#0x80
      00113F 22               [24] 3213 	ret
                                   3214 ;	../UI_Manager/ui.c:982: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_2: 
      001140                       3215 00129$:
                                   3216 ;	../UI_Manager/ui.c:983: return "Slot 2";   
      001140 90r02r42         [24] 3217 	mov	dptr,#___str_59
      001143 75 F0 80         [24] 3218 	mov	b,#0x80
      001146 22               [24] 3219 	ret
                                   3220 ;	../UI_Manager/ui.c:984: case SAVE_LOAD_STRING_OFFSET + OPTION_SLOT_3: 
      001147                       3221 00130$:
                                   3222 ;	../UI_Manager/ui.c:985: return "Slot 3"; 
      001147 90r02r49         [24] 3223 	mov	dptr,#___str_60
      00114A 75 F0 80         [24] 3224 	mov	b,#0x80
                                   3225 ;	../UI_Manager/ui.c:987: case DMX_STRING_OFFSET + OPTION_DMX_MODE_11: 
      00114D 22               [24] 3226 	ret
      00114E                       3227 00131$:
                                   3228 ;	../UI_Manager/ui.c:988: return "11 All";     
      00114E 90r02r50         [24] 3229 	mov	dptr,#___str_61
      001151 75 F0 80         [24] 3230 	mov	b,#0x80
                                   3231 ;	../UI_Manager/ui.c:989: case DMX_STRING_OFFSET + OPTION_DMX_MODE_3: 
      001154 22               [24] 3232 	ret
      001155                       3233 00132$:
                                   3234 ;	../UI_Manager/ui.c:990: return "3 Fog + Macro";   
      001155 90r02r57         [24] 3235 	mov	dptr,#___str_62
      001158 75 F0 80         [24] 3236 	mov	b,#0x80
                                   3237 ;	../UI_Manager/ui.c:991: case DMX_STRING_OFFSET + OPTION_DMX_MODE_1: 
      00115B 22               [24] 3238 	ret
      00115C                       3239 00133$:
                                   3240 ;	../UI_Manager/ui.c:992: return "1 Fog";    
      00115C 90r02r65         [24] 3241 	mov	dptr,#___str_63
      00115F 75 F0 80         [24] 3242 	mov	b,#0x80
                                   3243 ;	../UI_Manager/ui.c:994: case SECRET_STRING_OFFSET + 0:
      001162 22               [24] 3244 	ret
      001163                       3245 00134$:
                                   3246 ;	../UI_Manager/ui.c:995: return "0x486F6C6D6573";
      001163 90r02r6B         [24] 3247 	mov	dptr,#___str_64
      001166 75 F0 80         [24] 3248 	mov	b,#0x80
                                   3249 ;	../UI_Manager/ui.c:996: case SECRET_STRING_OFFSET + 1:
      001169 22               [24] 3250 	ret
      00116A                       3251 00135$:
                                   3252 ;	../UI_Manager/ui.c:997: return "& 576174736F6E";
      00116A 90r02r7A         [24] 3253 	mov	dptr,#___str_65
      00116D 75 F0 80         [24] 3254 	mov	b,#0x80
                                   3255 ;	../UI_Manager/ui.c:998: case SECRET_STRING_OFFSET + 2:
      001170 22               [24] 3256 	ret
      001171                       3257 00136$:
                                   3258 ;	../UI_Manager/ui.c:999: return "626F74684F776E41";
      001171 90r02r89         [24] 3259 	mov	dptr,#___str_66
      001174 75 F0 80         [24] 3260 	mov	b,#0x80
                                   3261 ;	../UI_Manager/ui.c:1000: case SECRET_STRING_OFFSET + 3:
      001177 22               [24] 3262 	ret
      001178                       3263 00137$:
                                   3264 ;	../UI_Manager/ui.c:1001: return "536E6F7762616C6C";
      001178 90r02r9A         [24] 3265 	mov	dptr,#___str_67
      00117B 75 F0 80         [24] 3266 	mov	b,#0x80
                                   3267 ;	../UI_Manager/ui.c:1002: case SECRET_STRING_OFFSET + 4:
      00117E 22               [24] 3268 	ret
      00117F                       3269 00138$:
                                   3270 ;	../UI_Manager/ui.c:1003: return "4D6F726961727479";
      00117F 90r02rAB         [24] 3271 	mov	dptr,#___str_68
      001182 75 F0 80         [24] 3272 	mov	b,#0x80
                                   3273 ;	../UI_Manager/ui.c:1004: case SECRET_STRING_OFFSET + 5:
      001185 22               [24] 3274 	ret
      001186                       3275 00139$:
                                   3276 ;	../UI_Manager/ui.c:1005: return "646F65734E6F74 ;";
      001186 90r02rBC         [24] 3277 	mov	dptr,#___str_69
      001189 75 F0 80         [24] 3278 	mov	b,#0x80
                                   3279 ;	../UI_Manager/ui.c:1006: }
      00118C 22               [24] 3280 	ret
      00118D                       3281 00140$:
                                   3282 ;	../UI_Manager/ui.c:1008: return 0;
      00118D 90 00 00         [24] 3283 	mov	dptr,#0x0000
      001190 75 F0 00         [24] 3284 	mov	b,#0x00
                                   3285 ;	../UI_Manager/ui.c:1009: }
      001193 22               [24] 3286 	ret
                                   3287 	.area CSEG    (CODE)
                                   3288 	.area CONST   (CODE)
      000000                       3289 ___str_0:
      000000 54 61 6E 6B 20 4C 69  3290 	.ascii "Tank Lights Off"
             67 68 74 73 20 4F 66
             66
      00000F 00                    3291 	.db 0x00
      000010                       3292 ___str_1:
      000010 54 61 6E 6B 20 4C 69  3293 	.ascii "Tank Lights On"
             67 68 74 73 20 4F 6E
      00001E 00                    3294 	.db 0x00
      00001F                       3295 ___str_2:
      00001F 46 75 6E 2B 4D 61 6E  3296 	.ascii "Fun+Man to Undo"
             20 74 6F 20 55 6E 64
             6F
      00002E 00                    3297 	.db 0x00
      00002F                       3298 ___str_3:
      00002F 48 65 61 74 65 72 20  3299 	.ascii "Heater Off"
             4F 66 66
      000039 00                    3300 	.db 0x00
      00003A                       3301 ___str_4:
      00003A 48 65 61 74 65 72 20  3302 	.ascii "Heater On"
             4F 6E
      000043 00                    3303 	.db 0x00
      000044                       3304 ___str_5:
      000044 42 75 72 73 74 2B 55  3305 	.ascii "Burst+Up to Undo"
             70 20 74 6F 20 55 6E
             64 6F
      000054 00                    3306 	.db 0x00
      000055                       3307 ___str_6:
      000055 41 74 6D 6F 73 46 45  3308 	.ascii "AtmosFEAR 221B"
             41 52 20 32 32 31 42
      000063 00                    3309 	.db 0x00
      000064                       3310 ___str_7:
      000064 42 79 20 42 6C 69 7A  3311 	.ascii "By Blizzard Pro"
             7A 61 72 64 20 50 72
             6F
      000073 00                    3312 	.db 0x00
      000074                       3313 ___str_8:
      000074 50 43 20 4C 6F 61 64  3314 	.ascii "PC Load Letter"
             20 4C 65 74 74 65 72
      000082 00                    3315 	.db 0x00
      000083                       3316 ___str_9:
      000083 42 75 72 73 74 20 74  3317 	.ascii "Burst to Refill"
             6F 20 52 65 66 69 6C
             6C
      000092 00                    3318 	.db 0x00
      000093                       3319 ___str_10:
      000093 4D 61 6E 75 61 6C 20  3320 	.ascii "Manual Mode"
             4D 6F 64 65
      00009E 00                    3321 	.db 0x00
      00009F                       3322 ___str_11:
      00009F 41 64 64 72           3323 	.ascii "Addr"
      0000A3 00                    3324 	.db 0x00
      0000A4                       3325 ___str_12:
      0000A4 4D 6F 64 65           3326 	.ascii "Mode"
      0000A8 00                    3327 	.db 0x00
      0000A9                       3328 ___str_13:
      0000A9 44 4D 58 20 4F 6B     3329 	.ascii "DMX Ok"
      0000AF 00                    3330 	.db 0x00
      0000B0                       3331 ___str_14:
      0000B0 4E 6F 20 44 4D 58     3332 	.ascii "No DMX"
      0000B6 00                    3333 	.db 0x00
      0000B7                       3334 ___str_15:
      0000B7 49 6E 74 65 72 76 61  3335 	.ascii "Interval"
             6C
      0000BF 00                    3336 	.db 0x00
      0000C0                       3337 ___str_16:
      0000C0 44 75 72 61 74 69 6F  3338 	.ascii "Duration"
             6E
      0000C8 00                    3339 	.db 0x00
      0000C9                       3340 ___str_17:
      0000C9 46 6F 67 20 4C 65 76  3341 	.ascii "Fog Level"
             65 6C
      0000D2 00                    3342 	.db 0x00
      0000D3                       3343 ___str_18:
      0000D3 46 6F 67 20 49 6E 74  3344 	.ascii "Fog Interval"
             65 72 76 61 6C
      0000DF 00                    3345 	.db 0x00
      0000E0                       3346 ___str_19:
      0000E0 53 65 63 6F 6E 64 73  3347 	.ascii "Seconds"
      0000E7 00                    3348 	.db 0x00
      0000E8                       3349 ___str_20:
      0000E8 46 6F 67 20 44 75 72  3350 	.ascii "Fog Duration"
             61 74 69 6F 6E
      0000F4 00                    3351 	.db 0x00
      0000F5                       3352 ___str_21:
      0000F5 4D 61 63 72 6F 73     3353 	.ascii "Macros"
      0000FB 00                    3354 	.db 0x00
      0000FC                       3355 ___str_22:
      0000FC 4D 61 63 72 6F 20 53  3356 	.ascii "Macro Speed"
             70 65 65 64
      000107 00                    3357 	.db 0x00
      000108                       3358 ___str_23:
      000108 4F 66 66              3359 	.ascii "Off"
      00010B 00                    3360 	.db 0x00
      00010C                       3361 ___str_24:
      00010C 00                    3362 	.db 0x00
      00010D                       3363 ___str_25:
      00010D 52 65 6D 6F 74 65 20  3364 	.ascii "Remote X Action"
             58 20 41 63 74 69 6F
             6E
      00011C 00                    3365 	.db 0x00
      00011D                       3366 ___str_26:
      00011D 53 61 76 65 64 21     3367 	.ascii "Saved!"
      000123 00                    3368 	.db 0x00
      000124                       3369 ___str_27:
      000124 4C 6F 61 64 65 64 21  3370 	.ascii "Loaded!"
      00012B 00                    3371 	.db 0x00
      00012C                       3372 ___str_28:
      00012C 53 61 76 65 20 53 65  3373 	.ascii "Save Settings"
             74 74 69 6E 67 73
      000139 00                    3374 	.db 0x00
      00013A                       3375 ___str_29:
      00013A 4C 6F 61 64 20 53 65  3376 	.ascii "Load Settings"
             74 74 69 6E 67 73
      000147 00                    3377 	.db 0x00
      000148                       3378 ___str_30:
      000148 44 4D 58 20 41 64 64  3379 	.ascii "DMX Address"
             72 65 73 73
      000153 00                    3380 	.db 0x00
      000154                       3381 ___str_31:
      000154 44 4D 58 20 43 68 61  3382 	.ascii "DMX Channel Mode"
             6E 6E 65 6C 20 4D 6F
             64 65
      000164 00                    3383 	.db 0x00
      000165                       3384 ___str_32:
      000165 57 69 6D 70 79        3385 	.ascii "Wimpy"
      00016A 00                    3386 	.db 0x00
      00016B                       3387 ___str_33:
      00016B 4D 69 6C 64           3388 	.ascii "Mild"
      00016F 00                    3389 	.db 0x00
      000170                       3390 ___str_34:
      000170 42 6C 61 7A 69 6E     3391 	.ascii "Blazin"
      000176 00                    3392 	.db 0x00
      000177                       3393 ___str_35:
      000177 52 61 69 6E 62 6F 77  3394 	.ascii "Rainbow"
      00017E 00                    3395 	.db 0x00
      00017F                       3396 ___str_36:
      00017F 46 69 72 65           3397 	.ascii "Fire"
      000183 00                    3398 	.db 0x00
      000184                       3399 ___str_37:
      000184 57 61 74 65 72        3400 	.ascii "Water"
      000189 00                    3401 	.db 0x00
      00018A                       3402 ___str_38:
      00018A 53 74 6F 72 6D        3403 	.ascii "Storm"
      00018F 00                    3404 	.db 0x00
      000190                       3405 ___str_39:
      000190 41 63 69 64           3406 	.ascii "Acid"
      000194 00                    3407 	.db 0x00
      000195                       3408 ___str_40:
      000195 45 74 68 65 72        3409 	.ascii "Ether"
      00019A 00                    3410 	.db 0x00
      00019B                       3411 ___str_41:
      00019B 52 65 64 20 4C 65 76  3412 	.ascii "Red Level"
             65 6C
      0001A4 00                    3413 	.db 0x00
      0001A5                       3414 ___str_42:
      0001A5 47 72 65 65 6E 20 4C  3415 	.ascii "Green Level"
             65 76 65 6C
      0001B0 00                    3416 	.db 0x00
      0001B1                       3417 ___str_43:
      0001B1 42 6C 75 65 20 4C 65  3418 	.ascii "Blue Level"
             76 65 6C
      0001BB 00                    3419 	.db 0x00
      0001BC                       3420 ___str_44:
      0001BC 53 74 72 6F 62 65 20  3421 	.ascii "Strobe Level"
             4C 65 76 65 6C
      0001C8 00                    3422 	.db 0x00
      0001C9                       3423 ___str_45:
      0001C9 4E 6F 20 41 63 74 69  3424 	.ascii "No Action"
             6F 6E
      0001D2 00                    3425 	.db 0x00
      0001D3                       3426 ___str_46:
      0001D3 43 68 6F 6F 73 65 20  3427 	.ascii "Choose Macro"
             4D 61 63 72 6F
      0001DF 00                    3428 	.db 0x00
      0001E0                       3429 ___str_47:
      0001E0 52 65 64              3430 	.ascii "Red"
      0001E3 00                    3431 	.db 0x00
      0001E4                       3432 ___str_48:
      0001E4 59 65 6C 6C 6F 77     3433 	.ascii "Yellow"
      0001EA 00                    3434 	.db 0x00
      0001EB                       3435 ___str_49:
      0001EB 47 72 65 65 6E        3436 	.ascii "Green"
      0001F0 00                    3437 	.db 0x00
      0001F1                       3438 ___str_50:
      0001F1 43 79 61 6E           3439 	.ascii "Cyan"
      0001F5 00                    3440 	.db 0x00
      0001F6                       3441 ___str_51:
      0001F6 42 6C 75 65           3442 	.ascii "Blue"
      0001FA 00                    3443 	.db 0x00
      0001FB                       3444 ___str_52:
      0001FB 4D 61 67 65 6E 74 61  3445 	.ascii "Magenta"
      000202 00                    3446 	.db 0x00
      000203                       3447 ___str_53:
      000203 53 74 72 6F 62 65 20  3448 	.ascii "Strobe Slow"
             53 6C 6F 77
      00020E 00                    3449 	.db 0x00
      00020F                       3450 ___str_54:
      00020F 53 74 72 6F 62 65 20  3451 	.ascii "Strobe Medium"
             4D 65 64 69 75 6D
      00021C 00                    3452 	.db 0x00
      00021D                       3453 ___str_55:
      00021D 53 74 72 6F 62 65 20  3454 	.ascii "Strobe Fast"
             46 61 73 74
      000228 00                    3455 	.db 0x00
      000229                       3456 ___str_56:
      000229 42 6C 61 63 6B 6F 75  3457 	.ascii "Blackout"
             74
      000231 00                    3458 	.db 0x00
      000232                       3459 ___str_57:
      000232 57 68 69 74 65 6F 75  3460 	.ascii "Whiteout"
             74
      00023A 00                    3461 	.db 0x00
      00023B                       3462 ___str_58:
      00023B 53 6C 6F 74 20 31     3463 	.ascii "Slot 1"
      000241 00                    3464 	.db 0x00
      000242                       3465 ___str_59:
      000242 53 6C 6F 74 20 32     3466 	.ascii "Slot 2"
      000248 00                    3467 	.db 0x00
      000249                       3468 ___str_60:
      000249 53 6C 6F 74 20 33     3469 	.ascii "Slot 3"
      00024F 00                    3470 	.db 0x00
      000250                       3471 ___str_61:
      000250 31 31 20 41 6C 6C     3472 	.ascii "11 All"
      000256 00                    3473 	.db 0x00
      000257                       3474 ___str_62:
      000257 33 20 46 6F 67 20 2B  3475 	.ascii "3 Fog + Macro"
             20 4D 61 63 72 6F
      000264 00                    3476 	.db 0x00
      000265                       3477 ___str_63:
      000265 31 20 46 6F 67        3478 	.ascii "1 Fog"
      00026A 00                    3479 	.db 0x00
      00026B                       3480 ___str_64:
      00026B 30 78 34 38 36 46 36  3481 	.ascii "0x486F6C6D6573"
             43 36 44 36 35 37 33
      000279 00                    3482 	.db 0x00
      00027A                       3483 ___str_65:
      00027A 26 20 35 37 36 31 37  3484 	.ascii "& 576174736F6E"
             34 37 33 36 46 36 45
      000288 00                    3485 	.db 0x00
      000289                       3486 ___str_66:
      000289 36 32 36 46 37 34 36  3487 	.ascii "626F74684F776E41"
             38 34 46 37 37 36 45
             34 31
      000299 00                    3488 	.db 0x00
      00029A                       3489 ___str_67:
      00029A 35 33 36 45 36 46 37  3490 	.ascii "536E6F7762616C6C"
             37 36 32 36 31 36 43
             36 43
      0002AA 00                    3491 	.db 0x00
      0002AB                       3492 ___str_68:
      0002AB 34 44 36 46 37 32 36  3493 	.ascii "4D6F726961727479"
             39 36 31 37 32 37 34
             37 39
      0002BB 00                    3494 	.db 0x00
      0002BC                       3495 ___str_69:
      0002BC 36 34 36 46 36 35 37  3496 	.ascii "646F65734E6F74 ;"
             33 34 45 36 46 37 34
             20 3B
      0002CC 00                    3497 	.db 0x00
                                   3498 	.area XINIT   (CODE)
                                   3499 	.area CABS    (ABS,CODE)
