                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module display
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _CPRL2
                                     12 	.globl _CT2
                                     13 	.globl _TR2
                                     14 	.globl _EXEN2
                                     15 	.globl _TCLK
                                     16 	.globl _RCLK
                                     17 	.globl _REN
                                     18 	.globl _SM2
                                     19 	.globl _SM1
                                     20 	.globl _SM0
                                     21 	.globl _RCK
                                     22 	.globl _SER
                                     23 	.globl _SCK
                                     24 	.globl _RI
                                     25 	.globl _ES
                                     26 	.globl _ET0
                                     27 	.globl _EA
                                     28 	.globl _P3_7
                                     29 	.globl _P3_6
                                     30 	.globl _P3_5
                                     31 	.globl _P3_4
                                     32 	.globl _P3_3
                                     33 	.globl _P3_2
                                     34 	.globl _P3_1
                                     35 	.globl _P3_0
                                     36 	.globl _P2_7
                                     37 	.globl _P2_6
                                     38 	.globl _P2_5
                                     39 	.globl _P2_4
                                     40 	.globl _P2_3
                                     41 	.globl _P2_2
                                     42 	.globl _P2_1
                                     43 	.globl _P2_0
                                     44 	.globl _P1_7
                                     45 	.globl _P1_6
                                     46 	.globl _P1_5
                                     47 	.globl _P1_4
                                     48 	.globl _P1_3
                                     49 	.globl _P1_2
                                     50 	.globl _P1_1
                                     51 	.globl _P1_0
                                     52 	.globl _P0_7
                                     53 	.globl _P0_6
                                     54 	.globl _P0_5
                                     55 	.globl _P0_4
                                     56 	.globl _P0_3
                                     57 	.globl _P0_2
                                     58 	.globl _P0_1
                                     59 	.globl _P0_0
                                     60 	.globl _IAP_ADRH
                                     61 	.globl _IAP_ADRL
                                     62 	.globl _IAPEN
                                     63 	.globl _TH0
                                     64 	.globl _TL0
                                     65 	.globl _CKCON
                                     66 	.globl _TMOD
                                     67 	.globl _TCON
                                     68 	.globl _PWMDATA17L
                                     69 	.globl _PWMDATA17H
                                     70 	.globl _PWMDATA14L
                                     71 	.globl _PWMDATA14H
                                     72 	.globl _PWMDATA11L
                                     73 	.globl _PWMDATA11H
                                     74 	.globl _PWM_EA2
                                     75 	.globl _PWM_EA1
                                     76 	.globl _SBUF
                                     77 	.globl _TL3
                                     78 	.globl _TH3
                                     79 	.globl _T2CON
                                     80 	.globl _RCAP2H
                                     81 	.globl _RCAP2L
                                     82 	.globl _SCON
                                     83 	.globl _P1_OPT
                                     84 	.globl _ADCVAL2
                                     85 	.globl _ADCVAL1
                                     86 	.globl _ADCSEL
                                     87 	.globl _EXIF
                                     88 	.globl _EIE
                                     89 	.globl _IE
                                     90 	.globl _P3
                                     91 	.globl _P2
                                     92 	.globl _P1
                                     93 	.globl _P0
                                     94 	.globl _PCLKSEL
                                     95 	.globl _CHIPCON
                                     96 	.globl _write_string
                                     97 	.globl _write_number
                                     98 	.globl _write_char
                                     99 	.globl _exe_command
                                    100 	.globl _charToCode
                                    101 	.globl _writeShiftReg
                                    102 	.globl _flipByte
                                    103 ;--------------------------------------------------------
                                    104 ; special function registers
                                    105 ;--------------------------------------------------------
                                    106 	.area RSEG    (ABS,DATA)
      000000                        107 	.org 0x0000
                           0000BF   108 _CHIPCON	=	0x00bf
                           0000B7   109 _PCLKSEL	=	0x00b7
                           000080   110 _P0	=	0x0080
                           000090   111 _P1	=	0x0090
                           0000A0   112 _P2	=	0x00a0
                           0000B0   113 _P3	=	0x00b0
                           0000A8   114 _IE	=	0x00a8
                           0000E8   115 _EIE	=	0x00e8
                           000091   116 _EXIF	=	0x0091
                           0000DA   117 _ADCSEL	=	0x00da
                           0000DB   118 _ADCVAL1	=	0x00db
                           0000DC   119 _ADCVAL2	=	0x00dc
                           0000D9   120 _P1_OPT	=	0x00d9
                           000098   121 _SCON	=	0x0098
                           0000CA   122 _RCAP2L	=	0x00ca
                           0000CB   123 _RCAP2H	=	0x00cb
                           0000C8   124 _T2CON	=	0x00c8
                           00009B   125 _TH3	=	0x009b
                           00009A   126 _TL3	=	0x009a
                           000099   127 _SBUF	=	0x0099
                           0000D3   128 _PWM_EA1	=	0x00d3
                           0000D4   129 _PWM_EA2	=	0x00d4
                           0000BD   130 _PWMDATA11H	=	0x00bd
                           0000BE   131 _PWMDATA11L	=	0x00be
                           0000B5   132 _PWMDATA14H	=	0x00b5
                           0000B6   133 _PWMDATA14L	=	0x00b6
                           0000AD   134 _PWMDATA17H	=	0x00ad
                           0000AE   135 _PWMDATA17L	=	0x00ae
                           000088   136 _TCON	=	0x0088
                           000089   137 _TMOD	=	0x0089
                           00008E   138 _CKCON	=	0x008e
                           00008A   139 _TL0	=	0x008a
                           00008C   140 _TH0	=	0x008c
                           0000E4   141 _IAPEN	=	0x00e4
                           0000E5   142 _IAP_ADRL	=	0x00e5
                           0000E6   143 _IAP_ADRH	=	0x00e6
                                    144 ;--------------------------------------------------------
                                    145 ; special function bits
                                    146 ;--------------------------------------------------------
                                    147 	.area RSEG    (ABS,DATA)
      000000                        148 	.org 0x0000
                           000080   149 _P0_0	=	0x0080
                           000081   150 _P0_1	=	0x0081
                           000082   151 _P0_2	=	0x0082
                           000083   152 _P0_3	=	0x0083
                           000084   153 _P0_4	=	0x0084
                           000085   154 _P0_5	=	0x0085
                           000086   155 _P0_6	=	0x0086
                           000087   156 _P0_7	=	0x0087
                           000090   157 _P1_0	=	0x0090
                           000091   158 _P1_1	=	0x0091
                           000092   159 _P1_2	=	0x0092
                           000093   160 _P1_3	=	0x0093
                           000094   161 _P1_4	=	0x0094
                           000095   162 _P1_5	=	0x0095
                           000096   163 _P1_6	=	0x0096
                           000097   164 _P1_7	=	0x0097
                           0000A0   165 _P2_0	=	0x00a0
                           0000A1   166 _P2_1	=	0x00a1
                           0000A2   167 _P2_2	=	0x00a2
                           0000A3   168 _P2_3	=	0x00a3
                           0000A4   169 _P2_4	=	0x00a4
                           0000A5   170 _P2_5	=	0x00a5
                           0000A6   171 _P2_6	=	0x00a6
                           0000A7   172 _P2_7	=	0x00a7
                           0000B0   173 _P3_0	=	0x00b0
                           0000B1   174 _P3_1	=	0x00b1
                           0000B2   175 _P3_2	=	0x00b2
                           0000B3   176 _P3_3	=	0x00b3
                           0000B4   177 _P3_4	=	0x00b4
                           0000B5   178 _P3_5	=	0x00b5
                           0000B6   179 _P3_6	=	0x00b6
                           0000B7   180 _P3_7	=	0x00b7
                           0000AF   181 _EA	=	0x00af
                           0000A9   182 _ET0	=	0x00a9
                           0000AC   183 _ES	=	0x00ac
                           000098   184 _RI	=	0x0098
                           000093   185 _SCK	=	0x0093
                           000095   186 _SER	=	0x0095
                           000092   187 _RCK	=	0x0092
                           00009F   188 _SM0	=	0x009f
                           00009E   189 _SM1	=	0x009e
                           00009D   190 _SM2	=	0x009d
                           00009C   191 _REN	=	0x009c
                           0000CD   192 _RCLK	=	0x00cd
                           0000CC   193 _TCLK	=	0x00cc
                           0000CB   194 _EXEN2	=	0x00cb
                           0000CA   195 _TR2	=	0x00ca
                           0000C9   196 _CT2	=	0x00c9
                           0000C8   197 _CPRL2	=	0x00c8
                                    198 ;--------------------------------------------------------
                                    199 ; overlayable register banks
                                    200 ;--------------------------------------------------------
                                    201 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        202 	.ds 8
                                    203 ;--------------------------------------------------------
                                    204 ; internal ram data
                                    205 ;--------------------------------------------------------
                                    206 	.area DSEG    (DATA)
                                    207 ;--------------------------------------------------------
                                    208 ; overlayable items in internal ram 
                                    209 ;--------------------------------------------------------
                                    210 ;--------------------------------------------------------
                                    211 ; indirectly addressable internal ram data
                                    212 ;--------------------------------------------------------
                                    213 	.area ISEG    (DATA)
                                    214 ;--------------------------------------------------------
                                    215 ; absolute internal ram data
                                    216 ;--------------------------------------------------------
                                    217 	.area IABS    (ABS,DATA)
                                    218 	.area IABS    (ABS,DATA)
                                    219 ;--------------------------------------------------------
                                    220 ; bit data
                                    221 ;--------------------------------------------------------
                                    222 	.area BSEG    (BIT)
                                    223 ;--------------------------------------------------------
                                    224 ; paged external ram data
                                    225 ;--------------------------------------------------------
                                    226 	.area PSEG    (PAG,XDATA)
                                    227 ;--------------------------------------------------------
                                    228 ; external ram data
                                    229 ;--------------------------------------------------------
                                    230 	.area XSEG    (XDATA)
                                    231 ;--------------------------------------------------------
                                    232 ; absolute external ram data
                                    233 ;--------------------------------------------------------
                                    234 	.area XABS    (ABS,XDATA)
                                    235 ;--------------------------------------------------------
                                    236 ; external initialized ram data
                                    237 ;--------------------------------------------------------
                                    238 	.area XISEG   (XDATA)
                                    239 	.area HOME    (CODE)
                                    240 	.area GSINIT0 (CODE)
                                    241 	.area GSINIT1 (CODE)
                                    242 	.area GSINIT2 (CODE)
                                    243 	.area GSINIT3 (CODE)
                                    244 	.area GSINIT4 (CODE)
                                    245 	.area GSINIT5 (CODE)
                                    246 	.area GSINIT  (CODE)
                                    247 	.area GSFINAL (CODE)
                                    248 	.area CSEG    (CODE)
                                    249 ;--------------------------------------------------------
                                    250 ; global & static initialisations
                                    251 ;--------------------------------------------------------
                                    252 	.area HOME    (CODE)
                                    253 	.area GSINIT  (CODE)
                                    254 	.area GSFINAL (CODE)
                                    255 	.area GSINIT  (CODE)
                                    256 ;--------------------------------------------------------
                                    257 ; Home
                                    258 ;--------------------------------------------------------
                                    259 	.area HOME    (CODE)
                                    260 	.area HOME    (CODE)
                                    261 ;--------------------------------------------------------
                                    262 ; code
                                    263 ;--------------------------------------------------------
                                    264 	.area CSEG    (CODE)
                                    265 ;------------------------------------------------------------
                                    266 ;Allocation info for local variables in function 'write_string'
                                    267 ;------------------------------------------------------------
                                    268 ;length                    Allocated to stack - _bp -3
                                    269 ;index                     Allocated to stack - _bp -4
                                    270 ;line                      Allocated to stack - _bp -5
                                    271 ;selected                  Allocated to stack - _bp -6
                                    272 ;string                    Allocated to stack - _bp +1
                                    273 ;i                         Allocated to registers r3 
                                    274 ;done                      Allocated to registers r4 
                                    275 ;sloc0                     Allocated to stack - _bp +6
                                    276 ;------------------------------------------------------------
                                    277 ;	../UI_Manager/Display_Manager/display.c:16: void write_string(char* string, uint8_t length, uint8_t index, uint8_t line, uint8_t selected){
                                    278 ;	-----------------------------------------
                                    279 ;	 function write_string
                                    280 ;	-----------------------------------------
      000000                        281 _write_string:
                           000007   282 	ar7 = 0x07
                           000006   283 	ar6 = 0x06
                           000005   284 	ar5 = 0x05
                           000004   285 	ar4 = 0x04
                           000003   286 	ar3 = 0x03
                           000002   287 	ar2 = 0x02
                           000001   288 	ar1 = 0x01
                           000000   289 	ar0 = 0x00
      000000 C0*00            [24]  290 	push	_bp
      000002 85 81*00         [24]  291 	mov	_bp,sp
      000005 C0 82            [24]  292 	push	dpl
      000007 C0 83            [24]  293 	push	dph
      000009 C0 F0            [24]  294 	push	b
                                    295 ;	../UI_Manager/Display_Manager/display.c:17: uint8_t i, done = 0;
      00000B 7C 00            [12]  296 	mov	r4,#0x00
                                    297 ;	../UI_Manager/Display_Manager/display.c:20: exe_command(DDRAM_ADDRESS_SET | (flipByte((line) ? index + 0x40 : index) << 8));
      00000D E5*00            [12]  298 	mov	a,_bp
      00000F 24 FB            [12]  299 	add	a,#0xfb
      000011 F8               [12]  300 	mov	r0,a
      000012 E6               [12]  301 	mov	a,@r0
      000013 60 0D            [24]  302 	jz	00115$
      000015 E5*00            [12]  303 	mov	a,_bp
      000017 24 FC            [12]  304 	add	a,#0xfc
      000019 F8               [12]  305 	mov	r0,a
      00001A 86 03            [24]  306 	mov	ar3,@r0
      00001C 74 40            [12]  307 	mov	a,#0x40
      00001E 2B               [12]  308 	add	a,r3
      00001F FB               [12]  309 	mov	r3,a
      000020 80 07            [24]  310 	sjmp	00116$
      000022                        311 00115$:
      000022 E5*00            [12]  312 	mov	a,_bp
      000024 24 FC            [12]  313 	add	a,#0xfc
      000026 F8               [12]  314 	mov	r0,a
      000027 86 03            [24]  315 	mov	ar3,@r0
      000029                        316 00116$:
      000029 8B 82            [24]  317 	mov	dpl,r3
      00002B C0 04            [24]  318 	push	ar4
      00002D 12r05r8A         [24]  319 	lcall	_flipByte
      000030 AA 82            [24]  320 	mov	r2,dpl
      000032 7B 00            [12]  321 	mov	r3,#0x00
      000034 8B 82            [24]  322 	mov	dpl,r3
      000036 74 01            [12]  323 	mov	a,#0x01
      000038 4A               [12]  324 	orl	a,r2
      000039 F5 83            [12]  325 	mov	dph,a
      00003B 12r03r3B         [24]  326 	lcall	_exe_command
      00003E D0 04            [24]  327 	pop	ar4
                                    328 ;	../UI_Manager/Display_Manager/display.c:22: length++; //null terminated
      000040 E5*00            [12]  329 	mov	a,_bp
      000042 24 FD            [12]  330 	add	a,#0xfd
      000044 F8               [12]  331 	mov	r0,a
      000045 06               [12]  332 	inc	@r0
                                    333 ;	../UI_Manager/Display_Manager/display.c:24: if(selected){
      000046 E5*00            [12]  334 	mov	a,_bp
      000048 24 FA            [12]  335 	add	a,#0xfa
      00004A F8               [12]  336 	mov	r0,a
      00004B E6               [12]  337 	mov	a,@r0
      00004C 60 0A            [24]  338 	jz	00122$
                                    339 ;	../UI_Manager/Display_Manager/display.c:25: exe_command(WRITE_CURSOR);
      00004E 90 00 80         [24]  340 	mov	dptr,#0x0080
      000051 C0 04            [24]  341 	push	ar4
      000053 12r03r3B         [24]  342 	lcall	_exe_command
      000056 D0 04            [24]  343 	pop	ar4
                                    344 ;	../UI_Manager/Display_Manager/display.c:28: for(i = 0; i < length; i++){
      000058                        345 00122$:
      000058 7B 00            [12]  346 	mov	r3,#0x00
      00005A                        347 00111$:
      00005A E5*00            [12]  348 	mov	a,_bp
      00005C 24 FD            [12]  349 	add	a,#0xfd
      00005E F8               [12]  350 	mov	r0,a
      00005F C3               [12]  351 	clr	c
      000060 EB               [12]  352 	mov	a,r3
      000061 96               [12]  353 	subb	a,@r0
      000062 50 53            [24]  354 	jnc	00113$
                                    355 ;	../UI_Manager/Display_Manager/display.c:29: if(!done){
      000064 EC               [12]  356 	mov	a,r4
      000065 70 3F            [24]  357 	jnz	00107$
                                    358 ;	../UI_Manager/Display_Manager/display.c:30: if(string[i]){
      000067 C0 04            [24]  359 	push	ar4
      000069 A8*00            [24]  360 	mov	r0,_bp
      00006B 08               [12]  361 	inc	r0
      00006C EB               [12]  362 	mov	a,r3
      00006D 26               [12]  363 	add	a,@r0
      00006E FA               [12]  364 	mov	r2,a
      00006F E4               [12]  365 	clr	a
      000070 08               [12]  366 	inc	r0
      000071 36               [12]  367 	addc	a,@r0
      000072 FC               [12]  368 	mov	r4,a
      000073 08               [12]  369 	inc	r0
      000074 86 07            [24]  370 	mov	ar7,@r0
      000076 8A 82            [24]  371 	mov	dpl,r2
      000078 8C 83            [24]  372 	mov	dph,r4
      00007A 8F F0            [24]  373 	mov	b,r7
      00007C 12r00r00         [24]  374 	lcall	__gptrget
      00007F FF               [12]  375 	mov	r7,a
      000080 D0 04            [24]  376 	pop	ar4
      000082 EF               [12]  377 	mov	a,r7
      000083 60 1D            [24]  378 	jz	00104$
                                    379 ;	../UI_Manager/Display_Manager/display.c:31: exe_command(RAM_WRITE | (charToCode(string[i]) << 8));
      000085 8F 82            [24]  380 	mov	dpl,r7
      000087 C0 04            [24]  381 	push	ar4
      000089 C0 03            [24]  382 	push	ar3
      00008B 12r03r81         [24]  383 	lcall	_charToCode
      00008E AE 82            [24]  384 	mov	r6,dpl
      000090 7F 00            [12]  385 	mov	r7,#0x00
      000092 74 80            [12]  386 	mov	a,#0x80
      000094 4F               [12]  387 	orl	a,r7
      000095 F5 82            [12]  388 	mov	dpl,a
      000097 8E 83            [24]  389 	mov	dph,r6
      000099 12r03r3B         [24]  390 	lcall	_exe_command
      00009C D0 03            [24]  391 	pop	ar3
      00009E D0 04            [24]  392 	pop	ar4
      0000A0 80 12            [24]  393 	sjmp	00112$
      0000A2                        394 00104$:
                                    395 ;	../UI_Manager/Display_Manager/display.c:33: done = 1;
      0000A2 7C 01            [12]  396 	mov	r4,#0x01
      0000A4 80 0E            [24]  397 	sjmp	00112$
      0000A6                        398 00107$:
                                    399 ;	../UI_Manager/Display_Manager/display.c:36: exe_command(RAM_WRITE | (CHAR_NULL << 8));
      0000A6 90 04 80         [24]  400 	mov	dptr,#0x0480
      0000A9 C0 04            [24]  401 	push	ar4
      0000AB C0 03            [24]  402 	push	ar3
      0000AD 12r03r3B         [24]  403 	lcall	_exe_command
      0000B0 D0 03            [24]  404 	pop	ar3
      0000B2 D0 04            [24]  405 	pop	ar4
      0000B4                        406 00112$:
                                    407 ;	../UI_Manager/Display_Manager/display.c:28: for(i = 0; i < length; i++){
      0000B4 0B               [12]  408 	inc	r3
      0000B5 80 A3            [24]  409 	sjmp	00111$
      0000B7                        410 00113$:
                                    411 ;	../UI_Manager/Display_Manager/display.c:39: }
      0000B7 85*00 81         [24]  412 	mov	sp,_bp
      0000BA D0*00            [24]  413 	pop	_bp
      0000BC 22               [24]  414 	ret
                                    415 ;------------------------------------------------------------
                                    416 ;Allocation info for local variables in function 'write_number'
                                    417 ;------------------------------------------------------------
                                    418 ;index                     Allocated to stack - _bp -3
                                    419 ;line                      Allocated to stack - _bp -4
                                    420 ;selected                  Allocated to stack - _bp -5
                                    421 ;number                    Allocated to registers r6 r7 
                                    422 ;higherNumberPresent       Allocated to registers r5 
                                    423 ;value                     Allocated to registers r2 r3 
                                    424 ;chars                     Allocated to stack - _bp +1
                                    425 ;------------------------------------------------------------
                                    426 ;	../UI_Manager/Display_Manager/display.c:41: void write_number(uint16_t number, uint8_t index, uint8_t line, uint8_t selected){
                                    427 ;	-----------------------------------------
                                    428 ;	 function write_number
                                    429 ;	-----------------------------------------
      0000BD                        430 _write_number:
      0000BD C0*00            [24]  431 	push	_bp
      0000BF 85 81*00         [24]  432 	mov	_bp,sp
      0000C2 05 81            [12]  433 	inc	sp
      0000C4 05 81            [12]  434 	inc	sp
      0000C6 05 81            [12]  435 	inc	sp
      0000C8 AE 82            [24]  436 	mov	r6,dpl
      0000CA AF 83            [24]  437 	mov	r7,dph
                                    438 ;	../UI_Manager/Display_Manager/display.c:42: uint8_t higherNumberPresent = 0;
      0000CC 7D 00            [12]  439 	mov	r5,#0x00
                                    440 ;	../UI_Manager/Display_Manager/display.c:44: uint8_t chars[3] = {CHAR_NULL, CHAR_NULL, CHAR_0};
      0000CE A9*00            [24]  441 	mov	r1,_bp
      0000D0 09               [12]  442 	inc	r1
      0000D1 77 04            [12]  443 	mov	@r1,#0x04
      0000D3 E9               [12]  444 	mov	a,r1
      0000D4 04               [12]  445 	inc	a
      0000D5 F8               [12]  446 	mov	r0,a
      0000D6 76 04            [12]  447 	mov	@r0,#0x04
      0000D8 74 02            [12]  448 	mov	a,#0x02
      0000DA 29               [12]  449 	add	a,r1
      0000DB FC               [12]  450 	mov	r4,a
      0000DC C0 00            [24]  451 	push	ar0
      0000DE A8 04            [24]  452 	mov	r0,ar4
      0000E0 76 0C            [12]  453 	mov	@r0,#0x0c
      0000E2 D0 00            [24]  454 	pop	ar0
                                    455 ;	../UI_Manager/Display_Manager/display.c:46: if(number >= 1000) {number = 999;}
      0000E4 C3               [12]  456 	clr	c
      0000E5 EE               [12]  457 	mov	a,r6
      0000E6 94 E8            [12]  458 	subb	a,#0xe8
      0000E8 EF               [12]  459 	mov	a,r7
      0000E9 94 03            [12]  460 	subb	a,#0x03
      0000EB 40 04            [24]  461 	jc	00102$
      0000ED 7E E7            [12]  462 	mov	r6,#0xe7
      0000EF 7F 03            [12]  463 	mov	r7,#0x03
      0000F1                        464 00102$:
                                    465 ;	../UI_Manager/Display_Manager/display.c:48: exe_command(DDRAM_ADDRESS_SET | (flipByte((line) ? index + 0x40 : index) << 8));
      0000F1 C0 00            [24]  466 	push	ar0
      0000F3 E5*00            [12]  467 	mov	a,_bp
      0000F5 24 FC            [12]  468 	add	a,#0xfc
      0000F7 F8               [12]  469 	mov	r0,a
      0000F8 E6               [12]  470 	mov	a,@r0
      0000F9 D0 00            [24]  471 	pop	ar0
      0000FB 60 11            [24]  472 	jz	00113$
      0000FD C0 00            [24]  473 	push	ar0
      0000FF E5*00            [12]  474 	mov	a,_bp
      000101 24 FD            [12]  475 	add	a,#0xfd
      000103 F8               [12]  476 	mov	r0,a
      000104 86 03            [24]  477 	mov	ar3,@r0
      000106 D0 00            [24]  478 	pop	ar0
      000108 74 40            [12]  479 	mov	a,#0x40
      00010A 2B               [12]  480 	add	a,r3
      00010B FB               [12]  481 	mov	r3,a
      00010C 80 0B            [24]  482 	sjmp	00114$
      00010E                        483 00113$:
      00010E C0 00            [24]  484 	push	ar0
      000110 E5*00            [12]  485 	mov	a,_bp
      000112 24 FD            [12]  486 	add	a,#0xfd
      000114 F8               [12]  487 	mov	r0,a
      000115 86 03            [24]  488 	mov	ar3,@r0
      000117 D0 00            [24]  489 	pop	ar0
      000119                        490 00114$:
      000119 8B 82            [24]  491 	mov	dpl,r3
      00011B C0 07            [24]  492 	push	ar7
      00011D C0 06            [24]  493 	push	ar6
      00011F C0 05            [24]  494 	push	ar5
      000121 C0 04            [24]  495 	push	ar4
      000123 C0 01            [24]  496 	push	ar1
      000125 C0 00            [24]  497 	push	ar0
      000127 12r05r8A         [24]  498 	lcall	_flipByte
      00012A AA 82            [24]  499 	mov	r2,dpl
      00012C 7B 00            [12]  500 	mov	r3,#0x00
      00012E 8B 82            [24]  501 	mov	dpl,r3
      000130 74 01            [12]  502 	mov	a,#0x01
      000132 4A               [12]  503 	orl	a,r2
      000133 F5 83            [12]  504 	mov	dph,a
      000135 12r03r3B         [24]  505 	lcall	_exe_command
      000138 D0 00            [24]  506 	pop	ar0
      00013A D0 01            [24]  507 	pop	ar1
      00013C D0 04            [24]  508 	pop	ar4
      00013E D0 05            [24]  509 	pop	ar5
      000140 D0 06            [24]  510 	pop	ar6
      000142 D0 07            [24]  511 	pop	ar7
                                    512 ;	../UI_Manager/Display_Manager/display.c:51: if(selected){
      000144 C0 00            [24]  513 	push	ar0
      000146 E5*00            [12]  514 	mov	a,_bp
      000148 24 FB            [12]  515 	add	a,#0xfb
      00014A F8               [12]  516 	mov	r0,a
      00014B E6               [12]  517 	mov	a,@r0
      00014C D0 00            [24]  518 	pop	ar0
      00014E 60 20            [24]  519 	jz	00104$
                                    520 ;	../UI_Manager/Display_Manager/display.c:52: exe_command(WRITE_CURSOR);
      000150 90 00 80         [24]  521 	mov	dptr,#0x0080
      000153 C0 07            [24]  522 	push	ar7
      000155 C0 06            [24]  523 	push	ar6
      000157 C0 05            [24]  524 	push	ar5
      000159 C0 04            [24]  525 	push	ar4
      00015B C0 01            [24]  526 	push	ar1
      00015D C0 00            [24]  527 	push	ar0
      00015F 12r03r3B         [24]  528 	lcall	_exe_command
      000162 D0 00            [24]  529 	pop	ar0
      000164 D0 01            [24]  530 	pop	ar1
      000166 D0 04            [24]  531 	pop	ar4
      000168 D0 05            [24]  532 	pop	ar5
      00016A D0 06            [24]  533 	pop	ar6
      00016C D0 07            [24]  534 	pop	ar7
      00016E 80 1E            [24]  535 	sjmp	00105$
      000170                        536 00104$:
                                    537 ;	../UI_Manager/Display_Manager/display.c:54: exe_command(RAM_WRITE | (CHAR_NULL << 8));
      000170 90 04 80         [24]  538 	mov	dptr,#0x0480
      000173 C0 07            [24]  539 	push	ar7
      000175 C0 06            [24]  540 	push	ar6
      000177 C0 05            [24]  541 	push	ar5
      000179 C0 04            [24]  542 	push	ar4
      00017B C0 01            [24]  543 	push	ar1
      00017D C0 00            [24]  544 	push	ar0
      00017F 12r03r3B         [24]  545 	lcall	_exe_command
      000182 D0 00            [24]  546 	pop	ar0
      000184 D0 01            [24]  547 	pop	ar1
      000186 D0 04            [24]  548 	pop	ar4
      000188 D0 05            [24]  549 	pop	ar5
      00018A D0 06            [24]  550 	pop	ar6
      00018C D0 07            [24]  551 	pop	ar7
      00018E                        552 00105$:
                                    553 ;	../UI_Manager/Display_Manager/display.c:58: value = number/100;
      00018E C0 07            [24]  554 	push	ar7
      000190 C0 06            [24]  555 	push	ar6
      000192 C0 05            [24]  556 	push	ar5
      000194 C0 04            [24]  557 	push	ar4
      000196 C0 01            [24]  558 	push	ar1
      000198 C0 00            [24]  559 	push	ar0
      00019A 74 64            [12]  560 	mov	a,#0x64
      00019C C0 E0            [24]  561 	push	acc
      00019E E4               [12]  562 	clr	a
      00019F C0 E0            [24]  563 	push	acc
      0001A1 8E 82            [24]  564 	mov	dpl,r6
      0001A3 8F 83            [24]  565 	mov	dph,r7
      0001A5 12r00r00         [24]  566 	lcall	__divuint
      0001A8 AA 82            [24]  567 	mov	r2,dpl
      0001AA AB 83            [24]  568 	mov	r3,dph
      0001AC 15 81            [12]  569 	dec	sp
      0001AE 15 81            [12]  570 	dec	sp
      0001B0 D0 00            [24]  571 	pop	ar0
      0001B2 D0 01            [24]  572 	pop	ar1
      0001B4 D0 04            [24]  573 	pop	ar4
      0001B6 D0 05            [24]  574 	pop	ar5
      0001B8 D0 06            [24]  575 	pop	ar6
      0001BA D0 07            [24]  576 	pop	ar7
                                    577 ;	../UI_Manager/Display_Manager/display.c:59: if(value){
      0001BC EA               [12]  578 	mov	a,r2
      0001BD 4B               [12]  579 	orl	a,r3
      0001BE 60 54            [24]  580 	jz	00107$
                                    581 ;	../UI_Manager/Display_Manager/display.c:60: chars[0] = charToCode(value + 0x30);
      0001C0 C0 04            [24]  582 	push	ar4
      0001C2 8A 04            [24]  583 	mov	ar4,r2
      0001C4 74 30            [12]  584 	mov	a,#0x30
      0001C6 2C               [12]  585 	add	a,r4
      0001C7 F5 82            [12]  586 	mov	dpl,a
      0001C9 C0 07            [24]  587 	push	ar7
      0001CB C0 06            [24]  588 	push	ar6
      0001CD C0 04            [24]  589 	push	ar4
      0001CF C0 03            [24]  590 	push	ar3
      0001D1 C0 02            [24]  591 	push	ar2
      0001D3 C0 01            [24]  592 	push	ar1
      0001D5 C0 00            [24]  593 	push	ar0
      0001D7 12r03r81         [24]  594 	lcall	_charToCode
      0001DA E5 82            [12]  595 	mov	a,dpl
      0001DC D0 00            [24]  596 	pop	ar0
      0001DE D0 01            [24]  597 	pop	ar1
      0001E0 D0 02            [24]  598 	pop	ar2
      0001E2 D0 03            [24]  599 	pop	ar3
      0001E4 D0 04            [24]  600 	pop	ar4
      0001E6 F7               [12]  601 	mov	@r1,a
                                    602 ;	../UI_Manager/Display_Manager/display.c:61: higherNumberPresent = 1;
      0001E7 7D 01            [12]  603 	mov	r5,#0x01
                                    604 ;	../UI_Manager/Display_Manager/display.c:62: number -= value*100;
      0001E9 C0 05            [24]  605 	push	ar5
      0001EB C0 01            [24]  606 	push	ar1
      0001ED C0 00            [24]  607 	push	ar0
      0001EF C0 02            [24]  608 	push	ar2
      0001F1 C0 03            [24]  609 	push	ar3
      0001F3 90 00 64         [24]  610 	mov	dptr,#0x0064
      0001F6 12r00r00         [24]  611 	lcall	__mulint
      0001F9 AB 82            [24]  612 	mov	r3,dpl
      0001FB AC 83            [24]  613 	mov	r4,dph
      0001FD 15 81            [12]  614 	dec	sp
      0001FF 15 81            [12]  615 	dec	sp
      000201 D0 00            [24]  616 	pop	ar0
      000203 D0 01            [24]  617 	pop	ar1
      000205 D0 05            [24]  618 	pop	ar5
      000207 D0 06            [24]  619 	pop	ar6
      000209 D0 07            [24]  620 	pop	ar7
      00020B EE               [12]  621 	mov	a,r6
      00020C C3               [12]  622 	clr	c
      00020D 9B               [12]  623 	subb	a,r3
      00020E FE               [12]  624 	mov	r6,a
      00020F EF               [12]  625 	mov	a,r7
      000210 9C               [12]  626 	subb	a,r4
      000211 FF               [12]  627 	mov	r7,a
                                    628 ;	../UI_Manager/Display_Manager/display.c:75: exe_command(RAM_WRITE | (chars[2] << 8));
      000212 D0 04            [24]  629 	pop	ar4
                                    630 ;	../UI_Manager/Display_Manager/display.c:62: number -= value*100;
      000214                        631 00107$:
                                    632 ;	../UI_Manager/Display_Manager/display.c:65: value = number/10;
      000214 C0 07            [24]  633 	push	ar7
      000216 C0 06            [24]  634 	push	ar6
      000218 C0 05            [24]  635 	push	ar5
      00021A C0 04            [24]  636 	push	ar4
      00021C C0 01            [24]  637 	push	ar1
      00021E C0 00            [24]  638 	push	ar0
      000220 74 0A            [12]  639 	mov	a,#0x0a
      000222 C0 E0            [24]  640 	push	acc
      000224 E4               [12]  641 	clr	a
      000225 C0 E0            [24]  642 	push	acc
      000227 8E 82            [24]  643 	mov	dpl,r6
      000229 8F 83            [24]  644 	mov	dph,r7
      00022B 12r00r00         [24]  645 	lcall	__divuint
      00022E AA 82            [24]  646 	mov	r2,dpl
      000230 AB 83            [24]  647 	mov	r3,dph
      000232 15 81            [12]  648 	dec	sp
      000234 15 81            [12]  649 	dec	sp
      000236 D0 00            [24]  650 	pop	ar0
      000238 D0 01            [24]  651 	pop	ar1
      00023A D0 04            [24]  652 	pop	ar4
      00023C D0 05            [24]  653 	pop	ar5
      00023E D0 06            [24]  654 	pop	ar6
      000240 D0 07            [24]  655 	pop	ar7
                                    656 ;	../UI_Manager/Display_Manager/display.c:66: if(higherNumberPresent || value){
      000242 ED               [12]  657 	mov	a,r5
      000243 70 04            [24]  658 	jnz	00108$
      000245 EA               [12]  659 	mov	a,r2
      000246 4B               [12]  660 	orl	a,r3
      000247 60 4A            [24]  661 	jz	00109$
      000249                        662 00108$:
                                    663 ;	../UI_Manager/Display_Manager/display.c:67: chars[1] = charToCode(value + 0x30);
      000249 8A 05            [24]  664 	mov	ar5,r2
      00024B 74 30            [12]  665 	mov	a,#0x30
      00024D 2D               [12]  666 	add	a,r5
      00024E F5 82            [12]  667 	mov	dpl,a
      000250 C0 07            [24]  668 	push	ar7
      000252 C0 06            [24]  669 	push	ar6
      000254 C0 04            [24]  670 	push	ar4
      000256 C0 03            [24]  671 	push	ar3
      000258 C0 02            [24]  672 	push	ar2
      00025A C0 01            [24]  673 	push	ar1
      00025C C0 00            [24]  674 	push	ar0
      00025E 12r03r81         [24]  675 	lcall	_charToCode
      000261 E5 82            [12]  676 	mov	a,dpl
      000263 D0 00            [24]  677 	pop	ar0
      000265 D0 01            [24]  678 	pop	ar1
      000267 D0 02            [24]  679 	pop	ar2
      000269 D0 03            [24]  680 	pop	ar3
      00026B F6               [12]  681 	mov	@r0,a
                                    682 ;	../UI_Manager/Display_Manager/display.c:68: number -= value*10;
      00026C C0 01            [24]  683 	push	ar1
      00026E C0 00            [24]  684 	push	ar0
      000270 C0 02            [24]  685 	push	ar2
      000272 C0 03            [24]  686 	push	ar3
      000274 90 00 0A         [24]  687 	mov	dptr,#0x000a
      000277 12r00r00         [24]  688 	lcall	__mulint
      00027A AB 82            [24]  689 	mov	r3,dpl
      00027C AD 83            [24]  690 	mov	r5,dph
      00027E 15 81            [12]  691 	dec	sp
      000280 15 81            [12]  692 	dec	sp
      000282 D0 00            [24]  693 	pop	ar0
      000284 D0 01            [24]  694 	pop	ar1
      000286 D0 04            [24]  695 	pop	ar4
      000288 D0 06            [24]  696 	pop	ar6
      00028A D0 07            [24]  697 	pop	ar7
      00028C EE               [12]  698 	mov	a,r6
      00028D C3               [12]  699 	clr	c
      00028E 9B               [12]  700 	subb	a,r3
      00028F FE               [12]  701 	mov	r6,a
      000290 EF               [12]  702 	mov	a,r7
      000291 9D               [12]  703 	subb	a,r5
      000292 FF               [12]  704 	mov	r7,a
      000293                        705 00109$:
                                    706 ;	../UI_Manager/Display_Manager/display.c:71: chars[2] = charToCode(number + 0x30);
      000293 74 30            [12]  707 	mov	a,#0x30
      000295 2E               [12]  708 	add	a,r6
      000296 F5 82            [12]  709 	mov	dpl,a
      000298 C0 04            [24]  710 	push	ar4
      00029A C0 01            [24]  711 	push	ar1
      00029C C0 00            [24]  712 	push	ar0
      00029E 12r03r81         [24]  713 	lcall	_charToCode
      0002A1 E5 82            [12]  714 	mov	a,dpl
      0002A3 D0 00            [24]  715 	pop	ar0
      0002A5 D0 01            [24]  716 	pop	ar1
      0002A7 D0 04            [24]  717 	pop	ar4
      0002A9 C0 00            [24]  718 	push	ar0
      0002AB A8 04            [24]  719 	mov	r0,ar4
      0002AD F6               [12]  720 	mov	@r0,a
      0002AE D0 00            [24]  721 	pop	ar0
                                    722 ;	../UI_Manager/Display_Manager/display.c:73: exe_command(RAM_WRITE | (chars[0] << 8));
      0002B0 87 07            [24]  723 	mov	ar7,@r1
      0002B2 8F 06            [24]  724 	mov	ar6,r7
      0002B4 7F 00            [12]  725 	mov	r7,#0x00
      0002B6 74 80            [12]  726 	mov	a,#0x80
      0002B8 4F               [12]  727 	orl	a,r7
      0002B9 F5 82            [12]  728 	mov	dpl,a
      0002BB 8E 83            [24]  729 	mov	dph,r6
      0002BD C0 04            [24]  730 	push	ar4
      0002BF C0 00            [24]  731 	push	ar0
      0002C1 12r03r3B         [24]  732 	lcall	_exe_command
      0002C4 D0 00            [24]  733 	pop	ar0
                                    734 ;	../UI_Manager/Display_Manager/display.c:74: exe_command(RAM_WRITE | (chars[1] << 8));
      0002C6 86 07            [24]  735 	mov	ar7,@r0
      0002C8 8F 06            [24]  736 	mov	ar6,r7
      0002CA 7F 00            [12]  737 	mov	r7,#0x00
      0002CC 74 80            [12]  738 	mov	a,#0x80
      0002CE 4F               [12]  739 	orl	a,r7
      0002CF F5 82            [12]  740 	mov	dpl,a
      0002D1 8E 83            [24]  741 	mov	dph,r6
      0002D3 12r03r3B         [24]  742 	lcall	_exe_command
      0002D6 D0 04            [24]  743 	pop	ar4
                                    744 ;	../UI_Manager/Display_Manager/display.c:75: exe_command(RAM_WRITE | (chars[2] << 8));
      0002D8 A8 04            [24]  745 	mov	r0,ar4
      0002DA 86 07            [24]  746 	mov	ar7,@r0
      0002DC 8F 06            [24]  747 	mov	ar6,r7
      0002DE 7F 00            [12]  748 	mov	r7,#0x00
      0002E0 74 80            [12]  749 	mov	a,#0x80
      0002E2 4F               [12]  750 	orl	a,r7
      0002E3 F5 82            [12]  751 	mov	dpl,a
      0002E5 8E 83            [24]  752 	mov	dph,r6
      0002E7 12r03r3B         [24]  753 	lcall	_exe_command
                                    754 ;	../UI_Manager/Display_Manager/display.c:77: }
      0002EA 85*00 81         [24]  755 	mov	sp,_bp
      0002ED D0*00            [24]  756 	pop	_bp
      0002EF 22               [24]  757 	ret
                                    758 ;------------------------------------------------------------
                                    759 ;Allocation info for local variables in function 'write_char'
                                    760 ;------------------------------------------------------------
                                    761 ;index                     Allocated to stack - _bp -3
                                    762 ;line                      Allocated to stack - _bp -4
                                    763 ;command                   Allocated to registers r7 
                                    764 ;------------------------------------------------------------
                                    765 ;	../UI_Manager/Display_Manager/display.c:79: void write_char(uint8_t command, uint8_t index, uint8_t line){
                                    766 ;	-----------------------------------------
                                    767 ;	 function write_char
                                    768 ;	-----------------------------------------
      0002F0                        769 _write_char:
      0002F0 C0*00            [24]  770 	push	_bp
      0002F2 85 81*00         [24]  771 	mov	_bp,sp
      0002F5 AF 82            [24]  772 	mov	r7,dpl
                                    773 ;	../UI_Manager/Display_Manager/display.c:80: exe_command(DDRAM_ADDRESS_SET | (flipByte((line) ? index + 0x40 : index) << 8));
      0002F7 E5*00            [12]  774 	mov	a,_bp
      0002F9 24 FC            [12]  775 	add	a,#0xfc
      0002FB F8               [12]  776 	mov	r0,a
      0002FC E6               [12]  777 	mov	a,@r0
      0002FD 60 0D            [24]  778 	jz	00103$
      0002FF E5*00            [12]  779 	mov	a,_bp
      000301 24 FD            [12]  780 	add	a,#0xfd
      000303 F8               [12]  781 	mov	r0,a
      000304 86 06            [24]  782 	mov	ar6,@r0
      000306 74 40            [12]  783 	mov	a,#0x40
      000308 2E               [12]  784 	add	a,r6
      000309 FE               [12]  785 	mov	r6,a
      00030A 80 07            [24]  786 	sjmp	00104$
      00030C                        787 00103$:
      00030C E5*00            [12]  788 	mov	a,_bp
      00030E 24 FD            [12]  789 	add	a,#0xfd
      000310 F8               [12]  790 	mov	r0,a
      000311 86 06            [24]  791 	mov	ar6,@r0
      000313                        792 00104$:
      000313 8E 82            [24]  793 	mov	dpl,r6
      000315 C0 07            [24]  794 	push	ar7
      000317 12r05r8A         [24]  795 	lcall	_flipByte
      00031A AD 82            [24]  796 	mov	r5,dpl
      00031C 7E 00            [12]  797 	mov	r6,#0x00
      00031E 8E 82            [24]  798 	mov	dpl,r6
      000320 74 01            [12]  799 	mov	a,#0x01
      000322 4D               [12]  800 	orl	a,r5
      000323 F5 83            [12]  801 	mov	dph,a
      000325 12r03r3B         [24]  802 	lcall	_exe_command
      000328 D0 07            [24]  803 	pop	ar7
                                    804 ;	../UI_Manager/Display_Manager/display.c:81: exe_command(RAM_WRITE | (command << 8));
      00032A 8F 06            [24]  805 	mov	ar6,r7
      00032C 7F 00            [12]  806 	mov	r7,#0x00
      00032E 74 80            [12]  807 	mov	a,#0x80
      000330 4F               [12]  808 	orl	a,r7
      000331 F5 82            [12]  809 	mov	dpl,a
      000333 8E 83            [24]  810 	mov	dph,r6
      000335 12r03r3B         [24]  811 	lcall	_exe_command
                                    812 ;	../UI_Manager/Display_Manager/display.c:82: }
      000338 D0*00            [24]  813 	pop	_bp
      00033A 22               [24]  814 	ret
                                    815 ;------------------------------------------------------------
                                    816 ;Allocation info for local variables in function 'exe_command'
                                    817 ;------------------------------------------------------------
                                    818 ;command                   Allocated to registers r6 r7 
                                    819 ;delay                     Allocated to registers r5 r6 
                                    820 ;------------------------------------------------------------
                                    821 ;	../UI_Manager/Display_Manager/display.c:86: void exe_command(uint16_t command){
                                    822 ;	-----------------------------------------
                                    823 ;	 function exe_command
                                    824 ;	-----------------------------------------
      00033B                        825 _exe_command:
      00033B AE 82            [24]  826 	mov	r6,dpl
      00033D AF 83            [24]  827 	mov	r7,dph
                                    828 ;	../UI_Manager/Display_Manager/display.c:89: command |= (1 << EXE_BIT);
      00033F 43 06 20         [24]  829 	orl	ar6,#0x20
                                    830 ;	../UI_Manager/Display_Manager/display.c:90: writeShiftReg(command); //execute
      000342 8E 82            [24]  831 	mov	dpl,r6
      000344 8F 83            [24]  832 	mov	dph,r7
      000346 C0 07            [24]  833 	push	ar7
      000348 C0 06            [24]  834 	push	ar6
      00034A 12r05r56         [24]  835 	lcall	_writeShiftReg
      00034D D0 06            [24]  836 	pop	ar6
      00034F D0 07            [24]  837 	pop	ar7
                                    838 ;	../UI_Manager/Display_Manager/display.c:91: command &= ~(1 << EXE_BIT);
      000351 53 06 DF         [24]  839 	anl	ar6,#0xdf
                                    840 ;	../UI_Manager/Display_Manager/display.c:92: writeShiftReg(command); //end execution
      000354 8E 82            [24]  841 	mov	dpl,r6
      000356 8F 83            [24]  842 	mov	dph,r7
      000358 C0 07            [24]  843 	push	ar7
      00035A C0 06            [24]  844 	push	ar6
      00035C 12r05r56         [24]  845 	lcall	_writeShiftReg
      00035F D0 06            [24]  846 	pop	ar6
      000361 D0 07            [24]  847 	pop	ar7
                                    848 ;	../UI_Manager/Display_Manager/display.c:95: while(delay-- && command == CLEAR_DISPLAY){;;}
      000363 E4               [12]  849 	clr	a
      000364 BE 00 04         [24]  850 	cjne	r6,#0x00,00118$
      000367 BF 80 01         [24]  851 	cjne	r7,#0x80,00118$
      00036A 04               [12]  852 	inc	a
      00036B                        853 00118$:
      00036B FF               [12]  854 	mov	r7,a
      00036C 7D 00            [12]  855 	mov	r5,#0x00
      00036E 7E 03            [12]  856 	mov	r6,#0x03
      000370                        857 00102$:
      000370 8D 03            [24]  858 	mov	ar3,r5
      000372 8E 04            [24]  859 	mov	ar4,r6
      000374 1D               [12]  860 	dec	r5
      000375 BD FF 01         [24]  861 	cjne	r5,#0xff,00120$
      000378 1E               [12]  862 	dec	r6
      000379                        863 00120$:
      000379 EB               [12]  864 	mov	a,r3
      00037A 4C               [12]  865 	orl	a,r4
      00037B 60 03            [24]  866 	jz	00105$
      00037D EF               [12]  867 	mov	a,r7
      00037E 70 F0            [24]  868 	jnz	00102$
      000380                        869 00105$:
                                    870 ;	../UI_Manager/Display_Manager/display.c:96: }
      000380 22               [24]  871 	ret
                                    872 ;------------------------------------------------------------
                                    873 ;Allocation info for local variables in function 'charToCode'
                                    874 ;------------------------------------------------------------
                                    875 ;c                         Allocated to registers r7 
                                    876 ;------------------------------------------------------------
                                    877 ;	../UI_Manager/Display_Manager/display.c:100: uint8_t charToCode(char c){
                                    878 ;	-----------------------------------------
                                    879 ;	 function charToCode
                                    880 ;	-----------------------------------------
      000381                        881 _charToCode:
      000381 AF 82            [24]  882 	mov	r7,dpl
                                    883 ;	../UI_Manager/Display_Manager/display.c:101: switch(c){
      000383 BF 26 00         [24]  884 	cjne	r7,#0x26,00177$
      000386                        885 00177$:
      000386 50 03            [24]  886 	jnc	00178$
      000388 02r05r52         [24]  887 	ljmp	00166$
      00038B                        888 00178$:
      00038B EF               [12]  889 	mov	a,r7
      00038C 24 85            [12]  890 	add	a,#0xff - 0x7a
      00038E 50 03            [24]  891 	jnc	00179$
      000390 02r05r52         [24]  892 	ljmp	00166$
      000393                        893 00179$:
      000393 EF               [12]  894 	mov	a,r7
      000394 24 DA            [12]  895 	add	a,#0xda
      000396 FF               [12]  896 	mov	r7,a
      000397 24 0A            [12]  897 	add	a,#(00180$-3-.)
      000399 83               [24]  898 	movc	a,@a+pc
      00039A F5 82            [12]  899 	mov	dpl,a
      00039C EF               [12]  900 	mov	a,r7
      00039D 24 59            [12]  901 	add	a,#(00181$-3-.)
      00039F 83               [24]  902 	movc	a,@a+pc
      0003A0 F5 83            [12]  903 	mov	dph,a
      0003A2 E4               [12]  904 	clr	a
      0003A3 73               [24]  905 	jmp	@a+dptr
      0003A4                        906 00180$:
      0003A4r4A                     907 	.db	00164$
      0003A5r52                     908 	.db	00166$
      0003A6r52                     909 	.db	00166$
      0003A7r52                     910 	.db	00166$
      0003A8r52                     911 	.db	00166$
      0003A9r46                     912 	.db	00163$
      0003AAr52                     913 	.db	00166$
      0003ABr52                     914 	.db	00166$
      0003ACr52                     915 	.db	00166$
      0003ADr52                     916 	.db	00166$
      0003AEr1E                     917 	.db	00153$
      0003AFr22                     918 	.db	00154$
      0003B0r26                     919 	.db	00155$
      0003B1r2A                     920 	.db	00156$
      0003B2r2E                     921 	.db	00157$
      0003B3r32                     922 	.db	00158$
      0003B4r36                     923 	.db	00159$
      0003B5r3A                     924 	.db	00160$
      0003B6r3E                     925 	.db	00161$
      0003B7r42                     926 	.db	00162$
      0003B8r52                     927 	.db	00166$
      0003B9r4E                     928 	.db	00165$
      0003BAr52                     929 	.db	00166$
      0003BBr52                     930 	.db	00166$
      0003BCr52                     931 	.db	00166$
      0003BDr52                     932 	.db	00166$
      0003BEr52                     933 	.db	00166$
      0003BFr4E                     934 	.db	00101$
      0003C0r56                     935 	.db	00103$
      0003C1r5E                     936 	.db	00105$
      0003C2r66                     937 	.db	00107$
      0003C3r6E                     938 	.db	00109$
      0003C4r76                     939 	.db	00111$
      0003C5r7E                     940 	.db	00113$
      0003C6r86                     941 	.db	00115$
      0003C7r8E                     942 	.db	00117$
      0003C8r96                     943 	.db	00119$
      0003C9r9E                     944 	.db	00121$
      0003CArA6                     945 	.db	00123$
      0003CBrAE                     946 	.db	00125$
      0003CCrB6                     947 	.db	00127$
      0003CDrBE                     948 	.db	00129$
      0003CErC6                     949 	.db	00131$
      0003CFrCE                     950 	.db	00133$
      0003D0rD6                     951 	.db	00135$
      0003D1rDE                     952 	.db	00137$
      0003D2rE6                     953 	.db	00139$
      0003D3rEE                     954 	.db	00141$
      0003D4rF6                     955 	.db	00143$
      0003D5rFE                     956 	.db	00145$
      0003D6r06                     957 	.db	00147$
      0003D7r0E                     958 	.db	00149$
      0003D8r16                     959 	.db	00151$
      0003D9r52                     960 	.db	00166$
      0003DAr52                     961 	.db	00166$
      0003DBr52                     962 	.db	00166$
      0003DCr52                     963 	.db	00166$
      0003DDr52                     964 	.db	00166$
      0003DEr52                     965 	.db	00166$
      0003DFr52                     966 	.db	00102$
      0003E0r5A                     967 	.db	00104$
      0003E1r62                     968 	.db	00106$
      0003E2r6A                     969 	.db	00108$
      0003E3r72                     970 	.db	00110$
      0003E4r7A                     971 	.db	00112$
      0003E5r82                     972 	.db	00114$
      0003E6r8A                     973 	.db	00116$
      0003E7r92                     974 	.db	00118$
      0003E8r9A                     975 	.db	00120$
      0003E9rA2                     976 	.db	00122$
      0003EArAA                     977 	.db	00124$
      0003EBrB2                     978 	.db	00126$
      0003ECrBA                     979 	.db	00128$
      0003EDrC2                     980 	.db	00130$
      0003EErCA                     981 	.db	00132$
      0003EFrD2                     982 	.db	00134$
      0003F0rDA                     983 	.db	00136$
      0003F1rE2                     984 	.db	00138$
      0003F2rEA                     985 	.db	00140$
      0003F3rF2                     986 	.db	00142$
      0003F4rFA                     987 	.db	00144$
      0003F5r02                     988 	.db	00146$
      0003F6r0A                     989 	.db	00148$
      0003F7r12                     990 	.db	00150$
      0003F8r1A                     991 	.db	00152$
      0003F9                        992 00181$:
      0003F9s05                     993 	.db	00164$>>8
      0003FAs05                     994 	.db	00166$>>8
      0003FBs05                     995 	.db	00166$>>8
      0003FCs05                     996 	.db	00166$>>8
      0003FDs05                     997 	.db	00166$>>8
      0003FEs05                     998 	.db	00163$>>8
      0003FFs05                     999 	.db	00166$>>8
      000400s05                    1000 	.db	00166$>>8
      000401s05                    1001 	.db	00166$>>8
      000402s05                    1002 	.db	00166$>>8
      000403s05                    1003 	.db	00153$>>8
      000404s05                    1004 	.db	00154$>>8
      000405s05                    1005 	.db	00155$>>8
      000406s05                    1006 	.db	00156$>>8
      000407s05                    1007 	.db	00157$>>8
      000408s05                    1008 	.db	00158$>>8
      000409s05                    1009 	.db	00159$>>8
      00040As05                    1010 	.db	00160$>>8
      00040Bs05                    1011 	.db	00161$>>8
      00040Cs05                    1012 	.db	00162$>>8
      00040Ds05                    1013 	.db	00166$>>8
      00040Es05                    1014 	.db	00165$>>8
      00040Fs05                    1015 	.db	00166$>>8
      000410s05                    1016 	.db	00166$>>8
      000411s05                    1017 	.db	00166$>>8
      000412s05                    1018 	.db	00166$>>8
      000413s05                    1019 	.db	00166$>>8
      000414s04                    1020 	.db	00101$>>8
      000415s04                    1021 	.db	00103$>>8
      000416s04                    1022 	.db	00105$>>8
      000417s04                    1023 	.db	00107$>>8
      000418s04                    1024 	.db	00109$>>8
      000419s04                    1025 	.db	00111$>>8
      00041As04                    1026 	.db	00113$>>8
      00041Bs04                    1027 	.db	00115$>>8
      00041Cs04                    1028 	.db	00117$>>8
      00041Ds04                    1029 	.db	00119$>>8
      00041Es04                    1030 	.db	00121$>>8
      00041Fs04                    1031 	.db	00123$>>8
      000420s04                    1032 	.db	00125$>>8
      000421s04                    1033 	.db	00127$>>8
      000422s04                    1034 	.db	00129$>>8
      000423s04                    1035 	.db	00131$>>8
      000424s04                    1036 	.db	00133$>>8
      000425s04                    1037 	.db	00135$>>8
      000426s04                    1038 	.db	00137$>>8
      000427s04                    1039 	.db	00139$>>8
      000428s04                    1040 	.db	00141$>>8
      000429s04                    1041 	.db	00143$>>8
      00042As04                    1042 	.db	00145$>>8
      00042Bs05                    1043 	.db	00147$>>8
      00042Cs05                    1044 	.db	00149$>>8
      00042Ds05                    1045 	.db	00151$>>8
      00042Es05                    1046 	.db	00166$>>8
      00042Fs05                    1047 	.db	00166$>>8
      000430s05                    1048 	.db	00166$>>8
      000431s05                    1049 	.db	00166$>>8
      000432s05                    1050 	.db	00166$>>8
      000433s05                    1051 	.db	00166$>>8
      000434s04                    1052 	.db	00102$>>8
      000435s04                    1053 	.db	00104$>>8
      000436s04                    1054 	.db	00106$>>8
      000437s04                    1055 	.db	00108$>>8
      000438s04                    1056 	.db	00110$>>8
      000439s04                    1057 	.db	00112$>>8
      00043As04                    1058 	.db	00114$>>8
      00043Bs04                    1059 	.db	00116$>>8
      00043Cs04                    1060 	.db	00118$>>8
      00043Ds04                    1061 	.db	00120$>>8
      00043Es04                    1062 	.db	00122$>>8
      00043Fs04                    1063 	.db	00124$>>8
      000440s04                    1064 	.db	00126$>>8
      000441s04                    1065 	.db	00128$>>8
      000442s04                    1066 	.db	00130$>>8
      000443s04                    1067 	.db	00132$>>8
      000444s04                    1068 	.db	00134$>>8
      000445s04                    1069 	.db	00136$>>8
      000446s04                    1070 	.db	00138$>>8
      000447s04                    1071 	.db	00140$>>8
      000448s04                    1072 	.db	00142$>>8
      000449s04                    1073 	.db	00144$>>8
      00044As05                    1074 	.db	00146$>>8
      00044Bs05                    1075 	.db	00148$>>8
      00044Cs05                    1076 	.db	00150$>>8
      00044Ds05                    1077 	.db	00152$>>8
                                   1078 ;	../UI_Manager/Display_Manager/display.c:102: case 'A':
      00044E                       1079 00101$:
                                   1080 ;	../UI_Manager/Display_Manager/display.c:103: return CHAR_A;
      00044E 75 82 82         [24] 1081 	mov	dpl,#0x82
      000451 22               [24] 1082 	ret
                                   1083 ;	../UI_Manager/Display_Manager/display.c:104: case 'a':
      000452                       1084 00102$:
                                   1085 ;	../UI_Manager/Display_Manager/display.c:105: return CHAR_a;
      000452 75 82 86         [24] 1086 	mov	dpl,#0x86
      000455 22               [24] 1087 	ret
                                   1088 ;	../UI_Manager/Display_Manager/display.c:106: case 'B':
      000456                       1089 00103$:
                                   1090 ;	../UI_Manager/Display_Manager/display.c:107: return CHAR_B;
      000456 75 82 42         [24] 1091 	mov	dpl,#0x42
      000459 22               [24] 1092 	ret
                                   1093 ;	../UI_Manager/Display_Manager/display.c:108: case 'b':
      00045A                       1094 00104$:
                                   1095 ;	../UI_Manager/Display_Manager/display.c:109: return CHAR_b;
      00045A 75 82 46         [24] 1096 	mov	dpl,#0x46
      00045D 22               [24] 1097 	ret
                                   1098 ;	../UI_Manager/Display_Manager/display.c:110: case 'C':
      00045E                       1099 00105$:
                                   1100 ;	../UI_Manager/Display_Manager/display.c:111: return CHAR_C;
      00045E 75 82 C2         [24] 1101 	mov	dpl,#0xc2
      000461 22               [24] 1102 	ret
                                   1103 ;	../UI_Manager/Display_Manager/display.c:112: case 'c':
      000462                       1104 00106$:
                                   1105 ;	../UI_Manager/Display_Manager/display.c:113: return CHAR_c;
      000462 75 82 C6         [24] 1106 	mov	dpl,#0xc6
      000465 22               [24] 1107 	ret
                                   1108 ;	../UI_Manager/Display_Manager/display.c:114: case 'D':
      000466                       1109 00107$:
                                   1110 ;	../UI_Manager/Display_Manager/display.c:115: return CHAR_D;
      000466 75 82 22         [24] 1111 	mov	dpl,#0x22
      000469 22               [24] 1112 	ret
                                   1113 ;	../UI_Manager/Display_Manager/display.c:116: case 'd':
      00046A                       1114 00108$:
                                   1115 ;	../UI_Manager/Display_Manager/display.c:117: return CHAR_d;
      00046A 75 82 26         [24] 1116 	mov	dpl,#0x26
      00046D 22               [24] 1117 	ret
                                   1118 ;	../UI_Manager/Display_Manager/display.c:118: case 'E':
      00046E                       1119 00109$:
                                   1120 ;	../UI_Manager/Display_Manager/display.c:119: return CHAR_E;
      00046E 75 82 A2         [24] 1121 	mov	dpl,#0xa2
      000471 22               [24] 1122 	ret
                                   1123 ;	../UI_Manager/Display_Manager/display.c:120: case 'e':
      000472                       1124 00110$:
                                   1125 ;	../UI_Manager/Display_Manager/display.c:121: return CHAR_e;
      000472 75 82 A6         [24] 1126 	mov	dpl,#0xa6
      000475 22               [24] 1127 	ret
                                   1128 ;	../UI_Manager/Display_Manager/display.c:122: case 'F':
      000476                       1129 00111$:
                                   1130 ;	../UI_Manager/Display_Manager/display.c:123: return CHAR_F;
      000476 75 82 62         [24] 1131 	mov	dpl,#0x62
      000479 22               [24] 1132 	ret
                                   1133 ;	../UI_Manager/Display_Manager/display.c:124: case 'f':
      00047A                       1134 00112$:
                                   1135 ;	../UI_Manager/Display_Manager/display.c:125: return CHAR_f;
      00047A 75 82 66         [24] 1136 	mov	dpl,#0x66
      00047D 22               [24] 1137 	ret
                                   1138 ;	../UI_Manager/Display_Manager/display.c:126: case 'G':
      00047E                       1139 00113$:
                                   1140 ;	../UI_Manager/Display_Manager/display.c:127: return CHAR_G;
      00047E 75 82 E2         [24] 1141 	mov	dpl,#0xe2
      000481 22               [24] 1142 	ret
                                   1143 ;	../UI_Manager/Display_Manager/display.c:128: case 'g':
      000482                       1144 00114$:
                                   1145 ;	../UI_Manager/Display_Manager/display.c:129: return CHAR_g;
      000482 75 82 E6         [24] 1146 	mov	dpl,#0xe6
      000485 22               [24] 1147 	ret
                                   1148 ;	../UI_Manager/Display_Manager/display.c:130: case 'H':
      000486                       1149 00115$:
                                   1150 ;	../UI_Manager/Display_Manager/display.c:131: return CHAR_H;
      000486 75 82 12         [24] 1151 	mov	dpl,#0x12
      000489 22               [24] 1152 	ret
                                   1153 ;	../UI_Manager/Display_Manager/display.c:132: case 'h':
      00048A                       1154 00116$:
                                   1155 ;	../UI_Manager/Display_Manager/display.c:133: return CHAR_h;
      00048A 75 82 16         [24] 1156 	mov	dpl,#0x16
      00048D 22               [24] 1157 	ret
                                   1158 ;	../UI_Manager/Display_Manager/display.c:134: case 'I':
      00048E                       1159 00117$:
                                   1160 ;	../UI_Manager/Display_Manager/display.c:135: return CHAR_I;
      00048E 75 82 92         [24] 1161 	mov	dpl,#0x92
      000491 22               [24] 1162 	ret
                                   1163 ;	../UI_Manager/Display_Manager/display.c:136: case 'i':
      000492                       1164 00118$:
                                   1165 ;	../UI_Manager/Display_Manager/display.c:137: return CHAR_i;
      000492 75 82 96         [24] 1166 	mov	dpl,#0x96
      000495 22               [24] 1167 	ret
                                   1168 ;	../UI_Manager/Display_Manager/display.c:138: case 'J':
      000496                       1169 00119$:
                                   1170 ;	../UI_Manager/Display_Manager/display.c:139: return CHAR_J;
      000496 75 82 52         [24] 1171 	mov	dpl,#0x52
      000499 22               [24] 1172 	ret
                                   1173 ;	../UI_Manager/Display_Manager/display.c:140: case 'j':
      00049A                       1174 00120$:
                                   1175 ;	../UI_Manager/Display_Manager/display.c:141: return CHAR_j;
      00049A 75 82 56         [24] 1176 	mov	dpl,#0x56
      00049D 22               [24] 1177 	ret
                                   1178 ;	../UI_Manager/Display_Manager/display.c:142: case 'K':
      00049E                       1179 00121$:
                                   1180 ;	../UI_Manager/Display_Manager/display.c:143: return CHAR_K;
      00049E 75 82 D2         [24] 1181 	mov	dpl,#0xd2
      0004A1 22               [24] 1182 	ret
                                   1183 ;	../UI_Manager/Display_Manager/display.c:144: case 'k':
      0004A2                       1184 00122$:
                                   1185 ;	../UI_Manager/Display_Manager/display.c:145: return CHAR_k;
      0004A2 75 82 D6         [24] 1186 	mov	dpl,#0xd6
      0004A5 22               [24] 1187 	ret
                                   1188 ;	../UI_Manager/Display_Manager/display.c:146: case 'L':
      0004A6                       1189 00123$:
                                   1190 ;	../UI_Manager/Display_Manager/display.c:147: return CHAR_L;
      0004A6 75 82 32         [24] 1191 	mov	dpl,#0x32
      0004A9 22               [24] 1192 	ret
                                   1193 ;	../UI_Manager/Display_Manager/display.c:148: case 'l':
      0004AA                       1194 00124$:
                                   1195 ;	../UI_Manager/Display_Manager/display.c:149: return CHAR_l;
      0004AA 75 82 36         [24] 1196 	mov	dpl,#0x36
      0004AD 22               [24] 1197 	ret
                                   1198 ;	../UI_Manager/Display_Manager/display.c:150: case 'M':
      0004AE                       1199 00125$:
                                   1200 ;	../UI_Manager/Display_Manager/display.c:151: return CHAR_M;
      0004AE 75 82 B2         [24] 1201 	mov	dpl,#0xb2
      0004B1 22               [24] 1202 	ret
                                   1203 ;	../UI_Manager/Display_Manager/display.c:152: case 'm':
      0004B2                       1204 00126$:
                                   1205 ;	../UI_Manager/Display_Manager/display.c:153: return CHAR_m;
      0004B2 75 82 B6         [24] 1206 	mov	dpl,#0xb6
      0004B5 22               [24] 1207 	ret
                                   1208 ;	../UI_Manager/Display_Manager/display.c:154: case 'N':
      0004B6                       1209 00127$:
                                   1210 ;	../UI_Manager/Display_Manager/display.c:155: return CHAR_N;
      0004B6 75 82 72         [24] 1211 	mov	dpl,#0x72
      0004B9 22               [24] 1212 	ret
                                   1213 ;	../UI_Manager/Display_Manager/display.c:156: case 'n':
      0004BA                       1214 00128$:
                                   1215 ;	../UI_Manager/Display_Manager/display.c:157: return CHAR_n;
      0004BA 75 82 76         [24] 1216 	mov	dpl,#0x76
      0004BD 22               [24] 1217 	ret
                                   1218 ;	../UI_Manager/Display_Manager/display.c:158: case 'O':
      0004BE                       1219 00129$:
                                   1220 ;	../UI_Manager/Display_Manager/display.c:159: return CHAR_O;
      0004BE 75 82 F2         [24] 1221 	mov	dpl,#0xf2
      0004C1 22               [24] 1222 	ret
                                   1223 ;	../UI_Manager/Display_Manager/display.c:160: case 'o':
      0004C2                       1224 00130$:
                                   1225 ;	../UI_Manager/Display_Manager/display.c:161: return CHAR_o;
      0004C2 75 82 F6         [24] 1226 	mov	dpl,#0xf6
      0004C5 22               [24] 1227 	ret
                                   1228 ;	../UI_Manager/Display_Manager/display.c:162: case 'P':
      0004C6                       1229 00131$:
                                   1230 ;	../UI_Manager/Display_Manager/display.c:163: return CHAR_P;
      0004C6 75 82 0A         [24] 1231 	mov	dpl,#0x0a
      0004C9 22               [24] 1232 	ret
                                   1233 ;	../UI_Manager/Display_Manager/display.c:164: case 'p':
      0004CA                       1234 00132$:
                                   1235 ;	../UI_Manager/Display_Manager/display.c:165: return CHAR_p;
      0004CA 75 82 0E         [24] 1236 	mov	dpl,#0x0e
      0004CD 22               [24] 1237 	ret
                                   1238 ;	../UI_Manager/Display_Manager/display.c:166: case 'Q':
      0004CE                       1239 00133$:
                                   1240 ;	../UI_Manager/Display_Manager/display.c:167: return CHAR_Q;
      0004CE 75 82 8A         [24] 1241 	mov	dpl,#0x8a
      0004D1 22               [24] 1242 	ret
                                   1243 ;	../UI_Manager/Display_Manager/display.c:168: case 'q':
      0004D2                       1244 00134$:
                                   1245 ;	../UI_Manager/Display_Manager/display.c:169: return CHAR_q;
      0004D2 75 82 8E         [24] 1246 	mov	dpl,#0x8e
      0004D5 22               [24] 1247 	ret
                                   1248 ;	../UI_Manager/Display_Manager/display.c:170: case 'R':
      0004D6                       1249 00135$:
                                   1250 ;	../UI_Manager/Display_Manager/display.c:171: return CHAR_R;
      0004D6 75 82 4A         [24] 1251 	mov	dpl,#0x4a
      0004D9 22               [24] 1252 	ret
                                   1253 ;	../UI_Manager/Display_Manager/display.c:172: case 'r':
      0004DA                       1254 00136$:
                                   1255 ;	../UI_Manager/Display_Manager/display.c:173: return CHAR_r;
      0004DA 75 82 4E         [24] 1256 	mov	dpl,#0x4e
      0004DD 22               [24] 1257 	ret
                                   1258 ;	../UI_Manager/Display_Manager/display.c:174: case 'S':
      0004DE                       1259 00137$:
                                   1260 ;	../UI_Manager/Display_Manager/display.c:175: return CHAR_S;
      0004DE 75 82 CA         [24] 1261 	mov	dpl,#0xca
      0004E1 22               [24] 1262 	ret
                                   1263 ;	../UI_Manager/Display_Manager/display.c:176: case 's':
      0004E2                       1264 00138$:
                                   1265 ;	../UI_Manager/Display_Manager/display.c:177: return CHAR_s;
      0004E2 75 82 CE         [24] 1266 	mov	dpl,#0xce
      0004E5 22               [24] 1267 	ret
                                   1268 ;	../UI_Manager/Display_Manager/display.c:178: case 'T':
      0004E6                       1269 00139$:
                                   1270 ;	../UI_Manager/Display_Manager/display.c:179: return CHAR_T;
      0004E6 75 82 2A         [24] 1271 	mov	dpl,#0x2a
      0004E9 22               [24] 1272 	ret
                                   1273 ;	../UI_Manager/Display_Manager/display.c:180: case 't':
      0004EA                       1274 00140$:
                                   1275 ;	../UI_Manager/Display_Manager/display.c:181: return CHAR_t;
      0004EA 75 82 2E         [24] 1276 	mov	dpl,#0x2e
      0004ED 22               [24] 1277 	ret
                                   1278 ;	../UI_Manager/Display_Manager/display.c:182: case 'U':
      0004EE                       1279 00141$:
                                   1280 ;	../UI_Manager/Display_Manager/display.c:183: return CHAR_U;
      0004EE 75 82 AA         [24] 1281 	mov	dpl,#0xaa
      0004F1 22               [24] 1282 	ret
                                   1283 ;	../UI_Manager/Display_Manager/display.c:184: case 'u':
      0004F2                       1284 00142$:
                                   1285 ;	../UI_Manager/Display_Manager/display.c:185: return CHAR_u;
      0004F2 75 82 AE         [24] 1286 	mov	dpl,#0xae
      0004F5 22               [24] 1287 	ret
                                   1288 ;	../UI_Manager/Display_Manager/display.c:186: case 'V':
      0004F6                       1289 00143$:
                                   1290 ;	../UI_Manager/Display_Manager/display.c:187: return CHAR_V;
      0004F6 75 82 6A         [24] 1291 	mov	dpl,#0x6a
      0004F9 22               [24] 1292 	ret
                                   1293 ;	../UI_Manager/Display_Manager/display.c:188: case 'v':
      0004FA                       1294 00144$:
                                   1295 ;	../UI_Manager/Display_Manager/display.c:189: return CHAR_v;
      0004FA 75 82 6E         [24] 1296 	mov	dpl,#0x6e
      0004FD 22               [24] 1297 	ret
                                   1298 ;	../UI_Manager/Display_Manager/display.c:190: case 'W':
      0004FE                       1299 00145$:
                                   1300 ;	../UI_Manager/Display_Manager/display.c:191: return CHAR_W;
      0004FE 75 82 EA         [24] 1301 	mov	dpl,#0xea
                                   1302 ;	../UI_Manager/Display_Manager/display.c:192: case 'w':
      000501 22               [24] 1303 	ret
      000502                       1304 00146$:
                                   1305 ;	../UI_Manager/Display_Manager/display.c:193: return CHAR_w;
      000502 75 82 EE         [24] 1306 	mov	dpl,#0xee
                                   1307 ;	../UI_Manager/Display_Manager/display.c:194: case 'X':
      000505 22               [24] 1308 	ret
      000506                       1309 00147$:
                                   1310 ;	../UI_Manager/Display_Manager/display.c:195: return CHAR_X;
      000506 75 82 1A         [24] 1311 	mov	dpl,#0x1a
                                   1312 ;	../UI_Manager/Display_Manager/display.c:196: case 'x':
      000509 22               [24] 1313 	ret
      00050A                       1314 00148$:
                                   1315 ;	../UI_Manager/Display_Manager/display.c:197: return CHAR_x;
      00050A 75 82 1E         [24] 1316 	mov	dpl,#0x1e
                                   1317 ;	../UI_Manager/Display_Manager/display.c:198: case 'Y':
      00050D 22               [24] 1318 	ret
      00050E                       1319 00149$:
                                   1320 ;	../UI_Manager/Display_Manager/display.c:199: return CHAR_Y;
      00050E 75 82 9A         [24] 1321 	mov	dpl,#0x9a
                                   1322 ;	../UI_Manager/Display_Manager/display.c:200: case 'y':
      000511 22               [24] 1323 	ret
      000512                       1324 00150$:
                                   1325 ;	../UI_Manager/Display_Manager/display.c:201: return CHAR_y;
      000512 75 82 9E         [24] 1326 	mov	dpl,#0x9e
                                   1327 ;	../UI_Manager/Display_Manager/display.c:202: case 'Z':
      000515 22               [24] 1328 	ret
      000516                       1329 00151$:
                                   1330 ;	../UI_Manager/Display_Manager/display.c:203: return CHAR_Z;
      000516 75 82 5A         [24] 1331 	mov	dpl,#0x5a
                                   1332 ;	../UI_Manager/Display_Manager/display.c:204: case 'z':
      000519 22               [24] 1333 	ret
      00051A                       1334 00152$:
                                   1335 ;	../UI_Manager/Display_Manager/display.c:205: return CHAR_z;
      00051A 75 82 5E         [24] 1336 	mov	dpl,#0x5e
                                   1337 ;	../UI_Manager/Display_Manager/display.c:206: case '0':
      00051D 22               [24] 1338 	ret
      00051E                       1339 00153$:
                                   1340 ;	../UI_Manager/Display_Manager/display.c:207: return CHAR_0;
      00051E 75 82 0C         [24] 1341 	mov	dpl,#0x0c
                                   1342 ;	../UI_Manager/Display_Manager/display.c:208: case '1':
      000521 22               [24] 1343 	ret
      000522                       1344 00154$:
                                   1345 ;	../UI_Manager/Display_Manager/display.c:209: return CHAR_1;
      000522 75 82 8C         [24] 1346 	mov	dpl,#0x8c
                                   1347 ;	../UI_Manager/Display_Manager/display.c:210: case '2':
      000525 22               [24] 1348 	ret
      000526                       1349 00155$:
                                   1350 ;	../UI_Manager/Display_Manager/display.c:211: return CHAR_2;
      000526 75 82 4C         [24] 1351 	mov	dpl,#0x4c
                                   1352 ;	../UI_Manager/Display_Manager/display.c:212: case '3':
      000529 22               [24] 1353 	ret
      00052A                       1354 00156$:
                                   1355 ;	../UI_Manager/Display_Manager/display.c:213: return CHAR_3;
      00052A 75 82 CC         [24] 1356 	mov	dpl,#0xcc
                                   1357 ;	../UI_Manager/Display_Manager/display.c:214: case '4':
      00052D 22               [24] 1358 	ret
      00052E                       1359 00157$:
                                   1360 ;	../UI_Manager/Display_Manager/display.c:215: return CHAR_4;
      00052E 75 82 2C         [24] 1361 	mov	dpl,#0x2c
                                   1362 ;	../UI_Manager/Display_Manager/display.c:216: case '5':
      000531 22               [24] 1363 	ret
      000532                       1364 00158$:
                                   1365 ;	../UI_Manager/Display_Manager/display.c:217: return CHAR_5;
      000532 75 82 AC         [24] 1366 	mov	dpl,#0xac
                                   1367 ;	../UI_Manager/Display_Manager/display.c:218: case '6':
      000535 22               [24] 1368 	ret
      000536                       1369 00159$:
                                   1370 ;	../UI_Manager/Display_Manager/display.c:219: return CHAR_6;
      000536 75 82 6C         [24] 1371 	mov	dpl,#0x6c
                                   1372 ;	../UI_Manager/Display_Manager/display.c:220: case '7':
      000539 22               [24] 1373 	ret
      00053A                       1374 00160$:
                                   1375 ;	../UI_Manager/Display_Manager/display.c:221: return CHAR_7;
      00053A 75 82 EC         [24] 1376 	mov	dpl,#0xec
                                   1377 ;	../UI_Manager/Display_Manager/display.c:222: case '8':
      00053D 22               [24] 1378 	ret
      00053E                       1379 00161$:
                                   1380 ;	../UI_Manager/Display_Manager/display.c:223: return CHAR_8;
      00053E 75 82 1C         [24] 1381 	mov	dpl,#0x1c
                                   1382 ;	../UI_Manager/Display_Manager/display.c:224: case '9':
      000541 22               [24] 1383 	ret
      000542                       1384 00162$:
                                   1385 ;	../UI_Manager/Display_Manager/display.c:225: return CHAR_9;
      000542 75 82 9C         [24] 1386 	mov	dpl,#0x9c
                                   1387 ;	../UI_Manager/Display_Manager/display.c:226: case '+':
      000545 22               [24] 1388 	ret
      000546                       1389 00163$:
                                   1390 ;	../UI_Manager/Display_Manager/display.c:227: return CHAR_PLUS;
      000546 75 82 D4         [24] 1391 	mov	dpl,#0xd4
                                   1392 ;	../UI_Manager/Display_Manager/display.c:228: case '&':
      000549 22               [24] 1393 	ret
      00054A                       1394 00164$:
                                   1395 ;	../UI_Manager/Display_Manager/display.c:229: return CHAR_AND;
      00054A 75 82 64         [24] 1396 	mov	dpl,#0x64
                                   1397 ;	../UI_Manager/Display_Manager/display.c:230: case ';':
      00054D 22               [24] 1398 	ret
      00054E                       1399 00165$:
                                   1400 ;	../UI_Manager/Display_Manager/display.c:231: return CHAR_STAR_8;
      00054E 75 82 E0         [24] 1401 	mov	dpl,#0xe0
                                   1402 ;	../UI_Manager/Display_Manager/display.c:232: }
      000551 22               [24] 1403 	ret
      000552                       1404 00166$:
                                   1405 ;	../UI_Manager/Display_Manager/display.c:234: return CHAR_NULL;
      000552 75 82 04         [24] 1406 	mov	dpl,#0x04
                                   1407 ;	../UI_Manager/Display_Manager/display.c:235: }
      000555 22               [24] 1408 	ret
                                   1409 ;------------------------------------------------------------
                                   1410 ;Allocation info for local variables in function 'writeShiftReg'
                                   1411 ;------------------------------------------------------------
                                   1412 ;value                     Allocated to registers r6 r7 
                                   1413 ;i                         Allocated to registers r5 
                                   1414 ;------------------------------------------------------------
                                   1415 ;	../UI_Manager/Display_Manager/display.c:240: void writeShiftReg(uint16_t value){
                                   1416 ;	-----------------------------------------
                                   1417 ;	 function writeShiftReg
                                   1418 ;	-----------------------------------------
      000556                       1419 _writeShiftReg:
      000556 AE 82            [24] 1420 	mov	r6,dpl
      000558 AF 83            [24] 1421 	mov	r7,dph
                                   1422 ;	../UI_Manager/Display_Manager/display.c:243: for(i = 4; i < USEFUL_BITS+4; i++){
      00055A 7D 04            [12] 1423 	mov	r5,#0x04
      00055C                       1424 00102$:
                                   1425 ;	../UI_Manager/Display_Manager/display.c:244: SER = value & (1 << i);
      00055C 8D F0            [24] 1426 	mov	b,r5
      00055E 05 F0            [12] 1427 	inc	b
      000560 7B 01            [12] 1428 	mov	r3,#0x01
      000562 7C 00            [12] 1429 	mov	r4,#0x00
      000564 80 06            [24] 1430 	sjmp	00116$
      000566                       1431 00115$:
      000566 EB               [12] 1432 	mov	a,r3
      000567 2B               [12] 1433 	add	a,r3
      000568 FB               [12] 1434 	mov	r3,a
      000569 EC               [12] 1435 	mov	a,r4
      00056A 33               [12] 1436 	rlc	a
      00056B FC               [12] 1437 	mov	r4,a
      00056C                       1438 00116$:
      00056C D5 F0 F7         [24] 1439 	djnz	b,00115$
      00056F EE               [12] 1440 	mov	a,r6
      000570 52 03            [12] 1441 	anl	ar3,a
      000572 EF               [12] 1442 	mov	a,r7
      000573 52 04            [12] 1443 	anl	ar4,a
                                   1444 ;	assignBit
      000575 EB               [12] 1445 	mov	a,r3
      000576 4C               [12] 1446 	orl	a,r4
      000577 24 FF            [12] 1447 	add	a,#0xff
      000579 92 95            [24] 1448 	mov	_SER,c
                                   1449 ;	../UI_Manager/Display_Manager/display.c:247: SCK = 1;
                                   1450 ;	assignBit
      00057B D2 93            [12] 1451 	setb	_SCK
                                   1452 ;	../UI_Manager/Display_Manager/display.c:248: SCK = 0;
                                   1453 ;	assignBit
      00057D C2 93            [12] 1454 	clr	_SCK
                                   1455 ;	../UI_Manager/Display_Manager/display.c:243: for(i = 4; i < USEFUL_BITS+4; i++){
      00057F 0D               [12] 1456 	inc	r5
      000580 BD 10 00         [24] 1457 	cjne	r5,#0x10,00117$
      000583                       1458 00117$:
      000583 40 D7            [24] 1459 	jc	00102$
                                   1460 ;	../UI_Manager/Display_Manager/display.c:250: RCK = 1;
                                   1461 ;	assignBit
      000585 D2 92            [12] 1462 	setb	_RCK
                                   1463 ;	../UI_Manager/Display_Manager/display.c:251: RCK = 0;
                                   1464 ;	assignBit
      000587 C2 92            [12] 1465 	clr	_RCK
                                   1466 ;	../UI_Manager/Display_Manager/display.c:252: }
      000589 22               [24] 1467 	ret
                                   1468 ;------------------------------------------------------------
                                   1469 ;Allocation info for local variables in function 'flipByte'
                                   1470 ;------------------------------------------------------------
                                   1471 ;line                      Allocated to registers r7 
                                   1472 ;i                         Allocated to registers r5 
                                   1473 ;temp                      Allocated to registers r6 
                                   1474 ;------------------------------------------------------------
                                   1475 ;	../UI_Manager/Display_Manager/display.c:255: uint8_t flipByte(uint8_t line){
                                   1476 ;	-----------------------------------------
                                   1477 ;	 function flipByte
                                   1478 ;	-----------------------------------------
      00058A                       1479 _flipByte:
      00058A AF 82            [24] 1480 	mov	r7,dpl
                                   1481 ;	../UI_Manager/Display_Manager/display.c:256: uint8_t i, temp = 0;
      00058C 7E 00            [12] 1482 	mov	r6,#0x00
                                   1483 ;	../UI_Manager/Display_Manager/display.c:258: for(i = 0; i < 8; i++){
      00058E 7D 00            [12] 1484 	mov	r5,#0x00
      000590                       1485 00102$:
                                   1486 ;	../UI_Manager/Display_Manager/display.c:259: temp |= (((line & (0x80 >> i)) ? 1 : 0) << i);
      000590 C0 06            [24] 1487 	push	ar6
      000592 8D F0            [24] 1488 	mov	b,r5
      000594 05 F0            [12] 1489 	inc	b
      000596 7B 80            [12] 1490 	mov	r3,#0x80
      000598 E4               [12] 1491 	clr	a
      000599 FC               [12] 1492 	mov	r4,a
      00059A 33               [12] 1493 	rlc	a
      00059B 92 D2            [24] 1494 	mov	ov,c
      00059D 80 08            [24] 1495 	sjmp	00122$
      00059F                       1496 00121$:
      00059F A2 D2            [12] 1497 	mov	c,ov
      0005A1 EC               [12] 1498 	mov	a,r4
      0005A2 13               [12] 1499 	rrc	a
      0005A3 FC               [12] 1500 	mov	r4,a
      0005A4 EB               [12] 1501 	mov	a,r3
      0005A5 13               [12] 1502 	rrc	a
      0005A6 FB               [12] 1503 	mov	r3,a
      0005A7                       1504 00122$:
      0005A7 D5 F0 F5         [24] 1505 	djnz	b,00121$
      0005AA 8F 02            [24] 1506 	mov	ar2,r7
      0005AC 7E 00            [12] 1507 	mov	r6,#0x00
      0005AE EA               [12] 1508 	mov	a,r2
      0005AF 52 03            [12] 1509 	anl	ar3,a
      0005B1 EE               [12] 1510 	mov	a,r6
      0005B2 52 04            [12] 1511 	anl	ar4,a
      0005B4 D0 06            [24] 1512 	pop	ar6
      0005B6 EB               [12] 1513 	mov	a,r3
      0005B7 4C               [12] 1514 	orl	a,r4
      0005B8 60 06            [24] 1515 	jz	00106$
      0005BA 7B 01            [12] 1516 	mov	r3,#0x01
      0005BC 7C 00            [12] 1517 	mov	r4,#0x00
      0005BE 80 04            [24] 1518 	sjmp	00107$
      0005C0                       1519 00106$:
      0005C0 7B 00            [12] 1520 	mov	r3,#0x00
      0005C2 7C 00            [12] 1521 	mov	r4,#0x00
      0005C4                       1522 00107$:
      0005C4 8D 04            [24] 1523 	mov	ar4,r5
      0005C6 8C F0            [24] 1524 	mov	b,r4
      0005C8 05 F0            [12] 1525 	inc	b
      0005CA EB               [12] 1526 	mov	a,r3
      0005CB 80 02            [24] 1527 	sjmp	00126$
      0005CD                       1528 00124$:
      0005CD 25 E0            [12] 1529 	add	a,acc
      0005CF                       1530 00126$:
      0005CF D5 F0 FB         [24] 1531 	djnz	b,00124$
      0005D2 FB               [12] 1532 	mov	r3,a
      0005D3 8E 04            [24] 1533 	mov	ar4,r6
      0005D5 EC               [12] 1534 	mov	a,r4
      0005D6 42 03            [12] 1535 	orl	ar3,a
      0005D8 8B 06            [24] 1536 	mov	ar6,r3
                                   1537 ;	../UI_Manager/Display_Manager/display.c:258: for(i = 0; i < 8; i++){
      0005DA 0D               [12] 1538 	inc	r5
      0005DB BD 08 00         [24] 1539 	cjne	r5,#0x08,00127$
      0005DE                       1540 00127$:
      0005DE 40 B0            [24] 1541 	jc	00102$
                                   1542 ;	../UI_Manager/Display_Manager/display.c:262: return temp;
      0005E0 8E 82            [24] 1543 	mov	dpl,r6
                                   1544 ;	../UI_Manager/Display_Manager/display.c:263: }
      0005E2 22               [24] 1545 	ret
                                   1546 	.area CSEG    (CODE)
                                   1547 	.area CONST   (CODE)
                                   1548 	.area XINIT   (CODE)
                                   1549 	.area CABS    (ABS,CODE)
